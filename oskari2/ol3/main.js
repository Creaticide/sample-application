
require.config({
    baseUrl : "/Oskari/", // the base is set to requirejs lib to help requiring 3rd party libs
    paths : { // some path shortcuts to ease declarations
        oskari: "bundles/oskari/oskari",
        "oskari-with-loader": "bundles/oskari/oskari-with-loader",
        jquery: "http://code.jquery.com/jquery-1.9.1",
        "jquery-migrate": "libraries/jquery/jquery-migrate-1.2.1-modified",
        css: "libraries/requirejs/lib/css",
        json: "libraries/requirejs/lib/json",
        domReady: "libraries/requirejs/lib/domReady",
        text: "libraries/requirejs/lib/text",
        normalize: "libraries/requirejs/lib/normalize"
    },
    map: {
      // '*' means all modules will get 'jquery-private'
      // for their 'jquery' dependency.
      '*': { 'jquery': 'jquery-migrate' },

      // 'jquery-private' wants the real jQuery module
      // though. If this line was not here, there would
      // be an unresolvable cyclic dependency.
      'jquery-migrate': { 'jquery': 'jquery' }
    },
    shim: {
      'oskari' : {
        exports: 'Oskari'
      }
    },
    config : {
        i18n : {
            locale : language
        }
    },
    waitSeconds: 30
});
define("mainConfig", function(){});

// Wrap jquery migrate not to leak into global space.
// Note, we user jQuery 1.7.1 in the global space, but in the required space jQuery 1.9.1 with the migrate plugin

// Upgrade the migrate plugin by replacing the content for the define function, with the exception of the last row,
// which returns the noConflict jQuery object.

define('jquery-migrate',['jquery'], function (jQuery) {

    /*!
     * jQuery Migrate - v1.2.1 - 2013-05-08
     * https://github.com/jquery/jquery-migrate
     * Copyright 2005, 2013 jQuery Foundation, Inc. and other contributors; Licensed MIT
     */
    (function( jQuery, window, undefined ) {
    // See http://bugs.jquery.com/ticket/13335
    // 


    var warnedAbout = {};

    // List of warnings already given; public read only
    jQuery.migrateWarnings = [];

    // Set to true to prevent console output; migrateWarnings still maintained
    // jQuery.migrateMute = false;

    // Show a message on the console so devs know we're active
    if ( !jQuery.migrateMute && window.console && window.console.log ) {
        window.console.log("JQMIGRATE: Logging is active");
    }

    // Set to false to disable traces that appear with warnings
    if ( jQuery.migrateTrace === undefined ) {
        jQuery.migrateTrace = true;
    }

    // Forget any warnings we've already given; public
    jQuery.migrateReset = function() {
        warnedAbout = {};
        jQuery.migrateWarnings.length = 0;
    };

    function migrateWarn( msg) {
        var console = window.console;
        if ( !warnedAbout[ msg ] ) {
            warnedAbout[ msg ] = true;
            jQuery.migrateWarnings.push( msg );
            if ( console && console.warn && !jQuery.migrateMute ) {
                console.warn( "JQMIGRATE: " + msg );
                if ( jQuery.migrateTrace && console.trace ) {
                    console.trace();
                }
            }
        }
    }

    function migrateWarnProp( obj, prop, value, msg ) {
        if ( Object.defineProperty ) {
            // On ES5 browsers (non-oldIE), warn if the code tries to get prop;
            // allow property to be overwritten in case some other plugin wants it
            try {
                Object.defineProperty( obj, prop, {
                    configurable: true,
                    enumerable: true,
                    get: function() {
                        migrateWarn( msg );
                        return value;
                    },
                    set: function( newValue ) {
                        migrateWarn( msg );
                        value = newValue;
                    }
                });
                return;
            } catch( err ) {
                // IE8 is a dope about Object.defineProperty, can't warn there
            }
        }

        // Non-ES5 (or broken) browser; just set the property
        jQuery._definePropertyBroken = true;
        obj[ prop ] = value;
    }

    if ( document.compatMode === "BackCompat" ) {
        // jQuery has never supported or tested Quirks Mode
        migrateWarn( "jQuery is not compatible with Quirks Mode" );
    }


    var attrFn = jQuery( "<input/>", { size: 1 } ).attr("size") && jQuery.attrFn,
        oldAttr = jQuery.attr,
        valueAttrGet = jQuery.attrHooks.value && jQuery.attrHooks.value.get ||
            function() { return null; },
        valueAttrSet = jQuery.attrHooks.value && jQuery.attrHooks.value.set ||
            function() { return undefined; },
        rnoType = /^(?:input|button)$/i,
        rnoAttrNodeType = /^[238]$/,
        rboolean = /^(?:autofocus|autoplay|async|checked|controls|defer|disabled|hidden|loop|multiple|open|readonly|required|scoped|selected)$/i,
        ruseDefault = /^(?:checked|selected)$/i;

    // jQuery.attrFn
    migrateWarnProp( jQuery, "attrFn", attrFn || {}, "jQuery.attrFn is deprecated" );

    jQuery.attr = function( elem, name, value, pass ) {
        var lowerName = name.toLowerCase(),
            nType = elem && elem.nodeType;

        if ( pass ) {
            // Since pass is used internally, we only warn for new jQuery
            // versions where there isn't a pass arg in the formal params
            if ( oldAttr.length < 4 ) {
                migrateWarn("jQuery.fn.attr( props, pass ) is deprecated");
            }
            if ( elem && !rnoAttrNodeType.test( nType ) &&
                (attrFn ? name in attrFn : jQuery.isFunction(jQuery.fn[name])) ) {
                return jQuery( elem )[ name ]( value );
            }
        }

        // Warn if user tries to set `type`, since it breaks on IE 6/7/8; by checking
        // for disconnected elements we don't warn on $( "<button>", { type: "button" } ).
        if ( name === "type" && value !== undefined && rnoType.test( elem.nodeName ) && elem.parentNode ) {
            migrateWarn("Can't change the 'type' of an input or button in IE 6/7/8");
        }

        // Restore boolHook for boolean property/attribute synchronization
        if ( !jQuery.attrHooks[ lowerName ] && rboolean.test( lowerName ) ) {
            jQuery.attrHooks[ lowerName ] = {
                get: function( elem, name ) {
                    // Align boolean attributes with corresponding properties
                    // Fall back to attribute presence where some booleans are not supported
                    var attrNode,
                        property = jQuery.prop( elem, name );
                    return property === true || typeof property !== "boolean" &&
                        ( attrNode = elem.getAttributeNode(name) ) && attrNode.nodeValue !== false ?

                        name.toLowerCase() :
                        undefined;
                },
                set: function( elem, value, name ) {
                    var propName;
                    if ( value === false ) {
                        // Remove boolean attributes when set to false
                        jQuery.removeAttr( elem, name );
                    } else {
                        // value is true since we know at this point it's type boolean and not false
                        // Set boolean attributes to the same name and set the DOM property
                        propName = jQuery.propFix[ name ] || name;
                        if ( propName in elem ) {
                            // Only set the IDL specifically if it already exists on the element
                            elem[ propName ] = true;
                        }

                        elem.setAttribute( name, name.toLowerCase() );
                    }
                    return name;
                }
            };

            // Warn only for attributes that can remain distinct from their properties post-1.9
            if ( ruseDefault.test( lowerName ) ) {
                migrateWarn( "jQuery.fn.attr('" + lowerName + "') may use property instead of attribute" );
            }
        }

        return oldAttr.call( jQuery, elem, name, value );
    };

    // attrHooks: value
    jQuery.attrHooks.value = {
        get: function( elem, name ) {
            var nodeName = ( elem.nodeName || "" ).toLowerCase();
            if ( nodeName === "button" ) {
                return valueAttrGet.apply( this, arguments );
            }
            if ( nodeName !== "input" && nodeName !== "option" ) {
                migrateWarn("jQuery.fn.attr('value') no longer gets properties");
            }
            return name in elem ?
                elem.value :
                null;
        },
        set: function( elem, value ) {
            var nodeName = ( elem.nodeName || "" ).toLowerCase();
            if ( nodeName === "button" ) {
                return valueAttrSet.apply( this, arguments );
            }
            if ( nodeName !== "input" && nodeName !== "option" ) {
                migrateWarn("jQuery.fn.attr('value', val) no longer sets properties");
            }
            // Does not return so that setAttribute is also used
            elem.value = value;
        }
    };


    var matched, browser,
        oldInit = jQuery.fn.init,
        oldParseJSON = jQuery.parseJSON,
        // Note: XSS check is done below after string is trimmed
        rquickExpr = /^([^<]*)(<[\w\W]+>)([^>]*)$/;

    // $(html) "looks like html" rule change
    jQuery.fn.init = function( selector, context, rootjQuery ) {
        var match;

        if ( selector && typeof selector === "string" && !jQuery.isPlainObject( context ) &&
                (match = rquickExpr.exec( jQuery.trim( selector ) )) && match[ 0 ] ) {
            // This is an HTML string according to the "old" rules; is it still?
            if ( selector.charAt( 0 ) !== "<" ) {
                migrateWarn("$(html) HTML strings must start with '<' character");
            }
            if ( match[ 3 ] ) {
                migrateWarn("$(html) HTML text after last tag is ignored");
            }
            // Consistently reject any HTML-like string starting with a hash (#9521)
            // Note that this may break jQuery 1.6.x code that otherwise would work.
            if ( match[ 0 ].charAt( 0 ) === "#" ) {
                migrateWarn("HTML string cannot start with a '#' character");
                jQuery.error("JQMIGRATE: Invalid selector string (XSS)");
            }
            // Now process using loose rules; let pre-1.8 play too
            if ( context && context.context ) {
                // jQuery object as context; parseHTML expects a DOM object
                context = context.context;
            }
            if ( jQuery.parseHTML ) {
                return oldInit.call( this, jQuery.parseHTML( match[ 2 ], context, true ),
                        context, rootjQuery );
            }
        }
        return oldInit.apply( this, arguments );
    };
    jQuery.fn.init.prototype = jQuery.fn;

    // Let $.parseJSON(falsy_value) return null
    jQuery.parseJSON = function( json ) {
        if ( !json && json !== null ) {
            migrateWarn("jQuery.parseJSON requires a valid JSON string");
            return null;
        }
        return oldParseJSON.apply( this, arguments );
    };

    jQuery.uaMatch = function( ua ) {
        ua = ua.toLowerCase();

        var match = /(chrome)[ \/]([\w.]+)/.exec( ua ) ||
            /(webkit)[ \/]([\w.]+)/.exec( ua ) ||
            /(opera)(?:.*version|)[ \/]([\w.]+)/.exec( ua ) ||
            /(msie) ([\w.]+)/.exec( ua ) ||
            ua.indexOf("compatible") < 0 && /(mozilla)(?:.*? rv:([\w.]+)|)/.exec( ua ) ||
            [];

        return {
            browser: match[ 1 ] || "",
            version: match[ 2 ] || "0"
        };
    };

    // Don't clobber any existing jQuery.browser in case it's different
    if ( !jQuery.browser ) {
        matched = jQuery.uaMatch( navigator.userAgent );
        browser = {};

        if ( matched.browser ) {
            browser[ matched.browser ] = true;
            browser.version = matched.version;
        }

        // Chrome is Webkit, but Webkit is also Safari.
        if ( browser.chrome ) {
            browser.webkit = true;
        } else if ( browser.webkit ) {
            browser.safari = true;
        }

        jQuery.browser = browser;
    }

    // Warn if the code tries to get jQuery.browser
    migrateWarnProp( jQuery, "browser", jQuery.browser, "jQuery.browser is deprecated" );

    jQuery.sub = function() {
        function jQuerySub( selector, context ) {
            return new jQuerySub.fn.init( selector, context );
        }
        jQuery.extend( true, jQuerySub, this );
        jQuerySub.superclass = this;
        jQuerySub.fn = jQuerySub.prototype = this();
        jQuerySub.fn.constructor = jQuerySub;
        jQuerySub.sub = this.sub;
        jQuerySub.fn.init = function init( selector, context ) {
            if ( context && context instanceof jQuery && !(context instanceof jQuerySub) ) {
                context = jQuerySub( context );
            }

            return jQuery.fn.init.call( this, selector, context, rootjQuerySub );
        };
        jQuerySub.fn.init.prototype = jQuerySub.fn;
        var rootjQuerySub = jQuerySub(document);
        migrateWarn( "jQuery.sub() is deprecated" );
        return jQuerySub;
    };


    // Ensure that $.ajax gets the new parseJSON defined in core.js
    jQuery.ajaxSetup({
        converters: {
            "text json": jQuery.parseJSON
        }
    });


    var oldFnData = jQuery.fn.data;

    jQuery.fn.data = function( name ) {
        var ret, evt,
            elem = this[0];

        // Handles 1.7 which has this behavior and 1.8 which doesn't
        if ( elem && name === "events" && arguments.length === 1 ) {
            ret = jQuery.data( elem, name );
            evt = jQuery._data( elem, name );
            if ( ( ret === undefined || ret === evt ) && evt !== undefined ) {
                migrateWarn("Use of jQuery.fn.data('events') is deprecated");
                return evt;
            }
        }
        return oldFnData.apply( this, arguments );
    };


    var rscriptType = /\/(java|ecma)script/i,
        oldSelf = jQuery.fn.andSelf || jQuery.fn.addBack;

    jQuery.fn.andSelf = function() {
        migrateWarn("jQuery.fn.andSelf() replaced by jQuery.fn.addBack()");
        return oldSelf.apply( this, arguments );
    };

    // Since jQuery.clean is used internally on older versions, we only shim if it's missing
    if ( !jQuery.clean ) {
        jQuery.clean = function( elems, context, fragment, scripts ) {
            // Set context per 1.8 logic
            context = context || document;
            context = !context.nodeType && context[0] || context;
            context = context.ownerDocument || context;

            migrateWarn("jQuery.clean() is deprecated");

            var i, elem, handleScript, jsTags,
                ret = [];

            jQuery.merge( ret, jQuery.buildFragment( elems, context ).childNodes );

            // Complex logic lifted directly from jQuery 1.8
            if ( fragment ) {
                // Special handling of each script element
                handleScript = function( elem ) {
                    // Check if we consider it executable
                    if ( !elem.type || rscriptType.test( elem.type ) ) {
                        // Detach the script and store it in the scripts array (if provided) or the fragment
                        // Return truthy to indicate that it has been handled
                        return scripts ?
                            scripts.push( elem.parentNode ? elem.parentNode.removeChild( elem ) : elem ) :
                            fragment.appendChild( elem );
                    }
                };

                for ( i = 0; (elem = ret[i]) != null; i++ ) {
                    // Check if we're done after handling an executable script
                    if ( !( jQuery.nodeName( elem, "script" ) && handleScript( elem ) ) ) {
                        // Append to fragment and handle embedded scripts
                        fragment.appendChild( elem );
                        if ( typeof elem.getElementsByTagName !== "undefined" ) {
                            // handleScript alters the DOM, so use jQuery.merge to ensure snapshot iteration
                            jsTags = jQuery.grep( jQuery.merge( [], elem.getElementsByTagName("script") ), handleScript );

                            // Splice the scripts into ret after their former ancestor and advance our index beyond them
                            ret.splice.apply( ret, [i + 1, 0].concat( jsTags ) );
                            i += jsTags.length;
                        }
                    }
                }
            }

            return ret;
        };
    }

    var eventAdd = jQuery.event.add,
        eventRemove = jQuery.event.remove,
        eventTrigger = jQuery.event.trigger,
        oldToggle = jQuery.fn.toggle,
        oldLive = jQuery.fn.live,
        oldDie = jQuery.fn.die,
        ajaxEvents = "ajaxStart|ajaxStop|ajaxSend|ajaxComplete|ajaxError|ajaxSuccess",
        rajaxEvent = new RegExp( "\\b(?:" + ajaxEvents + ")\\b" ),
        rhoverHack = /(?:^|\s)hover(\.\S+|)\b/,
        hoverHack = function( events ) {
            if ( typeof( events ) !== "string" || jQuery.event.special.hover ) {
                return events;
            }
            if ( rhoverHack.test( events ) ) {
                migrateWarn("'hover' pseudo-event is deprecated, use 'mouseenter mouseleave'");
            }
            return events && events.replace( rhoverHack, "mouseenter$1 mouseleave$1" );
        };

    // Event props removed in 1.9, put them back if needed; no practical way to warn them
    if ( jQuery.event.props && jQuery.event.props[ 0 ] !== "attrChange" ) {
        jQuery.event.props.unshift( "attrChange", "attrName", "relatedNode", "srcElement" );
    }

    // Undocumented jQuery.event.handle was "deprecated" in jQuery 1.7
    if ( jQuery.event.dispatch ) {
        migrateWarnProp( jQuery.event, "handle", jQuery.event.dispatch, "jQuery.event.handle is undocumented and deprecated" );
    }

    // Support for 'hover' pseudo-event and ajax event warnings
    jQuery.event.add = function( elem, types, handler, data, selector ){
        if ( elem !== document && rajaxEvent.test( types ) ) {
            migrateWarn( "AJAX events should be attached to document: " + types );
        }
        eventAdd.call( this, elem, hoverHack( types || "" ), handler, data, selector );
    };
    jQuery.event.remove = function( elem, types, handler, selector, mappedTypes ){
        eventRemove.call( this, elem, hoverHack( types ) || "", handler, selector, mappedTypes );
    };

    jQuery.fn.error = function() {
        var args = Array.prototype.slice.call( arguments, 0);
        migrateWarn("jQuery.fn.error() is deprecated");
        args.splice( 0, 0, "error" );
        if ( arguments.length ) {
            return this.bind.apply( this, args );
        }
        // error event should not bubble to window, although it does pre-1.7
        this.triggerHandler.apply( this, args );
        return this;
    };

    jQuery.fn.toggle = function( fn, fn2 ) {

        // Don't mess with animation or css toggles
        if ( !jQuery.isFunction( fn ) || !jQuery.isFunction( fn2 ) ) {
            return oldToggle.apply( this, arguments );
        }
        migrateWarn("jQuery.fn.toggle(handler, handler...) is deprecated");

        // Save reference to arguments for access in closure
        var args = arguments,
            guid = fn.guid || jQuery.guid++,
            i = 0,
            toggler = function( event ) {
                // Figure out which function to execute
                var lastToggle = ( jQuery._data( this, "lastToggle" + fn.guid ) || 0 ) % i;
                jQuery._data( this, "lastToggle" + fn.guid, lastToggle + 1 );

                // Make sure that clicks stop
                event.preventDefault();

                // and execute the function
                return args[ lastToggle ].apply( this, arguments ) || false;
            };

        // link all the functions, so any of them can unbind this click handler
        toggler.guid = guid;
        while ( i < args.length ) {
            args[ i++ ].guid = guid;
        }

        return this.click( toggler );
    };

    jQuery.fn.live = function( types, data, fn ) {
        migrateWarn("jQuery.fn.live() is deprecated");
        if ( oldLive ) {
            return oldLive.apply( this, arguments );
        }
        jQuery( this.context ).on( types, this.selector, data, fn );
        return this;
    };

    jQuery.fn.die = function( types, fn ) {
        migrateWarn("jQuery.fn.die() is deprecated");
        if ( oldDie ) {
            return oldDie.apply( this, arguments );
        }
        jQuery( this.context ).off( types, this.selector || "**", fn );
        return this;
    };

    // Turn global events into document-triggered events
    jQuery.event.trigger = function( event, data, elem, onlyHandlers  ){
        if ( !elem && !rajaxEvent.test( event ) ) {
            migrateWarn( "Global events are undocumented and deprecated" );
        }
        return eventTrigger.call( this,  event, data, elem || document, onlyHandlers  );
    };
    jQuery.each( ajaxEvents.split("|"),
        function( _, name ) {
            jQuery.event.special[ name ] = {
                setup: function() {
                    var elem = this;

                    // The document needs no shimming; must be !== for oldIE
                    if ( elem !== document ) {
                        jQuery.event.add( document, name + "." + jQuery.guid, function() {
                            jQuery.event.trigger( name, null, elem, true );
                        });
                        jQuery._data( this, name, jQuery.guid++ );
                    }
                    return false;
                },
                teardown: function() {
                    if ( this !== document ) {
                        jQuery.event.remove( document, name + "." + jQuery._data( this, name ) );
                    }
                    return false;
                }
            };
        }
    );


    })( jQuery, window );

    // The migrate plugin has been added to the jQuery object, now return it as noConflict to allow usage of older jQuery and newer using require
    return jQuery.noConflict( true );
});
/* 
 * 
 * Oskari 2.0 class system 
 * 
 * This module implements Oskari clazz system and bundle management.
 * 
 * Supports class definintion, inheritance, method categories,
 * class metadata, class implementation in separate files.
 *
 * Supports async loading with class stubs and post definition
 * inheritance and method category changes.
 * 
 * Concepts bundle and bundle instance are used to compose
 * application from a set of extension modules.
 * 
 * This is free software.
 *
 */
(function() {
    var global = this; // in non-strict mode this will refer to the global "window" object
    var isDebug = false;
    var isConsole = window.console != null && window.console.debug;

    var logMsg = function(msg) {
        if (!isDebug) {
            return;
        }

        if (!isConsole) {
            return;
        }
        window.console.debug(msg);

    }
    /**
     * @class Oskari.bundle_locale
     * 
     * a localisation registry 
     * 
     */
    var bundle_locale = function() {
        this.lang = null;
        this.localizations = {};

    };

    bundle_locale.prototype = {
        setLocalization : function(lang, key, value) {
            if (!this.localizations[lang])
                this.localizations[lang] = {};
            this.localizations[lang][key] = value;
        },
        setLang : function(lang) {
            this.lang = lang;
        },
        getLang : function() {
            return this.lang;
        },
        getLocalization : function(key) {
            return this.localizations[this.lang][key];
        }
    };

    /**
     * singleton localisation registry instance
     */
    var blocale = new bundle_locale();

    /*
     * 'dev' adds ?ts=<instTs> parameter to js loads 'default' does not add
     * 'static' assumes srcs are already loaded <any-other> is assumed as a
     * request to load built js packs using this path pattern .../<bundles-path>/<bundle-name>/build/<any-ohther>.js
     */
    var supportBundleAsync = false;
    var mode = 'default';
    // 'static' / 'dynamic'

    var _preloaded = true;
    function preloaded() {
        return _preloaded;
    }

    var o2clazzsystem = function() {
        this.packages = {};
        this.protocols = {};
        this.inheritance = {};
        this.aspects = {};
        this.clazzcache = {};
        this.globals = {};
    };

    o2clazzsystem.prototype = {

        purge : function() {

        },

        protocol : function() {
            var args = arguments;
            if (args.length == 0)
                throw "missing arguments";

            // var cdef = args[0];

            return this.protocols[args[0]];

        },

        /* lookup pdefsp */
        pdefsp : function(cdef) {
            var pdefsp = this.clazzcache[cdef];

            var bp = null, pp = null, sp = null;
            if (!pdefsp) {
                var parts = cdef.split('.'), bp = parts[0], pp = parts[1], sp = parts.slice(2).join('.');

                var pdef = this.packages[pp];
                if (!pdef) {
                    pdef = {};
                    this.packages[pp] = pdef;
                }
                pdefsp = pdef[sp];
                this.clazzcache[cdef] = pdefsp;

            }
            return pdefsp;
        },

        /**
         * @method metadata
         *
         * Returns metadata for the class
         *
         * @param classname
         *            the name of the class as string
         */
        metadata : function() {
            var args = arguments;
            if (args.length == 0)
                throw "missing arguments";

            var cdef = args[0], pdefsp = this.pdefsp(cdef);

            if (!pdefsp)
                throw "clazz " + cdef + " does not exist";

            return pdefsp._metadata;

        },
        /**
         * @method updateMetadata
         * @private
         *
         * Updates and binds class metadata
         */
        "updateMetadata" : function(bp, pp, sp, pdefsp, classMeta) {
            if (!pdefsp._metadata)
                pdefsp._metadata = {};

            pdefsp._metadata['meta'] = classMeta;

            var protocols = classMeta['protocol'];
            if (protocols) {
                for (var p = 0; p < protocols.length; p++) {
                    var pt = protocols[p];

                    if (!this.protocols[pt]) {
                        this.protocols[pt] = {};
                    }

                    var cn = bp + "." + pp + "." + sp;

                    this.protocols[pt][cn] = pdefsp;
                }
            }

        },
        _super : function() {
            var supCat = arguments[0];
            var supMet = arguments[1];
            var me = this;
            return function() {
                return me['_']._superCategory[supCat][supMet].apply(me, arguments);
            }
        },
        /**
         * @method define
         *
         * Creates a class definition
         * @param {String}
         *            classname the name of the class to be defined
         * @param {Function}
         *            constructor constructor function for the class
         * @param {Object}
         *            prototype a property object containing methods and
         *            definitions for the class prototype
         * @param {Object}
         *            metadata optional metadata for the class
         */
        define : function() {
            var args = arguments;
            if (args.length == 0)
                throw "missing arguments";

            var cdef = args[0];
            var parts = cdef.split('.');

            /*
             * bp base part pp package part sp rest
             */
            var bp = parts[0], pp = parts[1], sp = parts.slice(2).join('.');

            var pdef = this.packages[pp];
            if (!pdef) {
                pdef = {};
                this.packages[pp] = pdef;
            }

            var pdefsp = pdef[sp];

            if (pdefsp) {
                // update constrcutor
                if (args[1]) {
                    pdefsp._constructor = args[1];
                }

                // update prototype
                var catFuncs = args[2], prot = pdefsp._class.prototype;

                for (p in catFuncs) {
                    var pi = catFuncs[p];

                    prot[p] = pi;
                }
                var catName = cdef;
                if (catFuncs) {
                    pdefsp._category[catName] = catFuncs;
                }
                if (args.length > 3) {

                    var extnds = args[3].extend;
                    for (var e = 0; extnds && e < extnds.length; e++) {
                        var superClazz = this.lookup(extnds[e]);
                        if (!superClazz._composition.subClazz)
                            superClazz._composition.subClazz = {};
                        superClazz._composition.subClazz[extnds[e]] = pdefsp;
                        pdefsp._composition.superClazz = superClazz;
                    }

                    this.updateMetadata(bp, pp, sp, pdefsp, args[3]);
                }

                this.pullDown(pdefsp);
                this.pushDown(pdefsp);

                return pdefsp;
            }

            var cd = function() {
            };
            var compo = {
                clazzName : cdef,
                superClazz : null,
                subClazz : null
            };
            cd.prototype = {
            };
            //args[2];
            pdefsp = {
                _class : cd,
                _constructor : args[1],
                _category : {},
                _composition : compo
            };
            cd.prototype['_'] = pdefsp;
            cd.prototype['_super'] = this['_super'];

            // update prototype
            var catFuncs = args[2];
            var prot = cd.prototype;

            for (p in catFuncs) {
                var pi = catFuncs[p];

                prot[p] = pi;
            }
            var catName = cdef;
            if (catFuncs) {
                pdefsp._category[catName] = catFuncs;
            }

            this.inheritance[cdef] = compo;
            pdef[sp] = pdefsp;

            if (args.length > 3) {

                var extnds = args[3].extend;
                for (var e = 0; extnds && e < extnds.length; e++) {
                    var superClazz = this.lookup(extnds[e]);
                    if (!superClazz._composition.subClazz)
                        superClazz._composition.subClazz = {};
                    superClazz._composition.subClazz[cdef] = pdefsp;
                    pdefsp._composition.superClazz = superClazz;
                }

                this.updateMetadata(bp, pp, sp, pdefsp, args[3]);
            }
            this.pullDown(pdefsp);
            this.pushDown(pdefsp);

            return pdefsp;
        },
        /**
         * @method category
         *
         * adds some logical group of methods to class prototype
         *
         * Oskari.clazz.category('Oskari.mapframework.request.common.ActivateOpenlayersMapControlRequest',
         * 'map-layer-funcs',{ "xxx": function() {} });
         */
        category : function() {
            var args = arguments;
            if (args.length == 0)
                throw "missing arguments";

            var cdef = args[0], parts = cdef.split('.'), bp = parts[0], pp = parts[1], sp = parts.slice(2).join('.');

            var pdef = this.packages[pp];
            if (!pdef) {
                pdef = {};
                this.packages[pp] = pdef;
            }
            var pdefsp = pdef[sp];

            if (!pdefsp) {
                var cd = function() {
                };
                var compo = {
                    clazzName : cdef,
                    superClazz : null,
                    subClazz : null
                };
                cd.prototype = {
                };
                pdefsp = {
                    _class : cd,
                    _constructor : args[1],
                    _category : {},
                    _composition : compo
                };
                cd.prototype['_'] = pdefsp;
                cd.prototype['_super'] = this['_super'];
                this.inheritance[cdef] = compo;
                pdef[sp] = pdefsp;

            }

            var catName = args[1], catFuncs = args[2], prot = pdefsp._class.prototype;

            for (p in catFuncs) {
                var pi = catFuncs[p];

                prot[p] = pi;
            }

            if (catFuncs) {
                pdefsp._category[catName] = catFuncs;
            }

            this.pullDown(pdefsp);
            this.pushDown(pdefsp);

            return pdefsp;
        },

        /**
         * looup and create stub
         */
        lookup : function() {
            var args = arguments;
            if (args.length == 0)
                throw "missing arguments";

            var cdef = args[0], parts = cdef.split('.'), bp = parts[0], pp = parts[1], sp = parts.slice(2).join('.');

            var pdef = this.packages[pp];
            if (!pdef) {
                pdef = {};
                this.packages[pp] = pdef;
            }
            var pdefsp = pdef[sp];

            if (!pdefsp) {
                var cd = function() {
                };
                cd.prototype = {};
                var compo = {
                    clazzName : cdef,
                    superClazz : null,
                    subClazz : null
                };
                pdefsp = {
                    _class : cd,
                    _constructor : args[1],
                    _category : {},
                    _composition : compo
                };
                this.inheritance[cdef] = compo;
                pdef[sp] = pdefsp;

            }

            return pdefsp;
        },
        extend : function() {
            var args = arguments;
            var superClazz = this.lookup(args[1]);
            var subClazz = this.lookup(args[0]);
            if (!superClazz._composition.subClazz)
                superClazz._composition.subClazz = {};
            superClazz._composition.subClazz[args[0]] = subClazz;
            subClazz._composition.superClazz = superClazz;
            this.pullDown(subClazz);
            return subClazz;
        },
        composition : function() {
            var cdef = arguments[0];

            var pdefsp = this.pdefsp(cdef);
            return pdefsp;
        },
        /**
         * @method pushDown
         *
         * force each derived class to pullDown
         * some overhead here if complex hierarchies are
         * implemented
         *
         */
        pushDown : function(pdefsp) {
            /* !self */
            if (!pdefsp._composition.subClazz) {
                return;
            }
            for (var sub in pdefsp._composition.subClazz) {
                var pdefsub = pdefsp._composition.subClazz[sub];
                this.pullDown(pdefsub);
                this.pushDown(pdefsub);
            }
            return pdefsp;
        },
        /**
         * @method pullDown
         *
         * EACH class is responsible for it's entire hierarchy
         * no intermediate results are being consolidated
         *
         */
        pullDown : function(pdefsp) {
            if (!pdefsp._composition.superClazz) {
                return;
            }

            var clazzHierarchy = [];
            clazzHierarchy.push(pdefsp);

            var funcs = {};
            var spr = pdefsp;
            while (true) {
                spr = spr._composition.superClazz;
                if (!spr) {
                    break;
                }
                clazzHierarchy.push(spr);
            }

            var prot = pdefsp._class.prototype;
            var constructors = [];
            var superClazzMethodCats = {};
            for (var s = clazzHierarchy.length - 1; s >= 0; s--) {
                var cn = clazzHierarchy[s]._composition.clazzName;

                var ctor = clazzHierarchy[s]._constructor;
                constructors.push(ctor);

                var superClazzMetCat = {};
                for (var c in clazzHierarchy[s]._category ) {

                    var catName = cn + "#" + c;
                    var catFuncs = clazzHierarchy[s]._category[c];
                    for (p in catFuncs) {
                        var pi = catFuncs[p];
                        prot[p] = pi;
                        superClazzMetCat[p] = pi;
                    }
                }
                superClazzMethodCats[cn] = superClazzMetCat;
            }
            pdefsp._constructors = constructors;
            pdefsp._superCategory = superClazzMethodCats;

            return pdefsp;
        },

        slicer : Array.prototype.slice,

        create : function() {
            var args = arguments;
            if (args.length == 0)
                throw "missing arguments";
            var instargs = this.slicer.apply(arguments, [1]), cdef = args[0], pdefsp = this.pdefsp(cdef);
            if (!pdefsp)
                throw "clazz " + cdef + " does not exist";

            var inst = new pdefsp._class(), ctors = pdefsp._constructors;
            if (ctors) {
                for (var c = 0; c < ctors.length; c++) {
                    ctors[c].apply(inst, instargs);
                }
            } else {
                pdefsp._constructor.apply(inst, instargs);
            }
            return inst;
        },

        createWithPdefsp : function() {
            var args = arguments;
            if (args.length == 0)
                throw "missing arguments";
            var instargs = arguments[1], pdefsp = args[0];
            if (!pdefsp)
                throw "clazz does not exist";

            var inst = new pdefsp._class(), ctors = pdefsp._constructors;
            if (ctors) {
                for (var c = 0; c < ctors.length; c++) {
                    ctors[c].apply(inst, instargs);
                }
            } else {
                pdefsp._constructor.apply(inst, instargs);
            }
            return inst;
        },

        construct : function() {
            var args = arguments;
            if (args.length != 2)
                throw "missing arguments";

            var cdef = args[0], instprops = args[1], pdefsp = this.pdefsp(cdef);

            if (!pdefsp)
                throw "clazz " + cdef + " does not exist";

            var inst = new pdefsp._class(), ctors = pdefsp._constructors;
            if (ctors) {
                for (var c = 0; c < ctors.length; c++) {
                    ctors[c].apply(inst, instargs);
                }
            } else {
                pdefsp._constructor.apply(inst, instargs);
            }
            return inst;
        },
        /**
         * @builder
         *
         * Implements Oskari frameworks support for cached class instance
         * builders
         * @param classname
         */
        builder : function() {
            var args = arguments;
            if (args.length == 0)
                throw "missing arguments";

            var cdef = args[0], pdefsp = this.pdefsp(cdef);

            if (!pdefsp)
                throw "clazz " + cdef + " does not exist";

            if (pdefsp._builder)
                return pdefsp._builder;

            pdefsp._builder = function() {
                var instargs = arguments, inst = new pdefsp._class(), ctors = pdefsp._constructors;
                if (ctors) {
                    for (var c = 0; c < ctors.length; c++) {
                        ctors[c].apply(inst, instargs);
                    }
                } else {
                    pdefsp._constructor.apply(inst, instargs);
                }
                return inst;
            };
            return pdefsp._builder;

        },
        /**
         * @builder
         *
         * Implements Oskari frameworks support for cached class instance
         * builders
         * @param classname
         */
        builderFromPdefsp : function() {
            var args = arguments;
            if (args.length == 0)
                throw "missing arguments";

            var pdefsp = args[0];

            if (!pdefsp)
                throw "clazz does not exist";

            if (pdefsp._builder)
                return pdefsp._builder;

            pdefsp._builder = function() {
                var instargs = arguments, inst = new pdefsp._class(), ctors = pdefsp._constructors;
                if (ctors) {
                    for (var c = 0; c < ctors.length; c++) {
                        ctors[c].apply(inst, instargs);
                    }
                } else {
                    pdefsp._constructor.apply(inst, instargs);
                }
                return inst;
            };
            return pdefsp._builder;

        },
        global : function() {
            if (arguments.length == 0)
                return this.globals;
            var name = arguments[0];
            if (arguments.length == 2) {
                this.globals[name] = arguments[1];
            }
            return this.globals[name];

        }
    };

	/*
	 * singleton instance of the clazz system 
	 * 
	 */
    var clazz_singleton = new o2clazzsystem();
    var cs = clazz_singleton;

    /**
     * @class Oskari.bundle_mediator
     *
     * A mediator class to support bundle to/from bundle manager communication
     * and initialisation as well as bundle state management
     *
     */
    var bundle_mediator = function(opts) {
        this.manager = null;

        for (p in opts) {
            this[p] = opts[p];
        }
        ;
    };
    bundle_mediator.prototype = {
        /**
         * @method setState
         * @param state
         * @returns
         */
        "setState" : function(state) {
            this.state = state;
            this.manager.postChange(this.bundle, this.instance, this.state);
            return this.state;
        },
        /**
         * @method getState
         * @returns
         */
        "getState" : function() {

            return this.state;
        }
    };

    /**
     * @class Oskari.bundle_trigger
     */
    var bundle_trigger = function(btc, cb, info) {
        this.config = btc;
        this.callback = cb;
        this.fired = false;
        this.info = info;
    };
    bundle_trigger.prototype = {
        /**
         * @method execute
         *
         * executes a trigger callback based on bundle state
         */
        "execute" : function(manager, b, bi, info) {

            var me = this;
            if (me.fired) {
                //manager.log("trigger already fired " + info || this.info);
                return;
            }

            for (p in me.config["Import-Bundle"]) {
                var srcState = manager.stateForBundleSources[p];
                if (!srcState || srcState.state != 1) {
                    manager.log("trigger not fired due " + p + " for " + info || this.info);
                    return;
                }
            }
            me.fired = true;
            manager.log("posting trigger");
            var cb = this.callback;

            window.setTimeout(function() {
                cb(manager);
            }, 0);
        }
    };

	/**
	 * @class Oskari.BundleManager
	 * 
	 * instance of this class is used to create bundles, bundle instances
	 * and manage instance lifecycle.
	 * 
	 * Bundles are identified by 'bundle identifier'.
	 *  
	 */
    cs.define('Oskari.BundleManager', function() {
        this.serial = 0;
        this.impls = {};
        this.sources = {};
        this.instances = {};
        this.bundles = {};
        this.stateForBundleDefinitions = {};
        this.stateForBundleSources = {};
        this.stateForBundles = {};
        this.stateForBundleInstances = {};
        this.triggers = [];
        this.loaderStateListeners = [];
    }, {
        purge : function() {
            for (var p in this.sources ) {
                delete this.sources[p];
            }
            for (var p in this.stateForBundleDefinitions ) {
                delete this.stateForBundleDefinitions[p].loader;
            }
            for (var p in this.stateForBundleSources ) {
                delete this.stateForBundleSources[p].loader;
            }
        },
        /**
         * @
         */
        notifyLoaderStateChanged : function(bl, finished) {
            if (this.loaderStateListeners.length == 0)
                return;
            for (var l = 0; l < this.loaderStateListeners.length; l++) {
                var cb = this.loaderStateListeners[l];
                cb(bl, finished);
            }
        },
        registerLoaderStateListener : function(cb) {
            this.loaderStateListeners.push(cb);
        },
        /**
         * @method alert
         * @param what
         *
         * a loggin and debugging function
         */
        alert : function(what) {
            logMsg(what);
        },
        /**
         * @method log a loggin and debuggin function
         *
         */
        log : function(what) {
            logMsg(what);

        },
        /**
         * @method self
         * @returns {bundle_manager}
         */
        self : function() {
            return this;
        },

        /* ! NOTE ! implid and bundleid ARE NOT TO BE CONFUSED WITH FACADE'S INSTANCEID OR instances arrays indexes */
        /* ! NOTE ! implid AND bundleid AS WELL AS bnldImpl are most likely always the same value */

        /**
         * @method install
         * @param implid
         *            bundle implementation identifier
         * @param bp
         *            bundle registration function
         * @param srcs
         *            source files
         *
         *
         */
        install : function(implid, bp, srcs, metadata) {
            // installs bundle
            // DOES not INSTANTIATE only register bp as function
            // declares any additional sources required

            var me = this;
            var bundleImpl = implid;
            var defState = me.stateForBundleDefinitions[bundleImpl];
            if (defState) {
                defState.state = 1;
                me.log("SETTING STATE FOR BUNDLEDEF " + bundleImpl + " existing state to " + defState.state);
            } else {
                defState = {
                    state : 1
                };

                me.stateForBundleDefinitions[bundleImpl] = defState;
                me.log("SETTING STATE FOR BUNDLEDEF " + bundleImpl + " NEW state to " + defState.state);
            }
            defState.metadata = metadata;

            me.impls[bundleImpl] = bp;
            me.sources[bundleImpl] = srcs;

            var srcState = me.stateForBundleSources[bundleImpl];
            if (srcState) {
                if (srcState.state == -1) {
                    me.log("triggering loadBundleSources for " + bundleImpl + " at loadBundleDefinition");
                    window.setTimeout(function() {
                        me.loadBundleSources(bundleImpl);
                    }, 0);
                } else {
                    me.log("source state for " + bundleImpl + " at loadBundleDefinition is " + srcState.state);
                }
            }
            me.postChange(null, null, "bundle_definition_loaded");
        },
        /**
         * @method installBundleClass
         * @param implid
         * @param bp
         * @param srcs
         *
         * Installs a bundle defined as Oskari native Class
         */
        installBundleClass : function(implid, clazzName) {

            var classmeta = cs.metadata(clazzName);
            var bp = cs.builder(clazzName);
            var srcs = classmeta.meta.source;
            var bundleMetadata = classmeta.meta.bundle;

            this.install(implid, bp, srcs, bundleMetadata);

        },
        /**
         * @method installBundlePdefs
         * @param implid
         * @param bp
         * @param srcs
         *
         * Installs a bundle defined as Oskari native Class
         */
        installBundlePdefsp : function(implid, pdefsp) {

            var bp = cs.builderFromPdefsp(pdefsp);
            var bundleMetadata = pdefsp._metadata;
            var srcs = {};

            this.install(implid, bp, srcs, bundleMetadata);

        },
        /**
         * @method impl
         * @param implid
         * @returns bundle implemenation
         *
         */
        impl : function(implid) {
            return this.impls[implid];
        },

        /**
         * @method postChange
         * @private
         * @param b
         * @param bi
         * @param info
         *
         * posts a notification to bundles and bundle instances
         *
         */
        postChange : function(b, bi, info) {
            // self
            var me = this;
            me.update(b, bi, info);

            // bundles
            for (bid in me.bundles) {
                var o = me.bundles[bid];
                o.update(me, b, bi, info);

            }
            // and instances
            for (i in me.instances) {
                var o = me.instances[i];
                if (!o)
                    continue;
                o.update(me, b, bi, info);
            }

        },
        /**
         * @method createBundle
         * @param implid
         * @param bundleid
         * @param env
         * @returns
         *
         * Creates a Bundle (NOTE NOT an instance of bundle)
         * implid, bundleid most likely same value
         */
        createBundle : function(implid, bundleid) {
            var bundlImpl = implid;
            var me = this;
            var defState = me.stateForBundleDefinitions[bundlImpl];
            if (!defState) {
                throw "INVALID_STATE: for createBundle / " + "definition not loaded " + implid + "/" + bundleid;
            }

            var bp = this.impls[implid];
            if (!bp) {
                alert("this.impls[" + implid + "] is null!");
                return;
            }
            var b = bp(defState);

            this.bundles[bundleid] = b;
            this.stateForBundles[bundleid] = {
                state : true,
                bundlImpl : bundlImpl
            };

            this.postChange(b, null, "bundle_created");

            return b;
        },

        /**
         * @method update
         * @param bundleid
         * @returns
         *
         * fires any pending bundle or bundle instance triggers
         *
         */
        update : function(b, bi, info) {

            var me = this;
            me.log("update called with info " + info);

            for (var n = 0; n < me.triggers.length; n++) {
                var t = me.triggers[n];
                t.execute(me);
            }
        },
        /**
         * @method bundle
         * @param bundleid
         * @returns bundle
         */
        bundle : function(bundleid) {
            return this.bundles[bundleid];
        },
        /**
         * @method destroyBundle
         * @param bundleid
         *
         * NYI. Shall DESTROY bundle definition
         */
        destroyBundle : function(bundleid) {
        },

        uninstall : function(implid) {
            var bp = this.impls[implid];
            return bp;
        },
        /**
         * creates a bundle instance for previously installed and created bundle
         */
        createInstance : function(bundleid) {

            var me = this;
            if (!me.stateForBundles[bundleid] || !me.stateForBundles[bundleid].state) {
                throw "INVALID_STATE: for createInstance / " + "definition not loaded " + bundleid;
            }

            var s = "" + (++this.serial);

            var b = this.bundles[bundleid];
            var bi = b["create"]();

            bi.mediator = new bundle_mediator({
                "bundleId" : bundleid,
                "instanceid" : s,
                "state" : "initial",
                "bundle" : b,
                "instance" : bi,
                "manager" : this,
                "clazz" : cs,
                "requestMediator" : {}
            });

            this.instances[s] = bi;
            this.stateForBundleInstances[s] = {
                state : true,
                bundleid : bundleid
            };

            this.postChange(b, bi, "instance_created");
            return bi;
        },
        /**
         * @method instance
         * @param instanceid
         * @returns bundle instance
         */
        instance : function(instanceid) {

            return this.instances[instanceid];
        },
        /**
         * @method destroyInstance
         * @param instanceid
         * @returns
         *
         * destroys and unregisters bundle instance
         */
        destroyInstance : function(instanceid) {

            var bi = this.instances[instanceid];
            var mediator = bi.mediator;
            mediator.bundle = null;
            mediator.manager = null;
            mediator.clazz = null;

            bi.mediator = null;

            this.instances[instanceid] = null;
            bi = null;

            return bi;
        },
        /**
         * @method on
         * @param config
         * @param callback
         *
         * trigger registration
         */
        on : function(cfg, cb, info) {
            this.triggers.push(new bundle_trigger(cfg, cb, info));
        }
    });

	
	/* 
	 * 
	 * @class Oskari.BundleFacade
	 *  
	 * This provides (did provided more in versions 1.x) some 
	 * helper functions to enhance Oskari.BundleManager
	 * 
	 * This adds bundle instance lookup with 'bundle instance identifier' aka bundleinstancename.  
	 * 
	 */ 
    cs.define('Oskari.BundleFacade', function(bm) {
        this.manager = bm;

        this.bundles = {};
        this.bundleInstances = {};
        /* keyed by identifier */
        this.appSetup = null;

        this.bundlePath = "";

        /**
         * @property appConfig
         * application configuration (state) for instances
         * this is injected to instances before 'start' is called
         *
         */
        this.appConfig = {};
    }, {

        /**
         * @method getBundleInstanceByName
         *
         * returns bundle_instance by bundleinstancename defined in player json
         */
        getBundleInstanceByName : function(bundleinstancename) {
            var me = this;
            return me.bundleInstances[bundleinstancename];
        },
        /**
         * @method getBundleInstanceConfigurationByName
         *
         * returns configuration for instance by bundleinstancename
         */
        getBundleInstanceConfigurationByName : function(bundleinstancename) {
            var me = this;
            return me.appConfig[bundleinstancename];
        },

        setConfiguration : function(config) {
            this.appConfig = config;
        },
        getConfiguration : function() {
            return this.appConfig;
        }
    });

    /**
     *
     */

    /**
     * singleton instance of Oskari.BundleManager manages lifecycle for bundles and bundle instances.
     * 
     */
    var bm = cs.create('Oskari.BundleManager');
    bm.clazz = cs;

    /**
     * @class Oskari.BundleFacade
     * 
     * pluggable DOM manager. This is the no-op default implementation. 
     *  
     */
    var fcd = cs.create('Oskari.BundleFacade', bm);
    var ga = cs.global;

    cs.define('Oskari.DomManager', function(dollar) {
        this.$ = dollar;
    }, {
        getEl : function(selector) {
            return this.$(selector);
        },
        getElForPart : function(part) {
            throw "N/A";
        },
        setElForPart : function(part, el) {
            throw "N/A";
        },
        setElParts : function(partsMap) {
            throw "N/A";
        },
        getElParts : function() {
            throw "N/A";
        },
        pushLayout : function(s) {
            throw "N/A";
        },
        popLayout : function(s) {
            throw "N/A";
        },
        getLayout : function() {
            throw "N/A";
        }
    });

    var domMgr = cs.create('Oskari.DomManager');

    /* o2 clazz module  */
    var o2anonclass = 0;
    var o2anoncategory = 0;
    var o2anonbundle = 0;

    /* this is Oskari 2 modulespec prototype which provides a leaner API  */
   
   /* @class Oskari.ModuleSpec 
    * 
    * helper class instance of which is returned from oskari 2.0 api
    * Returned class instance may be used to chain class definition calls.
    */
    cs.define('Oskari.ModuleSpec', function(clazzInfo, clazzName) {
        this.cs = cs;
        this.clazzInfo = clazzInfo;
        this.clazzName = clazzName;

    }, {

        slicer : Array.prototype.slice,
        
        /* @method category 
         * adds a set of methods to class 
         */
        category : function(protoProps, traitsName) {
            var clazzInfo = cs.category(this.clazzName, traitsName || ( ['__', (++o2anoncategory)].join('_')), protoProps);
            this.clazzInfo = clazzInfo;
            return this;
        },
        /* @method methods
         * adds a set of methods to class - alias to category
         */
        methods : function(protoProps, traitsName) {
            var clazzInfo = cs.category(this.clazzName, traitsName || ( ['__', (++o2anoncategory)].join('_')), protoProps);
            this.clazzInfo = clazzInfo;
            return this;
        },
        
        /* @method extend
         * adds inheritance from  a base class
         * base class can be declared later but must be defined before instantiation 
         */          
        extend : function(clsss) {
            var clazzInfo = cs.extend(this.clazzName, clsss.length ? clsss : [clsss]);
            this.clazzInfo = clazzInfo;
            return this;
        },
        /* @method create
         * creates an instance of this class
         */
        create : function() {
            return cs.createWithPdefsp(this.clazzInfo, arguments);
        },
        
        /*
         * @method returns the class name  
         */
        name : function() {
            return this.clazzName;
        },
        
        /*
         * @method returns class metadata
         */
        metadata : function() {
            return cs.metadata(this.clazzName);
        },
        
        /*
         * @method events
         * adds a set of event handlers to class
         */
        events : function(events) {
            var orgmodspec = this;
            orgmodspec.category({
                eventHandlers : events,
                onEvent : function(event) {
                    var handler = this.eventHandlers[event.getName()];
                    if (!handler) {
                        return;
                    }

                    return handler.apply(this, [event]);
                }
            }, '___events');
            return orgmodspec;
        },
        requests : function(requests) {
            var orgmodspec = this;
            orgmodspec.category({
                requestHandlers : requests,
                onRequest : function(request) {
                    var handler = this.requestHandlers[request.getName()];
                    if (!handler) {
                        return;
                    }

                    return handler.apply(this, [request]);
                }
            }, '___requests');
            return orgmodspec;
        },
        builder : function() {
            return cs.builderFromPdefsp(this.clazzInfo);
        }
        
        
    });

    /**
     * @static
     * @property Oskari
     * 
     * Oskari main entry objects 
     */
    var o2main = {
        VERSION : "2.0.0",
        bundle_manager : bm, /* */
        bundle_facade : fcd,
        bundle_locale : blocale,
        app : fcd, /* */
        clazz : cs,

        /**
         * @method Oskari.$
         */
        "$" : function() {
            ;
            return ga.apply(cs, arguments);
        },
        /** @static
         *  @property Oskari.clazzadapter
         *  prototype for a class namespace adapter class
         */
        //clazzadapter : clazzadapter,

        run : function(func) {
            func();
        },
        /**
         * @static
         * @method Oskari.setLoaderMode
         */
        setLoaderMode : function(m) {
            mode = m;
        },
        getLoaderMode : function() {
            return mode;
        },
        setDebugMode : function(d) {
            isDebug = d;
        },
        setSupportBundleAsync : function(a) {
            supportBundleAsync = a;
        },
        getSupportBundleAsync : function() {
            return supportBundleAsync;
        },
        setBundleBasePath : function(bp) {
            basePathForBundles = bp;
        },
        getBundleBasePath : function() {
            return basePathForBundles;
        },
        setPreloaded : function(usep) {
            _preloaded = usep;
        },
        getPreloaded : function() {
            return _preloaded;
        },
        /**
         * @static
         * @method Oskari.registerLocalization
         */
        registerLocalization : function(props) {
            if (props.length) {
                for (var p = 0; p < props.length; p++) {
                    var pp = props[p];
                    blocale.setLocalization(pp.lang, pp.key, pp.value);
                }
            } else {
                return blocale.setLocalization(props.lang, props.key, props.value);
            }
        },
        /**
         * @static
         * @method Oskari.getLocalization
         */
        getLocalization : function(key) {
            return blocale.getLocalization(key);
        },
        /**
         * @static
         * @method Oskari.getLang
         */
        getLang : function() {
            return blocale.getLang();
        },
        /**
         * @static
         * @method Oskari.setLang
         */
        setLang : function(lang) {
            return blocale.setLang(lang);
        },
        /**
         * @static
         * @method Oskari.purge
         */
        purge : function() {
            bm.purge();
            cs.purge("Oskari");
        },
        /**
         * @static
         * @method Oskari.getDomManager
         */
        getDomManager : function() {
            return domMgr;
        },
        /**
         * @static
         * @method Oskari.setDomManager
         */
        setDomManager : function(dm) {
            domMgr = dm;
        },
        /**
         * @static
         * @method getSandbox
         */
        getSandbox : function(sandboxName) {
            return ga.apply(cs, [sandboxName || 'sandbox'])
        },
        /**
         * @static
         * @method setSandbox
         */
        setSandbox : function(sandboxName, sandbox) {
            return ga.apply(cs, [sandboxName || 'sandbox', sandbox])
        },

        /**
         * @static
         * @method registerMimeTypeToPlugin
         * @param mimeType mimetype to be mapped
         * @param pluginMapFunc requirejs plugin
         */
        registerMimeTypeToPlugin : function(mimeType, plugin) {
            blMimeTypeToPlugin[mimeType] = plugin;
        },

        /* entry point to new class API see Oskari.ModuleSpec above */
        cls : function(clazzName, ctor, protoProps, metas) {

            var clazzInfo = undefined;

            if (clazzName == undefined) {
                clazzName = ['Oskari', '_', (++o2anonclass)].join('.');
            } else {
                clazzInfo = cs.lookup(clazzName);
            }

            if (clazzInfo && clazzInfo._constructor && !ctor) {
                // lookup
            } else {
                clazzInfo = cs.define(clazzName, ctor ||
                function() {
                }, protoProps, metas || {});
            }

            return cs.create('Oskari.ModuleSpec', clazzInfo, clazzName);

        },

        /* o2 helper to access sandbox */
        sandbox : function(sandboxName) {

            var sandboxref = {
                sandbox : ga.apply(cs, [sandboxName || 'sandbox'])
            };

            sandboxref.on = function(instance) {
                var me = this;
                if (instance.eventHandlers) {
                    for (p in instance.eventHandlers) {
                        me.sandbox.registerForEventByName(instance, p);
                    }
                }
                if (instance.requestHandlers) {
                    for (r in instance.requestHandlers ) {
                        me.sandbox.addRequestHandler(r, reqHandlers[r]);
                    }
                }
            }, sandboxref.off = function(instance) {
                if (instance.eventHandlers) {
                    for (p in instance.eventHandlers) {
                        me.sandbox.unregisterFromEventByName(instance, p);
                    }
                }
                if (instance.requestHandlers) {
                    for (r in instance.requestHandlers ) {
                        me.sandbox.removeRequestHandler(r, reqHandlers[r]);
                    }
                }
            }, sandboxref.slicer = Array.prototype.slice, sandboxref.notify = function(eventName) {
                var me = this;
                var sandbox = me.sandbox;
                var builder = me.sandbox.getEventBuilder(eventName);
                var args = me.slicer.apply(arguments, [1]);
                var eventObj = eventBuilder.apply(eventBuilder, args);
                return sandbox.notifyAll(eventObj);
            };

            return sandboxref;

        },

        /* o2 helper to register localisation */
        loc : function() {
            return o2main.registerLocalization.apply(o2main, arguments);
        },

        setConfiguration : function(conf) {
            return fcd.setConfiguration(conf);
        },
        getConfiguration : function() {
            return fcd.getConfiguration();
        }
    };
    
    
    

    /* o2 api for event class */
    o2main.eventCls = function(eventName, constructor, protoProps) {
        var clazzName = ['Oskari', 'event', 'registry', eventName].join('.');
        var rv = o2main.cls(clazzName, constructor, protoProps, {
            protocol : ['Oskari.mapframework.event.Event']
        });

        rv.category({
            getName : function() {
                return eventName;
            }
        }, '___event');

        rv.eventName = eventName;

        return rv;
    };

    /* o2 api for request class */
    o2main.requestCls = function(requestName, constructor, protoProps) {
        var clazzName = ['Oskari', 'request', 'registry', requestName].join('.');
        var rv = o2main.cls(clazzName, constructor, protoProps, {
            protocol : ['Oskari.mapframework.request.Request']
        });

        rv.category({
            getName : function() {
                return requestName;
            }
        }, '___request');

        rv.requestName = requestName;

        return rv;
    };
    
    
    o2main._baseClassFor = {
    	'extension' : "Oskari.userinterface.extension.EnhancedExtension",
    	'bundle' : "Oskari.mapframework.bundle.extension.ExtensionBundle",
    	'tile' : "Oskari.userinterface.extension.EnhancedTile",
    	'flyout' : "Oskari.userinterface.extension.EnhancedFlyout",
    	'view' : "Oskari.userinterface.extension.EnhancedView"
    };
    

    /* o2 api for bundle classes */
   
   /* @static @method Oskari.extensionCls
    * 
    */ 
    o2main.extensionCls = function(clazzName) {
        return o2main.cls(clazzName).extend(this._baseClassFor.extension);
    /* @static @method Oskari.bundleCls 
     * 
     */
    }, o2main.bundleCls = function(bnldId, clazzName) {

        if (!bnldId) {
            bnldId = ( ['__', (++o2anonbundle)].join('_'));
        }

        var rv = o2main.cls(clazzName, function() {
        }, {
            update : function() {
            }
        }, {
            "protocol" : ["Oskari.bundle.Bundle", this._baseClassFor.bundle],
            "manifest" : {
                "Bundle-Identifier" : bnldId
            }
        });
        bm.installBundlePdefsp(bnldId, rv.clazzInfo);

        rv.___bundleIdentifier = bnldId;
        rv.loc = function(props) {
            props.key = this.___bundleIdentifier;
            o2main.registerLocalization(props);
            return rv;
        }, rv.start = function(instanceid) {
            var bundleid = this.___bundleIdentifier;

            if (!fcd.bundles[bundleid]) {
                var b = bm.createBundle(bundleid, bundleid);
                fcd.bundles[bundleid] = b;
            }

            var bi = bm.createInstance(bundleid);
            fcd.bundleInstances[bundleid] = bi;

            var configProps = fcd.getBundleInstanceConfigurationByName(bundleid);
            if (configProps) {
                for (ip in configProps) {
                    bi[ip] = configProps[ip];
                }
            }
            bi.start();

            return bi;
        }, rv.stop = function() {
            var bundleid = this.___bundleIdentifier;
            var bi = fcd.bundleInstances[bundleid];
            return bi.stop();
        };

        return rv;
    },
    /**
     * @static @method flyoutCls 
     */
     o2main.flyoutCls = function(clazzName) {
        return o2main.cls(clazzName).extend(this._baseClassFor.flyout);
     }
    /* @static @method Oskari.tileCls 
     * 
     */
    o2main.tileCls = function(clazzName) {
        return o2main.cls(clazzName).extend(this._baseClassFor.tile);
      },
    /* @static @method Oskari.bundleCls 
     * 
     */
     o2main.viewCls = function(clazzName) {
        return o2main.cls(clazzName).extend(this._baseClassFor.view);
     };

    ga.apply(cs, ['Oskari', o2main]);

    global.Oskari = o2main;

    define('oskari',['exports'], function(exports) {

        exports.Oskari = o2main;
        return o2main;
    });
})();

/**
 * @license RequireJS domReady 2.0.1 Copyright (c) 2010-2012, The Dojo Foundation All Rights Reserved.
 * Available via the MIT or new BSD license.
 * see: http://github.com/requirejs/domReady for details
 */
/*jslint */
/*global require: false, define: false, requirejs: false,
  window: false, clearInterval: false, document: false,
  self: false, setInterval: false */


define('domReady',[],function () {
    

    var isTop, testDiv, scrollIntervalId,
        isBrowser = typeof window !== "undefined" && window.document,
        isPageLoaded = !isBrowser,
        doc = isBrowser ? document : null,
        readyCalls = [];

    function runCallbacks(callbacks) {
        var i;
        for (i = 0; i < callbacks.length; i += 1) {
            callbacks[i](doc);
        }
    }

    function callReady() {
        var callbacks = readyCalls;

        if (isPageLoaded) {
            //Call the DOM ready callbacks
            if (callbacks.length) {
                readyCalls = [];
                runCallbacks(callbacks);
            }
        }
    }

    /**
     * Sets the page as loaded.
     */
    function pageLoaded() {
        if (!isPageLoaded) {
            isPageLoaded = true;
            if (scrollIntervalId) {
                clearInterval(scrollIntervalId);
            }

            callReady();
        }
    }

    if (isBrowser) {
        if (document.addEventListener) {
            //Standards. Hooray! Assumption here that if standards based,
            //it knows about DOMContentLoaded.
            document.addEventListener("DOMContentLoaded", pageLoaded, false);
            window.addEventListener("load", pageLoaded, false);
        } else if (window.attachEvent) {
            window.attachEvent("onload", pageLoaded);

            testDiv = document.createElement('div');
            try {
                isTop = window.frameElement === null;
            } catch (e) {}

            //DOMContentLoaded approximation that uses a doScroll, as found by
            //Diego Perini: http://javascript.nwbox.com/IEContentLoaded/,
            //but modified by other contributors, including jdalton
            if (testDiv.doScroll && isTop && window.external) {
                scrollIntervalId = setInterval(function () {
                    try {
                        testDiv.doScroll();
                        pageLoaded();
                    } catch (e) {}
                }, 30);
            }
        }

        //Check if document already complete, and if so, just trigger page load
        //listeners. Latest webkit browsers also use "interactive", and
        //will fire the onDOMContentLoaded before "interactive" but not after
        //entering "interactive" or "complete". More details:
        //http://dev.w3.org/html5/spec/the-end.html#the-end
        //http://stackoverflow.com/questions/3665561/document-readystate-of-interactive-vs-ondomcontentloaded
        //Hmm, this is more complicated on further use, see "firing too early"
        //bug: https://github.com/requirejs/domReady/issues/1
        //so removing the || document.readyState === "interactive" test.
        //There is still a window.onload binding that should get fired if
        //DOMContentLoaded is missed.
        if (document.readyState === "complete") {
            pageLoaded();
        }
    }

    /** START OF PUBLIC API **/

    /**
     * Registers a callback for DOM ready. If DOM is already ready, the
     * callback is called immediately.
     * @param {Function} callback
     */
    function domReady(callback) {
        if (isPageLoaded) {
            callback(doc);
        } else {
            readyCalls.push(callback);
        }
        return domReady;
    }

    domReady.version = '2.0.1';

    /**
     * Loader Plugin API method
     */
    domReady.load = function (name, req, onLoad, config) {
        if (config.isBuild) {
            onLoad(null);
        } else {
            domReady(onLoad);
        }
    };

    /** END OF PUBLIC API **/

    return domReady;
});

// Copyright 2006 The Closure Library Authors. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS-IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/**
 * @fileoverview Bootstrap for the Google JS Library (Closure).
 *
 * In uncompiled mode base.js will write out Closure's deps file, unless the
 * global <code>CLOSURE_NO_DEPS</code> is set to true.  This allows projects to
 * include their own deps file(s) from different locations.
 *
 */


/**
 * @define {boolean} Overridden to true by the compiler when --closure_pass
 *     or --mark_as_compiled is specified.
 */
var COMPILED = false;


/**
 * Base namespace for the Closure library.  Checks to see goog is
 * already defined in the current scope before assigning to prevent
 * clobbering if base.js is loaded more than once.
 *
 * @const
 */
var goog = goog || {}; // Identifies this file as the Closure base.


/**
 * @define {boolean}
 */
goog.NODE_JS = false;


// eval() is used so that "global" does not need to be an extern.
goog.global = goog.NODE_JS ? eval('global') : this;


/**
 * @define {boolean} DEBUG is provided as a convenience so that debugging code
 * that should not be included in a production js_binary can be easily stripped
 * by specifying --define goog.DEBUG=false to the JSCompiler. For example, most
 * toString() methods should be declared inside an "if (goog.DEBUG)" conditional
 * because they are generally used for debugging purposes and it is difficult
 * for the JSCompiler to statically determine whether they are used.
 */
goog.DEBUG = true;


/**
 * @define {string} LOCALE defines the locale being used for compilation. It is
 * used to select locale specific data to be compiled in js binary. BUILD rule
 * can specify this value by "--define goog.LOCALE=<locale_name>" as JSCompiler
 * option.
 *
 * Take into account that the locale code format is important. You should use
 * the canonical Unicode format with hyphen as a delimiter. Language must be
 * lowercase, Language Script - Capitalized, Region - UPPERCASE.
 * There are few examples: pt-BR, en, en-US, sr-Latin-BO, zh-Hans-CN.
 *
 * See more info about locale codes here:
 * http://www.unicode.org/reports/tr35/#Unicode_Language_and_Locale_Identifiers
 *
 * For language codes you should use values defined by ISO 693-1. See it here
 * http://www.w3.org/WAI/ER/IG/ert/iso639.htm. There is only one exception from
 * this rule: the Hebrew language. For legacy reasons the old code (iw) should
 * be used instead of the new code (he), see http://wiki/Main/IIISynonyms.
 */
goog.LOCALE = 'en';  // default to en


/**
 * Creates object stubs for a namespace.  The presence of one or more
 * goog.provide() calls indicate that the file defines the given
 * objects/namespaces.  Build tools also scan for provide/require statements
 * to discern dependencies, build dependency files (see deps.js), etc.
 * @see goog.require
 * @param {string} name Namespace provided by this file in the form
 *     "goog.package.part".
 */
goog.provide = function(name) {
  if (!COMPILED) {
    // Ensure that the same namespace isn't provided twice. This is intended
    // to teach new developers that 'goog.provide' is effectively a variable
    // declaration. And when JSCompiler transforms goog.provide into a real
    // variable declaration, the compiled JS should work the same as the raw
    // JS--even when the raw JS uses goog.provide incorrectly.
    if (goog.isProvided_(name)) {
      throw Error('Namespace "' + name + '" already declared.');
    }
    delete goog.implicitNamespaces_[name];

    var namespace = name;
    while ((namespace = namespace.substring(0, namespace.lastIndexOf('.')))) {
      if (goog.getObjectByName(namespace)) {
        break;
      }
      goog.implicitNamespaces_[namespace] = true;
    }
  }

  goog.exportPath_(name);
};


/**
 * Marks that the current file should only be used for testing, and never for
 * live code in production.
 * @param {string=} opt_message Optional message to add to the error that's
 *     raised when used in production code.
 */
goog.setTestOnly = function(opt_message) {
  if (COMPILED && !goog.DEBUG) {
    opt_message = opt_message || '';
    throw Error('Importing test-only code into non-debug environment' +
                opt_message ? ': ' + opt_message : '.');
  }
};


if (!COMPILED) {

  /**
   * Check if the given name has been goog.provided. This will return false for
   * names that are available only as implicit namespaces.
   * @param {string} name name of the object to look for.
   * @return {boolean} Whether the name has been provided.
   * @private
   */
  goog.isProvided_ = function(name) {
    return !goog.implicitNamespaces_[name] && !!goog.getObjectByName(name);
  };

  /**
   * Namespaces implicitly defined by goog.provide. For example,
   * goog.provide('goog.events.Event') implicitly declares
   * that 'goog' and 'goog.events' must be namespaces.
   *
   * @type {Object}
   * @private
   */
  goog.implicitNamespaces_ = {};
}


/**
 * Used in the context of Node JS to determine whether the argument is an
 * existing variable in the global namespace, or if it should be added as a
 * property of goog.global in order to create it.
 *
 * @param {string} goog The namespace to test. This is deliberately named "goog"
 *     rather than "nameSpace" or something more appropriate because the goal is
 *     to avoid introducing any new variables into the scope of the function
 *     that would alter the behavior of eval().
 *
 *     Because it is known that "goog" is an existing global variable, shadowing
 *     it with a local variable here does not introduce a new variable in the
 *     scope of this function. Further, it is known that when the local variable
 *     goog is the value 'goog', this function should always return true, which
 *     it does.
 *
 *     Ideally, this function would not declare any arguments and would simply
 *     reference arguments[0], but that yields a WRONG_ARGUMENT_COUNT warning
 *     at the call sites of goog.isExistingGlobalVariable_() from the Closure
 *     Compiler when type-checking is enabled. 
 * @return {boolean}
 * @private
 */
goog.isExistingGlobalVariable_ = function(goog) {
  // Note that if the variable is declared globally with "var" but is undefined,
  // then this function will return a false negative.
  // Similarly, if goog is 'arguments', 'parseInt', or any other member that is
  // in scope, it will return a false positive.
  return String(eval('typeof ' + goog)) !== 'undefined';
};


/**
 * Builds an object structure for the provided namespace path,
 * ensuring that names that already exist are not overwritten. For
 * example:
 * "a.b.c" -> a = {};a.b={};a.b.c={};
 * Used by goog.provide and goog.exportSymbol.
 * @param {string} name name of the object that this file defines.
 * @param {*=} opt_object the object to expose at the end of the path.
 * @param {Object=} opt_objectToExportTo The object to add the path to; default
 *     is |goog.global|.
 * @private
 */
goog.exportPath_ = function(name, opt_object, opt_objectToExportTo) {
  var parts = name.split('.');
  var cur = opt_objectToExportTo || goog.global;

  // Internet Explorer exhibits strange behavior when throwing errors from
  // methods externed in this manner.  See the testExportSymbolExceptions in
  // base_test.html for an example.
  if (!(parts[0] in cur) && cur.execScript) {
    cur.execScript('var ' + parts[0]);
  }

  if (goog.NODE_JS && cur === goog.global) {
    // If parts[0] is already a variable global scope such as "goog", then do
    // not access it from goog.global because then there will be a global
    // variable "goog" as well as a "global.goog", and they will be different
    // objects, causing all sorts of problems.
    if (goog.isExistingGlobalVariable_(parts[0])) {
      cur = eval(parts[0]);
      parts.shift();
    }
  }

  // Certain browsers cannot parse code in the form for((a in b); c;);
  // This pattern is produced by the JSCompiler when it collapses the
  // statement above into the conditional loop below. To prevent this from
  // happening, use a for-loop and reserve the init logic as below.

  // Parentheses added to eliminate strict JS warning in Firefox.
  for (var part; parts.length && (part = parts.shift());) {
    if (!parts.length && goog.isDef(opt_object)) {
      // last part and we have an object; use it
      cur[part] = opt_object;
    } else if (cur[part]) {
      cur = cur[part];
    } else {
      cur = cur[part] = {};
    }
  }
};


/**
 * Returns an object based on its fully qualified external name.  If you are
 * using a compilation pass that renames property names beware that using this
 * function will not find renamed properties.
 *
 * @param {string} name The fully qualified name.
 * @param {Object=} opt_obj The object within which to look; default is
 *     |goog.global|.
 * @return {?} The value (object or primitive) or, if not found, null.
 */
goog.getObjectByName = function(name, opt_obj) {
  var parts = name.split('.');
  var cur = opt_obj || goog.global;

  if (goog.NODE_JS && cur === goog.global) {
    // If parts[0] is already a variable global scope such as "goog", then do
    // not access it from goog.global because then there will be a global
    // variable "goog" as well as a "global.goog", and they will be different
    // objects, causing all sorts of problems.
    if (goog.isExistingGlobalVariable_(parts[0])) {
      cur = eval(parts[0]);
      parts.shift();
    }
  }

  for (var part; part = parts.shift(); ) {
    if (goog.isDefAndNotNull(cur[part])) {
      cur = cur[part];
    } else {
      return null;
    }
  }
  return cur;
};


/**
 * Globalizes a whole namespace, such as goog or goog.lang.
 *
 * @param {Object} obj The namespace to globalize.
 * @param {Object=} opt_global The object to add the properties to.
 * @deprecated Properties may be explicitly exported to the global scope, but
 *     this should no longer be done in bulk.
 */
goog.globalize = function(obj, opt_global) {
  var global = opt_global || goog.global;
  for (var x in obj) {
    global[x] = obj[x];
  }
};


/**
 * Adds a dependency from a file to the files it requires.
 * @param {string} relPath The path to the js file.
 * @param {Array} provides An array of strings with the names of the objects
 *                         this file provides.
 * @param {Array} requires An array of strings with the names of the objects
 *                         this file requires.
 */
goog.addDependency = function(relPath, provides, requires) {
  if (!COMPILED) {
    var provide, require;
    var path = relPath.replace(/\\/g, '/');
    var deps = goog.dependencies_;
    for (var i = 0; provide = provides[i]; i++) {
      deps.nameToPath[provide] = path;
      if (!(path in deps.pathToNames)) {
        deps.pathToNames[path] = {};
      }
      deps.pathToNames[path][provide] = true;
    }
    for (var j = 0; require = requires[j]; j++) {
      if (!(path in deps.requires)) {
        deps.requires[path] = {};
      }
      deps.requires[path][require] = true;
    }
  }
};




// NOTE(nnaze): The debug DOM loader was included in base.js as an orignal
// way to do "debug-mode" development.  The dependency system can sometimes
// be confusing, as can the debug DOM loader's asyncronous nature.
//
// With the DOM loader, a call to goog.require() is not blocking -- the
// script will not load until some point after the current script.  If a
// namespace is needed at runtime, it needs to be defined in a previous
// script, or loaded via require() with its registered dependencies.
// User-defined namespaces may need their own deps file.  See http://go/js_deps,
// http://go/genjsdeps, or, externally, DepsWriter.
// http://code.google.com/closure/library/docs/depswriter.html
//
// Because of legacy clients, the DOM loader can't be easily removed from
// base.js.  Work is being done to make it disableable or replaceable for
// different environments (DOM-less JavaScript interpreters like Rhino or V8,
// for example). See bootstrap/ for more information.


/**
 * @define {boolean} Whether to enable the debug loader.
 *
 * If enabled, a call to goog.require() will attempt to load the namespace by
 * appending a script tag to the DOM (if the namespace has been registered).
 *
 * If disabled, goog.require() will simply assert that the namespace has been
 * provided (and depend on the fact that some outside tool correctly ordered
 * the script).
 */
goog.ENABLE_DEBUG_LOADER = true;


/**
 * Implements a system for the dynamic resolution of dependencies
 * that works in parallel with the BUILD system. Note that all calls
 * to goog.require will be stripped by the JSCompiler when the
 * --closure_pass option is used.
 * @see goog.provide
 * @param {string} name Namespace to include (as was given in goog.provide())
 *     in the form "goog.package.part".
 */
goog.require = function(name) {

  // if the object already exists we do not need do do anything
  // TODO(arv): If we start to support require based on file name this has
  //            to change
  // TODO(arv): If we allow goog.foo.* this has to change
  // TODO(arv): If we implement dynamic load after page load we should probably
  //            not remove this code for the compiled output
  if (!COMPILED) {
    if (goog.isProvided_(name)) {
      return;
    }

    if (goog.ENABLE_DEBUG_LOADER) {
      var path = goog.getPathFromDeps_(name);
      if (path) {
        goog.included_[path] = true;
        goog.writeScripts_();
        return;
      }
    }

    var errorMessage = 'goog.require could not find: ' + name;
    if (goog.global.console) {
      goog.global.console['error'](errorMessage);
    }


      throw Error(errorMessage);

  }
};


/**
 * Path for included scripts
 * @type {string}
 */
goog.basePath = '';


/**
 * A hook for overriding the base path.
 * @type {string|undefined}
 */
goog.global.CLOSURE_BASE_PATH;


/**
 * Whether to write out Closure's deps file. By default,
 * the deps are written.
 * @type {boolean|undefined}
 */
goog.global.CLOSURE_NO_DEPS;


/**
 * A function to import a single script. This is meant to be overridden when
 * Closure is being run in non-HTML contexts, such as web workers. It's defined
 * in the global scope so that it can be set before base.js is loaded, which
 * allows deps.js to be imported properly.
 *
 * The function is passed the script source, which is a relative URI. It should
 * return true if the script was imported, false otherwise.
 */
goog.global.CLOSURE_IMPORT_SCRIPT;


/**
 * Null function used for default values of callbacks, etc.
 * @return {void} Nothing.
 */
goog.nullFunction = function() {};


/**
 * The identity function. Returns its first argument.
 *
 * @param {*=} opt_returnValue The single value that will be returned.
 * @param {...*} var_args Optional trailing arguments. These are ignored.
 * @return {?} The first argument. We can't know the type -- just pass it along
 *      without type.
 * @deprecated Use goog.functions.identity instead.
 */
goog.identityFunction = function(opt_returnValue, var_args) {
  return opt_returnValue;
};


/**
 * When defining a class Foo with an abstract method bar(), you can do:
 *
 * Foo.prototype.bar = goog.abstractMethod
 *
 * Now if a subclass of Foo fails to override bar(), an error
 * will be thrown when bar() is invoked.
 *
 * Note: This does not take the name of the function to override as
 * an argument because that would make it more difficult to obfuscate
 * our JavaScript code.
 *
 * @type {!Function}
 * @throws {Error} when invoked to indicate the method should be
 *   overridden.
 */
goog.abstractMethod = function() {
  throw Error('unimplemented abstract method');
};


/**
 * Adds a {@code getInstance} static method that always return the same instance
 * object.
 * @param {!Function} ctor The constructor for the class to add the static
 *     method to.
 */
goog.addSingletonGetter = function(ctor) {
  ctor.getInstance = function() {
    if (ctor.instance_) {
      return ctor.instance_;
    }
    if (goog.DEBUG) {
      // NOTE: JSCompiler can't optimize away Array#push.
      goog.instantiatedSingletons_[goog.instantiatedSingletons_.length] = ctor;
    }
    return ctor.instance_ = new ctor;
  };
};


/**
 * All singleton classes that have been instantiated, for testing. Don't read
 * it directly, use the {@code goog.testing.singleton} module. The compiler
 * removes this variable if unused.
 * @type {!Array.<!Function>}
 * @private
 */
goog.instantiatedSingletons_ = [];


if (!COMPILED && goog.ENABLE_DEBUG_LOADER) {
  /**
   * Object used to keep track of urls that have already been added. This
   * record allows the prevention of circular dependencies.
   * @type {Object}
   * @private
   */
  goog.included_ = {};


  /**
   * This object is used to keep track of dependencies and other data that is
   * used for loading scripts
   * @private
   * @type {Object}
   */
  goog.dependencies_ = {
    pathToNames: {}, // 1 to many
    nameToPath: {}, // 1 to 1
    requires: {}, // 1 to many
    // used when resolving dependencies to prevent us from
    // visiting the file twice
    visited: {},
    written: {} // used to keep track of script files we have written
  };


  /**
   * Tries to detect whether is in the context of an HTML document.
   * @return {boolean} True if it looks like HTML document.
   * @private
   */
  goog.inHtmlDocument_ = function() {
    var doc = goog.global.document;
    return typeof doc != 'undefined' &&
           'write' in doc;  // XULDocument misses write.
  };


  /**
   * Tries to detect the base path of the base.js script that bootstraps Closure
   * @private
   */
  goog.findBasePath_ = function() {
    if (goog.global.CLOSURE_BASE_PATH) {
      goog.basePath = goog.global.CLOSURE_BASE_PATH;
      return;
    } else if (!goog.inHtmlDocument_()) {
      return;
    }
    var doc = goog.global.document;
    var scripts = doc.getElementsByTagName('script');
    // Search backwards since the current script is in almost all cases the one
    // that has base.js.
    for (var i = scripts.length - 1; i >= 0; --i) {
      var src = scripts[i].src;
      var qmark = src.lastIndexOf('?');
      var l = qmark == -1 ? src.length : qmark;
      if (src.substr(l - 7, 7) == 'base.js') {
        goog.basePath = src.substr(0, l - 7);
        return;
      }
    }
  };


  /**
   * Imports a script if, and only if, that script hasn't already been imported.
   * (Must be called at execution time)
   * @param {string} src Script source.
   * @private
   */
  goog.importScript_ = function(src) {
    var importScript = goog.global.CLOSURE_IMPORT_SCRIPT ||
        goog.writeScriptTag_;
    if (!goog.dependencies_.written[src] && importScript(src)) {
      goog.dependencies_.written[src] = true;
    }
  };


  /**
   * The default implementation of the import function. Writes a script tag to
   * import the script.
   *
   * @param {string} src The script source.
   * @return {boolean} True if the script was imported, false otherwise.
   * @private
   */
  goog.writeScriptTag_ = function(src) {
    if (goog.inHtmlDocument_()) {
      var doc = goog.global.document;
      doc.write(
          '<script type="text/javascript" src="' + src + '"></' + 'script>');
      return true;
    } else {
      return false;
    }
  };


  /**
   * Resolves dependencies based on the dependencies added using addDependency
   * and calls importScript_ in the correct order.
   * @private
   */
  goog.writeScripts_ = function() {
    // the scripts we need to write this time
    var scripts = [];
    var seenScript = {};
    var deps = goog.dependencies_;

    function visitNode(path) {
      if (path in deps.written) {
        return;
      }

      // we have already visited this one. We can get here if we have cyclic
      // dependencies
      if (path in deps.visited) {
        if (!(path in seenScript)) {
          seenScript[path] = true;
          scripts.push(path);
        }
        return;
      }

      deps.visited[path] = true;

      if (path in deps.requires) {
        for (var requireName in deps.requires[path]) {
          // If the required name is defined, we assume that it was already
          // bootstrapped by other means.
          if (!goog.isProvided_(requireName)) {
            if (requireName in deps.nameToPath) {
              visitNode(deps.nameToPath[requireName]);
            } else {
              throw Error('Undefined nameToPath for ' + requireName);
            }
          }
        }
      }

      if (!(path in seenScript)) {
        seenScript[path] = true;
        scripts.push(path);
      }
    }

    for (var path in goog.included_) {
      if (!deps.written[path]) {
        visitNode(path);
      }
    }

    for (var i = 0; i < scripts.length; i++) {
      if (scripts[i]) {
        goog.importScript_(goog.basePath + scripts[i]);
      } else {
        throw Error('Undefined script input');
      }
    }
  };


  /**
   * Looks at the dependency rules and tries to determine the script file that
   * fulfills a particular rule.
   * @param {string} rule In the form goog.namespace.Class or project.script.
   * @return {?string} Url corresponding to the rule, or null.
   * @private
   */
  goog.getPathFromDeps_ = function(rule) {
    if (rule in goog.dependencies_.nameToPath) {
      return goog.dependencies_.nameToPath[rule];
    } else {
      return null;
    }
  };

  goog.findBasePath_();

  // Allow projects to manage the deps files themselves.
  if (!goog.global.CLOSURE_NO_DEPS) {
    goog.importScript_(goog.basePath + 'deps.js');
  }
}



//==============================================================================
// Language Enhancements
//==============================================================================


/**
 * This is a "fixed" version of the typeof operator.  It differs from the typeof
 * operator in such a way that null returns 'null' and arrays return 'array'.
 * @param {*} value The value to get the type of.
 * @return {string} The name of the type.
 */
goog.typeOf = function(value) {
  var s = typeof value;
  if (s == 'object') {
    if (value) {
      // Check these first, so we can avoid calling Object.prototype.toString if
      // possible.
      //
      // IE improperly marshals tyepof across execution contexts, but a
      // cross-context object will still return false for "instanceof Object".
      if (value instanceof Array) {
        return 'array';
      } else if (value instanceof Object) {
        return s;
      }

      // HACK: In order to use an Object prototype method on the arbitrary
      //   value, the compiler requires the value be cast to type Object,
      //   even though the ECMA spec explicitly allows it.
      var className = Object.prototype.toString.call(
          /** @type {Object} */ (value));
      // In Firefox 3.6, attempting to access iframe window objects' length
      // property throws an NS_ERROR_FAILURE, so we need to special-case it
      // here.
      if (className == '[object Window]') {
        return 'object';
      }

      // We cannot always use constructor == Array or instanceof Array because
      // different frames have different Array objects. In IE6, if the iframe
      // where the array was created is destroyed, the array loses its
      // prototype. Then dereferencing val.splice here throws an exception, so
      // we can't use goog.isFunction. Calling typeof directly returns 'unknown'
      // so that will work. In this case, this function will return false and
      // most array functions will still work because the array is still
      // array-like (supports length and []) even though it has lost its
      // prototype.
      // Mark Miller noticed that Object.prototype.toString
      // allows access to the unforgeable [[Class]] property.
      //  15.2.4.2 Object.prototype.toString ( )
      //  When the toString method is called, the following steps are taken:
      //      1. Get the [[Class]] property of this object.
      //      2. Compute a string value by concatenating the three strings
      //         "[object ", Result(1), and "]".
      //      3. Return Result(2).
      // and this behavior survives the destruction of the execution context.
      if ((className == '[object Array]' ||
           // In IE all non value types are wrapped as objects across window
           // boundaries (not iframe though) so we have to do object detection
           // for this edge case
           typeof value.length == 'number' &&
           typeof value.splice != 'undefined' &&
           typeof value.propertyIsEnumerable != 'undefined' &&
           !value.propertyIsEnumerable('splice')

          )) {
        return 'array';
      }
      // HACK: There is still an array case that fails.
      //     function ArrayImpostor() {}
      //     ArrayImpostor.prototype = [];
      //     var impostor = new ArrayImpostor;
      // this can be fixed by getting rid of the fast path
      // (value instanceof Array) and solely relying on
      // (value && Object.prototype.toString.vall(value) === '[object Array]')
      // but that would require many more function calls and is not warranted
      // unless closure code is receiving objects from untrusted sources.

      // IE in cross-window calls does not correctly marshal the function type
      // (it appears just as an object) so we cannot use just typeof val ==
      // 'function'. However, if the object has a call property, it is a
      // function.
      if ((className == '[object Function]' ||
          typeof value.call != 'undefined' &&
          typeof value.propertyIsEnumerable != 'undefined' &&
          !value.propertyIsEnumerable('call'))) {
        return 'function';
      }


    } else {
      return 'null';
    }

  } else if (s == 'function' && typeof value.call == 'undefined') {
    // In Safari typeof nodeList returns 'function', and on Firefox
    // typeof behaves similarly for HTML{Applet,Embed,Object}Elements
    // and RegExps.  We would like to return object for those and we can
    // detect an invalid function by making sure that the function
    // object has a call method.
    return 'object';
  }
  return s;
};


/**
 * Returns true if the specified value is not |undefined|.
 * WARNING: Do not use this to test if an object has a property. Use the in
 * operator instead.  Additionally, this function assumes that the global
 * undefined variable has not been redefined.
 * @param {*} val Variable to test.
 * @return {boolean} Whether variable is defined.
 */
goog.isDef = function(val) {
  return val !== undefined;
};


/**
 * Returns true if the specified value is |null|
 * @param {*} val Variable to test.
 * @return {boolean} Whether variable is null.
 */
goog.isNull = function(val) {
  return val === null;
};


/**
 * Returns true if the specified value is defined and not null
 * @param {*} val Variable to test.
 * @return {boolean} Whether variable is defined and not null.
 */
goog.isDefAndNotNull = function(val) {
  // Note that undefined == null.
  return val != null;
};


/**
 * Returns true if the specified value is an array
 * @param {*} val Variable to test.
 * @return {boolean} Whether variable is an array.
 */
goog.isArray = function(val) {
  return goog.typeOf(val) == 'array';
};


/**
 * Returns true if the object looks like an array. To qualify as array like
 * the value needs to be either a NodeList or an object with a Number length
 * property.
 * @param {*} val Variable to test.
 * @return {boolean} Whether variable is an array.
 */
goog.isArrayLike = function(val) {
  var type = goog.typeOf(val);
  return type == 'array' || type == 'object' && typeof val.length == 'number';
};


/**
 * Returns true if the object looks like a Date. To qualify as Date-like
 * the value needs to be an object and have a getFullYear() function.
 * @param {*} val Variable to test.
 * @return {boolean} Whether variable is a like a Date.
 */
goog.isDateLike = function(val) {
  return goog.isObject(val) && typeof val.getFullYear == 'function';
};


/**
 * Returns true if the specified value is a string
 * @param {*} val Variable to test.
 * @return {boolean} Whether variable is a string.
 */
goog.isString = function(val) {
  return typeof val == 'string';
};


/**
 * Returns true if the specified value is a boolean
 * @param {*} val Variable to test.
 * @return {boolean} Whether variable is boolean.
 */
goog.isBoolean = function(val) {
  return typeof val == 'boolean';
};


/**
 * Returns true if the specified value is a number
 * @param {*} val Variable to test.
 * @return {boolean} Whether variable is a number.
 */
goog.isNumber = function(val) {
  return typeof val == 'number';
};


/**
 * Returns true if the specified value is a function
 * @param {*} val Variable to test.
 * @return {boolean} Whether variable is a function.
 */
goog.isFunction = function(val) {
  return goog.typeOf(val) == 'function';
};


/**
 * Returns true if the specified value is an object.  This includes arrays
 * and functions.
 * @param {*} val Variable to test.
 * @return {boolean} Whether variable is an object.
 */
goog.isObject = function(val) {
  var type = typeof val;
  return type == 'object' && val != null || type == 'function';
  // return Object(val) === val also works, but is slower, especially if val is
  // not an object.
};


/**
 * Gets a unique ID for an object. This mutates the object so that further
 * calls with the same object as a parameter returns the same value. The unique
 * ID is guaranteed to be unique across the current session amongst objects that
 * are passed into {@code getUid}. There is no guarantee that the ID is unique
 * or consistent across sessions. It is unsafe to generate unique ID for
 * function prototypes.
 *
 * @param {Object} obj The object to get the unique ID for.
 * @return {number} The unique ID for the object.
 */
goog.getUid = function(obj) {
  // TODO(arv): Make the type stricter, do not accept null.

  // In Opera window.hasOwnProperty exists but always returns false so we avoid
  // using it. As a consequence the unique ID generated for BaseClass.prototype
  // and SubClass.prototype will be the same.
  return obj[goog.UID_PROPERTY_] ||
      (obj[goog.UID_PROPERTY_] = ++goog.uidCounter_);
};


/**
 * Removes the unique ID from an object. This is useful if the object was
 * previously mutated using {@code goog.getUid} in which case the mutation is
 * undone.
 * @param {Object} obj The object to remove the unique ID field from.
 */
goog.removeUid = function(obj) {
  // TODO(arv): Make the type stricter, do not accept null.

  // DOM nodes in IE are not instance of Object and throws exception
  // for delete. Instead we try to use removeAttribute
  if ('removeAttribute' in obj) {
    obj.removeAttribute(goog.UID_PROPERTY_);
  }
  /** @preserveTry */
  try {
    delete obj[goog.UID_PROPERTY_];
  } catch (ex) {
  }
};


/**
 * Name for unique ID property. Initialized in a way to help avoid collisions
 * with other closure javascript on the same page.
 * @type {string}
 * @private
 */
goog.UID_PROPERTY_ = 'closure_uid_' +
    Math.floor(Math.random() * 2147483648).toString(36);


/**
 * Counter for UID.
 * @type {number}
 * @private
 */
goog.uidCounter_ = 0;


/**
 * Adds a hash code field to an object. The hash code is unique for the
 * given object.
 * @param {Object} obj The object to get the hash code for.
 * @return {number} The hash code for the object.
 * @deprecated Use goog.getUid instead.
 */
goog.getHashCode = goog.getUid;


/**
 * Removes the hash code field from an object.
 * @param {Object} obj The object to remove the field from.
 * @deprecated Use goog.removeUid instead.
 */
goog.removeHashCode = goog.removeUid;


/**
 * Clones a value. The input may be an Object, Array, or basic type. Objects and
 * arrays will be cloned recursively.
 *
 * WARNINGS:
 * <code>goog.cloneObject</code> does not detect reference loops. Objects that
 * refer to themselves will cause infinite recursion.
 *
 * <code>goog.cloneObject</code> is unaware of unique identifiers, and copies
 * UIDs created by <code>getUid</code> into cloned results.
 *
 * @param {*} obj The value to clone.
 * @return {*} A clone of the input value.
 * @deprecated goog.cloneObject is unsafe. Prefer the goog.object methods.
 */
goog.cloneObject = function(obj) {
  var type = goog.typeOf(obj);
  if (type == 'object' || type == 'array') {
    if (obj.clone) {
      return obj.clone();
    }
    var clone = type == 'array' ? [] : {};
    for (var key in obj) {
      clone[key] = goog.cloneObject(obj[key]);
    }
    return clone;
  }

  return obj;
};


/**
 * A native implementation of goog.bind.
 * @param {Function} fn A function to partially apply.
 * @param {Object|undefined} selfObj Specifies the object which |this| should
 *     point to when the function is run.
 * @param {...*} var_args Additional arguments that are partially
 *     applied to the function.
 * @return {!Function} A partially-applied form of the function bind() was
 *     invoked as a method of.
 * @private
 * @suppress {deprecated} The compiler thinks that Function.prototype.bind
 *     is deprecated because some people have declared a pure-JS version.
 *     Only the pure-JS version is truly deprecated.
 */
goog.bindNative_ = function(fn, selfObj, var_args) {
  return /** @type {!Function} */ (fn.call.apply(fn.bind, arguments));
};


/**
 * A pure-JS implementation of goog.bind.
 * @param {Function} fn A function to partially apply.
 * @param {Object|undefined} selfObj Specifies the object which |this| should
 *     point to when the function is run.
 * @param {...*} var_args Additional arguments that are partially
 *     applied to the function.
 * @return {!Function} A partially-applied form of the function bind() was
 *     invoked as a method of.
 * @private
 */
goog.bindJs_ = function(fn, selfObj, var_args) {
  if (!fn) {
    throw new Error();
  }

  if (arguments.length > 2) {
    var boundArgs = Array.prototype.slice.call(arguments, 2);
    return function() {
      // Prepend the bound arguments to the current arguments.
      var newArgs = Array.prototype.slice.call(arguments);
      Array.prototype.unshift.apply(newArgs, boundArgs);
      return fn.apply(selfObj, newArgs);
    };

  } else {
    return function() {
      return fn.apply(selfObj, arguments);
    };
  }
};


/**
 * Partially applies this function to a particular 'this object' and zero or
 * more arguments. The result is a new function with some arguments of the first
 * function pre-filled and the value of |this| 'pre-specified'.<br><br>
 *
 * Remaining arguments specified at call-time are appended to the pre-
 * specified ones.<br><br>
 *
 * Also see: {@link #partial}.<br><br>
 *
 * Usage:
 * <pre>var barMethBound = bind(myFunction, myObj, 'arg1', 'arg2');
 * barMethBound('arg3', 'arg4');</pre>
 *
 * @param {Function} fn A function to partially apply.
 * @param {Object|undefined} selfObj Specifies the object which |this| should
 *     point to when the function is run.
 * @param {...*} var_args Additional arguments that are partially
 *     applied to the function.
 * @return {!Function} A partially-applied form of the function bind() was
 *     invoked as a method of.
 * @suppress {deprecated} See above.
 */
goog.bind = function(fn, selfObj, var_args) {
  // TODO(nicksantos): narrow the type signature.
  if (Function.prototype.bind &&
      // NOTE(nicksantos): Somebody pulled base.js into the default
      // Chrome extension environment. This means that for Chrome extensions,
      // they get the implementation of Function.prototype.bind that
      // calls goog.bind instead of the native one. Even worse, we don't want
      // to introduce a circular dependency between goog.bind and
      // Function.prototype.bind, so we have to hack this to make sure it
      // works correctly.
      Function.prototype.bind.toString().indexOf('native code') != -1) {
    goog.bind = goog.bindNative_;
  } else {
    goog.bind = goog.bindJs_;
  }
  return goog.bind.apply(null, arguments);
};


/**
 * Like bind(), except that a 'this object' is not required. Useful when the
 * target function is already bound.
 *
 * Usage:
 * var g = partial(f, arg1, arg2);
 * g(arg3, arg4);
 *
 * @param {Function} fn A function to partially apply.
 * @param {...*} var_args Additional arguments that are partially
 *     applied to fn.
 * @return {!Function} A partially-applied form of the function bind() was
 *     invoked as a method of.
 */
goog.partial = function(fn, var_args) {
  var args = Array.prototype.slice.call(arguments, 1);
  return function() {
    // Prepend the bound arguments to the current arguments.
    var newArgs = Array.prototype.slice.call(arguments);
    newArgs.unshift.apply(newArgs, args);
    return fn.apply(this, newArgs);
  };
};


/**
 * Copies all the members of a source object to a target object. This method
 * does not work on all browsers for all objects that contain keys such as
 * toString or hasOwnProperty. Use goog.object.extend for this purpose.
 * @param {Object} target Target.
 * @param {Object} source Source.
 */
goog.mixin = function(target, source) {
  for (var x in source) {
    target[x] = source[x];
  }

  // For IE7 or lower, the for-in-loop does not contain any properties that are
  // not enumerable on the prototype object (for example, isPrototypeOf from
  // Object.prototype) but also it will not include 'replace' on objects that
  // extend String and change 'replace' (not that it is common for anyone to
  // extend anything except Object).
};


/**
 * @return {number} An integer value representing the number of milliseconds
 *     between midnight, January 1, 1970 and the current time.
 */
goog.now = Date.now || (function() {
  // Unary plus operator converts its operand to a number which in the case of
  // a date is done by calling getTime().
  return +new Date();
});


/**
 * Evals javascript in the global scope.  In IE this uses execScript, other
 * browsers use goog.global.eval. If goog.global.eval does not evaluate in the
 * global scope (for example, in Safari), appends a script tag instead.
 * Throws an exception if neither execScript or eval is defined.
 * @param {string} script JavaScript string.
 */
goog.globalEval = function(script) {
  if (goog.global.execScript) {
    goog.global.execScript(script, 'JavaScript');
  } else if (goog.global.eval) {
    // Test to see if eval works
    if (goog.evalWorksForGlobals_ == null) {
      goog.global.eval('var _et_ = 1;');
      if (typeof goog.global['_et_'] != 'undefined') {
        delete goog.global['_et_'];
        goog.evalWorksForGlobals_ = true;
      } else {
        goog.evalWorksForGlobals_ = false;
      }
    }

    if (goog.evalWorksForGlobals_) {
      goog.global.eval(script);
    } else {
      var doc = goog.global.document;
      var scriptElt = doc.createElement('script');
      scriptElt.type = 'text/javascript';
      scriptElt.defer = false;
      // Note(user): can't use .innerHTML since "t('<test>')" will fail and
      // .text doesn't work in Safari 2.  Therefore we append a text node.
      scriptElt.appendChild(doc.createTextNode(script));
      doc.body.appendChild(scriptElt);
      doc.body.removeChild(scriptElt);
    }
  } else {
    throw Error('goog.globalEval not available');
  }
};


/**
 * Indicates whether or not we can call 'eval' directly to eval code in the
 * global scope. Set to a Boolean by the first call to goog.globalEval (which
 * empirically tests whether eval works for globals). @see goog.globalEval
 * @type {?boolean}
 * @private
 */
goog.evalWorksForGlobals_ = null;


/**
 * Optional map of CSS class names to obfuscated names used with
 * goog.getCssName().
 * @type {Object|undefined}
 * @private
 * @see goog.setCssNameMapping
 */
goog.cssNameMapping_;


/**
 * Optional obfuscation style for CSS class names. Should be set to either
 * 'BY_WHOLE' or 'BY_PART' if defined.
 * @type {string|undefined}
 * @private
 * @see goog.setCssNameMapping
 */
goog.cssNameMappingStyle_;


/**
 * Handles strings that are intended to be used as CSS class names.
 *
 * This function works in tandem with @see goog.setCssNameMapping.
 *
 * Without any mapping set, the arguments are simple joined with a
 * hyphen and passed through unaltered.
 *
 * When there is a mapping, there are two possible styles in which
 * these mappings are used. In the BY_PART style, each part (i.e. in
 * between hyphens) of the passed in css name is rewritten according
 * to the map. In the BY_WHOLE style, the full css name is looked up in
 * the map directly. If a rewrite is not specified by the map, the
 * compiler will output a warning.
 *
 * When the mapping is passed to the compiler, it will replace calls
 * to goog.getCssName with the strings from the mapping, e.g.
 *     var x = goog.getCssName('foo');
 *     var y = goog.getCssName(this.baseClass, 'active');
 *  becomes:
 *     var x= 'foo';
 *     var y = this.baseClass + '-active';
 *
 * If one argument is passed it will be processed, if two are passed
 * only the modifier will be processed, as it is assumed the first
 * argument was generated as a result of calling goog.getCssName.
 *
 * @param {string} className The class name.
 * @param {string=} opt_modifier A modifier to be appended to the class name.
 * @return {string} The class name or the concatenation of the class name and
 *     the modifier.
 */
goog.getCssName = function(className, opt_modifier) {
  var getMapping = function(cssName) {
    return goog.cssNameMapping_[cssName] || cssName;
  };

  var renameByParts = function(cssName) {
    // Remap all the parts individually.
    var parts = cssName.split('-');
    var mapped = [];
    for (var i = 0; i < parts.length; i++) {
      mapped.push(getMapping(parts[i]));
    }
    return mapped.join('-');
  };

  var rename;
  if (goog.cssNameMapping_) {
    rename = goog.cssNameMappingStyle_ == 'BY_WHOLE' ?
        getMapping : renameByParts;
  } else {
    rename = function(a) {
      return a;
    };
  }

  if (opt_modifier) {
    return className + '-' + rename(opt_modifier);
  } else {
    return rename(className);
  }
};


/**
 * Sets the map to check when returning a value from goog.getCssName(). Example:
 * <pre>
 * goog.setCssNameMapping({
 *   "goog": "a",
 *   "disabled": "b",
 * });
 *
 * var x = goog.getCssName('goog');
 * // The following evaluates to: "a a-b".
 * goog.getCssName('goog') + ' ' + goog.getCssName(x, 'disabled')
 * </pre>
 * When declared as a map of string literals to string literals, the JSCompiler
 * will replace all calls to goog.getCssName() using the supplied map if the
 * --closure_pass flag is set.
 *
 * @param {!Object} mapping A map of strings to strings where keys are possible
 *     arguments to goog.getCssName() and values are the corresponding values
 *     that should be returned.
 * @param {string=} opt_style The style of css name mapping. There are two valid
 *     options: 'BY_PART', and 'BY_WHOLE'.
 * @see goog.getCssName for a description.
 */
goog.setCssNameMapping = function(mapping, opt_style) {
  goog.cssNameMapping_ = mapping;
  goog.cssNameMappingStyle_ = opt_style;
};


/**
 * To use CSS renaming in compiled mode, one of the input files should have a
 * call to goog.setCssNameMapping() with an object literal that the JSCompiler
 * can extract and use to replace all calls to goog.getCssName(). In uncompiled
 * mode, JavaScript code should be loaded before this base.js file that declares
 * a global variable, CLOSURE_CSS_NAME_MAPPING, which is used below. This is
 * to ensure that the mapping is loaded before any calls to goog.getCssName()
 * are made in uncompiled mode.
 *
 * A hook for overriding the CSS name mapping.
 * @type {Object|undefined}
 */
goog.global.CLOSURE_CSS_NAME_MAPPING;


if (!COMPILED && goog.global.CLOSURE_CSS_NAME_MAPPING) {
  // This does not call goog.setCssNameMapping() because the JSCompiler
  // requires that goog.setCssNameMapping() be called with an object literal.
  goog.cssNameMapping_ = goog.global.CLOSURE_CSS_NAME_MAPPING;
}


/**
 * Abstract implementation of goog.getMsg for use with localized messages.
 * @param {string} str Translatable string, places holders in the form {$foo}.
 * @param {Object=} opt_values Map of place holder name to value.
 * @return {string} message with placeholders filled.
 */
goog.getMsg = function(str, opt_values) {
  var values = opt_values || {};
  for (var key in values) {
    var value = ('' + values[key]).replace(/\$/g, '$$$$');
    str = str.replace(new RegExp('\\{\\$' + key + '\\}', 'gi'), value);
  }
  return str;
};


/**
 * Exposes an unobfuscated global namespace path for the given object.
 * Note that fields of the exported object *will* be obfuscated,
 * unless they are exported in turn via this function or
 * goog.exportProperty
 *
 * <p>Also handy for making public items that are defined in anonymous
 * closures.
 *
 * ex. goog.exportSymbol('public.path.Foo', Foo);
 *
 * ex. goog.exportSymbol('public.path.Foo.staticFunction',
 *                       Foo.staticFunction);
 *     public.path.Foo.staticFunction();
 *
 * ex. goog.exportSymbol('public.path.Foo.prototype.myMethod',
 *                       Foo.prototype.myMethod);
 *     new public.path.Foo().myMethod();
 *
 * @param {string} publicPath Unobfuscated name to export.
 * @param {*} object Object the name should point to.
 * @param {Object=} opt_objectToExportTo The object to add the path to; default
 *     is |goog.global|.
 */
goog.exportSymbol = function(publicPath, object, opt_objectToExportTo) {
  goog.exportPath_(publicPath, object, opt_objectToExportTo);
};


/**
 * Exports a property unobfuscated into the object's namespace.
 * ex. goog.exportProperty(Foo, 'staticFunction', Foo.staticFunction);
 * ex. goog.exportProperty(Foo.prototype, 'myMethod', Foo.prototype.myMethod);
 * @param {Object} object Object whose static property is being exported.
 * @param {string} publicName Unobfuscated name to export.
 * @param {*} symbol Object the name should point to.
 */
goog.exportProperty = function(object, publicName, symbol) {
  object[publicName] = symbol;
};


/**
 * Inherit the prototype methods from one constructor into another.
 *
 * Usage:
 * <pre>
 * function ParentClass(a, b) { }
 * ParentClass.prototype.foo = function(a) { }
 *
 * function ChildClass(a, b, c) {
 *   goog.base(this, a, b);
 * }
 * goog.inherits(ChildClass, ParentClass);
 *
 * var child = new ChildClass('a', 'b', 'see');
 * child.foo(); // works
 * </pre>
 *
 * In addition, a superclass' implementation of a method can be invoked
 * as follows:
 *
 * <pre>
 * ChildClass.prototype.foo = function(a) {
 *   ChildClass.superClass_.foo.call(this, a);
 *   // other code
 * };
 * </pre>
 *
 * @param {Function} childCtor Child class.
 * @param {Function} parentCtor Parent class.
 */
goog.inherits = function(childCtor, parentCtor) {
  /** @constructor */
  function tempCtor() {};
  tempCtor.prototype = parentCtor.prototype;
  childCtor.superClass_ = parentCtor.prototype;
  childCtor.prototype = new tempCtor();
  /** @override */
  childCtor.prototype.constructor = childCtor;
};


/**
 * Call up to the superclass.
 *
 * If this is called from a constructor, then this calls the superclass
 * contructor with arguments 1-N.
 *
 * If this is called from a prototype method, then you must pass
 * the name of the method as the second argument to this function. If
 * you do not, you will get a runtime error. This calls the superclass'
 * method with arguments 2-N.
 *
 * This function only works if you use goog.inherits to express
 * inheritance relationships between your classes.
 *
 * This function is a compiler primitive. At compile-time, the
 * compiler will do macro expansion to remove a lot of
 * the extra overhead that this function introduces. The compiler
 * will also enforce a lot of the assumptions that this function
 * makes, and treat it as a compiler error if you break them.
 *
 * @param {!Object} me Should always be "this".
 * @param {*=} opt_methodName The method name if calling a super method.
 * @param {...*} var_args The rest of the arguments.
 * @return {*} The return value of the superclass method.
 */
goog.base = function(me, opt_methodName, var_args) {
  var caller = arguments.callee.caller;
  if (caller.superClass_) {
    // This is a constructor. Call the superclass constructor.
    return caller.superClass_.constructor.apply(
        me, Array.prototype.slice.call(arguments, 1));
  }

  var args = Array.prototype.slice.call(arguments, 2);
  var foundCaller = false;
  for (var ctor = me.constructor;
       ctor; ctor = ctor.superClass_ && ctor.superClass_.constructor) {
    if (ctor.prototype[opt_methodName] === caller) {
      foundCaller = true;
    } else if (foundCaller) {
      return ctor.prototype[opt_methodName].apply(me, args);
    }
  }

  // If we did not find the caller in the prototype chain,
  // then one of two things happened:
  // 1) The caller is an instance method.
  // 2) This method was not called by the right caller.
  if (me[opt_methodName] === caller) {
    return me.constructor.prototype[opt_methodName].apply(me, args);
  } else {
    throw Error(
        'goog.base called from a method of one name ' +
        'to a method of a different name');
  }
};


/**
 * Allow for aliasing within scope functions.  This function exists for
 * uncompiled code - in compiled code the calls will be inlined and the
 * aliases applied.  In uncompiled code the function is simply run since the
 * aliases as written are valid JavaScript.
 * @param {function()} fn Function to call.  This function can contain aliases
 *     to namespaces (e.g. "var dom = goog.dom") or classes
 *    (e.g. "var Timer = goog.Timer").
 */
goog.scope = function(fn) {
  fn.call(goog.global);
};



define("libraries/ol3/base", function(){});

(function(){function k(a){return function(){return this[a]}}function ba(a){return function(){return a}}var m,ca=ca||{},p=this;function ea(){}function ga(a){a.ia=function(){return a.Vd?a.Vd:a.Vd=new a}}
function ha(a){var b=typeof a;if("object"==b)if(a){if(a instanceof Array)return"array";if(a instanceof Object)return b;var c=Object.prototype.toString.call(a);if("[object Window]"==c)return"object";if("[object Array]"==c||"number"==typeof a.length&&"undefined"!=typeof a.splice&&"undefined"!=typeof a.propertyIsEnumerable&&!a.propertyIsEnumerable("splice"))return"array";if("[object Function]"==c||"undefined"!=typeof a.call&&"undefined"!=typeof a.propertyIsEnumerable&&!a.propertyIsEnumerable("call"))return"function"}else return"null";
else if("function"==b&&"undefined"==typeof a.call)return"object";return b}function t(a){return void 0!==a}function ia(a){return"array"==ha(a)}function ja(a){var b=ha(a);return"array"==b||"object"==b&&"number"==typeof a.length}function u(a){return"string"==typeof a}function la(a){return"number"==typeof a}function ma(a){return"function"==ha(a)}function na(a){var b=typeof a;return"object"==b&&null!=a||"function"==b}function x(a){return a[oa]||(a[oa]=++pa)}
var oa="closure_uid_"+(1E9*Math.random()>>>0),pa=0;function qa(a,b,c){return a.call.apply(a.bind,arguments)}function ra(a,b,c){if(!a)throw Error();if(2<arguments.length){var d=Array.prototype.slice.call(arguments,2);return function(){var c=Array.prototype.slice.call(arguments);Array.prototype.unshift.apply(c,d);return a.apply(b,c)}}return function(){return a.apply(b,arguments)}}
function y(a,b,c){y=Function.prototype.bind&&-1!=Function.prototype.bind.toString().indexOf("native code")?qa:ra;return y.apply(null,arguments)}function sa(a,b){var c=Array.prototype.slice.call(arguments,1);return function(){var b=Array.prototype.slice.call(arguments);b.unshift.apply(b,c);return a.apply(this,b)}}var ta=Date.now||function(){return+new Date};
function C(a,b){var c=a.split("."),d=p;c[0]in d||!d.execScript||d.execScript("var "+c[0]);for(var e;c.length&&(e=c.shift());)c.length||void 0===b?d=d[e]?d[e]:d[e]={}:d[e]=b}function F(a,b){function c(){}c.prototype=b.prototype;a.F=b.prototype;a.prototype=new c;a.prototype.constructor=a};function ua(a){Error.captureStackTrace?Error.captureStackTrace(this,ua):this.stack=Error().stack||"";a&&(this.message=String(a))}F(ua,Error);ua.prototype.name="CustomError";function va(a){return a.replace(/^[\s\xa0]+|[\s\xa0]+$/g,"")}function wa(a){if(!xa.test(a))return a;-1!=a.indexOf("\x26")&&(a=a.replace(ya,"\x26amp;"));-1!=a.indexOf("\x3c")&&(a=a.replace(za,"\x26lt;"));-1!=a.indexOf("\x3e")&&(a=a.replace(Aa,"\x26gt;"));-1!=a.indexOf('"')&&(a=a.replace(Ba,"\x26quot;"));return a}var ya=/&/g,za=/</g,Aa=/>/g,Ba=/\"/g,xa=/[&<>\"]/;
function Ca(a){a=t(void 0)?a.toFixed(void 0):String(a);var b=a.indexOf(".");-1==b&&(b=a.length);b=Math.max(0,2-b);return Array(b+1).join("0")+a};var Da=Array.prototype,Ea=Da.indexOf?function(a,b,c){return Da.indexOf.call(a,b,c)}:function(a,b,c){c=null==c?0:0>c?Math.max(0,a.length+c):c;if(u(a))return u(b)&&1==b.length?a.indexOf(b,c):-1;for(;c<a.length;c++)if(c in a&&a[c]===b)return c;return-1},Fa=Da.forEach?function(a,b,c){Da.forEach.call(a,b,c)}:function(a,b,c){for(var d=a.length,e=u(a)?a.split(""):a,f=0;f<d;f++)f in e&&b.call(c,e[f],f,a)},Ga=Da.filter?function(a,b,c){return Da.filter.call(a,b,c)}:function(a,b,c){for(var d=a.length,e=[],f=
0,g=u(a)?a.split(""):a,h=0;h<d;h++)if(h in g){var l=g[h];b.call(c,l,h,a)&&(e[f++]=l)}return e},Ia=Da.map?function(a,b,c){return Da.map.call(a,b,c)}:function(a,b,c){for(var d=a.length,e=Array(d),f=u(a)?a.split(""):a,g=0;g<d;g++)g in f&&(e[g]=b.call(c,f[g],g,a));return e},La=Da.some?function(a,b,c){return Da.some.call(a,b,c)}:function(a,b,c){for(var d=a.length,e=u(a)?a.split(""):a,f=0;f<d;f++)if(f in e&&b.call(c,e[f],f,a))return!0;return!1};
function Ma(a,b){var c=Na(a,b,void 0);return 0>c?null:u(a)?a.charAt(c):a[c]}function Na(a,b,c){for(var d=a.length,e=u(a)?a.split(""):a,f=0;f<d;f++)if(f in e&&b.call(c,e[f],f,a))return f;return-1}function Oa(a,b){var c=Ea(a,b),d;(d=0<=c)&&Da.splice.call(a,c,1);return d}function Qa(a){return Da.concat.apply(Da,arguments)}function Ra(a){var b=a.length;if(0<b){for(var c=Array(b),d=0;d<b;d++)c[d]=a[d];return c}return[]}function Sa(a,b,c,d){Da.splice.apply(a,Ta(arguments,1))}
function Ta(a,b,c){return 2>=arguments.length?Da.slice.call(a,b):Da.slice.call(a,b,c)}function Ua(a,b){Da.sort.call(a,b||Va)}function Va(a,b){return a>b?1:a<b?-1:0}function Wa(a,b){for(var c={},d=0;d<a.length;d++){var e=a[d],f=b.call(void 0,e,d,a);t(f)&&(c[f]||(c[f]=[])).push(e)}return c};function Xa(a,b,c){this.z=a;this.x=b;this.y=c}function Ya(a){a=a.split("/");a=Ia(a,function(a){return parseInt(a,10)});return new Xa(a[0],a[1],a[2])}function Za(a){var b=Array(a.z),c=1<<a.z-1,d,e;for(d=0;d<a.z;++d)e=48,a.x&c&&(e+=1),a.y&c&&(e+=2),b[d]=String.fromCharCode(e),c>>=1;return b.join("")}Xa.prototype.toString=function(){return[this.z,this.x,this.y].join("/")};function $a(a,b,c,d){this.a=a;this.d=b;this.c=c;this.b=d}function ab(a,b,c,d,e){return t(e)?(e.a=a,e.d=b,e.c=c,e.b=d,e):new $a(a,b,c,d)}$a.prototype.contains=function(a){return this.a<=a.x&&a.x<=this.d&&this.c<=a.y&&a.y<=this.b};function bb(a){this.b=a.html;this.a=t(a.tileRanges)?a.tileRanges:null};function cb(){0!=db&&(this.Xg=Error().stack,eb[x(this)]=this)}var db=0,eb={};cb.prototype.ac=!1;cb.prototype.oc=function(){if(!this.ac&&(this.ac=!0,this.v(),0!=db)){var a=x(this);delete eb[a]}};function fb(a,b){var c=sa(gb,b);a.V||(a.V=[]);a.V.push(y(c,void 0))}cb.prototype.v=function(){if(this.V)for(;this.V.length;)this.V.shift()()};function gb(a){a&&"function"==typeof a.oc&&a.oc()};function hb(a,b){this.type=a;this.c=this.target=b}m=hb.prototype;m.oc=function(){};m.jb=!1;m.Ue=!1;m.ie=!0;m.rb=function(){this.jb=!0};m.U=function(){this.Ue=!0;this.ie=!1};function ib(a){a.rb()}function jb(a){a.U()};var kb,lb,mb,nb,ob,pb,qb;function rb(){return p.navigator?p.navigator.userAgent:null}function sb(){return p.navigator}nb=mb=lb=kb=!1;var tb;if(tb=rb()){var ub=sb();kb=0==tb.lastIndexOf("Opera",0);lb=!kb&&(-1!=tb.indexOf("MSIE")||-1!=tb.indexOf("Trident"));mb=!kb&&-1!=tb.indexOf("WebKit");nb=!kb&&!mb&&!lb&&"Gecko"==ub.product}var vb=kb,G=lb,wb=nb,xb=mb,yb,zb=sb();yb=zb&&zb.platform||"";ob=-1!=yb.indexOf("Mac");pb=-1!=yb.indexOf("Win");qb=-1!=yb.indexOf("Linux");
var Bb=!!sb()&&-1!=(sb().appVersion||"").indexOf("X11");function Cb(){var a=p.document;return a?a.documentMode:void 0}var Db;a:{var Fb="",Gb;if(vb&&p.opera)var Hb=p.opera.version,Fb="function"==typeof Hb?Hb():Hb;else if(wb?Gb=/rv\:([^\);]+)(\)|;)/:G?Gb=/\b(?:MSIE|rv)\s+([^\);]+)(\)|;)/:xb&&(Gb=/WebKit\/(\S+)/),Gb)var Ib=Gb.exec(rb()),Fb=Ib?Ib[1]:"";if(G){var Jb=Cb();if(Jb>parseFloat(Fb)){Db=String(Jb);break a}}Db=Fb}var Kb={};
function Lb(a){var b;if(!(b=Kb[a])){b=0;for(var c=va(String(Db)).split("."),d=va(String(a)).split("."),e=Math.max(c.length,d.length),f=0;0==b&&f<e;f++){var g=c[f]||"",h=d[f]||"",l=RegExp("(\\d*)(\\D*)","g"),n=RegExp("(\\d*)(\\D*)","g");do{var r=l.exec(g)||["","",""],q=n.exec(h)||["","",""];if(0==r[0].length&&0==q[0].length)break;b=((0==r[1].length?0:parseInt(r[1],10))<(0==q[1].length?0:parseInt(q[1],10))?-1:(0==r[1].length?0:parseInt(r[1],10))>(0==q[1].length?0:parseInt(q[1],10))?1:0)||((0==r[2].length)<
(0==q[2].length)?-1:(0==r[2].length)>(0==q[2].length)?1:0)||(r[2]<q[2]?-1:r[2]>q[2]?1:0)}while(0==b)}b=Kb[a]=0<=b}return b}var Mb=p.document,Nb=Mb&&G?Cb()||("CSS1Compat"==Mb.compatMode?parseInt(Db,10):5):void 0;var Ob=!G||G&&9<=Nb,Pb=!G||G&&9<=Nb,Qb=G&&!Lb("9");!xb||Lb("528");wb&&Lb("1.9b")||G&&Lb("8")||vb&&Lb("9.5")||xb&&Lb("528");wb&&!Lb("8")||G&&Lb("9");function Rb(a){Rb[" "](a);return a}Rb[" "]=ea;function Sb(a,b){a&&Tb(this,a,b)}F(Sb,hb);var Ub=[1,4,2];m=Sb.prototype;m.target=null;m.Te=null;m.Ld=0;m.Md=0;m.clientX=0;m.clientY=0;m.hd=0;m.jd=0;m.Se=0;m.Wa=0;m.fd=0;m.Rb=!1;m.va=!1;m.Xa=!1;m.gd=!1;m.Gb=!1;m.ea=null;
function Tb(a,b,c){var d=a.type=b.type;hb.call(a,d);a.target=b.target||b.srcElement;a.c=c;if(c=b.relatedTarget){if(wb){var e;a:{try{Rb(c.nodeName);e=!0;break a}catch(f){}e=!1}e||(c=null)}}else"mouseover"==d?c=b.fromElement:"mouseout"==d&&(c=b.toElement);a.Te=c;a.Ld=xb||void 0!==b.offsetX?b.offsetX:b.layerX;a.Md=xb||void 0!==b.offsetY?b.offsetY:b.layerY;a.clientX=void 0!==b.clientX?b.clientX:b.pageX;a.clientY=void 0!==b.clientY?b.clientY:b.pageY;a.hd=b.screenX||0;a.jd=b.screenY||0;a.Se=b.button;a.Wa=
b.keyCode||0;a.fd=b.charCode||("keypress"==d?b.keyCode:0);a.Rb=b.ctrlKey;a.va=b.altKey;a.Xa=b.shiftKey;a.gd=b.metaKey;a.Gb=ob?b.metaKey:b.ctrlKey;a.a=b.state;a.ea=b;b.defaultPrevented&&a.U();delete a.jb}function Vb(a){return(Ob?0==a.ea.button:"click"==a.type?!0:!!(a.ea.button&Ub[0]))&&!(xb&&ob&&a.Rb)}m.rb=function(){Sb.F.rb.call(this);this.ea.stopPropagation?this.ea.stopPropagation():this.ea.cancelBubble=!0};
m.U=function(){Sb.F.U.call(this);var a=this.ea;if(a.preventDefault)a.preventDefault();else if(a.returnValue=!1,Qb)try{if(a.ctrlKey||112<=a.keyCode&&123>=a.keyCode)a.keyCode=-1}catch(b){}};m.Ge=k("ea");var Wb="closure_listenable_"+(1E6*Math.random()|0);function bc(a){return!(!a||!a[Wb])}var cc=0;function dc(a,b,c,d,e,f){this.Oa=a;this.a=b;this.src=c;this.type=d;this.capture=!!e;this.tb=f;this.key=++cc;this.$a=this.Bb=!1}function ec(a){a.$a=!0;a.Oa=null;a.a=null;a.src=null;a.tb=null};function fc(a,b){for(var c in a)b.call(void 0,a[c],c,a)}function gc(a,b){var c={},d;for(d in a)b.call(void 0,a[d],d,a)&&(c[d]=a[d]);return c}function hc(a){var b=0,c;for(c in a)b++;return b}function ic(a){for(var b in a)return b}function jc(a){var b=[],c=0,d;for(d in a)b[c++]=a[d];return b}function kc(a){var b=[],c=0,d;for(d in a)b[c++]=d;return b}function lc(a){var b=mc,c;for(c in b)if(a.call(void 0,b[c],c,b))return c}function nc(a){for(var b in a)return!1;return!0}
function rc(a){var b={},c;for(c in a)b[c]=a[c];return b}var sc="constructor hasOwnProperty isPrototypeOf propertyIsEnumerable toLocaleString toString valueOf".split(" ");function J(a,b){for(var c,d,e=1;e<arguments.length;e++){d=arguments[e];for(c in d)a[c]=d[c];for(var f=0;f<sc.length;f++)c=sc[f],Object.prototype.hasOwnProperty.call(d,c)&&(a[c]=d[c])}};var tc={},uc={},vc={},wc={};function L(a,b,c,d,e){if(ia(b)){for(var f=0;f<b.length;f++)L(a,b[f],c,d,e);return null}c=xc(c);return bc(a)?a.Ya(b,c,d,e):yc(a,b,c,!1,d,e)}
function yc(a,b,c,d,e,f){if(!b)throw Error("Invalid event type");e=!!e;var g=uc;b in g||(g[b]={u:0});g=g[b];e in g||(g[e]={u:0},g.u++);var g=g[e],h=x(a),l;if(g[h]){l=g[h];for(var n=0;n<l.length;n++)if(g=l[n],g.Oa==c&&g.tb==f){if(g.$a)break;d||(l[n].Bb=!1);return l[n]}}else l=g[h]=[],g.u++;n=zc();g=new dc(c,n,a,b,e,f);g.Bb=d;n.src=a;n.Oa=g;l.push(g);vc[h]||(vc[h]=[]);vc[h].push(g);a.addEventListener?a.addEventListener(b,n,e):a.attachEvent(b in wc?wc[b]:wc[b]="on"+b,n);return tc[g.key]=g}
function zc(){var a=Ac,b=Pb?function(c){return a.call(b.src,b.Oa,c)}:function(c){c=a.call(b.src,b.Oa,c);if(!c)return c};return b}function Bc(a,b,c,d,e){if(ia(b)){for(var f=0;f<b.length;f++)Bc(a,b[f],c,d,e);return null}c=xc(c);return bc(a)?a.Ja.add(b,c,!0,d,e):yc(a,b,c,!0,d,e)}function Cc(a,b,c,d,e){if(ia(b))for(var f=0;f<b.length;f++)Cc(a,b[f],c,d,e);else if(c=xc(c),bc(a))a.vd(b,c,d,e);else if(d=!!d,a=Dc(a,b,d))for(f=0;f<a.length;f++)if(a[f].Oa==c&&a[f].capture==d&&a[f].tb==e){Ec(a[f]);break}}
function Ec(a){if(la(a)||!a||a.$a)return!1;var b=a.src;if(bc(b))return Fc(b.Ja,a);var c=a.type,d=a.a,e=a.capture;b.removeEventListener?b.removeEventListener(c,d,e):b.detachEvent&&b.detachEvent(c in wc?wc[c]:wc[c]="on"+c,d);b=x(b);vc[b]&&(d=vc[b],Oa(d,a),0==d.length&&delete vc[b]);ec(a);if(d=uc[c][e][b])Oa(d,a),0==d.length&&(delete uc[c][e][b],uc[c][e].u--),0==uc[c][e].u&&(delete uc[c][e],uc[c].u--),0==uc[c].u&&delete uc[c];delete tc[a.key];return!0}
function Dc(a,b,c){var d=uc;return b in d&&(d=d[b],c in d&&(d=d[c],a=x(a),d[a]))?d[a]:null}function Gc(a,b,c){var d=1;b=x(b);if(a[b])for(a=Ra(a[b]),b=0;b<a.length;b++){var e=a[b];e&&!e.$a&&(d&=!1!==Ic(e,c))}return Boolean(d)}function Ic(a,b){var c=a.Oa,d=a.tb||a.src;a.Bb&&Ec(a);return c.call(d,b)}
function Ac(a,b){if(a.$a)return!0;var c=a.type,d=uc;if(!(c in d))return!0;var d=d[c],e,f;if(!Pb){if(!(c=b))a:{for(var c=["window","event"],g=p;e=c.shift();)if(null!=g[e])g=g[e];else{c=null;break a}c=g}e=c;c=!0 in d;g=!1 in d;if(c){if(0>e.keyCode||void 0!=e.returnValue)return!0;a:{var h=!1;if(0==e.keyCode)try{e.keyCode=-1;break a}catch(l){h=!0}if(h||void 0==e.returnValue)e.returnValue=!0}}h=new Sb;Tb(h,e,this);e=!0;try{if(c){for(var n=[],r=h.c;r;r=r.parentNode)n.push(r);f=d[!0];for(var q=n.length-
1;!h.jb&&0<=q;q--)h.c=n[q],e&=Gc(f,n[q],h);if(g)for(f=d[!1],q=0;!h.jb&&q<n.length;q++)h.c=n[q],e&=Gc(f,n[q],h)}else e=Ic(a,h)}finally{n&&(n.length=0)}return e}d=new Sb(b,this);return e=Ic(a,d)}var Jc="__closure_events_fn_"+(1E9*Math.random()>>>0);function xc(a){return ma(a)?a:a[Jc]||(a[Jc]=function(b){return a.handleEvent(b)})};function Kc(a){this.src=a;this.a={};this.b=0}Kc.prototype.add=function(a,b,c,d,e){var f=this.a[a];f||(f=this.a[a]=[],this.b++);var g=Lc(f,b,d,e);-1<g?(a=f[g],c||(a.Bb=!1)):(a=new dc(b,null,this.src,a,!!d,e),a.Bb=c,f.push(a));return a};Kc.prototype.remove=function(a,b,c,d){if(!(a in this.a))return!1;var e=this.a[a];b=Lc(e,b,c,d);return-1<b?(ec(e[b]),Da.splice.call(e,b,1),0==e.length&&(delete this.a[a],this.b--),!0):!1};
function Fc(a,b){var c=b.type;if(!(c in a.a))return!1;var d=Oa(a.a[c],b);d&&(ec(b),0==a.a[c].length&&(delete a.a[c],a.b--));return d}function Lc(a,b,c,d){for(var e=0;e<a.length;++e){var f=a[e];if(!f.$a&&f.Oa==b&&f.capture==!!c&&f.tb==d)return e}return-1};function Mc(){cb.call(this);this.Ja=new Kc(this);this.Rc=this}F(Mc,cb);Mc.prototype[Wb]=!0;m=Mc.prototype;m.pd=null;m.removeEventListener=function(a,b,c,d){Cc(this,a,b,c,d)};
function M(a,b){var c,d=a.pd;if(d)for(c=[];d;d=d.pd)c.push(d);var d=a.Rc,e=b,f=e.type||e;if(u(e))e=new hb(e,d);else if(e instanceof hb)e.target=e.target||d;else{var g=e,e=new hb(f,d);J(e,g)}var g=!0,h;if(c)for(var l=c.length-1;!e.jb&&0<=l;l--)h=e.c=c[l],g=Nc(h,f,!0,e)&&g;e.jb||(h=e.c=d,g=Nc(h,f,!0,e)&&g,e.jb||(g=Nc(h,f,!1,e)&&g));if(c)for(l=0;!e.jb&&l<c.length;l++)h=e.c=c[l],g=Nc(h,f,!1,e)&&g;return g}
m.v=function(){Mc.F.v.call(this);if(this.Ja){var a=this.Ja,b=0,c;for(c in a.a){for(var d=a.a[c],e=0;e<d.length;e++)++b,d[e].$a=!0;delete a.a[c];a.b--}}this.pd=null};m.Ya=function(a,b,c,d){return this.Ja.add(a,b,!1,c,d)};m.vd=function(a,b,c,d){return this.Ja.remove(a,b,c,d)};function Nc(a,b,c,d){b=a.Ja.a[b];if(!b)return!0;b=Ra(b);for(var e=!0,f=0;f<b.length;++f){var g=b[f];if(g&&!g.$a&&g.capture==c){var h=g.Oa,l=g.tb||g.src;g.Bb&&Fc(a.Ja,g);e=!1!==h.call(l,d)&&e}}return e&&!1!=d.ie};function N(a){Mc.call(this);this.r={};t(a)&&this.$b(a)}F(N,Mc);var Oc={},Pc={},Qc={};function Rc(a){return a.substr(0,1).toUpperCase()+a.substr(1)}function Sc(a){return a.ol_accessors_||(a.ol_accessors_={})}function Tc(a){return Oc.hasOwnProperty(a)?Oc[a]:Oc[a]="change:"+a.toLowerCase()}function Uc(a){return a.ol_bindings_||(a.ol_bindings_={})}m=N.prototype;
m.ze=function(a,b,c,d){c=c||a;this.ud(a);var e=Tc(c);Uc(this)[a]=L(b,e,function(){Vc(this,a)},void 0,this);Sc(this)[a]={target:b,key:c};d||Vc(this,a)};m.get=function(a){var b,c=Sc(this);c.hasOwnProperty(a)?(b=c[a],a=b.target,b=b.key,c=Pc.hasOwnProperty(b)?Pc[b]:Pc[b]="get"+Rc(b),b=a[c]?a[c]():a.get(b)):this.r.hasOwnProperty(a)&&(b=this.r[a]);return b};
m.La=function(){for(var a=kc(Sc(this)).concat(kc(this.r)),b={},c=0,d=0;d<a.length;){var e=a[d++],f=na(e)?"o"+x(e):(typeof e).charAt(0)+e;Object.prototype.hasOwnProperty.call(b,f)||(b[f]=!0,a[c++]=e)}a.length=c;return a};m.Zd=function(a){var b=Sc(this);b.hasOwnProperty(a)?(a=b[a],a.target.Zd(a.key)):Vc(this,a)};function Vc(a,b){var c=Tc(b);M(a,c);M(a,"change")}m.Lf=function(a,b,c){return L(this,a,b,!1,c)};m.Nf=function(a,b,c){return Bc(this,a,b,!1,c)};
m.n=function(a,b){var c=Sc(this);if(c.hasOwnProperty(a)){var d=c[a],c=d.target,d=d.key,e=Qc.hasOwnProperty(d)?Qc[d]:Qc[d]="set"+Rc(d);if(c[e])c[e](b);else c.n(d,b)}else this.r[a]=b,Vc(this,a)};m.$b=function(a){var b,c,d;for(b in a)if(c=a[b],d=Qc.hasOwnProperty(b)?Qc[b]:Qc[b]="set"+Rc(b),this[d])this[d](c);else this.n(b,c)};m.ud=function(a){var b=Uc(this),c=b[a];c&&(delete b[a],Ec(c),b=this.get(a),delete Sc(this)[a],this.r[a]=b)};m.ag=function(a,b,c){Cc(this,a,b,!1,c)};m.bg=function(a){Ec(a)};
m.cg=function(){for(var a in Uc(this))this.ud(a)};function Wc(a,b,c){hb.call(this,a,c);this.a=b}F(Wc,hb);Wc.prototype.b=k("a");function O(a){N.call(this);this.a=a||[];Xc(this)}F(O,N);m=O.prototype;m.clear=function(){for(;0<this.wc();)this.pop()};m.Ff=function(a){var b,c;b=0;for(c=a.length;b<c;++b)this.push(a[b]);return this};m.forEach=function(a,b){Fa(this.a,a,b)};m.Gf=k("a");m.Ee=function(a){return this.a[a]};m.wc=function(){return this.get("length")};m.Dc=function(a,b){Sa(this.a,a,0,b);Xc(this);M(this,new Wc("add",b,this))};
m.pop=function(){return this.rd(this.wc()-1)};m.push=function(a){var b=this.a.length;this.Dc(b,a);return b};m.remove=function(a){var b=this.a,c,d;c=0;for(d=b.length;c<d;++c)if(b[c]===a)return this.rd(c)};m.rd=function(a){var b=this.a[a];Da.splice.call(this.a,a,1);Xc(this);M(this,new Wc("remove",b,this));return b};m.Vf=function(a,b){var c=this.wc();if(a<c)c=this.a[a],this.a[a]=b,M(this,new Wc("remove",c,this)),M(this,new Wc("add",b,this));else{for(;c<a;++c)this.Dc(c,void 0);this.Dc(a,b)}};
function Xc(a){a.n("length",a.a.length)};function Yc(a,b,c){return Math.min(Math.max(a,b),c)}function cd(a,b){var c=a%b;return 0>c*b?c+b:c}function dd(a){return a*Math.PI/180};function ed(a){N.call(this);a=t(a)?a:{};this.a=null;L(this,Tc("tracking"),this.i,!1,this);this.b(t(a.tracking)?a.tracking:!1)}F(ed,N);ed.prototype.v=function(){this.b(!1);ed.F.v.call(this)};var fd="DeviceOrientationEvent"in window;
ed.prototype.k=function(a){a=a.ea;if(null!=a.alpha){var b=dd(a.alpha);this.n("alpha",b);"boolean"==typeof a.absolute&&a.absolute?this.n("heading",b):null!=a.webkitCompassHeading&&(null!=a.webkitCompassAccuracy&&-1!=a.webkitCompassAccuracy)&&this.n("heading",dd(a.webkitCompassHeading))}null!=a.beta&&this.n("beta",dd(a.beta));null!=a.gamma&&this.n("gamma",dd(a.gamma))};ed.prototype.d=function(){return this.get("alpha")};ed.prototype.getAlpha=ed.prototype.d;ed.prototype.e=function(){return this.get("beta")};
ed.prototype.getBeta=ed.prototype.e;ed.prototype.f=function(){return this.get("gamma")};ed.prototype.getGamma=ed.prototype.f;ed.prototype.g=function(){return this.get("heading")};ed.prototype.getHeading=ed.prototype.g;ed.prototype.c=function(){return this.get("tracking")};ed.prototype.getTracking=ed.prototype.c;ed.prototype.i=function(){if(fd){var a=this.c();a&&null===this.a?this.a=L(window,"deviceorientation",this.k,!1,this):a||null===this.a||(Ec(this.a),this.a=null)}};
ed.prototype.b=function(a){this.n("tracking",a)};ed.prototype.setTracking=ed.prototype.b;function gd(a,b){a[0]+=b[0];a[1]+=b[1]}function hd(a,b){var c=cd(a+180,360)-180,d=Math.abs(Math.round(3600*c));return Math.floor(d/3600)+"\u00b0 "+Math.floor(d/60%60)+"\u2032 "+Math.floor(d%60)+"\u2033 "+b.charAt(0>c?1:0)}function id(a,b){var c=Math.cos(b),d=Math.sin(b),e=a[1]*c+a[0]*d;a[0]=a[0]*c-a[1]*d;a[1]=e}function jd(a,b){var c=a[0]-b[0],d=a[1]-b[1];return c*c+d*d}function kd(a,b){if(t(a)){var c=b||0;return a[0].toFixed(c)+", "+a[1].toFixed(c)}return""}
function ld(a,b){var c=b.charAt(0);return"n"===c||"s"===c?[a[1],a[0]]:a};function md(a){var b=nd(),c=a.length,d;for(d=0;d<c;++d){var e=b,f=a[d];f[0]<e[0]&&(e[0]=f[0]);f[0]>e[1]&&(e[1]=f[0]);f[1]<e[2]&&(e[2]=f[1]);f[1]>e[3]&&(e[3]=f[1])}return b}function od(a,b,c){var d=Math.min.apply(null,a);a=Math.max.apply(null,a);var e=Math.min.apply(null,b);b=Math.max.apply(null,b);return pd(d,a,e,b,c)}function qd(a,b){return a[0]<=b[0]&&b[0]<=a[1]&&a[2]<=b[1]&&b[1]<=a[3]}function rd(a,b){return a[0]<=b[0]&&b[1]<=a[1]&&a[2]<=b[2]&&b[3]<=a[3]}
function nd(){return[Infinity,-Infinity,Infinity,-Infinity]}function pd(a,b,c,d,e){return t(e)?(e[0]=a,e[1]=b,e[2]=c,e[3]=d,e):[a,b,c,d]}function sd(a,b){return a[0]==b[0]&&a[1]==b[1]&&a[2]==b[2]&&a[3]==b[3]}function td(a,b){b[0]<a[0]&&(a[0]=b[0]);b[1]>a[1]&&(a[1]=b[1]);b[2]<a[2]&&(a[2]=b[2]);b[3]>a[3]&&(a[3]=b[3])}function ud(a){return[a[0],a[2]]}function vd(a){return[(a[0]+a[1])/2,(a[2]+a[3])/2]}
function wd(a,b,c,d){var e=b*d[0]/2;d=b*d[1]/2;b=Math.cos(c);c=Math.sin(c);e=[-e,-e,e,e];d=[-d,d,-d,d];var f,g,h;for(f=0;4>f;++f)g=e[f],h=d[f],e[f]=a[0]+g*b-h*c,d[f]=a[1]+g*c+h*b;return od(e,d,void 0)}function xd(a){return[a[0],a[3]]}function yd(a,b){return a[0]<=b[1]&&a[1]>=b[0]&&a[2]<=b[3]&&a[3]>=b[2]}function zd(a,b,c){a=[a[0],a[2],a[0],a[3],a[1],a[2],a[1],a[3]];b(a,a,2);return od([a[0],a[2],a[4],a[6]],[a[1],a[3],a[5],a[7]],c)};function Ad(a){a=a?a:{};this.coordinates=[];this.b=[];this.c=[];this.ya=a.dimension||2;this.a=a.offset||null}Ad.prototype.add=function(a){for(var b=this.coordinates.length,c=this.a,d=this.ya,e=a.length,f,g,h=0;h<e;++h){f=a[h];g=b+h*d;for(var l=0;l<d;++l)this.coordinates[g+l]=f[l]-(c?c[l]:0)}a=this.b.push(b);this.c.push(e);return a-1};Ad.prototype.get=function(a,b,c){a=this.coordinates[this.b[a]+b*this.ya+c];this.a&&(a+=this.a[c]);return a};Ad.prototype.T=function(a){return this.c[a]};function Bd(){this.a=null}Bd.prototype.da=function(){var a=new this.constructor(this.s());a.Sa=this.Sa;a.dimension=this.dimension;return a};var Cd={Yg:"point",Ig:"linestring",Hg:"linearring",Zg:"polygon",Sg:"multipoint",Qg:"multilinestring",Tg:"multipolygon",Bg:"geometrycollection"};function P(a){N.call(this,a);this.a="default";this.c=null}F(P,N);m=P.prototype;m.ob=function(){var a=this.La(),b=a.length,c={},d,e;for(d=0;d<b;++d)e=a[d],c[e]=this.get(e);return c};m.Je=k("Ka");m.H=function(){return t(this.b)?this.get(this.b):null};m.Db=k("c");m.n=function(a,b){!t(this.b)&&b instanceof Bd&&(this.b=a);P.F.n.call(this,a,b)};m.Ea=function(a){t(this.b)||(this.b="geometry");this.n(this.b,a)};/*

 Latitude/longitude spherical geodesy formulae taken from
 http://www.movable-type.co.uk/scripts/latlong.html
 Licenced under CC-BY-3.0.
*/
function Dd(a){this.a=a}function Ed(a,b,c){var d=dd(b[1]),e=dd(c[1]),f=(e-d)/2;b=dd(c[0]-b[0])/2;d=Math.sin(f)*Math.sin(f)+Math.sin(b)*Math.sin(b)*Math.cos(d)*Math.cos(e);return 2*a.a*Math.atan2(Math.sqrt(d),Math.sqrt(1-d))}Dd.prototype.offset=function(a,b,c){var d=dd(a[1]);b/=this.a;var e=Math.asin(Math.sin(d)*Math.cos(b)+Math.cos(d)*Math.sin(b)*Math.cos(c));return[180*(dd(a[0])+Math.atan2(Math.sin(c)*Math.sin(b)*Math.cos(d),Math.cos(b)-Math.sin(d)*Math.sin(e)))/Math.PI,180*e/Math.PI]};var Fd=new Dd(6370997);var Gd="object"==typeof Proj4js,Hd={oe:"degrees",Ag:"ft",Lg:"m"},Id={};Id.degrees=2*Math.PI*Fd.a/360;Id.ft=0.3048;Id.m=1;function Jd(a){this.Ta=a.code;this.zb=a.units;this.f=t(a.extent)?a.extent:null;this.a=t(a.axisOrientation)?a.axisOrientation:"enu";this.dd=t(a.global)?a.global:!1;this.d=null}m=Jd.prototype;m.He=k("Ta");m.ba=k("f");m.If=k("zb");m.Pb=function(){return Id[this.zb]};m.Fe=k("a");m.zf=k("dd");
function Kd(a,b){var c={units:a.units,axisOrientation:a.axis};J(c,b);Jd.call(this,c);this.e=a;this.c=null}F(Kd,Jd);Kd.prototype.Pb=function(){var a=this.e.to_meter;t(a)||(a=Id[this.zb]);return a};
Kd.prototype.b=function(a,b){if("degrees"==this.zb)return a;null===this.c&&(this.c=Ld(this,Md({code:"EPSG:4326",extent:null})));var c=[b[0]-a/2,b[1],b[0]+a/2,b[1],b[0],b[1]-a/2,b[0],b[1]+a/2],c=this.c(c,c,2),d=Ed(Fd,c.slice(0,2),c.slice(2,4)),c=Ed(Fd,c.slice(4,6),c.slice(6,8)),d=(d+c)/2;"ft"==this.zb&&(d/=0.3048);return d};function Nd(a){return a.e}var Od={},Pd={},Qd={};function Rd(a){Sd(a);Fa(a,function(b){Fa(a,function(a){b!==a&&Td(b,a,Ud)})})}
function Vd(){var a=be,b=ce,c=de;Fa(ee,function(d){Fa(a,function(a){Td(d,a,b);Td(a,d,c)})})}function fe(a){Pd[a.Ta]=a;Td(a,a,Ud)}function Sd(a){Fa(a,function(a){fe(a)})}function ge(a){return null!=a?u(a)?he(a):a:he("EPSG:3857")}function Td(a,b,c){a=a.Ta;b=b.Ta;a in Qd||(Qd[a]={});Qd[a][b]=c}function he(a){var b;a instanceof Jd?b=a:u(a)?(b=Pd[a],Gd&&!t(b)&&(b=Md({code:a,extent:null})),t(b)||(b=null)):b=null;return b}
function Md(a){var b=a.code,c=Od[b];if(!t(c)){var d=new Proj4js.Proj(b),e=d.srsCode,c=Od[e];t(c)||(a=rc(a),a.code=e,c=new Kd(d,a),Od[e]=c);Od[b]=c}return c}function ie(a,b){var c=he(a),d=he(b);return Ld(c,d)}
function Ld(a,b){var c=a.Ta,d=b.Ta,e;c in Qd&&d in Qd[c]&&(e=Qd[c][d]);if(Gd&&!t(e)){var f=Nd(a instanceof Kd?a:Md({code:c,extent:null})),g=Nd(b instanceof Kd?b:Md({code:d,extent:null}));e=function(a,b,c){var d=a.length;c=1<c?c:2;t(b)||(b=2<c?a.slice():Array(d));for(var e,w=0;w<d;w+=c)e=new Proj4js.Point(a[w],a[w+1]),e=Proj4js.transform(f,g,e),b[w]=e.x,b[w+1]=e.y;return b};Td(a,b,e)}t(e)||(e=je);return e}function je(a,b){if(t(b)&&a!==b){for(var c=0,d=a.length;c<d;++c)b[c]=a[c];a=b}return a}
function Ud(a,b){var c;if(t(b)){c=0;for(var d=a.length;c<d;++c)b[c]=a[c];c=b}else c=a.slice();return c};function Q(a){N.call(this);a=t(a)?a:{};this.a=null;this.c=je;this.b=void 0;L(this,Tc("projection"),this.R,!1,this);L(this,Tc("tracking"),this.$,!1,this);t(a.projection)&&this.g(he(a.projection));t(a.trackingOptions)&&this.i(a.trackingOptions);this.d(t(a.tracking)?a.tracking:!1)}F(Q,N);Q.prototype.v=function(){this.d(!1);Q.F.v.call(this)};Q.prototype.R=function(){var a=this.fa();null!=a&&(this.c=Ld(he("EPSG:4326"),a),null===this.a||this.n("position",this.c(this.a)))};
Q.prototype.$=function(){if(ke){var a=this.f();a&&!t(this.b)?this.b=p.navigator.geolocation.watchPosition(y(this.la,this),y(this.na,this),this.e()):!a&&t(this.b)&&(p.navigator.geolocation.clearWatch(this.b),this.b=void 0)}};var ke="geolocation"in p.navigator;
Q.prototype.la=function(a){a=a.coords;this.n("accuracy",a.accuracy);this.n("altitude",null===a.altitude?void 0:a.altitude);this.n("altitudeAccuracy",null===a.altitudeAccuracy?void 0:a.altitudeAccuracy);this.n("heading",null===a.heading?void 0:dd(a.heading));null===this.a?this.a=[a.longitude,a.latitude]:(this.a[0]=a.longitude,this.a[1]=a.latitude);this.n("position",this.c(this.a));this.n("speed",null===a.speed?void 0:a.speed)};Q.prototype.na=function(a){a.type="error";M(this,a)};Q.prototype.k=function(){return this.get("accuracy")};
Q.prototype.getAccuracy=Q.prototype.k;Q.prototype.p=function(){return this.get("altitude")};Q.prototype.getAltitude=Q.prototype.p;Q.prototype.q=function(){return this.get("altitudeAccuracy")};Q.prototype.getAltitudeAccuracy=Q.prototype.q;Q.prototype.G=function(){return this.get("heading")};Q.prototype.getHeading=Q.prototype.G;Q.prototype.K=function(){return this.get("position")};Q.prototype.getPosition=Q.prototype.K;Q.prototype.fa=function(){return this.get("projection")};
Q.prototype.getProjection=Q.prototype.fa;Q.prototype.t=function(){return this.get("speed")};Q.prototype.getSpeed=Q.prototype.t;Q.prototype.f=function(){return this.get("tracking")};Q.prototype.getTracking=Q.prototype.f;Q.prototype.e=function(){return this.get("trackingOptions")};Q.prototype.getTrackingOptions=Q.prototype.e;Q.prototype.g=function(a){this.n("projection",a)};Q.prototype.setProjection=Q.prototype.g;Q.prototype.d=function(a){this.n("tracking",a)};Q.prototype.setTracking=Q.prototype.d;
Q.prototype.i=function(a){this.n("trackingOptions",a)};Q.prototype.setTrackingOptions=Q.prototype.i;function le(a){if("function"==typeof a.Ma)return a.Ma();if(u(a))return a.split("");if(ja(a)){for(var b=[],c=a.length,d=0;d<c;d++)b.push(a[d]);return b}return jc(a)}function me(a,b,c){if("function"==typeof a.forEach)a.forEach(b,c);else if(ja(a)||u(a))Fa(a,b,c);else{var d;if("function"==typeof a.La)d=a.La();else if("function"!=typeof a.Ma)if(ja(a)||u(a)){d=[];for(var e=a.length,f=0;f<e;f++)d.push(f)}else d=kc(a);else d=void 0;for(var e=le(a),f=e.length,g=0;g<f;g++)b.call(c,e[g],d&&d[g],a)}};function ne(a,b){this.b={};this.a=[];var c=arguments.length;if(1<c){if(c%2)throw Error("Uneven number of arguments");for(var d=0;d<c;d+=2)oe(this,arguments[d],arguments[d+1])}else if(a){a instanceof ne?(c=a.La(),d=a.Ma()):(c=kc(a),d=jc(a));for(var e=0;e<c.length;e++)oe(this,c[e],d[e])}}m=ne.prototype;m.u=0;m.yd=0;m.T=k("u");m.Ma=function(){pe(this);for(var a=[],b=0;b<this.a.length;b++)a.push(this.b[this.a[b]]);return a};m.La=function(){pe(this);return this.a.concat()};m.vb=function(){return 0==this.u};
m.clear=function(){this.b={};this.yd=this.u=this.a.length=0};m.remove=function(a){return qe(this.b,a)?(delete this.b[a],this.u--,this.yd++,this.a.length>2*this.u&&pe(this),!0):!1};function pe(a){if(a.u!=a.a.length){for(var b=0,c=0;b<a.a.length;){var d=a.a[b];qe(a.b,d)&&(a.a[c++]=d);b++}a.a.length=c}if(a.u!=a.a.length){for(var e={},c=b=0;b<a.a.length;)d=a.a[b],qe(e,d)||(a.a[c++]=d,e[d]=1),b++;a.a.length=c}}m.get=function(a,b){return qe(this.b,a)?this.b[a]:b};
function oe(a,b,c){qe(a.b,b)||(a.u++,a.a.push(b),a.yd++);a.b[b]=c}m.da=function(){return new ne(this)};function qe(a,b){return Object.prototype.hasOwnProperty.call(a,b)};var re=RegExp("^(?:([^:/?#.]+):)?(?://(?:([^/?#]*)@)?([^/#?]*?)(?::([0-9]+))?(?\x3d[/#?]|$))?([^?#]+)?(?:\\?([^#]*))?(?:#(.*))?$");function se(a){if(te){te=!1;var b=p.location;if(b){var c=b.href;if(c&&(c=(c=se(c)[3]||null)&&decodeURIComponent(c))&&c!=b.hostname)throw te=!0,Error();}}return a.match(re)}var te=xb;function ue(a){if(a[1]){var b=a[0],c=b.indexOf("#");0<=c&&(a.push(b.substr(c)),a[0]=b=b.substr(0,c));c=b.indexOf("?");0>c?a[1]="?":c==b.length-1&&(a[1]=void 0)}return a.join("")}
function ve(a,b,c){if(ia(b))for(var d=0;d<b.length;d++)ve(a,String(b[d]),c);else null!=b&&c.push("\x26",a,""===b?"":"\x3d",encodeURIComponent(String(b)))}function we(a,b){for(var c in b)ve(c,b[c],a);return a};function xe(a,b){var c;if(a instanceof xe)this.pb=t(b)?b:a.pb,ye(this,a.Ib),c=a.Qc,ze(this),this.Qc=c,c=a.Mb,ze(this),this.Mb=c,Ae(this,a.Kc),c=a.Jc,ze(this),this.Jc=c,Be(this,a.a.da()),c=a.uc,ze(this),this.uc=c;else if(a&&(c=se(String(a)))){this.pb=!!b;ye(this,c[1]||"",!0);var d=c[2]||"";ze(this);this.Qc=d?decodeURIComponent(d):"";d=c[3]||"";ze(this);this.Mb=d?decodeURIComponent(d):"";Ae(this,c[4]);d=c[5]||"";ze(this);this.Jc=d?decodeURIComponent(d):"";Be(this,c[6]||"",!0);c=c[7]||"";ze(this);this.uc=
c?decodeURIComponent(c):""}else this.pb=!!b,this.a=new Ce(null,0,this.pb)}m=xe.prototype;m.Ib="";m.Qc="";m.Mb="";m.Kc=null;m.Jc="";m.uc="";m.Af=!1;m.pb=!1;
m.toString=function(){var a=[],b=this.Ib;b&&a.push(De(b,Ee),":");if(b=this.Mb){a.push("//");var c=this.Qc;c&&a.push(De(c,Ee),"@");a.push(encodeURIComponent(String(b)));b=this.Kc;null!=b&&a.push(":",String(b))}if(b=this.Jc)this.Mb&&"/"!=b.charAt(0)&&a.push("/"),a.push(De(b,"/"==b.charAt(0)?Fe:Ge));(b=this.a.toString())&&a.push("?",b);(b=this.uc)&&a.push("#",De(b,He));return a.join("")};m.da=function(){return new xe(this)};
function ye(a,b,c){ze(a);a.Ib=c?b?decodeURIComponent(b):"":b;a.Ib&&(a.Ib=a.Ib.replace(/:$/,""))}function Ae(a,b){ze(a);if(b){b=Number(b);if(isNaN(b)||0>b)throw Error("Bad port number "+b);a.Kc=b}else a.Kc=null}function Be(a,b,c){ze(a);b instanceof Ce?(a.a=b,Ie(a.a,a.pb)):(c||(b=De(b,Je)),a.a=new Ce(b,0,a.pb))}function Ke(a,b,c){ze(a);ia(c)||(c=[String(c)]);Le(a.a,b,c)}function ze(a){if(a.Af)throw Error("Tried to modify a read-only Uri");}
function De(a,b){return u(a)?encodeURI(a).replace(b,Me):null}function Me(a){a=a.charCodeAt(0);return"%"+(a>>4&15).toString(16)+(a&15).toString(16)}var Ee=/[#\/\?@]/g,Ge=/[\#\?:]/g,Fe=/[\#\?]/g,Je=/[\#\?@]/g,He=/#/g;function Ce(a,b,c){this.a=a||null;this.b=!!c}
function Ne(a){if(!a.W&&(a.W=new ne,a.u=0,a.a))for(var b=a.a.split("\x26"),c=0;c<b.length;c++){var d=b[c].indexOf("\x3d"),e=null,f=null;0<=d?(e=b[c].substring(0,d),f=b[c].substring(d+1)):e=b[c];e=decodeURIComponent(e.replace(/\+/g," "));e=Oe(a,e);a.add(e,f?decodeURIComponent(f.replace(/\+/g," ")):"")}}m=Ce.prototype;m.W=null;m.u=null;m.T=function(){Ne(this);return this.u};m.add=function(a,b){Ne(this);this.a=null;a=Oe(this,a);var c=this.W.get(a);c||oe(this.W,a,c=[]);c.push(b);this.u++;return this};
m.remove=function(a){Ne(this);a=Oe(this,a);return qe(this.W.b,a)?(this.a=null,this.u-=this.W.get(a).length,this.W.remove(a)):!1};m.clear=function(){this.W=this.a=null;this.u=0};m.vb=function(){Ne(this);return 0==this.u};function Pe(a,b){Ne(a);b=Oe(a,b);return qe(a.W.b,b)}m.La=function(){Ne(this);for(var a=this.W.Ma(),b=this.W.La(),c=[],d=0;d<b.length;d++)for(var e=a[d],f=0;f<e.length;f++)c.push(b[d]);return c};
m.Ma=function(a){Ne(this);var b=[];if(a)Pe(this,a)&&(b=Qa(b,this.W.get(Oe(this,a))));else{a=this.W.Ma();for(var c=0;c<a.length;c++)b=Qa(b,a[c])}return b};m.get=function(a,b){var c=a?this.Ma(a):[];return 0<c.length?String(c[0]):b};function Le(a,b,c){a.remove(b);0<c.length&&(a.a=null,oe(a.W,Oe(a,b),Ra(c)),a.u+=c.length)}
m.toString=function(){if(this.a)return this.a;if(!this.W)return"";for(var a=[],b=this.W.La(),c=0;c<b.length;c++)for(var d=b[c],e=encodeURIComponent(String(d)),d=this.Ma(d),f=0;f<d.length;f++){var g=e;""!==d[f]&&(g+="\x3d"+encodeURIComponent(String(d[f])));a.push(g)}return this.a=a.join("\x26")};m.da=function(){var a=new Ce;a.a=this.a;this.W&&(a.W=this.W.da(),a.u=this.u);return a};function Oe(a,b){var c=String(b);a.b&&(c=c.toLowerCase());return c}
function Ie(a,b){b&&!a.b&&(Ne(a),a.a=null,me(a.W,function(a,b){var e=b.toLowerCase();b!=e&&(this.remove(b),Le(this,e,a))},a));a.b=b};function Qe(a){return function(){return a}}var Re=Qe(!1),Se=Qe(!0),Te=Qe(null);function Ue(a){return function(){throw a;}}function Ve(a){var b;b=b||0;return function(){return a.apply(this,Array.prototype.slice.call(arguments,0,b))}}function We(a){var b=arguments,c=b.length;return function(){for(var a,e=0;e<c;e++)a=b[e].apply(this,arguments);return a}}function Xe(a){var b=arguments,c=b.length;return function(){for(var a=0;a<c;a++)if(!b[a].apply(this,arguments))return!1;return!0}};function Ye(a,b,c){cb.call(this);this.d=a;this.c=c;this.a=b||window;this.b=y(this.ed,this)}F(Ye,cb);m=Ye.prototype;m.Q=null;m.xd=!1;m.start=function(){Ze(this);this.xd=!1;var a=$e(this),b=af(this);a&&!b&&this.a.mozRequestAnimationFrame?(this.Q=L(this.a,"MozBeforePaint",this.b),this.a.mozRequestAnimationFrame(null),this.xd=!0):this.Q=a&&b?a.call(this.a,this.b):this.a.setTimeout(Ve(this.b),20)};
function Ze(a){if(null!=a.Q){var b=$e(a),c=af(a);b&&!c&&a.a.mozRequestAnimationFrame?Ec(a.Q):b&&c?c.call(a.a,a.Q):a.a.clearTimeout(a.Q)}a.Q=null}m.ed=function(){this.xd&&this.Q&&Ec(this.Q);this.Q=null;this.d.call(this.c,ta())};m.v=function(){Ze(this);Ye.F.v.call(this)};function $e(a){a=a.a;return a.requestAnimationFrame||a.webkitRequestAnimationFrame||a.mozRequestAnimationFrame||a.oRequestAnimationFrame||a.msRequestAnimationFrame||null}
function af(a){a=a.a;return a.cancelRequestAnimationFrame||a.webkitCancelRequestAnimationFrame||a.mozCancelRequestAnimationFrame||a.oCancelRequestAnimationFrame||a.msCancelRequestAnimationFrame||null};function pf(a,b,c){if(ma(a))c&&(a=y(a,c));else if(a&&"function"==typeof a.handleEvent)a=y(a.handleEvent,a);else throw Error("Invalid listener argument");return 2147483647<b?-1:p.setTimeout(a,b||0)};function qf(a,b,c){cb.call(this);this.a=a;this.d=b||0;this.b=c;this.c=y(this.e,this)}F(qf,cb);qf.prototype.Q=0;qf.prototype.v=function(){qf.F.v.call(this);0!=this.Q&&p.clearTimeout(this.Q);this.Q=0;delete this.a;delete this.b};qf.prototype.start=function(a){0!=this.Q&&p.clearTimeout(this.Q);this.Q=0;this.Q=pf(this.c,t(a)?a:this.d)};qf.prototype.e=function(){this.Q=0;this.a&&this.a.call(this.b)};var rf,sf=!G||G&&9<=Nb;!wb&&!G||G&&G&&9<=Nb||wb&&Lb("1.9.1");G&&Lb("9");function tf(a){a=a.className;return u(a)&&a.match(/\S+/g)||[]}function uf(a,b){for(var c=tf(a),d=Ta(arguments,1),e=c.length+d.length,f=c,g=0;g<d.length;g++)0<=Ea(f,d[g])||f.push(d[g]);a.className=c.join(" ");return c.length==e}function vf(a,b,c){for(var d=tf(a),e=!1,f=0;f<d.length;f++)d[f]==b&&(Sa(d,f--,1),e=!0);e&&(d.push(c),a.className=d.join(" "))};function wf(a,b){this.x=t(a)?a:0;this.y=t(b)?b:0}m=wf.prototype;m.da=function(){return new wf(this.x,this.y)};m.ceil=function(){this.x=Math.ceil(this.x);this.y=Math.ceil(this.y);return this};m.floor=function(){this.x=Math.floor(this.x);this.y=Math.floor(this.y);return this};m.round=function(){this.x=Math.round(this.x);this.y=Math.round(this.y);return this};m.scale=function(a,b){var c=la(b)?b:a;this.x*=a;this.y*=c;return this};function xf(a,b){this.width=a;this.height=b}m=xf.prototype;m.da=function(){return new xf(this.width,this.height)};m.vb=function(){return!(this.width*this.height)};m.ceil=function(){this.width=Math.ceil(this.width);this.height=Math.ceil(this.height);return this};m.floor=function(){this.width=Math.floor(this.width);this.height=Math.floor(this.height);return this};m.round=function(){this.width=Math.round(this.width);this.height=Math.round(this.height);return this};
m.scale=function(a,b){var c=la(b)?b:a;this.width*=a;this.height*=c;return this};function yf(a){return a?new zf(Af(a)):rf||(rf=new zf)}function Bf(a,b){fc(b,function(b,d){"style"==d?a.style.cssText=b:"class"==d?a.className=b:"for"==d?a.htmlFor=b:d in Cf?a.setAttribute(Cf[d],b):0==d.lastIndexOf("aria-",0)||0==d.lastIndexOf("data-",0)?a.setAttribute(d,b):a[d]=b})}var Cf={cellpadding:"cellPadding",cellspacing:"cellSpacing",colspan:"colSpan",frameborder:"frameBorder",height:"height",maxlength:"maxLength",role:"role",rowspan:"rowSpan",type:"type",usemap:"useMap",valign:"vAlign",width:"width"};
function Df(a){a=a.document.documentElement;return new xf(a.clientWidth,a.clientHeight)}function Ef(a,b,c){var d=arguments,e=document,f=d[0],g=d[1];if(!sf&&g&&(g.name||g.type)){f=["\x3c",f];g.name&&f.push(' name\x3d"',wa(g.name),'"');if(g.type){f.push(' type\x3d"',wa(g.type),'"');var h={};J(h,g);delete h.type;g=h}f.push("\x3e");f=f.join("")}f=e.createElement(f);g&&(u(g)?f.className=g:ia(g)?uf.apply(null,[f].concat(g)):Bf(f,g));2<d.length&&Ff(e,f,d,2);return f}
function Ff(a,b,c,d){function e(c){c&&b.appendChild(u(c)?a.createTextNode(c):c)}for(;d<c.length;d++){var f=c[d];!ja(f)||na(f)&&0<f.nodeType?e(f):Fa(Gf(f)?Ra(f):f,e)}}function Hf(a){return document.createElement(a)}function If(a,b){Ff(Af(a),a,arguments,1)}function Jf(a){for(var b;b=a.firstChild;)a.removeChild(b)}function Kf(a,b){b.parentNode&&b.parentNode.insertBefore(a,b.nextSibling)}function Lf(a,b){a.insertBefore(b,a.childNodes[0]||null)}
function Mf(a){a&&a.parentNode&&a.parentNode.removeChild(a)}function Nf(a){if(void 0!=a.firstElementChild)a=a.firstElementChild;else for(a=a.firstChild;a&&1!=a.nodeType;)a=a.nextSibling;return a}function Af(a){return 9==a.nodeType?a:a.ownerDocument||a.document}function Gf(a){if(a&&"number"==typeof a.length){if(na(a))return"function"==typeof a.item||"string"==typeof a.item;if(ma(a))return"function"==typeof a.item}return!1}function zf(a){this.a=a||p.document||document}zf.prototype.createTextNode=function(a){return this.a.createTextNode(String(a))};
function Of(){return!0}function Pf(a){var b=a.a;a=xb?b.body:b.documentElement;b=b.parentWindow||b.defaultView;return G&&Lb("10")&&b.pageYOffset!=a.scrollTop?new wf(a.scrollLeft,a.scrollTop):new wf(b.pageXOffset||a.scrollLeft,b.pageYOffset||a.scrollTop)}zf.prototype.appendChild=function(a,b){a.appendChild(b)};
zf.prototype.contains=function(a,b){if(a.contains&&1==b.nodeType)return a==b||a.contains(b);if("undefined"!=typeof a.compareDocumentPosition)return a==b||Boolean(a.compareDocumentPosition(b)&16);for(;b&&a!=b;)b=b.parentNode;return b==a};function Qf(a){Mc.call(this);this.hc=a||window;this.zc=L(this.hc,"resize",this.lf,!1,this);this.qb=Df(this.hc||window)}F(Qf,Mc);m=Qf.prototype;m.zc=null;m.hc=null;m.qb=null;m.v=function(){Qf.F.v.call(this);this.zc&&(Ec(this.zc),this.zc=null);this.qb=this.hc=null};m.lf=function(){var a=Df(this.hc||window);a==this.qb||a&&this.qb&&a.width==this.qb.width&&a.height==this.qb.height||(this.qb=a,M(this,"resize"))};function Rf(a,b,c,d,e){if(!(G||xb&&Lb("525")))return!0;if(ob&&e)return Sf(a);if(e&&!d||!c&&(17==b||18==b||ob&&91==b))return!1;if(xb&&d&&c)switch(a){case 220:case 219:case 221:case 192:case 186:case 189:case 187:case 188:case 190:case 191:case 192:case 222:return!1}if(G&&d&&b==a)return!1;switch(a){case 13:return!(G&&G&&9<=Nb);case 27:return!xb}return Sf(a)}
function Sf(a){if(48<=a&&57>=a||96<=a&&106>=a||65<=a&&90>=a||xb&&0==a)return!0;switch(a){case 32:case 63:case 107:case 109:case 110:case 111:case 186:case 59:case 189:case 187:case 61:case 188:case 190:case 191:case 192:case 222:case 219:case 220:case 221:return!0;default:return!1}}function Tf(a){switch(a){case 61:return 187;case 59:return 186;case 224:return 91;case 0:return 224;default:return a}};function Uf(a,b){Mc.call(this);a&&(this.Fc&&Vf(this),this.Sb=a,this.Ec=L(this.Sb,"keypress",this,b),this.kd=L(this.Sb,"keydown",this.a,b,this),this.Fc=L(this.Sb,"keyup",this.b,b,this))}F(Uf,Mc);m=Uf.prototype;m.Sb=null;m.Ec=null;m.kd=null;m.Fc=null;m.qa=-1;m.fb=-1;m.Tc=!1;
var Wf={3:13,12:144,63232:38,63233:40,63234:37,63235:39,63236:112,63237:113,63238:114,63239:115,63240:116,63241:117,63242:118,63243:119,63244:120,63245:121,63246:122,63247:123,63248:44,63272:46,63273:36,63275:35,63276:33,63277:34,63289:144,63302:45},Xf={Up:38,Down:40,Left:37,Right:39,Enter:13,F1:112,F2:113,F3:114,F4:115,F5:116,F6:117,F7:118,F8:119,F9:120,F10:121,F11:122,F12:123,"U+007F":46,Home:36,End:35,PageUp:33,PageDown:34,Insert:45},Yf=G||xb&&Lb("525"),Zf=ob&&wb;
Uf.prototype.a=function(a){xb&&(17==this.qa&&!a.Rb||18==this.qa&&!a.va||ob&&91==this.qa&&!a.gd)&&(this.fb=this.qa=-1);-1==this.qa&&(a.Rb&&17!=a.Wa?this.qa=17:a.va&&18!=a.Wa?this.qa=18:a.gd&&91!=a.Wa&&(this.qa=91));Yf&&!Rf(a.Wa,this.qa,a.Xa,a.Rb,a.va)?this.handleEvent(a):(this.fb=wb?Tf(a.Wa):a.Wa,Zf&&(this.Tc=a.va))};Uf.prototype.b=function(a){this.fb=this.qa=-1;this.Tc=a.va};
Uf.prototype.handleEvent=function(a){var b=a.ea,c,d,e=b.altKey;G&&"keypress"==a.type?(c=this.fb,d=13!=c&&27!=c?b.keyCode:0):xb&&"keypress"==a.type?(c=this.fb,d=0<=b.charCode&&63232>b.charCode&&Sf(c)?b.charCode:0):vb?(c=this.fb,d=Sf(c)?b.keyCode:0):(c=b.keyCode||this.fb,d=b.charCode||0,Zf&&(e=this.Tc),ob&&(63==d&&224==c)&&(c=191));var f=c,g=b.keyIdentifier;c?63232<=c&&c in Wf?f=Wf[c]:25==c&&a.Xa&&(f=9):g&&g in Xf&&(f=Xf[g]);a=f==this.qa;this.qa=f;b=new $f(f,d,a,b);b.va=e;M(this,b)};
function Vf(a){a.Ec&&(Ec(a.Ec),Ec(a.kd),Ec(a.Fc),a.Ec=null,a.kd=null,a.Fc=null);a.Sb=null;a.qa=-1;a.fb=-1}Uf.prototype.v=function(){Uf.F.v.call(this);Vf(this)};function $f(a,b,c,d){d&&Tb(this,d,void 0);this.type="key";this.Wa=a;this.fd=b;this.b=c}F($f,Sb);function ag(a,b,c,d){this.top=a;this.right=b;this.bottom=c;this.left=d}m=ag.prototype;m.da=function(){return new ag(this.top,this.right,this.bottom,this.left)};m.contains=function(a){return this&&a?a instanceof ag?a.left>=this.left&&a.right<=this.right&&a.top>=this.top&&a.bottom<=this.bottom:a.x>=this.left&&a.x<=this.right&&a.y>=this.top&&a.y<=this.bottom:!1};
m.ceil=function(){this.top=Math.ceil(this.top);this.right=Math.ceil(this.right);this.bottom=Math.ceil(this.bottom);this.left=Math.ceil(this.left);return this};m.floor=function(){this.top=Math.floor(this.top);this.right=Math.floor(this.right);this.bottom=Math.floor(this.bottom);this.left=Math.floor(this.left);return this};m.round=function(){this.top=Math.round(this.top);this.right=Math.round(this.right);this.bottom=Math.round(this.bottom);this.left=Math.round(this.left);return this};
m.scale=function(a,b){var c=la(b)?b:a;this.left*=a;this.right*=a;this.top*=c;this.bottom*=c;return this};function bg(a,b,c,d){this.left=a;this.top=b;this.width=c;this.height=d}m=bg.prototype;m.da=function(){return new bg(this.left,this.top,this.width,this.height)};m.contains=function(a){return a instanceof bg?this.left<=a.left&&this.left+this.width>=a.left+a.width&&this.top<=a.top&&this.top+this.height>=a.top+a.height:a.x>=this.left&&a.x<=this.left+this.width&&a.y>=this.top&&a.y<=this.top+this.height};
m.ceil=function(){this.left=Math.ceil(this.left);this.top=Math.ceil(this.top);this.width=Math.ceil(this.width);this.height=Math.ceil(this.height);return this};m.floor=function(){this.left=Math.floor(this.left);this.top=Math.floor(this.top);this.width=Math.floor(this.width);this.height=Math.floor(this.height);return this};m.round=function(){this.left=Math.round(this.left);this.top=Math.round(this.top);this.width=Math.round(this.width);this.height=Math.round(this.height);return this};
m.scale=function(a,b){var c=la(b)?b:a;this.left*=a;this.width*=a;this.top*=c;this.height*=c;return this};function cg(a,b){var c=Af(a);return c.defaultView&&c.defaultView.getComputedStyle&&(c=c.defaultView.getComputedStyle(a,null))?c[b]||c.getPropertyValue(b)||"":""}function dg(a,b){return cg(a,b)||(a.currentStyle?a.currentStyle[b]:null)||a.style&&a.style[b]}function eg(a,b,c){var d,e=wb&&(ob||Bb)&&Lb("1.9");b instanceof wf?(d=b.x,b=b.y):(d=b,b=c);a.style.left=fg(d,e);a.style.top=fg(b,e)}
function gg(a){var b;try{b=a.getBoundingClientRect()}catch(c){return{left:0,top:0,right:0,bottom:0}}G&&(a=a.ownerDocument,b.left-=a.documentElement.clientLeft+a.body.clientLeft,b.top-=a.documentElement.clientTop+a.body.clientTop);return b}
function hg(a){if(G&&!(G&&8<=Nb))return a.offsetParent;var b=Af(a),c=dg(a,"position"),d="fixed"==c||"absolute"==c;for(a=a.parentNode;a&&a!=b;a=a.parentNode)if(c=dg(a,"position"),d=d&&"static"==c&&a!=b.documentElement&&a!=b.body,!d&&(a.scrollWidth>a.clientWidth||a.scrollHeight>a.clientHeight||"fixed"==c||"absolute"==c||"relative"==c))return a;return null}
function ig(a){var b,c=Af(a),d=dg(a,"position"),e=wb&&c.getBoxObjectFor&&!a.getBoundingClientRect&&"absolute"==d&&(b=c.getBoxObjectFor(a))&&(0>b.screenX||0>b.screenY),f=new wf(0,0),g;b=c?Af(c):document;g=!G||G&&9<=Nb||Of(yf(b))?b.documentElement:b.body;if(a==g)return f;if(a.getBoundingClientRect)b=gg(a),a=Pf(yf(c)),f.x=b.left+a.x,f.y=b.top+a.y;else if(c.getBoxObjectFor&&!e)b=c.getBoxObjectFor(a),a=c.getBoxObjectFor(g),f.x=b.screenX-a.screenX,f.y=b.screenY-a.screenY;else{b=a;do{f.x+=b.offsetLeft;f.y+=
b.offsetTop;b!=a&&(f.x+=b.clientLeft||0,f.y+=b.clientTop||0);if(xb&&"fixed"==dg(b,"position")){f.x+=c.body.scrollLeft;f.y+=c.body.scrollTop;break}b=b.offsetParent}while(b&&b!=a);if(vb||xb&&"absolute"==d)f.y-=c.body.offsetTop;for(b=a;(b=hg(b))&&b!=c.body&&b!=g;)f.x-=b.scrollLeft,vb&&"TR"==b.tagName||(f.y-=b.scrollTop)}return f}function jg(a,b){var c=kg(a),d=kg(b);return new wf(c.x-d.x,c.y-d.y)}
function kg(a){if(1==a.nodeType){var b;if(a.getBoundingClientRect)b=gg(a),b=new wf(b.left,b.top);else{b=Pf(yf(a));var c=ig(a);b=new wf(c.x-b.x,c.y-b.y)}if(wb&&!Lb(12)){var d;G?d="-ms-transform":xb?d="-webkit-transform":vb?d="-o-transform":wb&&(d="-moz-transform");var e;d&&(e=dg(a,d));e||(e=dg(a,"transform"));a=e?(a=e.match(lg))?new wf(parseFloat(a[1]),parseFloat(a[2])):new wf(0,0):new wf(0,0);a=new wf(b.x+a.x,b.y+a.y)}else a=b;return a}d=ma(a.Ge);e=a;a.targetTouches?e=a.targetTouches[0]:d&&a.ea.targetTouches&&
(e=a.ea.targetTouches[0]);return new wf(e.clientX,e.clientY)}function fg(a,b){"number"==typeof a&&(a=(b?Math.round(a):a)+"px");return a}function mg(a){var b=ng;if("none"!=dg(a,"display"))return b(a);var c=a.style,d=c.display,e=c.visibility,f=c.position;c.visibility="hidden";c.position="absolute";c.display="inline";a=b(a);c.display=d;c.position=f;c.visibility=e;return a}
function ng(a){var b=a.offsetWidth,c=a.offsetHeight,d=xb&&!b&&!c;return t(b)&&!d||!a.getBoundingClientRect?new xf(b,c):(a=gg(a),new xf(a.right-a.left,a.bottom-a.top))}function og(a,b){var c=a.style;"opacity"in c?c.opacity=b:"MozOpacity"in c?c.MozOpacity=b:"filter"in c&&(c.filter=""===b?"":"alpha(opacity\x3d"+100*b+")")}function pg(a,b){a.style.display=b?"":"none"}function qg(a){return"rtl"==dg(a,"direction")}
function rg(a,b){var c=Of(yf(Af(a)));if(!G||c&&Lb("8")){var d=a.style;wb?d.MozBoxSizing="border-box":xb?d.WebkitBoxSizing="border-box":d.boxSizing="border-box";d.width=Math.max(b.width,0)+"px";d.height=Math.max(b.height,0)+"px"}else if(d=a.style,c){var c=sg(a,"padding"),e=tg(a);d.pixelWidth=b.width-e.left-c.left-c.right-e.right;d.pixelHeight=b.height-e.top-c.top-c.bottom-e.bottom}else d.pixelWidth=b.width,d.pixelHeight=b.height}
function ug(a,b,c,d){if(/^\d+px?$/.test(b))return parseInt(b,10);var e=a.style[c],f=a.runtimeStyle[c];a.runtimeStyle[c]=a.currentStyle[c];a.style[c]=b;b=a.style[d];a.style[c]=e;a.runtimeStyle[c]=f;return b}function vg(a,b){var c=a.currentStyle?a.currentStyle[b]:null;return c?ug(a,c,"left","pixelLeft"):0}
function sg(a,b){if(G){var c=vg(a,b+"Left"),d=vg(a,b+"Right"),e=vg(a,b+"Top"),f=vg(a,b+"Bottom");return new ag(e,d,f,c)}c=cg(a,b+"Left");d=cg(a,b+"Right");e=cg(a,b+"Top");f=cg(a,b+"Bottom");return new ag(parseFloat(e),parseFloat(d),parseFloat(f),parseFloat(c))}var wg={thin:2,medium:4,thick:6};function xg(a,b){if("none"==(a.currentStyle?a.currentStyle[b+"Style"]:null))return 0;var c=a.currentStyle?a.currentStyle[b+"Width"]:null;return c in wg?wg[c]:ug(a,c,"left","pixelLeft")}
function tg(a){if(G){var b=xg(a,"borderLeft"),c=xg(a,"borderRight"),d=xg(a,"borderTop");a=xg(a,"borderBottom");return new ag(d,c,a,b)}b=cg(a,"borderLeftWidth");c=cg(a,"borderRightWidth");d=cg(a,"borderTopWidth");a=cg(a,"borderBottomWidth");return new ag(parseFloat(d),parseFloat(c),parseFloat(a),parseFloat(b))}var lg=/matrix\([0-9\.\-]+, [0-9\.\-]+, [0-9\.\-]+, [0-9\.\-]+, ([0-9\.\-]+)p?x?, ([0-9\.\-]+)p?x?\)/;function yg(a,b){Mc.call(this);this.a=a;var c=na(this.a)&&1==this.a.nodeType?this.a:this.a?this.a.body:null;this.e=!!c&&qg(c);this.b=L(this.a,wb?"DOMMouseScroll":"mousewheel",this,b)}F(yg,Mc);
yg.prototype.handleEvent=function(a){var b=0,c=0,d=0;a=a.ea;if("mousewheel"==a.type){c=1;if(G||xb&&(pb||Lb("532.0")))c=40;d=zg(-a.wheelDelta,c);t(a.wheelDeltaX)?(b=zg(-a.wheelDeltaX,c),c=zg(-a.wheelDeltaY,c)):c=d}else d=a.detail,100<d?d=3:-100>d&&(d=-3),t(a.axis)&&a.axis===a.HORIZONTAL_AXIS?b=d:c=d;la(this.c)&&(b=Yc(b,-this.c,this.c));la(this.d)&&(c=Yc(c,-this.d,this.d));this.e&&(b=-b);b=new Ag(d,a,b,c);M(this,b)};function zg(a,b){return xb&&(ob||qb)&&0!=a%b?a:a/b}
yg.prototype.v=function(){yg.F.v.call(this);Ec(this.b);this.b=null};function Ag(a,b,c,d){b&&Tb(this,b,void 0);this.type="mousewheel";this.b=a;this.oa=c;this.ma=d}F(Ag,Sb);function Bg(a){this.length=a.length||a;for(var b=0;b<this.length;b++)this[b]=a[b]||0}Bg.prototype.a=4;Bg.prototype.b=function(a,b){b=b||0;for(var c=0;c<a.length&&b+c<this.length;c++)this[b+c]=a[c]};Bg.prototype.toString=Array.prototype.join;"undefined"==typeof Float32Array&&(Bg.BYTES_PER_ELEMENT=4,Bg.prototype.BYTES_PER_ELEMENT=Bg.prototype.a,Bg.prototype.set=Bg.prototype.b,Bg.prototype.toString=Bg.prototype.toString,C("Float32Array",Bg));function Cg(a){this.length=a.length||a;for(var b=0;b<this.length;b++)this[b]=a[b]||0}Cg.prototype.a=8;Cg.prototype.b=function(a,b){b=b||0;for(var c=0;c<a.length&&b+c<this.length;c++)this[b+c]=a[c]};Cg.prototype.toString=Array.prototype.join;if("undefined"==typeof Float64Array){try{Cg.BYTES_PER_ELEMENT=8}catch(Dg){}Cg.prototype.BYTES_PER_ELEMENT=Cg.prototype.a;Cg.prototype.set=Cg.prototype.b;Cg.prototype.toString=Cg.prototype.toString;C("Float64Array",Cg)};function Eg(a,b,c,d,e){a[0]=b;a[1]=c;a[2]=d;a[3]=e};function Fg(){var a=Array(16);Hg(a,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);return a}function Ig(){var a=Array(16);Hg(a,1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1);return a}function Hg(a,b,c,d,e,f,g,h,l,n,r,q,w,s,A,B,v){a[0]=b;a[1]=c;a[2]=d;a[3]=e;a[4]=f;a[5]=g;a[6]=h;a[7]=l;a[8]=n;a[9]=r;a[10]=q;a[11]=w;a[12]=s;a[13]=A;a[14]=B;a[15]=v}
function oh(a,b){a[0]=b[0];a[1]=b[1];a[2]=b[2];a[3]=b[3];a[4]=b[4];a[5]=b[5];a[6]=b[6];a[7]=b[7];a[8]=b[8];a[9]=b[9];a[10]=b[10];a[11]=b[11];a[12]=b[12];a[13]=b[13];a[14]=b[14];a[15]=b[15]}function ph(a){a[0]=1;a[1]=0;a[2]=0;a[3]=0;a[4]=0;a[5]=1;a[6]=0;a[7]=0;a[8]=0;a[9]=0;a[10]=1;a[11]=0;a[12]=0;a[13]=0;a[14]=0;a[15]=1}
function qh(a,b,c){var d=a[0],e=a[1],f=a[2],g=a[3],h=a[4],l=a[5],n=a[6],r=a[7],q=a[8],w=a[9],s=a[10],A=a[11],B=a[12],v=a[13],z=a[14];a=a[15];var I=b[0],D=b[1],K=b[2],T=b[3],W=b[4],E=b[5],H=b[6],ka=b[7],aa=b[8],da=b[9],fa=b[10],Z=b[11],Pa=b[12],Ha=b[13],Ab=b[14];b=b[15];c[0]=d*I+h*D+q*K+B*T;c[1]=e*I+l*D+w*K+v*T;c[2]=f*I+n*D+s*K+z*T;c[3]=g*I+r*D+A*K+a*T;c[4]=d*W+h*E+q*H+B*ka;c[5]=e*W+l*E+w*H+v*ka;c[6]=f*W+n*E+s*H+z*ka;c[7]=g*W+r*E+A*H+a*ka;c[8]=d*aa+h*da+q*fa+B*Z;c[9]=e*aa+l*da+w*fa+v*Z;c[10]=f*aa+
n*da+s*fa+z*Z;c[11]=g*aa+r*da+A*fa+a*Z;c[12]=d*Pa+h*Ha+q*Ab+B*b;c[13]=e*Pa+l*Ha+w*Ab+v*b;c[14]=f*Pa+n*Ha+s*Ab+z*b;c[15]=g*Pa+r*Ha+A*Ab+a*b}function rh(a,b){return a.length==b.length&&a[0]==b[0]&&a[1]==b[1]&&a[2]==b[2]&&a[3]==b[3]&&a[4]==b[4]&&a[5]==b[5]&&a[6]==b[6]&&a[7]==b[7]&&a[8]==b[8]&&a[9]==b[9]&&a[10]==b[10]&&a[11]==b[11]&&a[12]==b[12]&&a[13]==b[13]&&a[14]==b[14]&&a[15]==b[15]}
function sh(a,b,c){var d=b[0],e=b[1];b=b[2];c[0]=d*a[0]+e*a[4]+b*a[8]+a[12];c[1]=d*a[1]+e*a[5]+b*a[9]+a[13];c[2]=d*a[2]+e*a[6]+b*a[10]+a[14]}function th(a,b,c){var d=a[1]*b+a[5]*c+0*a[9]+a[13],e=a[2]*b+a[6]*c+0*a[10]+a[14],f=a[3]*b+a[7]*c+0*a[11]+a[15];a[12]=a[0]*b+a[4]*c+0*a[8]+a[12];a[13]=d;a[14]=e;a[15]=f}function uh(a,b,c){Hg(a,a[0]*b,a[1]*b,a[2]*b,a[3]*b,a[4]*c,a[5]*c,a[6]*c,a[7]*c,1*a[8],1*a[9],1*a[10],1*a[11],a[12],a[13],a[14],a[15])}
function vh(a,b){var c=a[0],d=a[1],e=a[2],f=a[3],g=a[4],h=a[5],l=a[6],n=a[7],r=Math.cos(b),q=Math.sin(b);a[0]=c*r+g*q;a[1]=d*r+h*q;a[2]=e*r+l*q;a[3]=f*r+n*q;a[4]=c*-q+g*r;a[5]=d*-q+h*r;a[6]=e*-q+l*r;a[7]=f*-q+n*r}new Float64Array(3);new Float64Array(3);new Float64Array(4);new Float64Array(4);new Float64Array(4);new Float64Array(16);var wh=p.document&&"ontouchstart"in p.document.documentElement||!!p.navigator.msPointerEnabled;function xh(a,b){Mc.call(this);this.L=a;this.a=b}F(xh,Mc);xh.prototype.c=function(){return x(this).toString()};function yh(a,b){this.f=a;this.e=b;this.a=[];this.b=[];this.c={}}yh.prototype.clear=function(){this.a.length=0;this.b.length=0;var a=this.c,b;for(b in a)delete a[b]};function zh(a){var b=a.a,c=a.b,d=b[0];1==b.length?(b.length=0,c.length=0):(b[0]=b.pop(),c[0]=c.pop(),Ah(a,0));b=a.e(d);delete a.c[b];return d}function Bh(a,b){var c=a.f(b);Infinity!=c&&(a.a.push(b),a.b.push(c),a.c[a.e(b)]=!0,Ch(a,0,a.a.length-1))}yh.prototype.T=function(){return this.a.length};yh.prototype.vb=function(){return 0===this.a.length};
function Ah(a,b){for(var c=a.a,d=a.b,e=c.length,f=c[b],g=d[b],h=b;b<e>>1;){var l=2*b+1,n=2*b+2,l=n<e&&d[n]<d[l]?n:l;c[b]=c[l];d[b]=d[l];b=l}c[b]=f;d[b]=g;Ch(a,h,b)}function Ch(a,b,c){var d=a.a;a=a.b;for(var e=d[c],f=a[c];c>b;){var g=c-1>>1;if(a[g]>f)d[c]=d[g],a[c]=a[g],c=g;else break}d[c]=e;a[c]=f}function Dh(a){var b=a.f,c=a.a,d=a.b,e=0,f=c.length,g,h,l;for(h=0;h<f;++h)g=c[h],l=b(g),Infinity==l?delete a.c[a.e(g)]:(d[e]=l,c[e++]=g);c.length=e;d.length=e;for(b=(a.a.length>>1)-1;0<=b;b--)Ah(a,b)};function Eh(a,b){yh.call(this,function(b){return a.apply(null,b)},function(a){return a[0].c()});this.V=b;this.d=0}F(Eh,yh);Eh.prototype.g=function(){--this.d;this.V()};function R(a){N.call(this);a=rc(a);a.brightness=t(a.brightness)?a.brightness:0;a.contrast=t(a.contrast)?a.contrast:1;a.hue=t(a.hue)?a.hue:0;a.opacity=t(a.opacity)?a.opacity:1;a.saturation=t(a.saturation)?a.saturation:1;a.visible=t(a.visible)?a.visible:!0;this.$b(a);L(this,[Tc("brightness"),Tc("contrast"),Tc("hue"),Tc("opacity"),Tc("saturation"),"load"],this.Bc,!1,this);L(this,Tc("visible"),this.Td,!1,this)}F(R,N);function Fh(a){M(a,"change")}R.prototype.f=function(){return this.get("brightness")};
R.prototype.getBrightness=R.prototype.f;R.prototype.g=function(){return this.get("contrast")};R.prototype.getContrast=R.prototype.g;R.prototype.i=function(){return this.get("hue")};R.prototype.getHue=R.prototype.i;function Gh(a){var b=a.f(),c=a.g(),d=a.i(),e=a.p(),f=a.Ba(),g=a.k();a=a.b();return{brightness:t(b)?Yc(b,-1,1):0,contrast:t(c)?Math.max(c,0):1,hue:t(d)?d:0,opacity:t(e)?Yc(e,0,1):1,Lc:f,saturation:t(g)?Math.max(g,0):1,visible:t(a)?!!a:!0}}R.prototype.p=function(){return this.get("opacity")};
R.prototype.getOpacity=R.prototype.p;R.prototype.k=function(){return this.get("saturation")};R.prototype.getSaturation=R.prototype.k;R.prototype.b=function(){return this.get("visible")};R.prototype.getVisible=R.prototype.b;R.prototype.Bc=function(){this.b()&&this.Ba()&&Fh(this)};R.prototype.Td=function(){this.Ba()&&Fh(this)};R.prototype.G=function(a){this.n("brightness",a)};R.prototype.setBrightness=R.prototype.G;R.prototype.K=function(a){this.n("contrast",a)};R.prototype.setContrast=R.prototype.K;
R.prototype.R=function(a){this.n("hue",a)};R.prototype.setHue=R.prototype.R;R.prototype.t=function(a){this.n("opacity",a)};R.prototype.setOpacity=R.prototype.t;R.prototype.$=function(a){this.n("saturation",a)};R.prototype.setSaturation=R.prototype.$;R.prototype.la=function(a){this.n("visible",a)};R.prototype.setVisible=R.prototype.la;function Hh(a){Mc.call(this);this.r=he(a.projection);this.g=t(a.extent)?a.extent:t(a.projection)?this.r.ba():null;this.e=t(a.attributions)?a.attributions:null;this.f=a.logo;this.b=0}F(Hh,Mc);function Ih(a){++a.b;M(a,"change")}Hh.prototype.ba=k("g");Hh.prototype.fa=k("r");Hh.prototype.Ba=Se;function Jh(a){var b=rc(a);delete b.source;R.call(this,b);this.d=a.source;L(this.d,"change",this.nf,!1,this);this.d.Ba()||Bc(this.d,"load",this.of,!1,this)}F(Jh,R);m=Jh.prototype;m.Ob=function(a){a=t(a)?a:[];a.push(this);return a};m.bd=function(a){a=t(a)?a:{layers:[],ra:[]};a.layers.push(this);a.ra.push(Gh(this));return a};m.ja=k("d");m.nf=function(){Fh(this)};m.of=function(){M(this,"load")};m.Ba=function(){return this.ja().Ba()};function Kh(a,b,c){hb.call(this,a);this.map=b;this.b=t(c)?c:null}F(Kh,hb);function Lh(a,b,c,d){Kh.call(this,a,b,d);this.a=c;this.g=this.f=null}F(Lh,Kh);Lh.prototype.d=function(){null===this.f&&(this.f=Mh(this.map,this.e()));return this.f};Lh.prototype.e=function(){if(null===this.g){var a=jg(this.a,this.map.b);this.g=[a.x,a.y]}return this.g};Lh.prototype.U=function(){Lh.F.U.call(this);this.a.U()};Lh.prototype.rb=function(){Lh.F.rb.call(this);this.a.rb()};
function Nh(a){Mc.call(this);this.a=a;this.c=!1;this.b=this.g=this.d=this.e=this.f=null;a=this.a.b;this.e=[L(a,["click","dblclick"],this.Cd,!1,this),L(a,"mousedown",this.df,!1,this),L(a,"mousemove",this.qd,!1,this),L(a,"mouseout",this.qd,!1,this),L(a,"contextmenu",this.qd,!1,this)];this.g=[L(a,["touchstart","MSPointerDown"],this.tf,!1,this),L(p.document,["touchmove","MSPointerMove"],this.sf,!1,this),L(p.document,["touchend","MSPointerUp"],this.rf,!1,this)]}F(Nh,Mc);m=Nh.prototype;
m.Cd=function(a){if(!this.c){var b=a.type;M(this,0===this.f||"dblclick"==b?new Lh(Oh,this.a,a):new Lh(Ph,this.a,a))}};m.ff=function(a){this.b&&(this.b=null,Fa(this.d,Ec),this.d=null,this.c&&M(this,new Lh(Qh,this.a,a)))};m.df=function(a){M(this,new Lh(Rh,this.a,a));this.b||(this.b=a,this.c=!1,this.d=[L(p.document,"mousemove",this.ef,!1,this),L(p.document,"mouseup",this.ff,!1,this)],a.U())};
m.ef=function(a){var b;this.c||(this.c=!0,b=new Lh(Sh,this.a,this.b),M(this,b));b=new Lh(Th,this.a,a);M(this,b)};m.qd=function(a){M(this,new Lh(a.type,this.a,a))};m.tf=function(a){a.U();this.b=a;this.c=!1;M(this,new Lh(Uh,this.a,a))};m.sf=function(a){this.b&&(this.c=!0,M(this,new Lh(Vh,this.a,a)))};m.rf=function(a){M(this,new Lh(Wh,this.a,a));this.c||(a=ta(),this.f=!this.f||250<a-this.f?a:0,null===this.b||this.Cd(this.b));this.b=null};
m.v=function(){null!==this.e&&(Fa(this.e,Ec),this.e=null);null!==this.d&&(Fa(this.d,Ec),this.d=null);null!==this.g&&(Fa(this.g,Ec),this.g=null);Nh.F.v.call(this)};var Ph="click",Oh="dblclick",Rh="down",Sh="dragstart",Th="drag",Qh="dragend",Uh="touchstart",Vh="touchmove",Wh="touchend",Xh={pg:Ph,rg:Oh,ug:Rh,xg:Sh,vg:Th,wg:Qh,hh:Uh,gh:Vh,fh:Wh,Og:"mousemove",Pg:"mouseout",qg:"contextmenu"};function Yh(){N.call(this);this.e=[0,0]}F(Yh,N);function Zh(a,b){a.e[1]+=b};function $h(a,b,c){var d=a.length;if(a[0]<=b)return 0;if(!(b<=a[d-1]))if(0<c)for(c=1;c<d;++c){if(a[c]<b)return c-1}else if(0>c)for(c=1;c<d;++c){if(a[c]<=b)return c}else for(c=1;c<d;++c){if(a[c]==b)return c;if(a[c]<b)return a[c-1]-b<b-a[c]?c-1:c}return d-1};function ai(a){return function(b,c,d){if(t(b))return b=$h(a,b,d),b=Yc(b+c,0,a.length-1),a[b]}}function bi(a,b,c){return function(d,e,f){if(t(d))return f=0<f?0:0>f?1:0.5,d=Math.floor(Math.log(b/d)/Math.log(a)+f),e=Math.max(d+e,0),t(c)&&(e=Math.min(e,c)),b/Math.pow(a,e)}};function ci(){return function(a,b){if(t(a))return 0.1>=Math.abs(a+b)?0:a+b}};function di(a){var b=ci();this.resolution=a;this.rotation=b};function S(a){Yh.call(this);a=a||{};var b={};b.center=t(a.center)?a.center:null;b.projection=ge(a.projection);var c,d,e;if(t(a.resolutions))c=a.resolutions,d=c[0],e=c[c.length-1],c=ai(c);else{d=a.maxResolution;t(d)||(d=a.projection,e=ge(d).ba(),d=(null===e?360*Id.degrees/Id[d.zb]:Math.max(e[1]-e[0],e[3]-e[2]))/256);c=a.maxZoom;t(c)||(c=28);var f=a.zoomFactor;t(f)||(f=2);e=d/Math.pow(f,c);c=bi(f,d,c)}this.b=d;this.f=e;this.g=new di(c);t(a.resolution)?b.resolution=a.resolution:t(a.zoom)&&(b.resolution=
this.Ia(this.b,a.zoom));b.rotation=t(a.rotation)?a.rotation:0;this.$b(b)}F(S,Yh);function ei(a,b,c){var d,e=a.a();t(e)&&(d=[e[0]-c[0],e[1]-c[1]],id(d,b-a.c()),gd(d,c));return d}function fi(a,b,c){var d,e=a.a();a=a.B();t(e)&&t(a)&&(d=[c[0]-b*(c[0]-e[0])/a,c[1]-b*(c[1]-e[1])/a]);return d}S.prototype.Ia=function(a,b,c){return this.g.resolution(a,b||0,c||0)};S.prototype.kc=function(a,b){return this.g.rotation(a,b||0)};S.prototype.a=function(){return this.get("center")};S.prototype.getCenter=S.prototype.a;
S.prototype.i=function(a){var b=this.a(),c=this.B();return[b[0]-c*a[0]/2,b[0]+c*a[0]/2,b[1]-c*a[1]/2,b[1]+c*a[1]/2]};S.prototype.fa=function(){return this.get("projection")};S.prototype.getProjection=S.prototype.fa;S.prototype.B=function(){return this.get("resolution")};S.prototype.getResolution=S.prototype.B;function gi(a){var b=a.b,c=Math.log(b/a.f)/Math.log(2);return function(a){return b/Math.pow(2,a*c)}}S.prototype.c=function(){return this.get("rotation")};S.prototype.getRotation=S.prototype.c;
function hi(a){var b=a.b,c=Math.log(b/a.f)/Math.log(2);return function(a){return Math.log(b/a)/Math.log(2)/c}}m=S.prototype;m.P=function(){return this};function ii(a){var b=a.a(),c=a.fa(),d=a.B();a=a.c();return{center:b.slice(),projection:t(c)?c:null,resolution:d,rotation:t(a)?a:0}}m.Re=function(){var a,b=this.B();if(t(b)){var c,d=0;do{c=this.Ia(this.b,d);if(c==b){a=d;break}++d}while(c>this.f)}return a};
m.$c=function(a,b){this.Da(vd(a));var c=Math.max((a[1]-a[0])/b[0],(a[3]-a[2])/b[1]),c=this.Ia(c,0,0);this.kb(c)};m.Xb=function(){return null!=this.a()&&t(this.B())};m.Da=function(a){this.n("center",a)};S.prototype.setCenter=S.prototype.Da;S.prototype.k=function(a){this.n("projection",a)};S.prototype.setProjection=S.prototype.k;S.prototype.kb=function(a){this.n("resolution",a)};S.prototype.setResolution=S.prototype.kb;S.prototype.d=function(a){this.n("rotation",a)};S.prototype.setRotation=S.prototype.d;
S.prototype.p=function(a){a=this.Ia(this.b,a,0);this.kb(a)};function ji(a){N.call(this);this.element=t(a.element)?a.element:null;this.p=a.target;this.a=null;this.e=[]}F(ji,N);ji.prototype.v=function(){Mf(this.element);ji.F.v.call(this)};ji.prototype.$=k("a");ji.prototype.d=ea;ji.prototype.setMap=function(a){null===this.a||Mf(this.element);0!=this.e.length&&(Fa(this.e,Ec),this.e.length=0);this.a=a;null!==this.a&&((t(this.p)?this.p:a.G).appendChild(this.element),this.d!==ea&&this.e.push(L(a,"postrender",this.d,!1,this)))};function ki(a){a=t(a)?a:{};this.g=Hf("UL");var b=Ef("DIV",{"class":(t(a.className)?a.className:"ol-attribution")+" ol-unselectable"},this.g);ji.call(this,{element:b,target:a.target});this.f=!0;this.c={};this.b={}}F(ki,ji);
ki.prototype.d=function(a){a=a.b;if(null===a)this.f&&(pg(this.element,!1),this.f=!1);else{var b,c,d,e,f,g,h,l,n,r=a.Gc,q=rc(a.attributions),w={};b=0;for(c=r.length;b<c;b++)if(d=r[b].ja(),n=x(d).toString(),l=d.e,null!==l)for(d=0,e=l.length;d<e;d++)if(g=l[d],h=x(g).toString(),!(h in q)){f=a.gc[n];var s;if(s=t(f))a:if(null===g.a)s=!0;else{var A=s=void 0,B=void 0,v=void 0;for(v in f)if(v in g.a)for(B=f[v],s=0,A=g.a[v].length;s<A;++s)if(g.a[v][s].a<=B.d&&g.a[v][s].d>=B.a&&g.a[v][s].c<=B.b&&g.a[v][s].b>=
B.c){s=!0;break a}s=!1}s?(h in w&&delete w[h],q[h]=g):w[h]=g}b=[q,w];a=b[0];b=b[1];for(var z in this.c)z in a?(this.b[z]||(pg(this.c[z],!0),this.b[z]=!0),delete a[z]):z in b?(this.b[z]&&(pg(this.c[z],!1),delete this.b[z]),delete b[z]):(Mf(this.c[z]),delete this.c[z],delete this.b[z]);for(z in a)c=Hf("LI"),c.innerHTML=a[z].b,this.g.appendChild(c),this.c[z]=c,this.b[z]=!0;for(z in b)c=Hf("LI"),c.innerHTML=b[z].b,pg(c,!1),this.g.appendChild(c),this.c[z]=c;z=!nc(this.b);this.f!=z&&(pg(this.element,z),
this.f=z)}};function li(a){a=t(a)?a:{};this.c=Hf("UL");var b=Ef("DIV",{"class":(t(a.className)?a.className:"ol-logo")+" ol-unselectable"},this.c);ji.call(this,{element:b,target:a.target});this.b=!0;this.f={}}F(li,ji);
li.prototype.d=function(a){a=a.b;if(null===a)this.b&&(pg(this.element,!1),this.b=!1);else{var b;a=a.Wd;var c=this.f;for(b in c)b in a||(Mf(c[b]),delete c[b]);var d,e;for(b in a)b in c||(d=new Image,d.src=b,e=Hf("LI"),e.appendChild(d),this.c.appendChild(e),c[b]=e);b=!nc(a);this.b!=b&&(pg(this.element,b),this.b=b)}};function mi(a){return 1-Math.pow(1-a,3)};function ni(a){return 3*a*a-2*a*a*a}function oi(a){return a}function pi(a){return 0.5>a?ni(2*a):1-ni(2*(a-0.5))};function qi(a){var b=a.resolution,c=t(a.start)?a.start:ta(),d=t(a.duration)?a.duration:1E3,e=t(a.easing)?a.easing:pi;return function(a,g){if(g.time<c)return g.ta=!0,g.M[0]+=1,!0;if(g.time<c+d){var h=e((g.time-c)/d),l=b-g.C.resolution;g.ta=!0;g.C.resolution+=h*l;g.M[0]+=1;return!0}return!1}}
function ri(a){var b=a.source,c=t(a.start)?a.start:ta(),d=b[0],e=b[1],f=t(a.duration)?a.duration:1E3,g=t(a.easing)?a.easing:ni;return function(a,b){if(b.time<c)return b.ta=!0,b.M[0]+=1,!0;if(b.time<c+f){var n=1-g((b.time-c)/f),r=d-b.C.center[0],q=e-b.C.center[1];b.ta=!0;b.C.center[0]+=n*r;b.C.center[1]+=n*q;b.M[0]+=1;return!0}return!1}}
function si(a){var b=a.rotation,c=t(a.start)?a.start:ta(),d=t(a.duration)?a.duration:1E3,e=t(a.easing)?a.easing:ni;return function(a,g){if(g.time<c)return g.ta=!0,g.M[0]+=1,!0;if(g.time<c+d){var h=1-e((g.time-c)/d),l=b-g.C.rotation;g.ta=!0;g.C.rotation+=h*l;g.M[0]+=1;return!0}return!1}}
function ti(a){var b=a.resolution,c=t(a.start)?a.start:ta(),d=t(a.duration)?a.duration:1E3,e=t(a.easing)?a.easing:ni;return function(a,g){if(g.time<c)return g.ta=!0,g.M[0]+=1,!0;if(g.time<c+d){var h=1-e((g.time-c)/d),l=b-g.C.resolution;g.ta=!0;g.C.resolution+=h*l;g.M[0]+=1;return!0}return!1}};function ui(a){a=t(a)?a:{};var b=t(a.className)?a.className:"ol-zoom",c=t(a.delta)?a.delta:1,d=Ef("A",{href:"#zoomIn","class":b+"-in"});L(d,["touchend","click"],sa(ui.prototype.b,c),!1,this);var e=Ef("A",{href:"#zoomOut","class":b+"-out"});L(e,["touchend","click"],sa(ui.prototype.b,-c),!1,this);b=Ef("DIV",b+" ol-unselectable",d,e);ji.call(this,{element:b,target:a.target})}F(ui,ji);
ui.prototype.b=function(a,b){b.U();var c=this.a,d=c.a().P(),e=d.B();t(e)&&(c.Ha(ti({resolution:e,duration:250,easing:mi})),c=d.Ia(e,a),d.kb(c))};function vi(a){a=t(a)?a:{};var b=new O;(t(a.attribution)?a.attribution:1)&&b.push(new ki(t(a.attributionOptions)?a.attributionOptions:void 0));(t(a.logo)?a.logo:1)&&b.push(new li(t(a.logoOptions)?a.logoOptions:void 0));(t(a.zoom)?a.zoom:1)&&b.push(new ui(t(a.zoomOptions)?a.zoomOptions:void 0));return b};function wi(){this.e=-0.005;this.d=0.05;this.f=100;this.a=[];this.b=this.c=0}function xi(a){var b=ta()-a.f,c=a.a.length-3;if(a.a[c+2]<b)return!1;for(var d=c-3;0<=d&&a.a[d+2]>b;)d-=3;if(0<=d){var b=a.a[c+2]-a.a[d+2],e=a.a[c]-a.a[d],c=a.a[c+1]-a.a[d+1];a.c=Math.atan2(c,e);a.b=Math.sqrt(e*e+c*c)/b;return a.b>a.d}return!1}function yi(a,b){var c=a.e,d=a.b,e=a.d,f=Math.log(a.d/a.b)/a.e;return ri({source:b,duration:f,easing:function(a){return d*(Math.exp(c*a*f)-1)/(e-d)}})};function zi(){}function Ai(a,b,c,d,e){if(null!=c){var f=b.c(),g=b.a();t(f)&&(t(g)&&t(e))&&(a.Ha(si({rotation:f,duration:e,easing:mi})),t(d)&&a.Ha(ri({source:g,duration:e,easing:mi})));if(null!=d){var h=ei(b,c,d);Bi(a,function(){b.Da(h);b.d(c)})}else b.d(c)}}function Ci(a,b,c,d,e){var f=b.B();c=b.Ia(f,c,0);Di(a,b,c,d,e)}
function Di(a,b,c,d,e){if(null!=c){var f=b.B(),g=b.a();t(f)&&(t(g)&&t(e))&&(a.Ha(ti({resolution:f,duration:e,easing:mi})),t(d)&&a.Ha(ri({source:g,duration:e,easing:mi})));if(null!=d){var h=fi(b,c,d);Bi(a,function(){b.Da(h);b.kb(c)})}else b.kb(c)}};function Ei(a){a=t(a)?a:{};this.a=t(a.delta)?a.delta:1}F(Ei,zi);Ei.prototype.xb=function(a){var b=!1,c=a.a;if(a.type==Oh&&(wh||Vb(a.a))){var b=a.map,d=a.d(),c=c.Xa?-this.a:this.a,e=b.a().P();Ci(b,e,c,d,250);a.U();b=!0}return!b};function Fi(a){return a.va&&!a.Gb&&a.Xa}function Gi(a){return"click"==a.type}function Hi(a){return!a.va&&!a.Gb&&!a.Xa}function Ii(a){return!a.va&&!a.Gb&&a.Xa}function Ji(a){a=a.target.tagName;return"INPUT"!==a&&"SELECT"!==a&&"TEXTAREA"!==a};function Ki(){this.c=!1;this.r=this.i=this.e=this.d=0;this.fc=this.g=null}F(Ki,zi);m=Ki.prototype;m.Ac=ea;m.Ub=ea;m.Vb=Re;m.Sd=ea;
m.xb=function(a){var b=a.map;if(!b.Xb())return!0;var c=!1,b=b.a(),d=a.a;a.type==Rh&&this.Sd(a);if(this.c)a.type==Th?(this.oa=d.clientX-this.d,this.ma=d.clientY-this.e,this.Ac(a)):a.type==Qh&&(this.oa=d.clientX-this.d,this.ma=d.clientY-this.e,this.Ub(a),Zh(b,-1),this.c=!1);else if(a.type==Sh){var e=ii(b.P());this.d=d.clientX;this.e=d.clientY;this.ma=this.oa=0;this.g=e.center;this.fc=a.d();this.Vb(a)&&(Zh(b,1),this.c=!0,a.U(),c=!0)}return!c};function Li(a){Ki.call(this);a=t(a)?a:{};this.f=t(a.condition)?a.condition:Hi;this.a=a.kinetic;this.b=null}F(Li,Ki);Li.prototype.Ac=function(a){this.a&&this.a.a.push(a.a.clientX,a.a.clientY,ta());a=a.map;var b=a.a(),c=ii(b),d=[-c.resolution*this.oa,c.resolution*this.ma];id(d,c.rotation);gd(d,this.g);Mi(a);b.Da(d)};
Li.prototype.Ub=function(a){a=a.map;var b=a.a().P();if(this.a&&xi(this.a)){var c=ii(b),d=(this.a.d-this.a.b)/this.a.e,e=this.a.c;this.b=yi(this.a,c.center);a.Ha(this.b);c=Ni(a,c.center);d=Mh(a,[c[0]-d*Math.cos(e),c[1]-d*Math.sin(e)]);b.Da(d)}Mi(a)};Li.prototype.Vb=function(a){var b=a.a;if(Vb(b)&&this.f(b)){if(this.a){var c=this.a;c.a.length=0;c.c=0;c.b=0;this.a.a.push(b.clientX,b.clientY,ta())}Mi(a.map);return!0}return!1};
Li.prototype.Sd=function(a){var b=a.map,c=b.a();null!==this.b&&Oa(b.g,this.b)&&(Mi(b),c.Da(a.b.C.center),this.b=null)};function Oi(a){a=t(a)?a:{};Ki.call(this);this.b=t(a.condition)?a.condition:Fi;this.a=void 0}F(Oi,Ki);Oi.prototype.Ac=function(a){var b=a.map,c=b.c();a=a.e();c=Math.atan2(c[1]/2-a[1],a[0]-c[0]/2);if(t(this.a)){a=c-this.a;var d=b.a().P(),e=ii(d);Mi(b);Ai(b,d,e.rotation-a)}this.a=c};Oi.prototype.Ub=function(a){a=a.map;var b=a.a().P(),c=ii(b).rotation,c=b.kc(c,0);Ai(a,b,c,void 0,250)};Oi.prototype.Vb=function(a){var b=a.a;return Vb(b)&&this.b(b)?(Mi(a.map),this.a=void 0,!0):!1};function Pi(a){var b=Ef("DIV","ol-dragbox");this.b=null;this.c=a.fc;ji.call(this,{element:b})}F(Pi,ji);Pi.prototype.setMap=function(a){Pi.F.setMap.call(this,a);null!==a&&(this.b=Ni(a,this.c),eg(this.element,this.b[0],this.b[1]),rg(this.element,new xf(0,0)),this.e.push(L(a,Th,this.f,!1,this)))};Pi.prototype.f=function(a){var b=this.a;a=a.d();b=Ni(b,a);eg(this.element,Math.min(b[0],this.b[0]),Math.min(b[1],this.b[1]));rg(this.element,new xf(Math.abs(b[0]-this.b[0]),Math.abs(b[1]-this.b[1])))};function Qi(a){Ki.call(this);a=t(a)?a:{};this.b=t(a.condition)?a.condition:Ii;this.a=null}F(Qi,Ki);Qi.prototype.Ub=function(a){this.a.setMap(null);this.a=null;if(64<=this.oa*this.oa+this.ma*this.ma){var b=a.map,c=md([this.fc,a.d()]);Bi(b,function(){var a=b.a(),e=b.c();a.$c(c,e);a.d(0)})}};Qi.prototype.Vb=function(a){var b=a.a;return Vb(b)&&this.b(b)?(this.a=new Pi({fc:this.fc}),this.a.setMap(a.map),!0):!1};function Ri(a){a=t(a)?a:{};this.a=t(a.condition)?a.condition:Xe(Hi,Ji);this.b=t(a.delta)?a.delta:128}F(Ri,zi);Ri.prototype.xb=function(a){var b=!1;if("key"==a.type){var c=a.a,d=c.Wa;if(this.a(c)&&(40==d||37==d||39==d||38==d)){var b=a.map,c=b.a(),e=ii(c),f=e.resolution*this.b,g=0,h=0;40==d?h=-f:37==d?g=-f:39==d?g=f:h=f;d=[g,h];id(d,e.rotation);e=c.a();t(e)&&(t(100)&&b.Ha(ri({source:e,duration:100,easing:oi})),c.Da([e[0]+d[0],e[1]+d[1]]));a.U();b=!0}}return!b};function Si(a){a=t(a)?a:{};this.b=t(a.condition)?a.condition:Xe(Hi,Ji);this.a=t(a.delta)?a.delta:1}F(Si,zi);Si.prototype.xb=function(a){var b=!1;if("key"==a.type){var c=a.a,d=c.fd;!this.b(c)||43!=d&&45!=d||(b=a.map,d=43==d?this.a:-this.a,Mi(b),c=b.a().P(),Ci(b,c,d,void 0,100),a.U(),b=!0)}return!b};function Ti(){this.a=0;this.c=null;this.d=this.b=void 0}F(Ti,zi);Ti.prototype.xb=function(a){var b=!1;if("mousewheel"==a.type){var b=a.map,c=a.a;this.c=a.d();this.a+=c.ma/3;t(this.b)||(this.b=ta());c=Math.max(80-(ta()-this.b),0);p.clearTimeout(this.d);this.d=p.setTimeout(y(this.e,this,b),c);a.U();b=!0}return!b};Ti.prototype.e=function(a){var b=Yc(this.a,-1,1),c=a.a().P();Mi(a);Ci(a,c,-b,this.c,250);this.a=0;this.c=null;this.d=this.b=void 0};function Ui(){this.c=!1;this.i={};this.targetTouches=[]}F(Ui,zi);function Vi(a){for(var b=a.length,c=0,d=0,e=0;e<b;e++)c+=a[e].clientX,d+=a[e].clientY;return[c/b,d/b]}Ui.prototype.f=ea;Ui.prototype.e=Re;Ui.prototype.g=Re;
Ui.prototype.xb=function(a){var b=a.map.a(),c=a.type;if(c===Uh||c===Vh||c===Wh)c=a.a.ea,t(c.targetTouches)?this.targetTouches=c.targetTouches:t(c.pointerId)&&(a.type==Wh?delete this.i[c.pointerId]:this.i[c.pointerId]=c,this.targetTouches=jc(this.i));this.c&&(a.type==Vh?this.f(a):a.type==Wh&&((this.c=this.e(a))||Zh(b,-1)));a.type==Uh&&(a=this.g(a),!this.c&&a&&Zh(b,1),this.c=a);return!0};function Wi(a){Ui.call(this);this.a=(t(a)?a:{}).kinetic;this.b=this.d=null;this.V=!1}F(Wi,Ui);Wi.prototype.f=function(a){var b=Vi(this.targetTouches);if(null!==this.b){this.a&&this.a.a.push(b[0],b[1],ta());var c=this.b[0]-b[0],d=b[1]-this.b[1];a=a.map;var e=a.a().P(),f=ii(e),c=[c,d],d=f.resolution;c[0]*=d;c[1]*=d;id(c,f.rotation);gd(c,f.center);Mi(a);e.Da(c)}this.b=b};
Wi.prototype.e=function(a){a=a.map;var b=a.a();if(0===this.targetTouches.length){if(!this.V&&this.a&&xi(this.a)){var c=(this.a.d-this.a.b)/this.a.e,d=this.a.c,e=b.a();this.d=yi(this.a,e);a.Ha(this.d);e=Ni(a,e);c=Mh(a,[e[0]-c*Math.cos(d),e[1]-c*Math.sin(d)]);b.Da(c)}Mi(a);return!1}this.b=null;return!0};
Wi.prototype.g=function(a){if(0<this.targetTouches.length){var b=a.map,c=b.a();this.b=null;Mi(b);null!==this.d&&Oa(b.g,this.d)&&(c.Da(a.b.C.center),this.d=null);this.a&&(a=this.a,a.a.length=0,a.c=0,a.b=0);this.V=1<this.targetTouches.length;return!0}return!1};function Xi(a){Ui.call(this);a=t(a)?a:{};this.b=null;this.d=void 0;this.a=!1;this.V=0;this.r=t(a.Jf)?a.Jf:0.3}F(Xi,Ui);Xi.prototype.f=function(a){var b=0,c=this.targetTouches[0],d=this.targetTouches[1],c=Math.atan2(d.clientY-c.clientY,d.clientX-c.clientX);t(this.d)&&(b=c-this.d,this.V+=b,!this.a&&Math.abs(this.V)>this.r&&(this.a=!0));this.d=c;a=a.map;c=kg(a.b);d=Vi(this.targetTouches);d[0]-=c.x;d[1]-=c.y;this.b=Mh(a,d);this.a&&(c=a.a().P(),d=ii(c),Mi(a),Ai(a,c,d.rotation+b,this.b))};
Xi.prototype.e=function(a){if(2>this.targetTouches.length){a=a.map;var b=a.a().P(),c=ii(b);if(this.a){var c=c.rotation,d=this.b,c=b.kc(c,0);Ai(a,b,c,d,250)}return!1}return!0};Xi.prototype.g=function(a){return 2<=this.targetTouches.length?(a=a.map,this.b=null,this.d=void 0,this.a=!1,this.V=0,Mi(a),!0):!1};function Yi(){Ui.call(this);this.b=null;this.a=void 0;this.d=1}F(Yi,Ui);Yi.prototype.f=function(a){var b=1,c=this.targetTouches[0],d=this.targetTouches[1],e=c.clientX-d.clientX,c=c.clientY-d.clientY,e=Math.sqrt(e*e+c*c);t(this.a)&&(b=this.a/e);this.a=e;1!=b&&(this.d=b);a=a.map;var e=a.a().P(),c=ii(e),d=kg(a.b),f=Vi(this.targetTouches);f[0]-=d.x;f[1]-=d.y;this.b=Mh(a,f);Mi(a);Di(a,e,c.resolution*b,this.b)};
Yi.prototype.e=function(a){if(2>this.targetTouches.length){a=a.map;var b=a.a().P(),c=ii(b).resolution,d=this.b,c=b.Ia(c,0,this.d-1);Di(a,b,c,d,400);return!1}return!0};Yi.prototype.g=function(a){return 2<=this.targetTouches.length?(a=a.map,this.b=null,this.a=void 0,this.d=1,Mi(a),!0):!1};function Zi(a){a=t(a)?a:{};var b=new O,c=new wi;(t(a.altShiftDragRotate)?a.altShiftDragRotate:1)&&b.push(new Oi);(t(a.doubleClickZoom)?a.doubleClickZoom:1)&&b.push(new Ei({delta:a.zoomDelta}));(t(a.touchPan)?a.touchPan:1)&&b.push(new Wi({kinetic:c}));(t(a.touchRotate)?a.touchRotate:1)&&b.push(new Xi);(t(a.touchZoom)?a.touchZoom:1)&&b.push(new Yi);(t(a.dragPan)?a.dragPan:1)&&b.push(new Li({kinetic:c}));if(t(a.keyboard)?a.keyboard:1)b.push(new Ri),b.push(new Si({delta:a.zoomDelta}));(t(a.mouseWheelZoom)?
a.mouseWheelZoom:1)&&b.push(new Ti);(t(a.shiftDragZoom)?a.shiftDragZoom:1)&&b.push(new Qi);return b};function $i(a){var b=t(a)?a:{};a=rc(b);delete a.layers;b=b.layers;R.call(this,a);this.a=null;L(this,Tc("layers"),this.af,!1,this);t(b)?ia(b)&&(b=new O(Ra(b))):b=new O;this.c(b)}F($i,R);m=$i.prototype;m.Bc=function(){this.b()&&Fh(this)};m.Td=function(){Fh(this)};
m.af=function(){null!==this.a&&(Fa(jc(this.a),Ec),this.a=null);var a=this.gb();if(null!=a){this.a={add:L(a,"add",this.$e,!1,this),remove:L(a,"remove",this.bf,!1,this)};var a=a.a,b,c,d;b=0;for(c=a.length;b<c;b++)d=a[b],this.a[x(d).toString()]=L(d,"change",this.Bc,!1,this)}Fh(this)};m.$e=function(a){a=a.a;this.a[x(a).toString()]=L(a,"change",this.Bc,!1,this);Fh(this)};m.bf=function(a){a=x(a.a).toString();Ec(this.a[a]);delete this.a[a];Fh(this)};m.gb=function(){return this.get("layers")};
$i.prototype.getLayers=$i.prototype.gb;$i.prototype.c=function(a){this.n("layers",a)};$i.prototype.setLayers=$i.prototype.c;$i.prototype.Ob=function(a){var b=t(a)?a:[];this.gb().forEach(function(a){a.Ob(b)});return b};
$i.prototype.bd=function(a){var b=t(a)?a:{layers:[],ra:[]},c=b.layers.length;this.gb().forEach(function(a){a.bd(b)});a=Gh(this);var d,e;for(d=b.ra.length;c<d;c++)e=b.ra[c],e.brightness=Yc(e.brightness+a.brightness,-1,1),e.contrast*=a.contrast,e.hue+=a.hue,e.opacity*=a.opacity,e.saturation*=a.saturation,e.visible=e.visible&&a.visible;return b};$i.prototype.Ba=function(){return null===Ma(this.gb().a,function(a){return!a.Ba()})};function aj(a){return Math.pow(2,Math.ceil(Math.log(a)/Math.LN2))};function bj(a){Jd.call(this,{code:a,units:"m",extent:cj,global:!0})}F(bj,Jd);var dj=6378137*Math.PI,cj=[-dj,dj,-dj,dj],be=Ia(["EPSG:3857","EPSG:102100","EPSG:102113","EPSG:900913","urn:ogc:def:crs:EPSG:6.18:3:3857"],function(a){return new bj(a)});function ce(a,b,c){var d=a.length;c=1<c?c:2;t(b)||(b=2<c?a.slice():Array(d));for(var e=0;e<d;e+=c)b[e]=6378137*Math.PI*a[e]/180,b[e+1]=6378137*Math.log(Math.tan(Math.PI*(a[e+1]+90)/360));return b}
function de(a,b,c){var d=a.length;c=1<c?c:2;t(b)||(b=2<c?a.slice():Array(d));for(var e=0;e<d;e+=c)b[e]=180*a[e]/(6378137*Math.PI),b[e+1]=360*Math.atan(Math.exp(a[e+1]/6378137))/Math.PI-90;return b}bj.prototype.b=function(a,b){return a/((Math.exp(b[1]/6378137)+Math.exp(-(b[1]/6378137)))/2)};function ej(a,b){Jd.call(this,{code:a,units:"degrees",extent:fj,axisOrientation:b,global:!0})}F(ej,Jd);var fj=[-180,180,-90,90],ee=[new ej("CRS:84"),new ej("EPSG:4326","neu"),new ej("urn:ogc:def:crs:EPSG:6.6:4326","neu"),new ej("urn:ogc:def:crs:OGC:1.3:CRS84"),new ej("urn:ogc:def:crs:OGC:2:84"),new ej("http://www.opengis.net/gml/srs/epsg.xml#4326","neu"),new ej("urn:x-ogc:def:crs:EPSG:4326","neu")];ej.prototype.b=function(a){return a};function gj(){Rd(be);Rd(ee);Vd()};function hj(a,b,c,d,e){Mc.call(this);this.e=e;this.f=a;this.i=c;this.g=b;this.b=new Image;null!==d&&(this.b.crossOrigin=d);this.d={};this.c=null;this.a=0}F(hj,Mc);hj.prototype.ba=k("f");function ij(a,b){if(t(b)){var c,d=x(b);if(d in a.d)return a.d[d];c=nc(a.d)?a.b:a.b.cloneNode(!1);return a.d[d]=c}return a.b}hj.prototype.B=k("g");hj.prototype.r=function(){this.a=3;Fa(this.c,Ec);this.c=null;M(this,"change")};hj.prototype.k=function(){this.a=2;Fa(this.c,Ec);this.c=null;M(this,"change")};
function jj(a){0==a.a&&(a.a=1,a.c=[Bc(a.b,"error",a.r,!1,a),Bc(a.b,"load",a.k,!1,a)],a.b.src=a.i)};function kj(a){this.minZoom=t(a.minZoom)?a.minZoom:0;this.a=a.resolutions;this.maxZoom=this.a.length-1;this.d=t(a.origin)?a.origin:null;this.f=null;t(a.origins)&&(this.f=a.origins);this.b=null;t(a.tileSizes)&&(this.b=a.tileSizes);this.e=t(a.tileSize)?a.tileSize:null===this.b?[256,256]:null}var lj=new Xa(0,0,0);m=kj.prototype;m.tc=function(a,b,c,d,e){e=mj(this,a,e);for(a=a.z-1;a>=this.minZoom;){if(b.call(c,a,nj(this,e,a,d)))return!0;--a}return!1};m.Me=k("minZoom");
m.Fb=function(a){return null===this.d?this.f[a]:this.d};m.B=function(a){return this.a[a]};m.Qb=k("a");m.xc=function(a,b,c){return a.z<this.maxZoom?(c=mj(this,a,c),nj(this,c,a.z+1,b)):null};function oj(a,b,c,d){pj(a,b[0],b[2],c,!1,lj);var e=lj.x,f=lj.y;pj(a,b[1],b[3],c,!0,lj);return ab(e,lj.x,f,lj.y,d)}function nj(a,b,c,d){c=a.B(c);return oj(a,b,c,d)}function qj(a,b){var c=a.Fb(b.z),d=a.B(b.z),e=a.Aa(b.z);return[c[0]+(b.x+0.5)*e[0]*d,c[1]+(b.y+0.5)*e[1]*d]}
function mj(a,b,c){var d=a.Fb(b.z),e=a.B(b.z);a=a.Aa(b.z);var f=d[0]+b.x*a[0]*e;b=d[1]+b.y*a[1]*e;return pd(f,f+a[0]*e,b,b+a[1]*e,c)}function pj(a,b,c,d,e,f){var g=$h(a.a,d,0),h=d/a.B(g),l=a.Fb(g);a=a.Aa(g);b=h*(b-l[0])/(d*a[0]);c=h*(c-l[1])/(d*a[1]);e?(b=Math.ceil(b)-1,c=Math.ceil(c)-1):(b=Math.floor(b),c=Math.floor(c));e=b;t(f)?(f.z=g,f.x=e,f.y=c):f=new Xa(g,e,c);return f}function rj(a,b,c){c=a.B(c);return pj(a,b[0],b[1],c,!1,void 0)}m.Aa=function(a){return null===this.e?this.b[a]:this.e};
function sj(a){var b=a.d;if(null===b){for(var b=a.ba(),c=null===b?360*Id.degrees/a.Pb():Math.max(b[1]-b[0],b[3]-b[2]),d=t(void 0)?void 0:[256,256],e=Array((t(void 0)?NaN:42)+1),c=c/Math.max(d[0],d[1]),f=0,g=e.length;f<g;++f)e[f]=c/Math.pow(2,f);b=new kj({origin:null===b?[0,0]:ud(b),resolutions:e,tileSize:d});a.d=b}return b};function Rj(a){Hh.call(this,{attributions:a.attributions,extent:a.extent,logo:a.logo,projection:a.projection});this.G=t(a.opaque)?a.opaque:!1;this.tileGrid=t(a.tileGrid)?a.tileGrid:null}F(Rj,Hh);m=Rj.prototype;m.od=Re;m.Zc=function(a,b,c,d){var e=!0,f,g,h,l;for(h=d.a;h<=d.d;++h)for(l=d.c;l<=d.b;++l)g=this.eb(c,h,l),a[c]&&a[c][g]||(f=b(c,h,l),null===f?e=!1:(a[c]||(a[c]={}),a[c][g]=f));return e};m.eb=function(a,b,c){return[a,b,c].join("/")};m.Qb=function(){return this.tileGrid.Qb()};m.Pe=k("tileGrid");
m.ne=ea;function Sj(a,b){cb.call(this);this.a=a;this.b=b}F(Sj,cb);Sj.prototype.Ua=function(a,b,c){var d=this.b,e=d.ja();ma(e.Ua)&&e.Ua(a,this.a.f,function(a){b(a,d)},c)};Sj.prototype.k=function(a){2===a.target.a&&(a=this.b,a.b()&&a.Ba()&&Tj(this.a.f))};function Uj(a,b){b.od()&&a.ib.push(sa(function(a,b,e){b=x(a).toString();a.Nb(e.gc[b])},b))}function Vj(a,b){if(null!=b){var c,d,e;d=0;for(e=b.length;d<e;++d)c=b[d],a[x(c).toString()]=c}}function Wj(a,b){var c=b.f;t(c)&&(a.Wd[c]=!0)}
function Xj(a,b,c,d){b=x(b).toString();c=c.toString();b in a?c in a[b]?(a=a[b][c],d.a<a.a&&(a.a=d.a),d.d>a.d&&(a.d=d.d),d.c<a.c&&(a.c=d.c),d.b>a.b&&(a.b=d.b)):a[b][c]=d:(a[b]={},a[b][c]=d)}function Yj(a,b,c){return function(d,e,f){d=b.c(d,e,f,c);return a(d)?d:null}}function Zj(a,b,c){return[b*(Math.round(a[0]/b)+c[0]%2/2),b*(Math.round(a[1]/b)+c[1]%2/2)]}
function ak(a,b,c,d,e,f,g,h,l){var n=x(b).toString();n in a.Kb||(a.Kb[n]={});var r=a.Kb[n];a=a.Zf;var q=c.minZoom,w,s,A,B,v,z;for(z=f;z>=q;--z)for(s=nj(c,e,z),A=c.B(z),B=s.a;B<=s.d;++B)for(v=s.c;v<=s.b;++v)f-z<=g?(w=b.c(z,B,v,d),0==w.a&&(r[w.L.toString()]=!0,w.c()in a.c||Bh(a,[w,n,qj(c,w.L),A])),t(h)&&h.call(l,w)):b.ne(z,B,v)};function bk(a,b){cb.call(this);this.f=b;this.d={}}F(bk,cb);
function ck(a){var b=a.C,c=a.Ed;ph(c);th(c,a.size[0]/2,a.size[1]/2);uh(c,1/b.resolution,-1/b.resolution);vh(c,-b.rotation);th(c,-b.center[0],-b.center[1]);a=a.ee;var b=c[0],d=c[1],e=c[2],f=c[3],g=c[4],h=c[5],l=c[6],n=c[7],r=c[8],q=c[9],w=c[10],s=c[11],A=c[12],B=c[13],v=c[14],c=c[15],z=b*h-d*g,I=b*l-e*g,D=b*n-f*g,K=d*l-e*h,T=d*n-f*h,W=e*n-f*l,E=r*B-q*A,H=r*v-w*A,ka=r*c-s*A,aa=q*v-w*B,da=q*c-s*B,fa=w*c-s*v,Z=z*fa-I*da+D*aa+K*ka-T*H+W*E;0!=Z&&(Z=1/Z,a[0]=(h*fa-l*da+n*aa)*Z,a[1]=(-d*fa+e*da-f*aa)*Z,a[2]=
(B*W-v*T+c*K)*Z,a[3]=(-q*W+w*T-s*K)*Z,a[4]=(-g*fa+l*ka-n*H)*Z,a[5]=(b*fa-e*ka+f*H)*Z,a[6]=(-A*W+v*D-c*I)*Z,a[7]=(r*W-w*D+s*I)*Z,a[8]=(g*da-h*ka+n*E)*Z,a[9]=(-b*da+d*ka-f*E)*Z,a[10]=(A*T-B*D+c*z)*Z,a[11]=(-r*T+q*D-s*z)*Z,a[12]=(-g*aa+h*H-l*E)*Z,a[13]=(b*aa-d*H+e*E)*Z,a[14]=(-A*K+B*I-v*z)*Z,a[15]=(r*K-q*I+w*z)*Z)}m=bk.prototype;m.lc=function(a){return new Sj(this,a)};m.v=function(){fc(this.d,function(a){gb(a)});bk.F.v.call(this)};m.vc=Te;
m.Ua=function(a,b,c,d){function e(a,d){g[Ea(b,d)]=a;--f;f||c(g)}for(var f=b.length,g=Array(f),h,l=0;l<f;++l)h=b[l],h=dk(this,h),ma(h.Ua)?h.Ua(a,e,d):--f};function ek(a,b,c,d,e){function f(a,b){h[Ea(c,b)]=a;--g;g||d(h)}for(var g=c.length,h=Array(g),l,n=0;n<g;++n)l=c[n],l=dk(a,l),ma(l.nd)?l.nd(b,f,e):--g}function dk(a,b){var c=x(b).toString();if(c in a.d)return a.d[c];var d=a.lc(b);return a.d[c]=d}m.Ic=ea;
m.Sf=function(a,b){for(var c in this.d)if(!(null!==b&&c in b.ra)){var d=this.d[c];delete this.d[c];gb(d)}};function fk(a,b){for(var c in a.d)if(!(c in b.ra)){b.ib.push(y(a.Sf,a));break}};function gk(a,b){var c=hk;return function(d,e,f){return c(a,b,d,e,f)}}function ik(){};function jk(a){Hh.call(this,{attributions:a.attributions,extent:a.extent,logo:a.logo,projection:a.projection});this.Eb=t(a.Eb)?a.Eb:ik;this.i=t(a.crossOrigin)?a.crossOrigin:null;this.c=t(a.resolutions)?a.resolutions:null}F(jk,Hh);function kk(a,b,c,d,e){var f=null;d=a.Eb(b,d,e);t(d)&&(f=new hj(b,c,d,a.i,a.e));return f};function lk(a){Jh.call(this,a)}F(lk,Jh);function mk(a){Jh.call(this,a);this.q(t(a.preload)?a.preload:0)}F(mk,Jh);mk.prototype.c=function(){return this.get("preload")};mk.prototype.getPreload=mk.prototype.c;mk.prototype.q=function(a){this.n("preload",a)};mk.prototype.setPreload=mk.prototype.q;function nk(){}function ok(a,b){this.c=a;this.b=b}F(ok,nk);ok.prototype.a=function(a,b,c){var d=this.c.a(null!=b?b:a);if(!d||!ma(d))throw Error("Expected function but found "+d);for(var e=t(c)?c:{},f=this.b.length,g=Array(f),h=0;h<f;++h)g[h]=this.b[h].a(a,b,c);return d.apply(e,g)};var pk={zg:"\x3d\x3d",Vg:"!\x3d",$g:"\x3d\x3d\x3d",ah:"!\x3d\x3d",Cg:"\x3e",Jg:"\x3c",Dg:"\x3e\x3d",Kg:"\x3c\x3d"};function qk(a,b,c){this.b=a;this.Na=b;this.Qa=c}F(qk,nk);
var rk=function(){var a={},b;for(b in pk)a[pk[b]]=!0;return function(b){return!!a[b]}}();qk.prototype.a=function(a,b,c){var d;d=this.Qa.a(a,b,c);a=this.Na.a(a,b,c);b=this.b;if("\x3d\x3d"===b)d=a==d;else if("!\x3d"===b)d=a!=d;else if("\x3d\x3d\x3d"===b)d=a===d;else if("!\x3d\x3d"===b)d=a!==d;else if("\x3e"===b)d=a>d;else if("\x3c"===b)d=a<d;else if("\x3e\x3d"===b)d=a>=d;else if("\x3c\x3d"===b)d=a<=d;else throw Error("Unsupported comparison operator: "+this.b);return d};function sk(a){this.b=a}
F(sk,nk);sk.prototype.a=function(a){if(null==a)throw Error("Attempt to evaluate identifier with no scope");return a[this.b]};function U(a){this.ab=a}F(U,nk);U.prototype.a=k("ab");var tk={kg:"\x26\x26",Wg:"||"};function uk(a,b,c){this.b=a;this.Na=b;this.Qa=c}F(uk,nk);var vk=function(){var a={},b;for(b in tk)a[tk[b]]=!0;return function(b){return!!a[b]}}();
uk.prototype.a=function(a,b,c){var d;d=this.Qa.a(a,b,c);a=this.Na.a(a,b,c);if("\x26\x26"===this.b)d=a&&d;else if("||"===this.b)d=a||d;else throw Error("Unsupported logical operator: "+this.b);return d};var wk={jg:"+",bh:"-",Rg:"*",sg:"/",Ng:"%"};function xk(a,b,c){this.b=a;this.Na=b;this.Qa=c}F(xk,nk);var yk=function(){var a={},b;for(b in wk)a[wk[b]]=!0;return function(b){return!!a[b]}}();
xk.prototype.a=function(a,b,c){var d;d=this.Qa.a(a,b,c);a=this.Na.a(a,b,c);b=this.b;if("+"===b)d=a+d;else if("-"===b)d=Number(a)-Number(d);else if("*"===b)d=Number(a)*Number(d);else if("/"===b)d=Number(a)/Number(d);else if("%"===b)d=Number(a)%Number(d);else throw Error("Unsupported math operator: "+this.b);return d};function zk(a,b){this.b=a;this.c=b}F(zk,nk);zk.prototype.a=function(a,b,c){a=this.b.a(a,b,c);if(!na(a))throw Error("Expected member expression to evaluate to an object but got "+a);return this.c.a(a)};
function Ak(a){this.b=a}F(Ak,nk);Ak.prototype.a=function(a,b,c){return!this.b.a(a,b,c)};function Bk(a){this.b=a;this.c=a.length;this.d=this.a=0}function Ck(a,b){if(!a.match(b))throw new Dk({type:"Unknown",value:a.b[a.a],index:a.a});a.a=a.d}function Ek(a,b){a.a+=b}function Fk(a){return 48<=a&&57>=a}function Gk(a){return 36===a||95===a||65<=a&&90>=a||97<=a&&122>=a}function Hk(a){return a.b.charCodeAt(a.a+0)}Bk.prototype.match=function(a){var b=Ik(this);return"Punctuator"===b.type&&b.value===a};
function Jk(a){var b;for(b=NaN;a.a<a.c;)if(b=Hk(a),32===b||9===b||11===b||12===b||160===b||5760<=b&&0<"\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005"+"\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\ufeff".indexOf(String.fromCharCode(b)))Ek(a,1);else break;if(a.a>=a.c)a={type:"\x3cend\x3e",value:null,index:a.a};else if(40===b||41===b)a=Kk(a,b);else if(39===b||34===b){var c=a.a;Ek(a,1);for(var d="",e;a.a<a.c;){e=Hk(a);Ek(a,1);if(e===b){b=0;break}92===e?(d+=a.b[a.a],Ek(a,1)):d+=String.fromCharCode(e)}if(0!==
b)throw new Dk(Ik(a));a={type:"String",value:d,index:c}}else if(Gk(b)){c=b;b=a.a;for(Ek(a,1);a.a<a.c;)if(c=Hk(a),Gk(c)||48<=c&&57>=c)Ek(a,1);else break;a=a.b.slice(b,a.a);a={type:1===a.length?"Identifier":"break"===a||"case"===a||"catch"===a||"continue"===a||"debugger"===a||"default"===a||"delete"===a||"do"===a||"else"===a||"finally"===a||"for"===a||"function"===a||"if"===a||"in"===a||"instanceof"===a||"new"===a||"return"===a||"switch"===a||"this"===a||"throw"===a||"try"===a||"typeof"===a||"var"===
a||"void"===a||"while"===a||"with"===a?"Keyword":"null"===a?"Null":"true"===a||"false"===a?"Boolean":"Identifier",value:a,index:b}}else a=46===b?Fk(a.b.charCodeAt(a.a+1))?Lk(a,b):Kk(a,b):Fk(b)?Lk(a,b):Kk(a,b);return a}function Ik(a){var b=a.a,c=Jk(a);a.d=a.a;a.a=b;return c}
function Lk(a,b){var c="",d=a.a;if(46!==b){if(48===b){var e=a.b.charCodeAt(a.a+1);if(88===e||120===e){Ek(a,2);c=Hk(a);d="";for(e=a.a-2;a.a<a.c&&(Fk(c)||97<=c&&102>=c||65<=c&&70>=c);)d+=String.fromCharCode(c),Ek(a,1),c=Hk(a);if(0===d.length||Gk(c))throw new Dk({type:"Unknown",value:String.fromCharCode(c),index:a.a});return{type:"Numeric",value:parseInt("0x"+d,16),index:e}}if(48<=e&&55>=e){Ek(a,1);d="0"+String.fromCharCode(e);e=a.a-1;for(Ek(a,1);a.a<a.c;){c=Hk(a);if(!(48<=c&&55>=c))break;d+=String.fromCharCode(c);
Ek(a,1)}c=Hk(a);if(Gk(c)||Fk(c))throw new Dk({type:"Unknown",value:String.fromCharCode(c),index:a.a});return{type:"Numeric",value:parseInt(d,8),index:e}}if(Fk(e))throw new Dk({type:"Unknown",value:String.fromCharCode(e),index:a.a});}for(;Fk(b);)c+=String.fromCharCode(b),Ek(a,1),b=Hk(a)}if(46===b)for(c+=String.fromCharCode(b),Ek(a,1),b=Hk(a);Fk(b);)c+=String.fromCharCode(b),Ek(a,1),b=Hk(a);if(69===b||101===b){c+="E";Ek(a,1);b=Hk(a);if(43===b||45===b)c+=String.fromCharCode(b),Ek(a,1),b=Hk(a);if(!Fk(b))throw new Dk({type:"Unknown",
value:String.fromCharCode(b),index:a.a});for(;Fk(b);)c+=String.fromCharCode(b),Ek(a,1),b=Hk(a)}if(Gk(b))throw new Dk({type:"Unknown",value:String.fromCharCode(b),index:a.a});return{type:"Numeric",value:parseFloat(c),index:d}}
function Kk(a,b){var c=a.a;if(46===b||40===b||41===b||44===b||43===b||45===b||42===b||47===b||37===b||126===b)return Ek(a,1),{type:"Punctuator",value:String.fromCharCode(b),index:c};var d=a.b.charCodeAt(a.a+1);if(61===d){if(33===b||61===b)return Ek(a,2),61===Hk(a)?(Ek(a,1),{type:"Punctuator",value:String.fromCharCode(b)+"\x3d\x3d",index:c}):{type:"Punctuator",value:String.fromCharCode(b)+"\x3d",index:c};if(62===b||60===b)return Ek(a,2),{type:"Punctuator",value:String.fromCharCode(b)+"\x3d",index:c}}if(b===
d&&(124===b||38===b))return Ek(a,2),d=String.fromCharCode(b),{type:"Punctuator",value:d+d,index:c};if(62===b||60===b||33===b||38===b||124===b)return Ek(a,1),{type:"Punctuator",value:String.fromCharCode(b),index:c};throw new Dk({type:"Unknown",value:String.fromCharCode(b),index:a.a});}function Dk(a,b){ua.call(this,t(b)?b:"Unexpected token "+a.value+" at index "+a.index);this.a=a}F(Dk,ua);Dk.prototype.name="UnexpectedToken";function Mk(){}function Nk(a){var b=0;if("Punctuator"!==a.type)return b;switch(a.value){case "||":b=1;break;case "\x26\x26":b=2;break;case "\x3d\x3d":case "!\x3d":case "\x3d\x3d\x3d":case "!\x3d\x3d":b=3;break;case "\x3e":case "\x3c":case "\x3e\x3d":case "\x3c\x3d":b=4;break;case "+":case "-":b=5;break;case "*":case "/":case "%":b=6}return b}
function Ok(a,b,c){if(rk(a))a=new qk(a,b,c);else if(vk(a))a=new uk(a,b,c);else if(yk(a))a=new xk(a,b,c);else throw Error("Unsupported binary operator: "+a);return a}function Pk(a){return new U(a)}function Qk(a){var b=new Bk(a);a=Rk(new Mk,b);b=Ik(b);if("\x3cend\x3e"!==b.type)throw new Dk(b);return a}
function Rk(a,b){var c=Sk(a,b),d=Ik(b),e=Nk(d);if(0===e)return c;b.a=b.d;for(var f=Sk(a,b),g=[c,d,f],e=Nk(Ik(b));0<e;){for(;2<g.length&&e<=Nk(g[g.length-2]);)f=g.pop(),d=g.pop(),c=g.pop(),g.push(Ok(d.value,c,f));g.push(Jk(b));g.push(Sk(a,b));e=Nk(Ik(b))}c=g.length-1;for(d=g[c];1<c;)d=Ok(g[c-1].value,g[c-2],d),c-=2;return d}
function Tk(a,b){var c;c=Ik(b);if("("===c.value)Ck(b,"("),c=Rk(a,b),Ck(b,")");else{b.a=b.d;var d=c.type;if("Identifier"===d)c=new sk(c.value);else if("String"===d||"Numeric"===d)c=Pk(c.value);else if("Boolean"===d)c=Pk("true"===c.value);else if("Null"===d)c=Pk(null);else throw new Dk(c);}d=Ik(b);if("("===d.value){if(!(c instanceof sk))throw new Dk(d);d=[];Ck(b,"(");if(!b.match(")"))for(;;){d.push(Rk(a,b));if(b.match(")"))break;Ck(b,",")}b.a=b.d;c=new ok(c,d)}else for(;"."===d.value;){d=b;Ck(d,".");
d=Jk(d);if("Identifier"!==d.type&&"Keyword"!==d.type&&"Boolean"!==d.type&&"Null"!==d.type)throw new Dk(d);c=new zk(c,new sk(String(d.value)));d=Ik(b)}return c}function Sk(a,b){var c,d=Ik(b);if("Punctuator"!==d.type)c=Tk(a,b);else if("!"===d.value||"-"===d.value||"+"===d.value){b.a=b.d;c=Sk(a,b);if("!"===d.value)d=new Ak(c);else if(c instanceof U)d="+"===d.value?Pk(+c.a()):Pk(-c.a());else throw new Dk(d);c=d}else c=Tk(a,b);return c};function Uk(a,b){return t(b)?a.a(b.ob(),Vk,b):a.a()}
var Vk={concat:function(a){for(var b="",c=0,d=arguments.length;c<d;++c)b+=String(arguments[c]);return b},extent:function(a,b,c,d,e,f){e=!1;(f=t(f)?this.get(f):this.H())&&(e=yd(f.ua(),[a,b,c,d]));return e},fid:function(a){var b=!1,c=this.Ka;if(t(c))for(var d=0,e=arguments.length;d<e;++d)if(arguments[d]===c){b=!0;break}return b},like:function(a,b,c,d,e,f){if("."==c)throw Error('"." is an unsupported wildCard character for the "like" function');c=t(c)?c:"*";d=t(d)?d:".";e=t(e)?e:"!";b=b.replace(RegExp("\\"+
e+"(.|$)","g"),"\\$1");b=b.replace(RegExp("\\"+d,"g"),".");b=b.replace(RegExp("\\"+c,"g"),".*");b=b.replace(RegExp("\\\\.\\*","g"),"\\"+c);b=b.replace(RegExp("\\\\\\.","g"),"\\"+d);return RegExp(b,!1===f?"gi":"g").test(a)},ieq:function(a,b){return u(a)&&u(b)?a.toUpperCase()==b.toUpperCase():a==b},ineq:function(a,b){return u(a)&&u(b)?a.toUpperCase()!=b.toUpperCase():a!=b},geometryType:function(a){var b=!1,c=this.H();c&&(b=c.O()===a);return b},renderIntent:function(a){return this.a==a},intersects:function(){throw Error("Spatial function not implemented: intersects");
},within:function(){throw Error("Spatial function not implemented: within");},contains:function(){throw Error("Spatial function not implemented: contains");},dwithin:function(){throw Error("Spatial function not implemented: dwithin");}};function Wk(){}Wk.prototype.a=null;function Xk(a){var b;(b=a.a)||(b={},Yk(a)&&(b[0]=!0,b[1]=!0),b=a.a=b);return b};var Zk;function $k(){}F($k,Wk);function al(a){return(a=Yk(a))?new ActiveXObject(a):new XMLHttpRequest}function Yk(a){if(!a.b&&"undefined"==typeof XMLHttpRequest&&"undefined"!=typeof ActiveXObject){for(var b=["MSXML2.XMLHTTP.6.0","MSXML2.XMLHTTP.3.0","MSXML2.XMLHTTP","Microsoft.XMLHTTP"],c=0;c<b.length;c++){var d=b[c];try{return new ActiveXObject(d),a.b=d}catch(e){}}throw Error("Could not create ActiveXObject. ActiveX might be disabled, or MSXML might not be installed");}return a.b}Zk=new $k;function bl(a){Mc.call(this);this.la=new ne;this.r=a||null;this.b=!1;this.i=this.a=null;this.na=this.q="";this.d=0;this.f="";this.c=this.G=this.p=this.k=!1;this.g=0;this.e=null;this.R=cl;this.t=this.Ra=!1}F(bl,Mc);var cl="",dl=/^https?$/i,el=["POST","PUT"],fl=[];function gl(a,b){var c=new bl;fl.push(c);b&&c.Ya("complete",b);c.Ja.add("ready",c.$,!0,void 0,void 0);hl(c,a,void 0,void 0,void 0)}bl.prototype.$=function(){this.oc();Oa(fl,this)};
function hl(a,b,c,d,e){if(a.a)throw Error("[goog.net.XhrIo] Object is active with another request\x3d"+a.q+"; newUri\x3d"+b);c=c?c.toUpperCase():"GET";a.q=b;a.f="";a.d=0;a.na=c;a.k=!1;a.b=!0;a.a=a.r?al(a.r):al(Zk);a.i=a.r?Xk(a.r):Xk(Zk);a.a.onreadystatechange=y(a.K,a);try{a.G=!0,a.a.open(c,b,!0),a.G=!1}catch(f){il(a,f);return}b=d||"";var g=a.la.da();e&&me(e,function(a,b){oe(g,b,a)});e=Ma(g.La(),jl);d=p.FormData&&b instanceof p.FormData;!(0<=Ea(el,c))||(e||d)||oe(g,"Content-Type","application/x-www-form-urlencoded;charset\x3dutf-8");
me(g,function(a,b){this.a.setRequestHeader(b,a)},a);a.R&&(a.a.responseType=a.R);"withCredentials"in a.a&&(a.a.withCredentials=a.Ra);try{kl(a),0<a.g&&(a.t=G&&Lb(9)&&la(a.a.timeout)&&t(a.a.ontimeout),a.t?(a.a.timeout=a.g,a.a.ontimeout=y(a.yb,a)):a.e=pf(a.yb,a.g,a)),a.p=!0,a.a.send(b),a.p=!1}catch(h){il(a,h)}}function jl(a){return"content-type"==a.toLowerCase()}
bl.prototype.yb=function(){"undefined"!=typeof ca&&this.a&&(this.f="Timed out after "+this.g+"ms, aborting",this.d=8,M(this,"timeout"),this.a&&this.b&&(this.b=!1,this.c=!0,this.a.abort(),this.c=!1,this.d=8,M(this,"complete"),M(this,"abort"),ll(this)))};function il(a,b){a.b=!1;a.a&&(a.c=!0,a.a.abort(),a.c=!1);a.f=b;a.d=5;ml(a);ll(a)}function ml(a){a.k||(a.k=!0,M(a,"complete"),M(a,"error"))}bl.prototype.v=function(){this.a&&(this.b&&(this.b=!1,this.c=!0,this.a.abort(),this.c=!1),ll(this,!0));bl.F.v.call(this)};
bl.prototype.K=function(){if(!this.ac&&this.b&&"undefined"!=typeof ca&&(!this.i[1]||4!=nl(this)||2!=pl(this)))if(this.p&&4==nl(this))pf(this.K,0,this);else if(M(this,"readystatechange"),4==nl(this)){this.b=!1;try{if(ql(this))M(this,"complete"),M(this,"success");else{this.d=6;var a;try{a=2<nl(this)?this.a.statusText:""}catch(b){a=""}this.f=a+" ["+pl(this)+"]";ml(this)}}finally{ll(this)}}};
function ll(a,b){if(a.a){kl(a);var c=a.a,d=a.i[0]?ea:null;a.a=null;a.i=null;b||M(a,"ready");try{c.onreadystatechange=d}catch(e){}}}function kl(a){a.a&&a.t&&(a.a.ontimeout=null);la(a.e)&&(p.clearTimeout(a.e),a.e=null)}
function ql(a){var b=pl(a),c;a:switch(b){case 200:case 201:case 202:case 204:case 206:case 304:case 1223:c=!0;break a;default:c=!1}if(!c){if(b=0===b)a=se(String(a.q))[1]||null,!a&&self.location&&(a=self.location.protocol,a=a.substr(0,a.length-1)),b=!dl.test(a?a.toLowerCase():"");c=b}return c}function nl(a){return a.a?a.a.readyState:0}function pl(a){try{return 2<nl(a)?a.a.status:-1}catch(b){return-1}}function rl(a){try{return a.a?a.a.responseText:""}catch(b){return""}};function sl(a){this.c=t(a.data)?a.data:null;this.a=0;this.i=t(a.parser)?a.parser:null;this.d=a.url;Hh.call(this,{attributions:a.attributions,extent:a.extent,logo:a.logo,projection:a.projection})}F(sl,Hh);function tl(a,b,c,d){t(a.d)&&0==a.a?(a.a=1,gl(a.d,y(function(a){a=a.target;ql(a)?(ul(b,rl(a),this.i,c),this.a=2,t(d)&&d()):this.a=3},a))):null!==a.c&&(ul(b,a.c,a.i,c),a.c=null,a.a=2);return a.a};function vl(a){this.c=t(a)?a:6;this.a=Math.floor(this.c/2);this.b={extent:nd(),l:[]}}function wl(a){var b=a.l.length,c=a.extent;if(0===b)c[0]=c[2]=Infinity,c[1]=c[3]=-Infinity;else{var d=a.l[0].extent;c[0]=d[0];c[1]=d[1];c[2]=d[2];c[3]=d[3];for(d=1;d<b;++d)td(c,a.l[d].extent)}}function xl(a,b,c){var d=(a+b)/2;a*=b;return a*c/(a/(d*d))}
function yl(a,b,c){var d;if(0===c.l.length)c.extent=b.extent.concat(),c.l.push(b);else{var e=-1,f=[],g;f.push(c);c=c.l;do{-1!=e&&(f.push(c[e]),c=c[e].l,e=-1);for(var h=c.length-1;0<=h;--h){var l=c[h];if(t(l.wb)){e=-1;break}var n=xl(l.extent[1]-l.extent[0],l.extent[3]-l.extent[2],l.l.length+1),l=xl((l.extent[1]>b.extent[1]?l.extent[1]:b.extent[1])-(l.extent[0]<b.extent[0]?l.extent[0]:b.extent[0]),(l.extent[3]>b.extent[3]?l.extent[3]:b.extent[3])-(l.extent[2]<b.extent[2]?l.extent[2]:b.extent[2]),l.l.length+
2);if(0>e||Math.abs(l-n)<g)g=Math.abs(l-n),e=h}}while(-1!=e);do{if(d&&t(d.l)&&0===d.l.length)for(e=d,d=f.pop(),g=0,c=d.l.length;g<c;++g){if(d.l[g]===e||0===d.l[g].l.length){d.l.splice(g,1);break}}else d=f.pop();e=ia(b);if(t(b.wb)||t(b.l)||e){if(e){e=0;for(g=b.length;e<g;++e)td(d.extent,b[e].extent);d.l=d.l.concat(b)}else td(d.extent,b.extent),d.l.push(b);if(d.l.length<=a.c)b={extent:d.extent.concat()};else{b=a;g=e=d.l;c=g.length-1;for(var h=0,n=g.length-1,l=0,r=void 0,q=void 0,r=g.length-2;0<=r;--r)q=
g[r],q.extent[0]>g[h].extent[0]?h=r:q.extent[1]<g[c].extent[2]&&(c=r),q.extent[2]>g[l].extent[2]?l=r:q.extent[3]<g[n].extent[3]&&(n=r);Math.abs(g[c].extent[1]-g[h].extent[0])>Math.abs(g[n].extent[3]-g[l].extent[2])?c>h?(r=g.splice(c,1)[0],q=g.splice(h,1)[0]):(q=g.splice(h,1)[0],r=g.splice(c,1)[0]):n>l?(r=g.splice(n,1)[0],q=g.splice(l,1)[0]):(q=g.splice(l,1)[0],r=g.splice(n,1)[0]);for(g=[{extent:r.extent.concat(),l:[r]},{extent:q.extent.concat(),l:[q]}];0<e.length;){c=b;for(var h=e,n=g[0],l=g[1],q=
xl(n.extent[1]-n.extent[0],n.extent[3]-n.extent[2],n.l.length+1),w=xl(l.extent[1]-l.extent[0],l.extent[3]-l.extent[2],l.l.length+1),s=void 0,A=void 0,r=void 0,B=h.length-1;0<=B;--B){var v=h[B],z=[n.extent[0]<v.extent[0]?n.extent[0]:v.extent[0],n.extent[1]>v.extent[1]?n.extent[1]:v.extent[1],n.extent[2]<v.extent[2]?n.extent[2]:v.extent[2],n.extent[3]>v.extent[3]?n.extent[3]:v.extent[3]],z=Math.abs(xl(z[1]-z[0],z[3]-z[2],n.l.length+2)-q),v=[l.extent[0]<v.extent[0]?l.extent[0]:v.extent[0],l.extent[1]>
v.extent[1]?l.extent[1]:v.extent[1],l.extent[2]<v.extent[2]?l.extent[2]:v.extent[2],l.extent[3]>v.extent[3]?l.extent[3]:v.extent[3]],v=Math.abs(xl(v[1]-v[0],v[3]-v[2],l.l.length+2)-w),I=Math.abs(v-z);if(!A||!s||I<s)A=B,s=I,r=v<z?l:n}q=h.splice(A,1)[0];n.l.length+h.length+1<=c.a?(n.l.push(q),td(n.extent,q.extent)):l.l.length+h.length+1<=c.a?(l.l.push(q),td(l.extent,q.extent)):(r.l.push(q),td(r.extent,q.extent))}b=e=g;1>f.length&&(d.l.push(e[0]),f.push(d),b=e[1])}}else td(d.extent,b.extent),b={extent:d.extent.concat()}}while(0<
f.length)}}vl.prototype.remove=function(a,b){arguments[0]={extent:a};switch(arguments.length){case 1:arguments[1]=!1;case 2:arguments[2]=this.b;default:arguments.length=3}if(!1===arguments[1]){var c=0,d=[];do c=d.length,d=d.concat(this.d.apply(this,arguments));while(c!=d.length);return d}return this.d.apply(this,arguments)};
vl.prototype.d=function(a,b,c){var d=[],e=[],f=[];if(!a||!yd(a.extent,c.extent))return f;a=a.extent.concat();var g;e.push(c.l.length);d.push(c);do{c=d.pop();var h=e.pop()-1;if(t(b))for(;0<=h;){var l=c.l[h];if(yd(a,l.extent))if(b&&t(l.wb)&&l.wb===b||!b&&(t(l.wb)||rd(a,l.extent))){t(l.l)?(f=zl(l,!0,[],l),c.l.splice(h,1)):f=c.l.splice(h,1);wl(c);b=void 0;c.l.length<this.a&&(g=zl(c,!0,[],c));break}else t(l.l)&&(e.push(h),d.push(c),c=l,h=l.l.length);h-=1}else if(t(g)){c.l.splice(h+1,1);0<c.l.length&&wl(c);
h=0;for(l=g.length;h<l;++h)yl(this,g[h],c);g.length=0;0===d.length&&1>=c.l.length?(g=zl(c,!0,g,c),c.l.length=0,d.push(c),e.push(1)):0<d.length&&c.l.length<this.a?(g=zl(c,!0,g,c),c.l.length=0):g=void 0}else wl(c)}while(0<d.length);return f};
function zl(a,b,c,d,e,f){var g={},h=[];if(!yd(a.extent,d.extent))return c;h.push(d.l);do{d=h.pop();for(var l=d.length-1;0<=l;--l){var n=d[l];yd(a.extent,n.extent)&&(t(n.l)?h.push(n.l):t(n.wb)&&(b?c.push(n):t(e)&&n.type!=e||(n=n.wb,t(f)?g[x(n).toString()]=n:c.push(n))))}}while(0<h.length);return t(f)?g:c};function Al(){};function Bl(a){this.fillColor=a.fillColor;this.pa=a.pa;this.strokeColor=a.strokeColor;this.sa=a.sa;this.Fa=a.Fa}F(Bl,Al);Bl.prototype.a=function(a){return this.fillColor==a.fillColor&&this.pa==a.pa&&this.strokeColor==a.strokeColor&&this.sa==a.sa&&this.Fa==a.Fa};function Cl(){};function Dl(a){a=a||{};this.a=null!=a.color?a.color instanceof nk?a.color:new U(a.color):new U(El);this.b=null!=a.opacity?a.opacity instanceof nk?a.opacity:new U(a.opacity):new U(Fl)}F(Dl,Cl);Dl.prototype.cb=function(a){var b;a instanceof P&&(b=a,a=(a=b.H())?a.O():null);var c=null;if("polygon"===a||"multipolygon"===a)a=Uk(this.a,b),b=Number(Uk(this.b,b)),c=new Bl({fillColor:a,pa:b});return c};var El="#ffffff",Fl=0.4;function Gl(a){var b=null;t(a.filter)&&(b=u(a.filter)?Qk(a.filter):a.filter);this.a=b;this.b=t(a.symbolizers)?a.symbolizers:[]}Gl.prototype.Db=k("b");function Hl(){}F(Hl,Al);var Il={og:"circle"};function Jl(a){this.type=a.type;this.size=a.size;this.fillColor=a.fillColor;this.pa=a.pa;this.strokeColor=a.strokeColor;this.sa=a.sa;this.Fa=a.Fa}F(Jl,Hl);Jl.prototype.a=function(a){return this.type==a.type&&this.size==a.size&&this.fillColor==a.fillColor&&this.pa==a.pa&&this.strokeColor==a.strokeColor&&this.sa==a.sa&&this.Fa==a.Fa};function Kl(a){this.color=a.color;this.opacity=a.opacity;this.width=a.width}F(Kl,Al);Kl.prototype.a=function(a){return this.color==a.color&&this.opacity==a.opacity&&this.width==a.width};function Ll(a){a=a||{};this.a=null!=a.color?a.color instanceof nk?a.color:new U(a.color):new U(Ml);this.b=null!=a.opacity?a.opacity instanceof nk?a.opacity:new U(a.opacity):new U(Nl);this.c=null!=a.width?a.width instanceof nk?a.width:new U(a.width):new U(Ol)}F(Ll,Cl);
Ll.prototype.cb=function(a){var b;a instanceof P&&(b=a,a=(a=b.H())?a.O():null);var c=Uk(this.a,b),d=Number(Uk(this.b,b));b=Number(Uk(this.c,b));var e=null;if("linestring"===a||"multilinestring"===a)e=new Kl({color:c,opacity:d,width:b});else if("polygon"===a||"multipolygon"===a)e=new Bl({strokeColor:c,sa:d,Fa:b});return e};var Ml="#696969",Nl=0.75,Ol=1.5;function Pl(a){this.c=t(a.type)?a.type:Ql;this.d=null!=a.size?a.size instanceof nk?a.size:new U(a.size):new U(Rl);this.b=null!=a.fill?a.fill:null;this.a=null!=a.stroke?a.stroke:null}
Pl.prototype.cb=function(a){var b;a instanceof P&&(b=a,a=(a=b.H())?a.O():null);var c=null;if("point"===a||"multipoint"===a){a=Number(Uk(this.d,b));var d,e;null!==this.b&&(d=Uk(this.b.a,b),e=Number(Uk(this.b.b,b)));var f,g,h;null!==this.a&&(f=Uk(this.a.a,b),g=Number(Uk(this.a.b,b)),h=Number(Uk(this.a.c,b)));c=new Jl({type:this.c,size:a,fillColor:d,pa:e,strokeColor:f,sa:g,Fa:h})}return c};Pl.prototype.O=k("c");var Ql="circle",Rl=5;function Sl(a){this.b=t(a.rules)?a.rules:[];this.a=t(a.symbolizers)?a.symbolizers:[]}var Tl=null;function Ul(a,b){for(var c=a.length,d=Array(c),e=0;e<c;++e)d[e]=a[e].cb(b);for(var c=[],f,g,h,l,n=0,r=d.length;n<r;++n)if(e=d[n],e instanceof Bl)if(t(e.strokeColor)&&!t(e.fillColor))if(g){for(h in e)l=e[h],t(l)&&(g[h]=l);g=null}else f=e,c.push(f);else if(t(e.fillColor)&&!t(e.strokeColor))if(f){for(h in e)l=e[h],t(l)&&(f[h]=l);f=null}else g=e,c.push(g);else c.push(e);else e&&c.push(e);return c};function Vl(a){this.color=a.color;this.fontFamily=a.fontFamily;this.fontSize=a.fontSize;this.text=a.text;this.opacity=a.opacity}F(Vl,Al);Vl.prototype.a=function(a){return this.color==a.color&&this.fontFamily==a.fontFamily&&this.fontSize==a.fontSize&&this.opacity==a.opacity};function Wl(){this.clear()}Wl.prototype.clear=function(){this.a={};var a={},b;for(b in Cd)a[Cd[b]]={};this.b=a;this.c=new vl};Wl.prototype.add=function(a){var b=x(a).toString(),c=a.H();this.a[b]=a;if(null!==c){var d=c.O();this.b[d][b]=a;b=this.c;a={extent:c.ua(),wb:a};t(d)&&(a.type=d);yl(b,a,b.b)}};Wl.prototype.remove=function(a){var b=x(a).toString(),c=a.H();delete this.a[b];null!==c&&(delete this.b[c.O()][b],this.c.remove(c.ua(),a))};
function Xl(a){Jh.call(this,a);this.c=t(a.style)?a.style:null;this.a=new Wl;this.$f=t(a.transformFeatureInfo)?a.transformFeatureInfo:Yl;this.bc=new Ad;this.Zb=new Ad;this.cc=new Ad;this.q=!1}F(Xl,Jh);function Zl(a,b){for(var c=nd(),d,e=0,f=b.length;e<f;++e)d=b[e],a.a.add(d),d=d.H(),null===d||td(c,d.ua());M(a,{extent:c,features:b,type:"add"})}Xl.prototype.clear=function(){this.a.clear();M(this,{type:"change"})};
function $l(a,b,c,d,e){return 1==tl(a.ja(),a,c,e)?null:t(d)&&nc(a.a.b[d])?{}:zl({extent:b},!1,[],a.a.c.b,d,!0)}
function ul(a,b,c,d){function e(a){var b=a.features,c=this.ja().fa();null===c&&(c=a.metadata.projection);a=ie(c,d);a(this.bc.coordinates,this.bc.coordinates,this.bc.ya);a(this.Zb.coordinates,this.Zb.coordinates,this.Zb.ya);a(this.cc.coordinates,this.cc.coordinates,this.cc.ya);Zl(this,b)}var f={};f.point=a.bc;f.linestring=a.Zb;f.polygon=a.cc;f.multipoint=a.bc;f.multilinestring=a.Zb;f.multipolygon=a.cc;var g={aa:function(a,b){return f[b]}};if(u(b))ma(c.ge)?c.ge(b,y(e,a),g):(b=c.ec(b,g),e.call(a,b));
else if(na(b))ma(c.fe)?c.fe(b,y(e,a),g):(b=c.dc(b,g),e.call(a,b));else throw Error("Data type not supported: "+b);}Xl.prototype.e=function(a,b){var c;if(t(b))c=b;else{var d=this.a,e;if(t(void 0)){if(!t(e)){var d=d.a,f;e={};for(c in d)f=d[c],Uk(void 0,f)&&(e[c]=f)}}else e=d.a;c=jc(e)}e=nd();for(d=c.length-1;0<=d;--d)f=c[d],f.a=a,f=f.H(),null===f||td(e,f.ua());M(this,{extent:e,features:c,type:"intentchange"})};function Yl(a){return Ia(a,function(a){return x(a)}).join(", ")};function am(a,b){Sj.call(this,a,b)}F(am,Sj);function bm(a,b){Sj.call(this,a,b);this.c=null;this.d=Fg()}F(bm,am);bm.prototype.ha=function(){return null===this.c?null:ij(this.c,this)};bm.prototype.cd=k("d");
bm.prototype.Pa=function(a){var b=a.C,c=b.center,d=b.resolution,e=b.rotation,f=this.b.ja(),g=a.M;g[0]||g[1]||(b=f.ha(a.extent,d,b.projection),null!==b&&(g=b.a,0==g?(Bc(b,"change",this.k,!1,this),jj(b)):2==g&&(this.c=b)));if(null!==this.c){var b=this.c,g=b.ba(),h=b.B(),l=this.d;ph(l);th(l,a.size[0]/2,a.size[1]/2);vh(l,e);uh(l,h/d,h/d);th(l,(g[0]-c[0])/h,(c[1]-g[3])/h);Vj(a.attributions,b.e);Wj(a,f)}};function cm(a,b){Sj.call(this,a,b);this.r=this.d=this.f=null;this.p=Fg();this.t=NaN;this.i=this.c=null}F(cm,am);cm.prototype.ha=k("f");cm.prototype.cd=k("p");
cm.prototype.Pa=function(a){var b=a.C,c=b.projection,d=this.b,e=d.ja(),f=e.tileGrid;null===f&&(f=sj(c));var g=$h(f.a,b.resolution,0),h=f.Aa(g),l=f.B(g),n=b.center,r;l==b.resolution?(n=Zj(n,l,a.size),r=wd(n,l,b.rotation,a.size)):r=a.extent;var q=oj(f,r,l),w=h[0]*(q.d-q.a+1),s=h[1]*(q.b-q.c+1),A,B;null===this.f?(A=Hf("CANVAS"),A.width=w,A.height=s,B=A.getContext("2d"),this.f=A,this.d=[w,s],this.r=B):(A=this.f,B=this.r,this.d[0]<w||this.d[1]<s?(A.width=w,A.height=s,this.d=[w,s],this.c=null):(w=this.d[0],
s=this.d[1],g==this.t&&this.c.a<=q.a&&q.d<=this.c.d&&this.c.c<=q.c&&q.b<=this.c.b||(this.c=null)));var v,z;null===this.c?(w/=h[0],s/=h[1],v=q.a-Math.floor((w-(q.d-q.a+1))/2),z=q.c-Math.floor((s-(q.b-q.c+1))/2),this.t=g,this.c=new $a(v,v+w-1,z,z+s-1),this.i=Array(w*s),s=this.c):(s=this.c,w=s.d-s.a+1);A={};A[g]={};var I=[],D=y(e.Zc,e,A,Yj(function(a){return null!==a&&2==a.a},e,c)),K=nd(),T=new $a(0,0,0,0),W,E,H;for(z=q.a;z<=q.d;++z)for(H=q.c;H<=q.b;++H)E=e.c(g,z,H,c),v=E.a,2==v||4==v||3==v?A[g][E.L.toString()]=
E:(W=f.tc(E.L,D,null,T,K),W||(I.push(E),W=f.xc(E.L,T,K),null===W||D(g+1,W)));D=0;for(W=I.length;D<W;++D)E=I[D],z=h[0]*(E.L.x-s.a),H=h[1]*(s.b-E.L.y),B.clearRect(z,H,h[0],h[1]);var ka=Ia(kc(A),Number);Ua(ka);var aa=e.G,I=xd(mj(f,new Xa(g,s.a,s.b),K)),da,fa,Z,Pa,Ha,Ab,D=0;for(W=ka.length;D<W;++D)if(da=ka[D],h=f.Aa(da),Pa=A[da],da==g)for(Z in Pa)E=Pa[Z],fa=(E.L.y-s.c)*w+(E.L.x-s.a),this.i[fa]!=E&&(z=h[0]*(E.L.x-s.a),H=h[1]*(s.b-E.L.y),v=E.a,4!=v&&3!=v&&aa||B.clearRect(z,H,h[0],h[1]),2==v&&B.drawImage(E.ha(),
z,H),this.i[fa]=E);else for(Z in da=f.B(da)/l,Pa)for(E=Pa[Z],fa=mj(f,E.L,K),z=(fa[0]-I[0])/l,H=(I[1]-fa[3])/l,Ab=da*h[0],Ha=da*h[1],v=E.a,4!=v&&aa||B.clearRect(z,H,Ab,Ha),2==v&&B.drawImage(E.ha(),z,H,Ab,Ha),E=nj(f,fa,g,T),v=Math.max(E.a,s.a),H=Math.min(E.d,s.d),z=Math.max(E.c,s.c),E=Math.min(E.b,s.b);v<=H;++v)for(Ha=z;Ha<=E;++Ha)fa=(Ha-s.c)*w+(v-s.a),this.i[fa]=void 0;Xj(a.gc,e,g,q);ak(a,e,f,c,r,g,d.c());Uj(a,e);Wj(a,e);c=this.p;ph(c);th(c,a.size[0]/2,a.size[1]/2);vh(c,b.rotation);uh(c,l/b.resolution,
l/b.resolution);th(c,(I[0]-n[0])/l,(n[1]-I[1])/l)};function dm(){this.u=0;this.c={};this.b=this.a=null}m=dm.prototype;m.clear=function(){this.u=0;this.c={};this.b=this.a=null};function em(a,b){return a.c.hasOwnProperty(b)}m.forEach=function(a,b){for(var c=this.a;null!==c;)a.call(b,c.ab,c.Yb,this),c=c.Ca};m.get=function(a){a=this.c[a];if(a===this.b)return a.ab;a===this.a?(this.a=this.a.Ca,this.a.hb=null):(a.Ca.hb=a.hb,a.hb.Ca=a.Ca);a.Ca=null;a.hb=this.b;this.b=this.b.Ca=a;return a.ab};m.T=k("u");
m.La=function(){var a=Array(this.u),b=0,c;for(c=this.b;null!==c;c=c.hb)a[b++]=c.Yb;return a};m.Ma=function(){var a=Array(this.u),b=0,c;for(c=this.b;null!==c;c=c.hb)a[b++]=c.ab;return a};m.pop=function(){var a=this.a;delete this.c[a.Yb];null!==a.Ca&&(a.Ca.hb=null);this.a=a.Ca;null===this.a&&(this.b=null);--this.u;return a.ab};function fm(a,b,c){c={Yb:b,Ca:null,hb:a.b,ab:c};null===a.b?a.a=c:a.b.Ca=c;a.b=c;a.c[b]=c;++a.u};function gm(a){dm.call(this);this.d=t(a)?a:2048}F(gm,dm);gm.prototype.Nb=function(a){for(var b,c;this.T()>this.d&&!(b=this.a.ab,c=b.L.z.toString(),c in a&&a[c].contains(b.L));)this.pop()};function hm(){this.bounds=this.o=this.a=null}F(hm,Bd);hm.prototype.ua=function(){if(null===this.bounds){var a,b=a=Infinity,c,d=c=-Infinity,e=this.o,f=e.length,g,h;for(h=0;h<f;++h)g=e[h].ua(),a=Math.min(g[0],a),c=Math.max(g[1],c),b=Math.min(g[2],b),d=Math.max(g[3],d);this.bounds=[a,c,b,d]}return this.bounds};hm.prototype.s=function(){for(var a=this.o.length,b=Array(a),c=0;c<a;++c)b[c]=this.o[c].s();return b};function im(a,b){this.a=null;var c=b;t(c)||(c=a[0].length,c=new Ad({dimension:c}));this.a=c;this.d=c.add(a);this.dimension=c.ya;this.Sa=null}F(im,Bd);m=im.prototype;m.get=function(a,b){return this.a.get(this.d,a,b)};m.s=function(){for(var a=this.T(),b=Array(a),c,d=0;d<a;++d){c=Array(this.dimension);for(var e=0;e<this.dimension;++e)c[e]=this.get(d,e);b[d]=c}return b};m.T=function(){return this.a.T(this.d)};
m.ua=function(){if(null===this.Sa){var a=this.dimension,b=this.a,c=this.d,d=b.T(c),e=b.b[c],d=e+d*a,b=b.coordinates,f,g,h,l,n,c=f=b[e];g=h=b[e+1];for(n=e+a;n<d;n+=a)e=b[n],l=b[n+1],e<c?c=e:e>f&&(f=e),l<g?g=l:l>h&&(h=l);this.Sa=[c,f,g,h]}return this.Sa};m.O=ba("linestring");
m.pc=function(a){for(var b=this.s(),c=Infinity,d=0,e=1,f=b.length;e<f;d=e++){var g=[b[d],b[e]],d=g[0],g=g[1],h=jd(d,g);0===h?d=jd(a,d):(h=((a[0]-d[0])*(g[0]-d[0])+(a[1]-d[1])*(g[1]-d[1]))/h,d=0>h?jd(a,d):1<h?jd(a,g):jd(a,[d[0]+h*(g[0]-d[0]),d[1]+h*(g[1]-d[1])]));c=Math.min(c,d)}return Math.sqrt(c)};function jm(a,b){hm.call(this);var c=b;t(c)||(c=a[0][0].length,c=new Ad({dimension:c}));var d=a.length;this.o=Array(d);for(var e=0;e<d;++e)this.o[e]=new im(a[e],c);this.dimension=c.ya}F(jm,hm);jm.prototype.O=ba("multilinestring");jm.prototype.pc=function(a){for(var b=Infinity,c=0,d=this.o.length;c<d;++c)b=Math.min(b,this.o[c].pc(a));return b};function km(a,b){this.a=null;var c=b;t(c)||(c=a.length,c=new Ad({dimension:c}));this.a=c;this.d=c.add([a]);this.dimension=c.ya;this.Sa=null}F(km,Bd);km.prototype.get=function(a){return this.a.get(this.d,0,a)};km.prototype.ua=function(){if(null===this.Sa){var a=this.get(0),b=this.get(1);this.Sa=[a,a,b,b]}return this.Sa};km.prototype.s=function(){for(var a=Array(this.dimension),b=0;b<this.dimension;++b)a[b]=this.get(b);return a};km.prototype.O=ba("point");function lm(a,b){hm.call(this);var c=b;t(c)||(c=a[0].length,c=new Ad({dimension:c}));this.a=c;var d=a.length;this.o=Array(d);for(var e=0;e<d;++e)this.o[e]=new km(a[e],c);this.dimension=c.ya}F(lm,hm);lm.prototype.O=ba("multipoint");function mm(a,b){im.call(this,a,b)}F(mm,im);function nm(a){for(var b=a.length,c=0,d=a[b-1],e=d[0],d=d[1],f,g,h=0;h<b;++h)g=a[h],f=g[0],g=g[1],c+=(f-e)*(g+d),e=f,d=g;return 0<c}mm.prototype.O=ba("linearring");mm.prototype.mb=function(a){var b=a[0];a=a[1];var c=this.s(),d=!1,e,f,g,h,l=c.length,n=0;for(h=l-1;n<l;h=n++)e=c[n][0],f=c[n][1],g=c[h][0],h=c[h][1],(e=f>a!=h>a&&b<(g-e)*(a-f)/(h-f)+e)&&(d=!d);return d};function om(a,b){this.a=null;var c=b;t(c)||(c=a[0][0].length,c=new Ad({dimension:c}));this.c=null;this.a=c;var d=a.length;this.b=Array(d);for(var e,f=0;f<d;++f)e=a[f],0===f?nm(e)||e.reverse():nm(e)&&e.reverse(),this.b[f]=new mm(e,c);this.dimension=c.ya}F(om,Bd);om.prototype.ua=function(){return this.b[0].ua()};om.prototype.s=function(){for(var a=this.b.length,b=Array(a),c=0;c<a;++c)b[c]=this.b[c].s();return b};om.prototype.O=ba("polygon");
om.prototype.mb=function(a){for(var b=this.b,c,d=0,e=b.length;d<e&&(c=b[d].mb(a),0<d&&(c=!c),c);++d);return c};function pm(a,b){hm.call(this);var c=b;t(c)||(c=a[0][0][0].length,c=new Ad({dimension:c}));var d=a.length;this.o=Array(d);for(var e=0;e<d;++e)this.o[e]=new om(a[e],c);this.dimension=c.ya}F(pm,hm);pm.prototype.O=ba("multipolygon");pm.prototype.mb=function(a){for(var b=!1,c=0,d=this.o.length;c<d;++c)if(this.o[c].mb(a)){b=!0;break}return b};function qm(a){this.url=a.url;this.width=a.width;this.height=a.height;this.opacity=a.opacity;this.rotation=a.rotation;this.xOffset=a.xOffset;this.yOffset=a.yOffset}F(qm,Hl);qm.prototype.a=function(a){return this.url==a.url&&this.width==a.width&&this.height==a.height&&this.opacity==a.opacity&&this.rotation==a.rotation&&this.xOffset==a.xOffset&&this.yOffset==a.yOffset};function rm(a,b,c){a=a.getContext("2d");this.e=b;var d=[1,0,0],e=d[0],f=d[1],g=d[2];d[0]=e*b[0]+f*b[4]+g*b[8];d[1]=e*b[1]+f*b[5]+g*b[9];d[2]=e*b[2]+f*b[6]+g*b[10];this.b=1/Math.sqrt(d[0]*d[0]+d[1]*d[1]);this.d=a;this.g=c;this.a={};this.f={};this.c=[0,0]}
function sm(a){if(a instanceof hm){a=a.o;for(var b=a.length,c=[],d=0;d<b;++d)c.push.apply(c,sm(a[d]));return c}c=a.O();if("point"==c)return[[a.get(0),a.get(1),0]];if("polygon"==c){if(null===a.c){var c=vd(a.ua())[1],e=a.b[0].s(),d=[],f=0,g,h,l;for(g=e.length-1;1<=g;--g)if(h=e[g],l=e[g-1],h[1]>=c&&l[1]<=c||h[1]<=c&&l[1]>=c)h=(c-h[1])/(l[1]-h[1])*(l[0]-h[0])+h[0],d.push(h);d.sort();for(g=d.length-1;1<=g;--g)e=Math.abs(d[g]-d[g-1]),e>f&&(h=(d[g]+d[g-1])/2,a.mb([h,c])&&(f=e,b=h));a.c=[b,c]}a=a.c;return[[a[0],
a[1],0]]}throw Error("Label rendering not implemented for geometry type: "+c);}function tm(a,b){var c=a.url,d=um[c],e=!1;if(!t(d))e=!0,d=Hf("IMG"),Bc(d,"error",y(vm,null,b),!1,tm),Bc(d,"load",y(wm,null,b),!1,tm),d.setAttribute("src",c);else if(null!==d){var c=a.width,f=a.height;t(c)&&t(f)?(d.width=c,d.height=f):t(c)?(d.height*=c/d.width,d.width=c):t(f)&&(d.width*=f/d.height,d.height=f)}return e?null:d}var um={};function vm(a,b){if(t(b)){var c=b.target.getAttribute("src");um[c]=null;wm(a,b)}}
function wm(a,b){if(t(b)){var c=b.target.getAttribute("src");um[c]=b.target}t(a)&&a()};function xm(a,b){Sj.call(this,a,b);this.i=Hf("CANVAS");this.na=this.i.getContext("2d");this.G=Fg();this.Ra=Hf("CANVAS");this.lb=Fg();this.c=new gm(ym);L(b,["add","change","remove","intentchange"],this.Xe,!1,this);this.d=null;this.la="point multipoint linestring multilinestring polygon multipolygon".split(" ");this.K=null;this.p=this.r=!1;this.f=null;this.$=new $a(NaN,NaN,NaN,NaN);this.t=y(function(){this.r=!0;Mi(a.f)},this)}F(xm,am);m=xm.prototype;m.ha=k("i");m.cd=k("G");
m.Ua=function(a,b){this.nd(a,function(a,d){b((0,d.$f)(a),d)})};
m.nd=function(a,b,c){var d=this.a.f,e=[],f=this.b;a=Mh(d,a);var g=rj(this.f,a,0).toString();if(em(this.c,g)){var h=this.c.get(g),g=h[1],l=h[2],h=h[3],n=l[0]/2,l=l[1]/2,l=md([[a[0]-n,a[1]-l],[a[0]+n,a[1]+l]]),d=$l(f,l,d.a().P().fa());if(null===d){t(c)&&p.setTimeout(function(){c()},0);return}var r,q,w,s;for(s in d)if(l=d[s],n=l.H(),r=n.O(),"point"===r||"multipoint"===r)for(q=x(l),r=g[q],q=h[q],w=r[0]/2,r=r[1]/2,r=md([[a[0]-w-q[0],a[1]-r+q[1]],[a[0]+w-q[0],a[1]+r+q[1]]]),n=n.s(),ia(n[0])||(n=[n]),q=
n.length-1;0<=q;--q){if(qd(r,n[q])){e.push(l);break}}else ma(n.mb)?n.mb(a)&&e.push(l):ma(n.pc)&&2*n.pc(a)<=g[x(l)][0]&&e.push(l)}p.setTimeout(function(){b(e,f)},0)};m.Xe=function(a){var b=a.extent;a=this.c;if(t(b))for(var b=nj(this.f,b,0),c=a.T(),d;c--;)d=a.a.Yb,b.contains(Ya(d))?a.pop():a.get(d);else a.clear();this.t()};
m.Pa=function(a){var b=a.C,c=b.resolution,d=b.projection,e=a.extent,f=this.b,g=this.f,h=[512,512],l=!a.M[0]&&!a.M[1];if(l){var n=0.14929107086948487,r=d.Pb();r&&(n/=r);var q=Math.max(c,n);q!==this.R&&(g=new kj({origin:[0,0],projection:d,resolutions:[q],tileSize:h}),this.c.clear(),this.f=g)}if(null!==g){var w=g.B(0);l&&oj(g,e,w,this.$);var s=this.G,A=this.$,B,v=g,z=v.Fb(0),I=v.B(0),D=v.Aa(0);B=pd(z[0]+A.a*D[0]*I,z[0]+(A.d+1)*D[0]*I,z[1]+A.c*D[1]*I,z[1]+(A.b+1)*D[1]*I,void 0);var K=xd(B);ph(s);th(s,
a.size[0]/2,a.size[1]/2);uh(s,w/c,w/c);vh(s,b.rotation);th(s,(K[0]-b.center[0])/w,(b.center[1]-K[1])/w);if(this.r||this.R!==w||!sd(this.K,B)){null===this.d&&(this.d=Hf("CANVAS"),this.d.width=h[0],this.d.height=h[1]);var T=this.Ra,W=h[0]*(A.d-A.a+1),E=h[1]*(A.b-A.c+1),H=this.lb,ka=W/2,aa=E/2;ph(H);th(H,ka,aa);uh(H,1/w,-1/w);th(H,-(K[0]+ka*w),-(K[1]-aa*w));T.width=W;T.height=E;var da=new rm(T,H,this.t),fa=this.i;fa.width=W;fa.height=E;var Z=this.na,Pa={},Ha={},Ab={},Gg=15*w,bf,Xb,oc,Jg,Kg,kn=this.la,
sr=kn.length,tj=!1,ln=!1,Lg,Hc,Yb,uj,Mg,Ng,mn,Og,Pg;Jg=A.a;a:for(;Jg<=A.d;++Jg)for(Kg=A.c;Kg<=A.b;++Kg)if(Xb=new Xa(0,Jg,Kg),oc=Xb.toString(),em(this.c,oc))Ha[oc]=Xb;else if(l){Yb=mj(g,Xb);Yb[0]-=Gg;Yb[1]+=Gg;Yb[2]-=Gg;Yb[3]+=Gg;Pg=!1;for(Lg=0;Lg<sr;++Lg){Hc=kn[Lg];t(Pa[Hc])||(Pa[Hc]={});Og=$l(f,Yb,d,Hc,this.t);if(null===Og){tj=!0;break a}Pg=Pg||!nc(Og);J(Pa[Hc],Og)}Pg&&(Ab[oc]=Xb)}else ln=!0;this.r=ln;a:for(Hc in Pa){var nn=Pa[Hc],cf={},df=[],vj=f.c,on=void 0,ef=void 0,pn=void 0,ff=void 0,wj=void 0,
gf=void 0,qn=void 0,Wd=void 0,xj=void 0,Qg=void 0,yj=void 0;for(on in nn){ff=nn[on];wj=ff.Db();if(null===wj){null===vj&&(null===Tl&&(Tl=new Sl({rules:[new Gl({filter:new ok(new sk("renderIntent"),[new U("select")]),symbolizers:[new Pl({fill:new Dl({color:"#ffffff",opacity:0.7}),stroke:new Ll({color:"#696969",opacity:0.9,width:2})}),new Dl({color:"#ffffff",opacity:0.7}),new Ll({color:"#696969",opacity:0.9,width:2})]})],symbolizers:[new Pl({fill:new Dl,stroke:new Ll}),new Dl,new Ll]})),vj=Tl);for(var rn=
vj,sn=ff,tn=rn.b,Rg=[],un=!1,Sg=void 0,zj=0,tr=tn.length;zj<tr;++zj)if(Sg=tn[zj],null===Sg.a||Uk(Sg.a,sn))un=!0,Rg.push.apply(Rg,Sg.Db());un||(Rg=rn.a);gf=Ul(Rg,sn)}else gf=Ul(wj,ff);qn=gf.length;for(ef=0;ef<qn;++ef){Wd=gf[ef];for(pn in cf)if(xj=df[cf[pn]][1],Wd.a(xj)){Wd=xj;break}Qg=x(Wd);Qg in cf||(cf[Qg]=df.length,df.push([[],Wd,[]]));yj=df[cf[Qg]];yj[0].push(ff);Wd instanceof Vl&&yj[2].push(gf[ef].text)}}uj=df;mn=uj.length;for(Ng=0;Ng<mn;++Ng){Mg=uj[Ng];var Tg=da,vn=Hc,Ug=Mg[0],pc=Mg[1],Aj=!1;
if(pc instanceof Vl){var wn=Tg,xn=Ug,hf=pc,ur=Mg[2],Zc=wn.d,Bj=void 0,Cj=void 0,jf=void 0;Zc.fillStyle!==hf.color&&(Zc.fillStyle=hf.color);Zc.font=hf.fontSize+"px "+hf.fontFamily;Zc.globalAlpha=hf.opacity;Zc.textAlign="center";Zc.textBaseline="middle";for(var Vg=0,vr=xn.length;Vg<vr;++Vg)if(Bj=xn[Vg],"hidden"!==Bj.a)for(var Cj=sm(Bj.H()),Dj=0,wr=Cj.length;Dj<wr;++Dj)jf=Cj[Dj],sh(wn.e,jf,jf),Zc.fillText(ur[Vg],jf[0],jf[1])}else switch(vn){case "point":case "multipoint":var Ja=Tg,yn=Ug,Zb=pc,kf=Ja.d,
$b=void 0,Ej=void 0,Wg=void 0,zn=void 0,Xg=void 0,Xd=void 0,Yg=void 0,Zg=void 0,Fj=void 0,$g=void 0,An=void 0,Gj=void 0,lf=void 0,ah=0,bh=0;if(Zb instanceof Jl){var Bn=void 0;if("circle"===Zb.type){var $c=Zb,Cn=$c.Fa||0,Hj=$c.size+2*Cn+1,Dn=Hj/2,ch=Hf("CANVAS"),Eb=ch.getContext("2d"),Ij=$c.fillColor,Jj=$c.strokeColor,xr=2*Math.PI;ch.height=Hj;ch.width=Hj;Ij&&(Eb.fillStyle=Ij);Jj&&(Eb.lineWidth=Cn,Eb.strokeStyle=Jj,Eb.lineCap="round",Eb.lineJoin="round");Eb.beginPath();Eb.arc(Dn,Dn,$c.size/2,0,xr,
!0);Ij&&(Eb.globalAlpha=$c.pa,Eb.fill());Jj&&(Eb.globalAlpha=$c.sa,Eb.stroke());Bn=ch}else throw Error("Unsupported shape type: "+Zb);$b=Bn;Ej=1}else if(Zb instanceof qm)$b=tm(Zb,Ja.g),Ej=Zb.opacity,ah=Zb.xOffset,bh=Zb.yOffset;else throw Error("Unsupported symbolizer: "+Zb);if(null===$b)Aj=!0;else{var yr=$b.width/2,zr=$b.height/2,En=$b.width*Ja.b,Fn=$b.height*Ja.b,Ar=ah*Ja.b,Br=bh*Ja.b;kf.save();kf.setTransform(1,0,0,1,-yr,-zr);kf.globalAlpha=Ej;Wg=0;for(zn=yn.length;Wg<zn;++Wg)if(Xg=yn[Wg],"hidden"!==
Xg.a)for(Xd=x(Xg),Yg=Ja.a[Xd],Ja.a[Xd]=t(Yg)?[Math.max(Yg[0],En),Math.max(Yg[1],Fn)]:[En,Fn],Ja.f[Xd]=[ah*Ja.b,bh*Ja.b],Ja.c=[Math.max(Ja.c[0],Ja.a[Xd][0]+2*Math.abs(Ar)),Math.max(Ja.c[1],Ja.a[Xd][1]+2*Math.abs(Br))],Zg=Xg.H(),Fj=Zg instanceof km?[Zg]:Zg.o,$g=0,An=Fj.length;$g<An;++$g)Gj=Fj[$g],lf=[Gj.get(0),Gj.get(1),0],sh(Ja.e,lf,lf),kf.drawImage($b,lf[0]+ah,lf[1]+bh,$b.width,$b.height);kf.restore();Aj=!1}break;case "linestring":case "multilinestring":var qc=Tg,Gn=Ug,Kj=pc,ac=qc.d,dh=void 0,Hn=
void 0,eh=void 0,fh=void 0,Yd=void 0,gh=void 0,Lj=void 0,hh=void 0,In=void 0,ih=void 0,Zd=void 0,Jn=void 0,ad=void 0,Kn=void 0;ac.globalAlpha=Kj.opacity;ac.strokeStyle=Kj.color;ac.lineWidth=Kj.width;ac.lineCap="round";ac.lineJoin="round";Kn=ac.lineWidth*qc.b;ac.beginPath();dh=0;for(Hn=Gn.length;dh<Hn;++dh)if(eh=Gn[dh],"hidden"!==eh.a)for(fh=x(eh),Yd=t(qc.a[fh])?qc.a[fh]:[0],Yd[0]=Math.max(Yd[0],Kn),qc.a[fh]=Yd,qc.c=[Math.max(Yd[0],qc.c[0]),Math.max(Yd[0],qc.c[1])],gh=eh.H(),Lj=gh instanceof im?[gh]:
gh.o,hh=0,In=Lj.length;hh<In;++hh)for(ih=Lj[hh],Zd=0,Jn=ih.T();Zd<Jn;++Zd)ad=[ih.get(Zd,0),ih.get(Zd,1),0],sh(qc.e,ad,ad),0===Zd?ac.moveTo(ad[0],ad[1]):ac.lineTo(ad[0],ad[1]);ac.stroke();break;case "polygon":case "multipolygon":var Ln=Tg,Mn=Ug,Ka=Ln.d,jh=pc.strokeColor,Nn=pc.Fa,kh=pc.sa,mf=pc.fillColor,lh=pc.pa,$d=void 0,nf=void 0,Mj=void 0,mh=void 0,Nj=void 0,of=void 0,Oj=void 0,On=void 0,Pj=void 0,Pn=void 0,nh=void 0,ae=void 0,Qn=void 0,bd=void 0,Qj=void 0;jh&&(Ka.strokeStyle=jh,Nn&&(Ka.lineWidth=
Nn),Ka.lineCap="round",Ka.lineJoin="round");mf&&(Ka.fillStyle=mf);Ka.beginPath();nf=0;for(Mj=Mn.length;nf<Mj;++nf)if(Qj=Mn[nf],"hidden"!==Qj.a)for(mh=Qj.H(),Nj=mh instanceof om?[mh]:mh.o,of=0,Oj=Nj.length;of<Oj;++of)if(On=Nj[of],Pj=On.b,Pn=Pj.length,0<Pn){nh=Pj[0];ae=0;for(Qn=nh.T();ae<Qn;++ae)bd=[nh.get(ae,0),nh.get(ae,1),0],sh(Ln.e,bd,bd),0===ae?Ka.moveTo(bd[0],bd[1]):Ka.lineTo(bd[0],bd[1]);mf&&jh&&(lh!==$d&&($d=Ka.globalAlpha=lh),Ka.fill(),kh!==$d&&($d=Ka.globalAlpha=kh),Ka.stroke(),(nf<Mj-1||
of<Oj-1)&&Ka.beginPath())}mf&&jh||(mf?(lh!==$d&&(Ka.globalAlpha=lh),Ka.fill()):(kh!==$d&&(Ka.globalAlpha=kh),Ka.stroke()));break;default:throw Error("Rendering not implemented for geometry type: "+vn);}if(tj=Aj)break a}}tj||J(Ha,Ab);var Cr=da.a,Dr=da.c,Er=da.f;for(oc in Ha)Xb=Ha[oc],em(this.c,oc)?bf=this.c.get(oc)[0]:(bf=this.d.cloneNode(!1),bf.getContext("2d").drawImage(T,(A.a-Xb.x)*h[0],(Xb.y-A.b)*h[1]),fm(this.c,oc,[bf,Cr,Dr,Er])),Z.drawImage(bf,h[0]*(Xb.x-A.a),h[1]*(A.b-Xb.y));this.R=w;this.K=
B;this.p||(this.p=!0,a.ib.push(y(this.Of,this)))}}};m.Of=function(){for(;this.c.T()>this.c.d;)this.c.pop();this.p=!1};var ym=128;function zm(a,b){bk.call(this,0,b);this.b=Hf("CANVAS");this.b.height=a.clientHeight;this.b.width=a.clientWidth;this.b.className="ol-unselectable";Lf(a,this.b);this.c=!0;this.e=[a.clientHeight,a.clientWidth];this.g=this.b.getContext("2d")}F(zm,bk);zm.prototype.lc=function(a){return a instanceof lk?new bm(this,a):a instanceof mk?new cm(this,a):a instanceof Xl?new xm(this,a):null};zm.prototype.vc=k("b");
zm.prototype.Ic=function(a){if(null===a)this.c&&(pg(this.b,!1),this.c=!1);else{var b=a.size;if(this.e[0]!=b[0]||this.e[1]!=b[1])this.b.width=b[0],this.b.height=b[1],this.e=b;var c=this.g;c.setTransform(1,0,0,1,0,0);c.clearRect(0,0,b[0],b[1]);ck(a);var b=a.ra,d=a.Gc,e,f,g,h,l;e=0;for(f=d.length;e<f;++e)g=d[e],h=dk(this,g),l=b[x(g)],l.visible&&l.Lc&&(h.Pa(a,l),g=h.ha(),null!==g&&(h=h.cd(),c.globalAlpha=l.opacity,0===a.C.rotation?c.drawImage(g,0,0,g.width,g.height,h[12],h[13],g.width*h[0],g.height*h[5]):
(c.setTransform(h[0],h[1],h[4],h[5],h[12],h[13]),c.drawImage(g,0,0))));this.c||(pg(this.b,!0),this.c=!0);fk(this,a)}};var Am=function(){if(!("HTMLCanvasElement"in p))return!1;try{return null!==Hf("CANVAS").getContext("2d")}catch(a){return!1}}();function Bm(a,b){var c;if(t(6)){var d=Array(16);for(c=0;16>c;++c)d[c]=b[c].toFixed(6);c=d.join(",")}else c=b.join(",");c="matrix3d("+c+")";d=a.style;d.WebkitTransform=c;d.MozTransform=c;d.a=c;d.transform=c};function Cm(a,b,c){Sj.call(this,a,b);this.target=c}F(Cm,Sj);function Dm(a,b){var c=Hf("DIV");c.style.position="absolute";Cm.call(this,a,b,c);this.c=null;this.d=Ig()}F(Dm,Cm);
Dm.prototype.Pa=function(a){var b=a.C,c=b.center,d=b.resolution,e=b.rotation,f=this.c,g=this.b.ja(),h=a.M;h[0]||h[1]||(b=g.ha(a.extent,d,b.projection),null!==b&&(h=b.a,0==h?(Bc(b,"change",this.k,!1,this),jj(b)):2==h&&(f=b)));if(null!==f){var h=f.ba(),l=f.B(),b=Fg();ph(b);th(b,a.size[0]/2,a.size[1]/2);vh(b,e);uh(b,l/d,l/d);th(b,(h[0]-c[0])/l,(c[1]-h[3])/l);f!=this.c&&(c=ij(f,this),c.style.maxWidth="none",c.style.position="absolute",Jf(this.target),this.target.appendChild(c),this.c=f);rh(b,this.d)||
(Bm(this.target,b),oh(this.d,b));Vj(a.attributions,f.e);Wj(a,g)}};function Em(a,b){var c=Hf("DIV");c.style.position="absolute";Cm.call(this,a,b,c);this.d=!0;this.i=1;this.f=0;this.c={}}F(Em,Cm);
Em.prototype.Pa=function(a,b){if(b.visible){var c=a.C,d=c.projection,e=this.b,f=e.ja(),g=f.tileGrid;null===g&&(g=sj(d));var h=$h(g.a,c.resolution,0),l=g.B(h),n=c.center,r;l==c.resolution?(n=Zj(n,l,a.size),r=wd(n,l,c.rotation,a.size)):r=a.extent;var l=oj(g,r,l),q={};q[h]={};var w=y(f.Zc,f,q,Yj(function(a){return null!==a&&2==a.a},f,d)),s=nd(),A=new $a(0,0,0,0),B,v,z,I;for(z=l.a;z<=l.d;++z)for(I=l.c;I<=l.b;++I)B=f.c(h,z,I,d),v=B.a,2==v?q[h][B.L.toString()]=B:3!=v&&4!=v&&(v=g.tc(B.L,w,null,A,s),v||(B=
g.xc(B.L,A,s),null===B||w(h+1,B)));var D;if(this.f!=f.b){for(D in this.c)s=this.c[+D],Mf(s.target);this.c={};this.f=f.b}z=Ia(kc(q),Number);Ua(z);var w={},K;I=0;for(B=z.length;I<B;++I){D=z[I];D in this.c?s=this.c[D]:(s=rj(g,n,D),s=new Fm(g,s),w[D]=!0,this.c[D]=s);D=q[D];for(K in D)Gm(s,D[K]);Hm(s)}K=Ia(kc(this.c),Number);Ua(K);var T;B=Fg();z=0;for(I=K.length;z<I;++z)if(D=K[z],s=this.c[D],D in q)if(T=s.B(),v=s.f,ph(B),th(B,a.size[0]/2,a.size[1]/2),vh(B,c.rotation),uh(B,T/c.resolution,T/c.resolution),
th(B,(v[0]-n[0])/T,(n[1]-v[1])/T),Im(s,B),D in w){for(D-=1;0<=D;--D)if(D in this.c){Kf(s.target,this.c[D].target);break}0>D&&Lf(this.target,s.target)}else a.M[0]||a.M[1]||Jm(s,r,A);else Mf(s.target),delete this.c[D];b.opacity!=this.i&&(og(this.target,b.opacity),this.i=b.opacity);b.visible&&!this.d&&(pg(this.target,!0),this.d=!0);Xj(a.gc,f,h,l);ak(a,f,g,d,r,h,e.c());Uj(a,f);Wj(a,f)}else this.d&&(pg(this.target,!1),this.d=!1)};
function Fm(a,b){this.target=Hf("DIV");this.target.style.position="absolute";this.d=a;this.c=b;this.f=xd(mj(a,b));this.g=a.B(b.z);this.b={};this.a=null;this.e=Ig()}function Gm(a,b){var c=b.L,d=c.toString();if(!(d in a.b)){var e=a.d.Aa(c.z),f=b.ha(a),g=f.style;g.maxWidth="none";g.position="absolute";g.left=(c.x-a.c.x)*e[0]+"px";g.top=(a.c.y-c.y)*e[1]+"px";null===a.a&&(a.a=document.createDocumentFragment());a.a.appendChild(f);a.b[d]=b}}
function Hm(a){null!==a.a&&(a.target.appendChild(a.a),a.a=null)}Fm.prototype.B=k("g");function Jm(a,b,c){var d=nj(a.d,b,a.c.z,c);b=[];for(var e in a.b)c=a.b[e],d.contains(c.L)||b.push(c);var f,d=0;for(f=b.length;d<f;++d)c=b[d],e=c.L.toString(),Mf(c.ha(a)),delete a.b[e]}function Im(a,b){rh(b,a.e)||(Bm(a.target,b),oh(a.e,b))};function Km(a,b){bk.call(this,0,b);this.b=Hf("DIV");this.b.className="ol-unselectable";var c=this.b.style;c.position="absolute";c.width="100%";c.height="100%";Lf(a,this.b);this.c=!0}F(Km,bk);Km.prototype.lc=function(a){if(a instanceof mk)a=new Em(this,a);else if(a instanceof lk)a=new Dm(this,a);else return null;this.b.appendChild(a.target);return a};
Km.prototype.Ic=function(a){if(null===a)this.c&&(pg(this.b,!1),this.c=!1);else{var b=a.ra,c=a.Gc,d,e,f,g;d=0;for(e=c.length;d<e;++d)f=c[d],g=dk(this,f),f=a.ra[x(f)],f.Lc&&g.Pa(a,f);for(var h in this.d)h in b||(g=this.d[h],Mf(g.target));this.c||(pg(this.b,!0),this.c=!0);ck(a);fk(this,a)}};function Lm(a,b){var c=Array(2*b),d=0,e;for(e=0;e<b;++e)c[d++]=Infinity,c[d++]=-Infinity;var f=a.a;Mm(a,function(a,d){var e,n,r;for(n=a;n<d;n+=b)for(r=e=0;r<b;++r)c[e++]=Math.min(c[2*r],f[n+r]),c[e++]=Math.max(c[2*r+1],f[n+r])});return c}function Nm(a,b,c,d){var e=c.length,f,g,h;for(f=0;f<e;++f)for(h=c[f],g=0;g<d;++g)a[b++]=h[g];return b};function Om(a){this.a=t(a)?a:[]}function Pm(a,b,c){if(b!=c){var d=a.a,e=d.length,f;for(f=0;f<e;f+=2)if(b<=d[f]){d.splice(f,0,b,c);Qm(a);return}d.push(b,c);Qm(a)}}Om.prototype.clear=function(){this.a.length=0};function Qm(a){a=a.a;var b=a.length,c=0,d;for(d=0;d<b;d+=2)a[d]!=a[d+1]&&(0<c&&a[c-2]<=a[d]&&a[d]<=a[c-1]?a[c-1]=Math.max(a[c-1],a[d+1]):(a[c++]=a[d],a[c++]=a[d+1]));a.length=c}function Rm(a,b){var c=a.a,d=c.length,e;for(e=0;e<d;e+=2)b.call(void 0,c[e],c[e+1])}
Om.prototype.vb=function(){return 0===this.a.length};function Sm(a,b,c){var d=a.a,e=d.length,f;for(f=0;f<e;f+=2)if(!(c<d[f]||d[f+1]<b)){if(d[f]>c)break;if(b<d[f])if(c==d[f])break;else if(c<d[f+1]){d[f]=Math.max(d[f],c);break}else d.splice(f,2),f-=2,e-=2;else if(b==d[f])if(c<d[f+1]){d[f]=c;break}else if(c==d[f+1]){d.splice(f,2);break}else d.splice(f,2),f-=2,e-=2;else if(c<d[f+1]){d.splice(f,2,d[f],b,c,d[f+1]);break}else if(c==d[f+1]){d[f+1]=b;break}else d[f+1]=b}Qm(a)};function Tm(a,b,c){this.a=t(a)?a:[];this.b=[];this.c=new Om;a=t(b)?b:this.a.length;a<this.a.length&&Pm(this.c,a,this.a.length);this.e=this.f=null;this.d=t(c)?c:35044}function Um(a,b){var c;a:{c=a.c.a;var d=c.length,e=-1,f,g,h;for(g=0;g<d;g+=2){h=c[g+1]-c[g];if(h==b){c=c[g];break a}h>b&&(-1==e||h<f)&&(e=c[g],f=h)}c=e}Sm(a.c,c,c+b);return c}Tm.prototype.add=function(a){var b=a.length,c=Um(this,b),d;for(d=0;d<b;++d)this.a[c+d]=a[d];a=0;for(d=this.b.length;a<d;++a)Pm(this.b[a],c,c+b);return c};
function Mm(a,b){if(0!==a.a.length){var c=a.a.length,d=a.c.a,e=d.length;if(0===e)b.call(void 0,0,c);else{0<d[0]&&b.call(void 0,0,d[0]);var f;for(f=1;f<e-1;f+=2)b.call(void 0,d[f],d[f+1]);d[e-1]<c&&b.call(void 0,d[e-1],c)}}}Tm.prototype.T=function(){var a=this.c.a,b=a.length,c=0,d;for(d=0;d<b;d+=2)c+=a[d+1]-a[d];return this.a.length-c};Tm.prototype.remove=function(a,b){var c,d;Pm(this.c,b,b+a);c=0;for(d=this.b.length;c<d;++c)Sm(this.b[c],b,b+a)};function Vm(a,b,c){this.ca=a;this.a=t(b)?b:{};this.b=t(c)?c:2}m=Vm.prototype;m.add=function(a){var b=a.length*this.b,c=Um(this.ca,b);this.a[c+""]=c+b;Nm(this.ca.a,c,a,this.b);return c};m.get=function(a){for(var b=this.ca.a,c=this.a[a+""],d=this.b,e=Array((c-a)/d),f=0;a<c;a+=d)e[f++]=b.slice(a,a+d);return e};m.T=function(){return hc(this.a)};m.ba=function(){return Lm(this.ca,this.b)};m.remove=function(a){this.ca.remove(this.a[a+""]-a,a);delete this.a[a+""]};function Wm(a,b){this.ca=a;this.a=t(b)?b:2}m=Wm.prototype;m.add=function(a){return this.ca.add(a)};m.get=function(a){return this.ca.a.slice(a,a+this.a)};m.T=function(){return this.ca.T()/this.a};m.ba=function(){return Lm(this.ca,this.a)};m.remove=function(a){this.ca.remove(this.a,a)};function Xm(a){Hh.call(this,{attributions:a.attributions,extent:a.extent,projection:a.projection});this.c=t(a.pointCollections)?a.pointCollections:[];this.a=t(a.Df)?a.Df:[]}F(Xm,Hh);function Ym(a){Jh.call(this,a)}F(Ym,Jh);function Zm(a,b,c){var d=b[0];b=b[1];c[0]=d*a[0]+b*a[4]+a[12];c[1]=d*a[1]+b*a[5]+a[13];return c};function $m(a,b){Sj.call(this,a,b);this.i=this.wa=null;this.r=void 0;this.e=Fg();this.q=Ig();this.K=new Float32Array(16);this.G=void 0;this.t=new Float32Array(16);this.$=void 0;this.R=new Float32Array(16);this.na=void 0;this.la=new Float32Array(16);this.Lb=void 0;this.lb=new Float32Array(16)}F($m,Sj);
function an(a,b,c){var d=a.a.a;if(t(a.r)&&a.r==c)d.bindFramebuffer(36160,a.i);else{b.ib.push(sa(function(a,b,c){a.isContextLost()||(a.deleteFramebuffer(b),a.deleteTexture(c))},d,a.i,a.wa));b=d.createTexture();d.bindTexture(3553,b);d.texImage2D(3553,0,6408,c,c,0,6408,5121,null);d.texParameteri(3553,10240,9729);d.texParameteri(3553,10241,9729);var e=d.createFramebuffer();d.bindFramebuffer(36160,e);d.framebufferTexture2D(36160,36064,3553,b,0);a.wa=b;a.i=e;a.r=c}}
function bn(a,b,c,d,e){var f=!1;b!==a.G&&(f=a.t,ph(f),f[12]=b,f[13]=b,f[14]=b,f[15]=1,a.G=b,f=!0);c!==a.$&&(b=a.R,ph(b),b[0]=c,b[5]=c,b[10]=c,b[15]=1,f=-0.5*c+0.5,b[12]=f,b[13]=f,b[14]=f,b[15]=1,a.$=c,f=!0);d!==a.na&&(c=Math.cos(d),b=Math.sin(d),Hg(a.la,0.213+0.787*c-0.213*b,0.213-0.213*c+0.143*b,0.213-0.213*c-0.787*b,0,0.715-0.715*c-0.715*b,0.715+0.285*c+0.14*b,0.715-0.715*c+0.715*b,0,0.072-0.072*c+0.928*b,0.072-0.072*c-0.283*b,0.072+0.928*c+0.072*b,0,0,0,0,1),a.na=d,f=!0);e!==a.Lb&&(Hg(a.lb,0.213+
0.787*e,0.213-0.213*e,0.213-0.213*e,0,0.715-0.715*e,0.715+0.285*e,0.715-0.715*e,0,0.072-0.072*e,0.072-0.072*e,0.072+0.928*e,0,0,0,0,1),a.Lb=e,f=!0);f&&(d=a.K,ph(d),qh(d,a.R,d),qh(d,a.t,d),qh(d,a.lb,d),qh(d,a.la,d));return a.K}$m.prototype.g=function(){this.i=this.wa=null;this.r=void 0};function cn(a,b){$m.call(this,a,b);this.c=null}F(cn,$m);function dn(a,b){var c=ij(b,a),d=a.a.a,e=d.createTexture();d.bindTexture(3553,e);d.texImage2D(3553,0,6408,6408,5121,c);d.texParameteri(3553,10242,33071);d.texParameteri(3553,10243,33071);d.texParameteri(3553,10241,9729);d.texParameteri(3553,10240,9729);return e}
cn.prototype.Pa=function(a){var b=this.a.a,c=a.C,d=c.center,e=c.resolution,f=c.rotation,g=this.c,h=this.wa,l=this.b.ja(),n=a.M;n[0]||n[1]||(c=l.ha(a.extent,e,c.projection),null!==c&&(n=c.a,0==n?(Bc(c,"change",this.k,!1,this),jj(c)):2==n&&(g=c,h=dn(this,c),null===this.wa||a.ib.push(sa(function(a,b){a.isContextLost()||a.deleteTexture(b)},b,this.wa)))));null!==g&&(b=this.a.vc(),en(this,b.width,b.height,d,e,f,g.ba()),d=this.e,ph(d),uh(d,1,-1),th(d,0,-1),this.c=g,this.wa=h,Vj(a.attributions,g.e),Wj(a,
l))};function en(a,b,c,d,e,f,g){b*=e;c*=e;a=a.q;ph(a);uh(a,2/b,2/c);vh(a,-f);th(a,g[0]-d[0],g[2]-d[1]);uh(a,(g[1]-g[0])/2,(g[3]-g[2])/2);th(a,1,1)};var fn=["webgl","webgl-experimental","webkit-3d","moz-webgl"];function gn(a,b){var c,d,e=fn.length;for(d=0;d<e;++d)try{if(c=a.getContext(fn[d],b),null!==c)return c}catch(f){}return null}var hn=function(){if(!("WebGLRenderingContext"in p))return!1;try{var a=Hf("CANVAS");return null!==gn(a)}catch(b){return!1}}();function jn(a){this.a=a}jn.prototype.ja=k("a");function Rn(a){this.a=a}F(Rn,jn);Rn.prototype.O=ba(35632);function Sn(a){this.a=a}F(Sn,jn);Sn.prototype.O=ba(35633);function Tn(){this.a="precision mediump float;varying vec2 a;uniform sampler2D c;void main(){gl_FragColor\x3dtexture2D(c,a);}"}F(Tn,Rn);ga(Tn);function Un(){this.a="varying vec2 a;attribute vec2 c,d;uniform vec4 b;void main(){gl_Position\x3dvec4(c*b.xy+b.zw,0,1);a\x3dd;}"}F(Un,Sn);ga(Un);function Vn(a,b){this.d=a.getUniformLocation(b,"b");this.c=a.getUniformLocation(b,"c");this.a=a.getAttribLocation(b,"c");this.b=a.getAttribLocation(b,"d")};function Wn(a,b){$m.call(this,a,b);this.Rc=Tn.ia();this.Sc=Un.ia();this.c=null;this.Ra=new Tm([0,0,0,1,1,0,1,1,0,1,0,0,1,1,1,0]);this.p=this.d=null;this.f=-1}F(Wn,$m);Wn.prototype.v=function(){var a=this.a,b=a.a,c=x(this.Ra),d=a.e[c];Oa(d.ca.b,d.nc);b.isContextLost()||b.deleteBuffer(d.buffer);delete a.e[c];Wn.F.v.call(this)};Wn.prototype.g=function(){Wn.F.g.call(this);this.c=null};
Wn.prototype.Pa=function(a){var b=this.a,c=b.a,d=a.C,e=d.projection,f=this.b,g=f.ja(),h=g.tileGrid;null===h&&(h=sj(e));var l=$h(h.a,d.resolution,0),n=h.B(l),r=d.center,q;n==d.resolution?(r=Zj(r,n,a.size),q=wd(r,n,d.rotation,a.size)):q=a.extent;var w=oj(h,q,n);if(null!==this.d&&this.d.a==w.a&&(this.d.c==w.c&&this.d.d==w.d&&this.d.b==w.b)&&this.f==g.b)n=this.p;else{var s=[w.d-w.a+1,w.b-w.c+1],A=h.Aa(l),s=Math.max(s[0]*A[0],s[1]*A[1]),B=aj(s),s=n*B,v=h.Fb(l),z=v[0]+w.a*A[0]*n,n=v[1]+w.c*A[1]*n,n=[z,
z+s,n,n+s];an(this,a,B);c.viewport(0,0,B,B);c.clearColor(0,0,0,0);c.clear(16384);c.disable(3042);A=Xn(b,this.Rc,this.Sc);c.useProgram(A);null===this.c&&(this.c=new Vn(c,A));Yn(b,this.Ra);c.enableVertexAttribArray(this.c.a);c.vertexAttribPointer(this.c.a,2,5126,!1,16,0);c.enableVertexAttribArray(this.c.b);c.vertexAttribPointer(this.c.b,2,5126,!1,16,8);c.uniform1i(this.c.c,0);A={};A[l]={};var I=y(g.Zc,g,A,Yj(function(a){return null!==a&&2==a.a&&em(b.b,a.c())},g,e)),B=!0,z=nd(),D=new $a(0,0,0,0),K,T,
W;for(T=w.a;T<=w.d;++T)for(W=w.c;W<=w.b;++W){v=g.c(l,T,W,e);K=v.a;if(2==K){if(em(b.b,v.c())){A[l][v.L.toString()]=v;continue}}else if(3==K||4==K)continue;B=!1;K=h.tc(v.L,I,null,D,z);K||(v=h.xc(v.L,D,z),null===v||I(l+1,v))}I=Ia(kc(A),Number);Ua(I);var D=new Float32Array(4),E,H,ka,aa,da;T=0;for(W=I.length;T<W;++T)for(ka in aa=A[I[T]],aa)v=aa[ka],H=mj(h,v.L,z),K=2*(H[1]-H[0])/s,E=2*(H[3]-H[2])/s,da=2*(H[0]-n[0])/s-1,H=2*(H[2]-n[2])/s-1,Eg(D,K,E,da,H),c.uniform4fv(this.c.d,D),Zn(b,v),c.drawArrays(5,0,
4);B?(this.d=w,this.p=n,this.f=g.b):(this.p=this.d=null,this.f=-1,a.ta=!0)}Xj(a.gc,g,l,w);var fa=b.k;ak(a,g,h,e,q,l,f.c(),function(a){var c;(c=2!=a.a)||(c=em(b.b,a.c()))||(c=a.c()in fa.c);c||Bh(fa,[a,qj(h,a.L),h.B(a.L.z)])},this);Uj(a,g);Wj(a,g);c=this.e;ph(c);th(c,(r[0]-n[0])/(n[1]-n[0]),(r[1]-n[2])/(n[3]-n[2]));vh(c,d.rotation);uh(c,a.size[0]*d.resolution/(n[1]-n[0]),a.size[1]*d.resolution/(n[3]-n[2]));th(c,-0.5,-0.5)};function $n(){this.a="precision mediump float;uniform vec4 b;void main(){gl_FragColor\x3db;}"}F($n,Rn);ga($n);function ao(){this.a="attribute vec2 b;uniform mat4 a;void main(){gl_Position\x3da*vec4(b,0,1);}"}F(ao,Sn);ga(ao);function bo(a,b){this.c=a.getUniformLocation(b,"a");this.b=a.getUniformLocation(b,"b");this.a=a.getAttribLocation(b,"b")};function co(){this.a="precision mediump float;uniform vec4 c;void main(){gl_FragColor\x3dc;}"}F(co,Rn);ga(co);function eo(){this.a="attribute vec2 c;uniform float a;uniform mat4 b;void main(){gl_Position\x3db*vec4(c,0,1);gl_PointSize\x3da;}"}F(eo,Sn);ga(eo);function fo(a,b){this.d=a.getUniformLocation(b,"a");this.c=a.getUniformLocation(b,"b");this.b=a.getUniformLocation(b,"c");this.a=a.getAttribLocation(b,"c")};function go(a,b){$m.call(this,a,b);ph(this.q);this.f=Ig();this.c=this.d=null}F(go,$m);go.prototype.g=function(){go.F.g.call(this);this.c=null};
go.prototype.Pa=function(a){var b=this.a.a,c=a.C,d=this.b.ja(),e=a.size,f=aj(Math.max(e[0],e[1]));an(this,a,f);b.viewport(0,0,f,f);b.clearColor(0,0,0,0);b.clear(16384);b.enable(3042);ph(this.f);0!==c.rotation&&vh(this.f,-c.rotation);uh(this.f,2/(f*c.resolution),2/(f*c.resolution));th(this.f,-c.center[0],-c.center[1]);a=d.c;0<a.length&&ho(this,a);d=d.a;if(0<d.length){a=this.a;var b=a.a,c=$n.ia(),g=ao.ia(),c=Xn(a,c,g);b.useProgram(c);null===this.d&&(this.d=new bo(b,c));b.uniformMatrix4fv(this.d.c,!1,
this.f);for(var h,l,g=0;g<d.length;++g){l=d[g];h=l.ca;c=l.b;Yn(a,h);h=l;l=h.b;var n=Ia(kc(h.a),Number);Ua(n);for(var r=n.length,q=[],w=void 0,s=void 0,A=void 0,A=s=void 0,w=0;w<r;++w)for(s=n[w],A=h.a[s],A=A/l-1,s=s/l;s<A;++s)q.push(s,s+1);l=new Uint16Array(q);h=b.createBuffer();b.bindBuffer(34963,h);b.bufferData(34963,l,35048);b.enableVertexAttribArray(this.d.a);b.vertexAttribPointer(this.d.a,2,5126,!1,4*c,0);b.uniform4fv(this.d.b,[1,1,0,0.75]);b.drawElements(1,l.length,5123,0);b.bindBuffer(34963,
null);b.deleteBuffer(h)}}ph(this.e);th(this.e,0.5,0.5);uh(this.e,e[0]/f,e[1]/f);th(this.e,-0.5,-0.5)};function ho(a,b){var c=a.a,d=c.a,e=co.ia(),f=eo.ia(),e=Xn(c,e,f);d.useProgram(e);null===a.c&&(a.c=new fo(d,e));d.uniformMatrix4fv(a.c.c,!1,a.f);for(var g,h,f=0;f<b.length;++f)h=b[f],e=h.ca,g=h.a,Yn(c,e),d.enableVertexAttribArray(a.c.a),d.vertexAttribPointer(a.c.a,2,5126,!1,4*g,0),d.uniform4fv(a.c.b,[1,0,0,0.75]),d.uniform1f(a.c.d,3),Mm(e,function(a,b){d.drawArrays(0,a/g,(b-a)/g)})};function io(){this.a="precision mediump float;varying vec2 a;uniform mat4 d;uniform float e;uniform sampler2D f;void main(){vec4 g\x3dtexture2D(f,a);gl_FragColor.rgb\x3d(d*vec4(g.rgb,1)).rgb;gl_FragColor.a\x3dg.a*e;}"}F(io,Rn);ga(io);function jo(){this.a="varying vec2 a;attribute vec2 d,e;uniform mat4 b,c;void main(){gl_Position\x3dc*vec4(d,0,1);a\x3d(b*vec4(e,0,1)).st;}"}F(jo,Sn);ga(jo);
function ko(a,b){this.f=a.getUniformLocation(b,"b");this.e=a.getUniformLocation(b,"c");this.g=a.getUniformLocation(b,"d");this.d=a.getUniformLocation(b,"e");this.c=a.getUniformLocation(b,"f");this.a=a.getAttribLocation(b,"d");this.b=a.getAttribLocation(b,"e")};function lo(){this.a="precision mediump float;varying vec2 a;uniform float d;uniform sampler2D e;void main(){vec4 f\x3dtexture2D(e,a);gl_FragColor.rgb\x3df.rgb;gl_FragColor.a\x3df.a*d;}"}F(lo,Rn);ga(lo);function mo(){this.a="varying vec2 a;attribute vec2 d,e;uniform mat4 b,c;void main(){gl_Position\x3dc*vec4(d,0,1);a\x3d(b*vec4(e,0,1)).st;}"}F(mo,Sn);ga(mo);
function no(a,b){this.f=a.getUniformLocation(b,"b");this.e=a.getUniformLocation(b,"c");this.d=a.getUniformLocation(b,"d");this.c=a.getUniformLocation(b,"e");this.a=a.getAttribLocation(b,"d");this.b=a.getAttribLocation(b,"e")};function oo(a,b){bk.call(this,0,b);this.c=Hf("CANVAS");this.c.height=a.clientHeight;this.c.width=a.clientWidth;this.c.className="ol-unselectable";Lf(a,this.c);this.t=!0;this.G=[a.clientHeight,a.clientWidth];this.a=gn(this.c,{antialias:!0,depth:!1,preserveDrawingBuffer:!1,stencil:!1});L(this.c,"webglcontextlost",this.Kf,!1,this);L(this.c,"webglcontextrestored",this.wf,!1,this);this.q=this.p=null;this.$=new Tm([-1,-1,0,0,1,-1,1,0,-1,1,0,1,1,1,1,1]);this.e={};this.i={};this.g={};this.b=new dm;this.K=
null;this.k=new yh(y(function(a){var b=a[1];a=a[2];var e=b[0]-this.K[0],b=b[1]-this.K[1];return 65536*Math.log(a)+Math.sqrt(e*e+b*b)/a},this),function(a){return a[0].c()});this.R=y(function(){if(!this.k.vb()){Dh(this.k);var a=zh(this.k)[0];Zn(this,a)}},this);this.r=0;po(this)}F(oo,bk);
function Yn(a,b){var c=a.a,d=b.a,e=x(b);if(e in a.e)e=a.e[e],c.bindBuffer(34962,e.buffer),Rm(e.nc,function(a,b){var e=d.slice(a,b);c.bufferSubData(34962,a,new Float32Array(e))}),e.nc.clear();else{var f=c.createBuffer();c.bindBuffer(34962,f);c.bufferData(34962,new Float32Array(d),b.d);var g=new Om;b.b.push(g);a.e[e]={ca:b,buffer:f,nc:g}}}
function Zn(a,b){var c=a.a,d=b.c();if(em(a.b,d))d=a.b.get(d),c.bindTexture(3553,d.wa),9729!=d.Xd&&(c.texParameteri(3553,10240,9729),d.Xd=9729),9729!=d.Yd&&(c.texParameteri(3553,10240,9729),d.Yd=9729);else{var e=c.createTexture();c.bindTexture(3553,e);c.texImage2D(3553,0,6408,6408,5121,b.ha());c.texParameteri(3553,10240,9729);c.texParameteri(3553,10241,9729);c.texParameteri(3553,10242,33071);c.texParameteri(3553,10243,33071);fm(a.b,d,{wa:e,Xd:9729,Yd:9729})}}m=oo.prototype;
m.lc=function(a){return a instanceof mk?new Wn(this,a):a instanceof lk?new cn(this,a):a instanceof Ym?new go(this,a):null};m.v=function(){var a=this.a;fc(this.e,function(a){Oa(a.ca.b,a.nc)});a.isContextLost()||(fc(this.e,function(b){a.deleteBuffer(b.buffer)}),fc(this.g,function(b){a.deleteProgram(b)}),fc(this.i,function(b){a.deleteShader(b)}),this.b.forEach(function(b){null===b||a.deleteTexture(b.wa)}));oo.F.v.call(this)};
m.Ce=function(a,b){for(var c=this.a,d;1024<this.b.T()-this.r;){d=this.b.a.ab;if(null===d)if(+this.b.a.Yb==b.index)break;else--this.r;else c.deleteTexture(d.wa);this.b.pop()}};m.vc=k("c");function Xn(a,b,c){var d=x(b)+"/"+x(c);if(d in a.g)return a.g[d];var e=a.a,f=e.createProgram();e.attachShader(f,qo(a,b));e.attachShader(f,qo(a,c));e.linkProgram(f);return a.g[d]=f}
function qo(a,b){var c=x(b);if(c in a.i)return a.i[c];var d=a.a,e=d.createShader(b.O());d.shaderSource(e,b.ja());d.compileShader(e);return a.i[c]=e}m.Kf=function(a){a.U();this.q=this.p=null;this.e={};this.i={};this.g={};this.b.clear();this.r=0;fc(this.d,function(a){a.g()})};m.wf=function(){po(this);Tj(this.f)};function po(a){a=a.a;a.activeTexture(33984);a.blendFuncSeparate(770,771,1,771);a.disable(2884);a.disable(2929);a.disable(3089)}
m.Ic=function(a){var b=this.a;if(b.isContextLost())return!1;if(null===a)return this.t&&(pg(this.c,!1),this.t=!1),!1;this.K=a.focus;fm(this.b,(-a.index).toString(),null);++this.r;var c=a.Gc,d,e,f,g,h;d=0;for(e=c.length;d<e;++d)f=c[d],g=dk(this,f),h=a.ra[x(f)],h.visible&&h.Lc&&g.Pa(a,h);d=a.size;if(this.G[0]!=d[0]||this.G[1]!=d[1])this.c.width=d[0],this.c.height=d[1],this.G=d;b.bindFramebuffer(36160,null);b.clearColor(0,0,0,0);b.clear(16384);b.enable(3042);b.viewport(0,0,d[0],d[1]);Yn(this,this.$);
var l=null,n;d=0;for(e=c.length;d<e;++d)if(f=c[d],h=a.ra[x(f)],h.visible&&h.Lc){var r=h.brightness||1!=h.contrast||h.hue||1!=h.saturation,q;r?(g=io.ia(),q=jo.ia()):(g=lo.ia(),q=mo.ia());g=Xn(this,g,q);g!=l&&(b.useProgram(g),l=g,r?null===this.p?this.p=n=new ko(b,g):n=this.p:null===this.q?this.q=n=new no(b,g):n=this.q,b.enableVertexAttribArray(n.a),b.vertexAttribPointer(n.a,2,5126,!1,16,0),b.enableVertexAttribArray(n.b),b.vertexAttribPointer(n.b,2,5126,!1,16,8),b.uniform1i(n.c,0));g=dk(this,f);b.uniformMatrix4fv(n.f,
!1,g.e);b.uniformMatrix4fv(n.e,!1,g.q);r&&b.uniformMatrix4fv(n.g,!1,bn(g,h.brightness,h.contrast,h.hue,h.saturation));b.uniform1f(n.d,h.opacity);b.bindTexture(3553,g.wa);b.drawArrays(5,0,4)}this.t||(pg(this.c,!0),this.t=!0);ck(a);1024<this.b.T()-this.r&&a.ib.push(y(this.Ce,this));this.k.vb()||(a.ib.push(this.R),a.ta=!0);fk(this,a)};var ro={},so={ng:"canvas",tg:"dom",kh:"webgl"},to=["webgl","canvas","dom"];
function V(a){N.call(this);a=uo(a);this.e=new Ye(this.Tf,void 0,this);fb(this,this.e);this.Sc=Fg();this.te=Fg();this.re=0;this.d=null;this.f=0;this.q=!1;this.p=this.R=null;this.b=Ef("DIV","ol-viewport");this.b.style.position="relative";this.b.style.overflow="hidden";this.b.style.width="100%";this.b.style.height="100%";this.b.style.msTouchAction="none";wh&&(this.b.className="ol-touch");this.G=Ef("DIV","ol-overlaycontainer");L(this.G,["click","dblclick",wh?"touchstart":"mousedown"],ib);this.b.appendChild(this.G);
var b=new Nh(this);L(b,jc(Xh),this.$d,!1,this);fb(this,b);b=new Uf(p.document);L(b,"key",this.Rd,!1,this);fb(this,b);b=new yg(this.b);L(b,"mousewheel",this.Rd,!1,this);fb(this,b);this.k=a.controls;this.Ra=a.interactions;this.K=a.overlays;this.i=new a.Uf(this.b,this);fb(this,this.i);this.we=new Qf;L(this.we,"resize",this.na,!1,this);this.t=null;this.g=[];this.lb=[];this.la=new qf(this.kf,0,this);this.Lb=new Eh(y(this.Qe,this),y(this.qf,this));L(this,Tc("layergroup"),this.Ye,!1,this);L(this,Tc("view"),
this.uf,!1,this);L(this,Tc("size"),this.mf,!1,this);L(this,Tc("target"),this.pf,!1,this);this.$b(a.dg);this.k.forEach(function(a){a.setMap(this)},this);this.K.forEach(function(a){a.d(this)},this)}F(V,N);m=V.prototype;m.xe=function(a){this.k.push(a);a.setMap(this)};m.zd=function(a){this.Va().gb().push(a)};m.ye=function(a){this.K.push(a);a.d(this)};m.Ha=function(a){Mi(this);Array.prototype.push.apply(this.g,arguments)};m.v=function(){Mf(this.b);gb(this.la);V.F.v.call(this)};m.Oe=k("i");m.Hc=function(){return this.get("target")};
V.prototype.getTarget=V.prototype.Hc;function Mh(a,b){var c=a.d;if(null===c)return null;var d=b.slice();return Zm(c.ee,d,d)}m=V.prototype;m.Ie=k("k");m.Ne=k("K");m.Ke=function(a){var b=null!=a.layers?a.layers:this.Va().Ob();this.i.Ua(a.pixel,b,a.success,a.error)};m.Kd=function(a){var b=null!=a.layers?a.layers:this.Va().Ob();ek(this.i,a.pixel,b,a.success,a.error)};m.Le=k("Ra");m.Va=function(){return this.get("layergroup")};V.prototype.getLayerGroup=V.prototype.Va;V.prototype.se=function(){return this.Va().gb()};
function Ni(a,b){var c=a.d;if(null===c)return null;var d=b.slice(0,2);return Zm(c.Ed,d,d)}V.prototype.c=function(){return this.get("size")};V.prototype.getSize=V.prototype.c;V.prototype.a=function(){return this.get("view")};V.prototype.getView=V.prototype.a;m=V.prototype;m.Qe=function(a,b,c,d){var e=this.d;if(!(null!==e&&b in e.Kb&&e.Kb[b][a.L.toString()]))return Infinity;a=c[0]-e.focus[0];c=c[1]-e.focus[1];return 65536*Math.log(d)+Math.sqrt(a*a+c*c)/d};
m.Rd=function(a,b){this.$d(new Lh(b||a.type,this,a))};m.$d=function(a){if(null!==this.d){"mouseout"==a.type||"touchend"==a.type?this.t=null:this.t=a.d();a.b=this.d;var b=this.Ra.a,c;if(!1!==M(this,a))for(c=b.length-1;0<=c&&b[c].xb(a);c--);}};
m.kf=function(){var a=this.d,b=this.Lb;if(!b.vb()){var c=16,d=c;if(null!==a){var e=a.M;if(e[0]||e[1])c=8,d=2}e=hc(a.Kb);c*=e;d*=e;if(b.d<c){Dh(b);c=Math.min(c-b.d,d,b.T());for(d=0;d<c;++d)e=zh(b)[0],Bc(e,"change",b.g,!1,b),0==e.a&&(e.a=1,e.d=[Bc(e.b,"error",e.g,!1,e),Bc(e.b,"load",e.i,!1,e)],e.b.src=e.f);b.d+=c}}b=this.lb;c=0;for(d=b.length;c<d;++c)b[c](this,a);b.length=0};m.mf=function(){Tj(this)};
m.pf=function(){var a=this.Hc(),a=t(a)?u(a)?document.getElementById(a):a:null;null===a?Mf(this.b):a.appendChild(this.b);this.na()};m.qf=function(){Mi(this)};m.vf=function(){Tj(this)};m.uf=function(){null!==this.R&&(Ec(this.R),this.R=null);var a=this.a();null!=a&&(this.R=L(a,"change",this.vf,!1,this));Tj(this)};m.Ze=function(){Tj(this)};m.Ye=function(){null!==this.p&&(Ec(this.p),this.p=null);var a=this.Va();null!=a&&(this.p=L(a,"change",this.Ze,!1,this));Tj(this)};
m.Xb=function(){var a=this.a(),b;if(b=t(a)){if(a=a.Xb())a=null!=this.c();b=a}return b};function Tj(a){null==a.e.Q&&(0===a.f?(a=a.e,Ze(a),a.ed()):a.q=!0)}function Mi(a){0===a.f?null!=a.e.Q||a.e.start():a.q=!0}m.Pf=function(a){if(t(this.k.remove(a)))return a.setMap(null),a};m.he=function(a){return this.Va().gb().remove(a)};m.Qf=function(a){if(t(this.K.remove(a)))return a.d(null),a};
m.Tf=function(a){var b,c,d;if(0===this.f){var e=this.c();b=this.a();var f=t(b)?this.a().P():void 0,g=null;if(t(e)&&t(f)&&f.Xb()){g=Ra(b.e);b=this.Va().bd();var h=b.layers;d=b.ra;var l={},n;b=0;for(c=h.length;b<c;++b)n=h[b],l[x(n)]=d[b];d=ii(f);g={ta:!1,attributions:{},Ed:this.Sc,extent:null,focus:null===this.t?d.center:this.t,index:this.re++,Gc:h,ra:l,Wd:{},ee:this.te,ib:[],size:e,Zf:this.Lb,time:a,gc:{},C:d,M:g,Kb:{}}}a=this.g;b=e=0;for(c=a.length;b<c;++b)f=a[b],f(this,g)&&(a[e++]=f);a.length=e;
null!==g&&(g.extent=wd(d.center,d.resolution,d.rotation,g.size));this.d=g;this.i.Ic(g);this.q=!1;null!==g&&(g.ta&&Mi(this),Array.prototype.push.apply(this.lb,g.ib),0!=this.g.length||(g.ta||g.M[0]||g.M[1])||M(this,new Kh("moveend",this)));M(this,new Kh("postrender",this,g));0!=this.la.Q||this.la.start()}};m.Wf=function(a){this.n("layergroup",a)};V.prototype.setLayerGroup=V.prototype.Wf;V.prototype.$=function(a){this.n("size",a)};V.prototype.setSize=V.prototype.$;
V.prototype.ue=function(a){this.n("target",a)};V.prototype.setTarget=V.prototype.ue;V.prototype.ve=function(a){this.n("view",a)};V.prototype.setView=V.prototype.ve;V.prototype.na=function(){var a=this.Hc(),a=t(a)?u(a)?document.getElementById(a):a:null;null===a?this.$(void 0):(a=mg(a),this.$([a.width,a.height]))};function Bi(a,b){++a.f;try{b.call(void 0)}finally{if(0===--a.f&&a.q){var c=a.e;Ze(c);c.ed()}}}
function uo(a){var b={},c=a.layers instanceof $i?a.layers:new $i({layers:a.layers});b.layergroup=c;b.target=a.target;b.view=t(a.view)?a.view:new S;var c=bk,d;d=t(a.renderers)?a.renderers:t(a.renderer)?[a.renderer]:to;var e=d.length,f,g;for(f=0;f<e;++f)if(g=d[f],"canvas"==g){if(Am){c=zm;break}}else if("dom"==g){c=Km;break}else if("webgl"==g&&hn){c=oo;break}d=t(a.controls)?ia(a.controls)?new O(Ra(a.controls)):a.controls:vi();e=t(a.interactions)?a.interactions:Zi();a=t(a.overlays)?ia(a.overlays)?new O(Ra(a.overlays)):
a.overlays:new O;return{controls:d,interactions:e,overlays:a,Uf:c,dg:b}}ro.Be=function(a){var b=p.location.search.substring(1);a=t(a)?a:new Ce(b);return Pe(a,"renderers")?a.get("renderers").split(","):Pe(a,"renderer")?[a.get("renderer")]:to};gj();var vo={lg:"bottom-left",mg:"bottom-right",dh:"top-left",eh:"top-right"};function wo(a){N.call(this);this.b=Hf("DIV");this.b.style.position="absolute";this.a={jc:"",Na:"",Qa:"",Pc:"",visible:!0};this.c=null;L(this,Tc("element"),this.We,!1,this);L(this,Tc("map"),this.cf,!1,this);L(this,Tc("position"),this.hf,!1,this);L(this,Tc("positioning"),this.jf,!1,this);t(a.element)&&this.ke(a.element);t(a.position)&&this.k(a.position);t(a.positioning)&&this.n("positioning",a.positioning)}F(wo,N);
wo.prototype.g=function(){return this.get("element")};wo.prototype.getElement=wo.prototype.g;wo.prototype.e=function(){return this.get("map")};wo.prototype.getMap=wo.prototype.e;wo.prototype.i=function(){return this.get("position")};wo.prototype.getPosition=wo.prototype.i;wo.prototype.f=function(){return this.get("positioning")};wo.prototype.getPositioning=wo.prototype.f;m=wo.prototype;m.We=function(){Jf(this.b);var a=this.g();null!=a&&If(this.b,a)};
m.cf=function(){null!==this.c&&(Mf(this.b),Ec(this.c),this.c=null);var a=this.e();null!=a&&(this.c=L(a,"postrender",this.Hf,!1,this),xo(this),If(a.G,this.b))};m.Hf=function(){xo(this)};m.hf=function(){xo(this)};m.jf=function(){xo(this)};m.ke=function(a){this.n("element",a)};wo.prototype.setElement=wo.prototype.ke;wo.prototype.d=function(a){this.n("map",a)};wo.prototype.setMap=wo.prototype.d;wo.prototype.k=function(a){this.n("position",a)};wo.prototype.setPosition=wo.prototype.k;
function xo(a){var b=a.e(),c=a.i();if(t(b)&&b.Xb()&&t(c)){var c=Ni(b,c),d=b.c(),b=a.b.style,e=a.f();if("bottom-right"==e||"top-right"==e){""!==a.a.Na&&(a.a.Na=b.left="");var f=Math.round(d[0]-c[0])+"px";a.a.Qa!=f&&(a.a.Qa=b.right=f)}else""!==a.a.Qa&&(a.a.Qa=b.right=""),f=Math.round(c[0])+"px",a.a.Na!=f&&(a.a.Na=b.left=f);"top-left"==e||"top-right"==e?(""!==a.a.jc&&(a.a.jc=b.bottom=""),c=Math.round(c[1])+"px",a.a.Pc!=c&&(a.a.Pc=b.top=c)):(""!==a.a.Pc&&(a.a.Pc=b.top=""),c=Math.round(d[1]-c[1])+"px",
a.a.jc!=c&&(a.a.jc=b.bottom=c));a.a.visible||(pg(a.b,!0),a.a.visible=!0)}else a.a.visible&&(pg(a.b,!1),a.a.visible=!1)};var yo;yo=!1;var zo=rb();zo&&(-1!=zo.indexOf("Firefox")||-1!=zo.indexOf("Camino")||-1!=zo.indexOf("iPhone")||-1!=zo.indexOf("iPod")||-1!=zo.indexOf("iPad")||-1!=zo.indexOf("Android")||-1!=zo.indexOf("Chrome")&&(yo=!0));var Ao=yo;var Bo=xb?"webkitfullscreenchange":"mozfullscreenchange";function Co(){var a=yf().a,b=a.body;return!!b.webkitRequestFullScreen||!!b.mozRequestFullScreen&&a.mozFullScreenEnabled}function Do(){var a=yf().a;return!!a.webkitIsFullScreen||!!a.mozFullScreen};function Eo(a){a=t(a)?a:{};this.b=t(a.className)?a.className:"ol-full-screen";var b=Ef("A",{href:"#fullScreen","class":this.b+"-"+Do()});L(b,["click","touchend"],this.c,!1,this);L(p.document,Bo,this.f,!1,this);b=Ef("DIV",{"class":this.b+" ol-unselectable "+(Co()?"":"ol-unsupported")},b);ji.call(this,{element:b,target:a.target});this.g=t(a.keys)?a.keys:!1}F(Eo,ji);
Eo.prototype.c=function(a){Co()&&(a.U(),a=this.a,null!==a&&(Do()?(a=yf().a,a.webkitCancelFullScreen?a.webkitCancelFullScreen():a.mozCancelFullScreen&&a.mozCancelFullScreen()):(a=a.Hc(),a=u(a)?document.getElementById(a):a,this.g?a.mozRequestFullScreenWithKeys?a.mozRequestFullScreenWithKeys():a.webkitRequestFullScreen&&a.ALLOW_KEYBOARD_INPUT&&Ao?a.webkitRequestFullScreen(a.ALLOW_KEYBOARD_INPUT):a.webkitRequestFullScreen?a.webkitRequestFullScreen():a.mozRequestFullScreen&&a.mozRequestFullScreen():a.webkitRequestFullScreen?
a.webkitRequestFullScreen():a.mozRequestFullScreen&&a.mozRequestFullScreen())))};Eo.prototype.f=function(){var a=this.b+"-true",b=this.b+"-false",c=Nf(this.element);Do()?vf(c,b,a):vf(c,a,b)};function Fo(a){a=t(a)?a:{};var b=Ef("DIV",{"class":t(a.className)?a.className:"ol-mouse-position"});ji.call(this,{element:b,target:a.target});L(this,Tc("projection"),this.K,!1,this);t(a.coordinateFormat)&&this.q(a.coordinateFormat);t(a.projection)&&this.k(he(a.projection));this.R=t(a.undefinedHTML)?a.undefinedHTML:"";this.g=b.innerHTML;this.f=this.c=this.b=null}F(Fo,ji);Fo.prototype.d=function(a){a=a.b;null===a?this.b=null:this.b!=a.C.projection&&(this.b=a.C.projection,this.c=null);Go(this,this.f)};
Fo.prototype.K=function(){this.c=null};Fo.prototype.i=function(){return this.get("coordinateFormat")};Fo.prototype.getCoordinateFormat=Fo.prototype.i;Fo.prototype.fa=function(){return this.get("projection")};Fo.prototype.getProjection=Fo.prototype.fa;Fo.prototype.t=function(a){a=jg(a,this.a.b);this.f=[a.x,a.y];Go(this,this.f)};Fo.prototype.G=function(){Go(this,null);this.f=null};
Fo.prototype.setMap=function(a){Fo.F.setMap.call(this,a);null!==a&&(a=a.b,this.e.push(L(a,"mousemove",this.t,!1,this),L(a,"mouseout",this.G,!1,this)))};Fo.prototype.q=function(a){this.n("coordinateFormat",a)};Fo.prototype.setCoordinateFormat=Fo.prototype.q;Fo.prototype.k=function(a){this.n("projection",a)};Fo.prototype.setProjection=Fo.prototype.k;
function Go(a,b){var c=a.R;if(null!==b&&null!==a.b){if(null===a.c){var d=a.fa();a.c=t(d)?Ld(a.b,d):je}d=Mh(a.a,b);null!==d&&(a.c(d,d),c=a.i(),c=t(c)?c(d):d.toString())}t(a.g)&&c==a.g||(a.element.innerHTML=c,a.g=c)};var Ho={oe:"degrees",Gg:"imperial",Ug:"nautical",Mg:"metric",ih:"us"};function Io(a){a=a||{};var b=t(a.className)?a.className:"ol-scale-line";this.f=Ef("DIV",{"class":b+"-inner"});this.g=Ef("DIV",{"class":b+" ol-unselectable"},this.f);this.k=null;this.i=t(a.minWidth)?a.minWidth:64;this.c=!1;this.G=void 0;this.q="";this.b=null;ji.call(this,{element:this.g,target:a.target});L(this,Tc("units"),this.R,!1,this);this.K(a.units||"metric")}F(Io,ji);var Jo=[1,2,5];Io.prototype.t=function(){return this.get("units")};
Io.prototype.getUnits=Io.prototype.t;Io.prototype.d=function(a){a=a.b;null===a?this.k=null:this.k=a.C;Ko(this)};Io.prototype.R=function(){Ko(this)};Io.prototype.K=function(a){this.n("units",a)};Io.prototype.setUnits=Io.prototype.K;
function Ko(a){var b=a.k;if(null===b)a.c&&(pg(a.g,!1),a.c=!1);else{var c=b.center,d=b.projection,b=d.b(b.resolution,c),e=d.zb,f=a.t();"degrees"!=e||"metric"!=f&&"imperial"!=f?"ft"!=e&&"m"!=e||"degrees"!=f?a.b=null:(null===a.b&&(a.b=Ld(d,he("EPSG:4326"))),c=Math.cos(dd(a.b(c)[1])),d=Fd.a,"ft"==e&&(d/=0.3048),b*=180/(Math.PI*c*d)):(a.b=null,c=Math.cos(dd(c[1])),b*=Math.PI*c*Fd.a/180);c=a.i*b;e="";"degrees"==f?c<1/60?(e="\u2033",b*=3600):1>c?(e="\u2032",b*=60):e="\u00b0":"imperial"==f?0.9144>c?(e="in",
b/=0.0254):1609.344>c?(e="ft",b/=0.3048):(e="mi",b/=1609.344):"nautical"==f?(b/=1852,e="nm"):"metric"==f?1>c?(e="mm",b*=1E3):1E3>c?e="m":(e="km",b/=1E3):"us"==f&&(0.9144>c?(e="in",b*=39.37):1609.344>c?(e="ft",b/=0.30480061):(e="mi",b/=1609.3472));for(var f=3*Math.floor(Math.log(a.i*b)/Math.log(10)),g,h;;){g=Jo[f%3]*Math.pow(10,Math.floor(f/3));h=Math.round(g/b);if(h>=a.i)break;++f}g=g+e;a.q!=g&&(a.f.innerHTML=g,a.q=g);a.G!=h&&(a.f.style.width=h+"px",a.G=h);a.c||(pg(a.g,!0),a.c=!0)}};function Lo(a){cb.call(this);this.b=a;this.a={}}F(Lo,cb);var Mo=[];Lo.prototype.Ya=function(a,b,c,d,e){ia(b)||(Mo[0]=b,b=Mo);for(var f=0;f<b.length;f++){var g=L(a,b[f],c||this,d||!1,e||this.b||this);this.a[g.key]=g}return this};
Lo.prototype.vd=function(a,b,c,d,e){if(ia(b))for(var f=0;f<b.length;f++)this.vd(a,b[f],c,d,e);else{a:if(e=e||this.b||this,d=!!d,c=xc(c||this),bc(a))a=a.Ja.a[b],b=-1,a&&(b=Lc(a,c,d,e)),e=-1<b?a[b]:null;else{if(a=Dc(a,b,d))for(b=0;b<a.length;b++)if(!a[b].$a&&a[b].Oa==c&&a[b].capture==d&&a[b].tb==e){e=a[b];break a}e=null}e&&(Ec(e),delete this.a[e.key])}return this};function No(a){fc(a.a,Ec);a.a={}}Lo.prototype.v=function(){Lo.F.v.call(this);No(this)};
Lo.prototype.handleEvent=function(){throw Error("EventHandler.handleEvent not implemented");};function Oo(a,b,c){Mc.call(this);this.target=a;this.d=b||a;this.b=c||new bg(NaN,NaN,NaN,NaN);this.c=Af(a);this.a=new Lo(this);fb(this,this.a);L(this.d,["touchstart","mousedown"],this.me,!1,this)}F(Oo,Mc);var Po=G||wb&&Lb("1.9.3");m=Oo.prototype;m.clientX=0;m.clientY=0;m.Nd=0;m.Od=0;m.Pd=0;m.Qd=0;m.oa=0;m.ma=0;m.Fd=!0;m.sb=!1;m.Ud=0;m.Ef=0;m.yf=!1;m.wd=!1;
m.v=function(){Oo.F.v.call(this);Cc(this.d,["touchstart","mousedown"],this.me,!1,this);No(this.a);Po&&this.c.releaseCapture();this.d=this.target=null};function Qo(a){t(a.f)||(a.f=qg(a.target));return a.f}
m.me=function(a){var b="mousedown"==a.type;if(!this.Fd||this.sb||b&&!Vb(a))M(this,"earlycancel");else{Ro(a);if(0==this.Ud)if(M(this,new So("start",this,a.clientX,a.clientY,a)))this.sb=!0,a.U();else return;else a.U();var b=this.c,c=b.documentElement,d=!Po;this.a.Ya(b,["touchmove","mousemove"],this.gf,d);this.a.Ya(b,["touchend","mouseup"],this.qc,d);Po?(c.setCapture(!1),this.a.Ya(c,"losecapture",this.qc)):this.a.Ya(b?b.parentWindow||b.defaultView:window,"blur",this.qc);G&&this.yf&&this.a.Ya(b,"dragstart",
jb);this.g&&this.a.Ya(this.g,"scroll",this.Mf,d);this.clientX=this.Pd=a.clientX;this.clientY=this.Qd=a.clientY;this.Nd=a.hd;this.Od=a.jd;this.wd?(a=this.target,b=a.offsetLeft,c=a.offsetParent,c||"fixed"!=dg(a,"position")||(c=Af(a).documentElement),c?(wb?(d=tg(c),b+=d.left):G&&8<=Nb&&(d=tg(c),b-=d.left),a=qg(c)?c.clientWidth-(b+a.offsetWidth):b):a=b):a=this.target.offsetLeft;this.oa=a;this.ma=this.target.offsetTop;this.e=Pf(yf(this.c));this.Ef=ta()}};
m.qc=function(a,b){No(this.a);Po&&this.c.releaseCapture();if(this.sb){Ro(a);this.sb=!1;var c=To(this,this.oa),d=Uo(this,this.ma);M(this,new So("end",this,a.clientX,a.clientY,a,c,d,b||"touchcancel"==a.type))}else M(this,"earlycancel")};function Ro(a){var b=a.type;"touchstart"==b||"touchmove"==b?Tb(a,a.ea.targetTouches[0],a.c):"touchend"!=b&&"touchcancel"!=b||Tb(a,a.ea.changedTouches[0],a.c)}
m.gf=function(a){if(this.Fd){Ro(a);var b=(this.wd&&Qo(this)?-1:1)*(a.clientX-this.clientX),c=a.clientY-this.clientY;this.clientX=a.clientX;this.clientY=a.clientY;this.Nd=a.hd;this.Od=a.jd;if(!this.sb){var d=this.Pd-this.clientX,e=this.Qd-this.clientY;if(d*d+e*e>this.Ud)if(M(this,new So("start",this,a.clientX,a.clientY,a)))this.sb=!0;else{this.ac||this.qc(a);return}}c=Vo(this,b,c);b=c.x;c=c.y;this.sb&&M(this,new So("beforedrag",this,a.clientX,a.clientY,a,b,c))&&(Wo(this,a,b,c),a.U())}};
function Vo(a,b,c){var d=Pf(yf(a.c));b+=d.x-a.e.x;c+=d.y-a.e.y;a.e=d;a.oa+=b;a.ma+=c;b=To(a,a.oa);a=Uo(a,a.ma);return new wf(b,a)}m.Mf=function(a){var b=Vo(this,0,0);a.clientX=this.clientX;a.clientY=this.clientY;Wo(this,a,b.x,b.y)};function Wo(a,b,c,d){a.wd&&Qo(a)?a.target.style.right=c+"px":a.target.style.left=c+"px";a.target.style.top=d+"px";M(a,new So("drag",a,b.clientX,b.clientY,b,c,d))}
function To(a,b){var c=a.b,d=isNaN(c.left)?null:c.left,c=isNaN(c.width)?0:c.width;return Math.min(null!=d?d+c:Infinity,Math.max(null!=d?d:-Infinity,b))}function Uo(a,b){var c=a.b,d=isNaN(c.top)?null:c.top,c=isNaN(c.height)?0:c.height;return Math.min(null!=d?d+c:Infinity,Math.max(null!=d?d:-Infinity,b))}function So(a,b,c,d,e,f,g,h){hb.call(this,a);this.clientX=c;this.clientY=d;this.d=e;this.left=t(f)?f:b.oa;this.top=t(g)?g:b.ma;this.b=b;this.a=!!h}F(So,hb);function Xo(a){a=t(a)?a:{};this.b=void 0;this.c=Yo;this.i=!1;this.f=null;a=t(a.className)?a.className:"ol-zoomslider";a=Ef("DIV",a+" ol-unselectable",Ef("DIV",a+"-thumb ol-unselectable"));null!==this.f&&(Fa(this.f,Ec),this.f=null);var b=new Oo(a.childNodes[0]);this.f=[L(b,["drag","end"],this.q,void 0,this)];this.g=b;L(a,["touchend","click"],this.k,!1,this);ji.call(this,{element:a})}F(Xo,ji);var Yo=0;Xo.prototype.setMap=function(a){Xo.F.setMap.call(this,a);null===a||Tj(a)};
Xo.prototype.d=function(a){if(null!==a.b){if(!this.i){var b=this.element,c=Nf(b);var d=Af(b),e=G&&b.currentStyle;e&&Of(yf(d))&&"auto"!=e.width&&"auto"!=e.height&&!e.boxSizing?(d=ug(b,e.width,"width","pixelWidth"),b=ug(b,e.height,"height","pixelHeight"),b=new xf(d,b)):(e=new xf(b.offsetWidth,b.offsetHeight),d=sg(b,"padding"),b=tg(b),b=new xf(e.width-b.left-d.left-d.right-b.right,e.height-b.top-d.top-d.bottom-b.bottom));var e=ig(c),d=mg(c),e=new bg(e.x,e.y,d.width,d.height),d=sg(c,"margin"),f=tg(c),
c=b.width-d.left-d.right-f.left-f.right-e.width,e=b.height-d.top-d.bottom-f.top-f.bottom-e.height;b.width>b.height?(this.c=1,c=new bg(0,0,c,0)):(this.c=Yo,c=new bg(0,0,0,e));this.g.b=c||new bg(NaN,NaN,NaN,NaN);this.i=!0}a=a.b.C.resolution;a!==this.b&&(this.b=a,a=-1*(hi(this.a.a().P())(a)-1),c=this.g,b=Nf(this.element),1==this.c?eg(b,c.b.left+c.b.width*a):eg(b,c.b.left,c.b.top+c.b.height*a))}};Xo.prototype.k=function(){};
Xo.prototype.q=function(a){var b=this.a,c=b.a().P();if("drag"===a.type){var b=this.g.b,d=0,d=1===this.c?(a.left-b.left)/b.width:(a.top-b.top)/b.height;a=-1*(Yc(d,0,1)-1);a=gi(this.a.a().P())(a);a!==this.b&&(this.b=a,c.kb(a))}else b.Ha(ti({resolution:this.b,duration:200,easing:mi})),a=c.Ia(this.b),c.kb(a)};function Zo(a){a=t(a)?a:{};this.b=t(a.extent)?a.extent:null;var b=Ef("DIV",{"class":(t(a.className)?a.className:"ol-zoom-extent")+" ol-unselectable"}),c=Ef("A",{href:"#zoomExtent"});b.appendChild(c);L(b,["touchend","click"],this.c,!1,this);ji.call(this,{element:b,target:a.target})}F(Zo,ji);Zo.prototype.c=function(a){a.U();a=this.a;var b=a.a().P(),c=null===this.b?b.fa().ba():this.b;b.$c(c,a.c())};function $o(a){N.call(this);this.a=a;L(this.a,"change",this.k,!1,this);L(this,Tc("value"),this.q,!1,this);L(this,Tc("valueAsNumber"),this.p,!1,this);L(this,Tc("checked"),this.i,!1,this)}F($o,N);$o.prototype.b=function(){return this.get("checked")};$o.prototype.getChecked=$o.prototype.b;$o.prototype.d=function(){return this.get("value")};$o.prototype.getValue=$o.prototype.d;$o.prototype.c=function(){return this.get("valueAsNumber")};$o.prototype.getValueAsNumber=$o.prototype.c;
$o.prototype.f=function(a){this.n("value",a)};$o.prototype.setValue=$o.prototype.f;$o.prototype.g=function(a){this.n("valueAsNumber",a)};$o.prototype.setValueAsNumber=$o.prototype.g;$o.prototype.e=function(a){this.n("checked",a)};$o.prototype.setChecked=$o.prototype.e;$o.prototype.k=function(){"checkbox"===this.a.type||"radio"===this.a.type?this.e(this.a.checked):(this.f(this.a.value),this.g(this.a.valueAsNumber))};$o.prototype.i=function(){this.a.checked=this.b()?"checked":void 0};
$o.prototype.q=function(){this.a.value=this.d()};$o.prototype.p=function(){this.a.value=this.c()};function ap(a,b){this.x=a;this.y=b}F(ap,wf);ap.prototype.da=function(){return new ap(this.x,this.y)};ap.prototype.scale=wf.prototype.scale;ap.prototype.add=function(a){this.x+=a.x;this.y+=a.y;return this};function bp(a){a=t(a)?a:{};Ki.call(this);this.V=t(a.condition)?a.condition:Ii;this.a=this.b=void 0;this.f=0}F(bp,Ki);bp.prototype.Ac=function(a){var b=a.a;a=a.map;var c=a.c(),c=new ap(b.Ld-c[0]/2,c[1]/2-b.Md),b=Math.atan2(c.y,c.x),c=Math.sqrt(c.x*c.x+c.y*c.y),d=a.a().P(),e=ii(d);Mi(a);t(this.b)&&Ai(a,d,e.rotation-(b-this.b));this.b=b;t(this.a)&&Di(a,d,this.a*(e.resolution/c));t(this.a)&&(this.f=this.a/c);this.a=c};
bp.prototype.Ub=function(a){var b=a.map,c=b.a().P(),d=ii(c),e=this.f-1;Bi(b,function(){var a=d.rotation,a=c.kc(a,0);Ai(b,c,a,void 0,void 0);a=d.resolution;a=c.Ia(a,0,e);Di(b,c,a,void 0,400)});this.f=0;return!0};bp.prototype.Vb=function(a){return this.V(a.a)?(this.a=this.b=void 0,!0):!1};function cp(a){a=t(a)?a:{};this.d=t(a.condition)?a.condition:Gi;this.b={};this.a={};this.c=t(a.layerFilter)?a.layerFilter:null}F(cp,zi);
cp.prototype.xb=function(a){var b=a.a;if(this.d(b)){var c=a.map,d=c.Va().Ob();null===this.c||(d=Ga(d,this.c));var e=!Ii(b),f=this;c.Kd({layers:d,pixel:a.e(),success:function(a){var b=d,l=x(c);l in f.a||(f.a[l]={map:c,layers:{}});for(var n=0,r=a.length;n<r;++n){var q=b[n],w=x(q),s=f.a[l].layers[w];t(s)||(s=new Xl({source:new sl({parser:null}),style:q instanceof Xl?q.c:null}),s.q=!0,c.zd(s),f.a[l].layers[w]=s,f.b[w]={});var A,B;ma(q.e)&&(A=[],B=[]);var v=a[n],z=v.length,I=[],D=[],K=f.b[w],T=K;if(e){for(var W in K)t(B)&&
B.push(q.a.a[W]),D.push(K[W]);K={};f.b[w]=K}for(var E=0;E<z;++E){var H=v[E],ka=x(H),aa=K[ka];aa?(t(B)&&B.push(H),delete K[ka],D.push(aa)):ka in T||(aa=new P(H.ob()),aa.Ea(H.H().da()),aa.Ka=H.Ka,aa.c=H.Db(),aa.a="selected",K[ka]=aa,t(A)&&A.push(H),I.push(aa))}ma(q.e)&&(q.e("hidden",A),q.e("default",B));q=s;v=nd();E=E=void 0;z=0;for(T=D.length;z<T;++z)E=D[z],q.a.remove(E),E=E.H(),null===E||td(v,E.ua());M(q,{extent:v,features:D,type:"remove"});Zl(s,I);0==hc(K)&&(c.he(s),delete f.a[l].layers[w],delete f.b[w])}}})}return!0};function dp(a){if("undefined"!=typeof DOMParser)return(new DOMParser).parseFromString(a,"application/xml");if("undefined"!=typeof ActiveXObject){var b=new ActiveXObject("MSXML2.DOMDocument");if(b){b.resolveExternals=!1;b.validateOnParse=!1;try{b.setProperty("ProhibitDTD",!0),b.setProperty("MaxXMLSize",2048),b.setProperty("MaxElementDepth",256)}catch(c){}}b.loadXML(a);return b}throw Error("Your browser does not support loading xml documents");}
function ep(a){if("undefined"!=typeof XMLSerializer)return(new XMLSerializer).serializeToString(a);if(a=a.xml)return a;throw Error("Your browser does not support serializing XML documents");};function fp(){};function gp(){p.ActiveXObject&&(this.b=new ActiveXObject("Microsoft.XMLDOM"));this.S={xa:/^\s*|\s*$/g,Rf:/\s*/g,Jb:/\s+/,td:/\s*,\s*/g}}F(gp,fp);m=gp.prototype;m.Za=function(a,b){b||(b={});var c=this.j[a.namespaceURI]||this.j[this.A];if(c){var d=a.localName||a.nodeName.split(":").pop();(c=c[d]||c["*"])&&c.apply(this,[a,b])}return b};function X(a,b,c){c||(c={});b=b.childNodes;for(var d,e=0,f=b.length;e<f;++e)d=b[e],1==d.nodeType&&a.Za(d,c)}
function Y(a){var b="";if(a)for(a=a.firstChild;a;a=a.nextSibling)switch(a.nodeType){case 3:case 4:b+=a.nodeValue}return b}m.getAttributeNS=function(a,b,c){var d="";if(a.getAttributeNS)d=a.getAttributeNS(b,c)||"";else{var e=null;if(a.getAttributeNodeNS)e=a.getAttributeNodeNS(b,c);else{a=a.attributes;for(var f,g,h=0,l=a.length;h<l;++h)if(f=a[h],f.namespaceURI==b&&(g=f.prefix?f.prefix+":"+c:c,g==f.nodeName)){e=f;break}}if(b=e)d=b.nodeValue}return d};
m.createElementNS=function(a,b){var c=b?b:this.A;return this.b?this.b.createNode(1,a,c):document.createElementNS(c,a)};function $(a,b,c,d,e){var f=null;t(a.a)&&(f=a.a[d?d:a.A][b].apply(a,[c]),e&&f&&e.appendChild(f));return f}m.createTextNode=function(a){return this.b?this.b.createTextNode(a):document.createTextNode(a)};
m.setAttributeNS=function(a,b,c,d){if(a.setAttributeNS)a.setAttributeNS(b,c,d);else if(this.b)b?(b=a.ownerDocument.createNode(2,c,b),b.nodeValue=d,a.setAttributeNode(b)):a.setAttribute(c,d);else throw Error("setAttributeNS not implemented");};function hp(a,b){if(a.b)return b.xml;if(1==b.nodeType){var c=document.implementation.createDocument("","",null);c.importNode?c.appendChild(c.importNode(b,!0)):c.appendChild(b);return ep(c)}return ep(b)}
m.createDocumentFragment=function(){return this.b?this.b.createDocumentFragment():document.createDocumentFragment()};function ip(a){a=t(a)?a:{};this.extractAttributes=t(a.extractAttributes)?a.extractAttributes:!0;this.extractWaypoints=t(a.extractWaypoints)?a.extractWaypoints:!0;this.extractTracks=t(a.extractTracks)?a.extractTracks:!0;this.extractRoutes=t(a.extractRoutes)?a.extractRoutes:!0;this.creator=t(a.creator)?a.creator:"OpenLayers";this.defaultDesc=t(a.defaultDesc)?a.defaultDesc:"No description available";this.A="http://www.topografix.com/GPX/1/1";this.schemaLocation="http://www.topografix.com/GPX/1/1 http://www.topografix.com/GPX/1/1/gpx.xsd";
this.j={"http://www.topografix.com/GPX/1/1":{gpx:function(a,c){t(c.features)||(c.features=[]);X(this,a,c)},wpt:function(a,c){if(this.extractWaypoints){var d={},e=[parseFloat(a.getAttribute("lon")),parseFloat(a.getAttribute("lat"))];X(this,a,d);var d=new P(d),f;if(this.ga){var g=this.ga.aa;g&&(f=g(d,"point"))}e=new km(e,f);d.Ea(e);c.features.push(d)}},rte:function(a,c){if(this.extractRoutes||c.De){var d={properties:{},geometry:{type:"linestring",coordinates:[]}};X(this,a,d);var e=new P(d.properties),
f;if(this.ga){var g=this.ga.aa;g&&(f=g(e,"linestring"))}d=new im(d.geometry.coordinates,f);e.Ea(d);c.features.push(e)}},rtept:function(a,c){var d=[parseFloat(a.getAttribute("lon")),parseFloat(a.getAttribute("lat"))];c.geometry.coordinates.push(d)},trk:function(a,c){if(this.extractTracks){var d=this.j[this.A];c.De=!0;d.rte.apply(this,arguments)}},trkseg:function(a,c){X(this,a,c)},trkpt:function(a,c){this.j[this.A].rtept.apply(this,arguments)},"*":function(a,c){if(!0===this.extractAttributes){var d=
a.childNodes.length;1!==d&&2!==d||3!==a.firstChild.nodeType&&4!==a.firstChild.nodeType||this.j[this.A]._attribute.apply(this,arguments)}},_attribute:function(a,c){var d=a.localName||a.nodeName.split(":").pop(),e=Y(a);c.properties?c.properties[d]=e.replace(this.S.xa,""):c[d]=e.replace(this.S.xa,"")}}};this.j["http://www.topografix.com/GPX/1/0"]=this.j[this.A];this.a={"http://www.topografix.com/GPX/1/1":{_feature:function(a){var c=a.H();if(c instanceof km)return $(this,"wpt",a);if(c instanceof im||
c instanceof jm||c instanceof om)return $(this,"trk",a)},wpt:function(a){var c=this.createElementNS("wpt"),d=a.H().s();c.setAttribute("lon",d[0]);c.setAttribute("lat",d[1]);d=a.ob();a=d.name||x(a).toString();$(this,"name",a,void 0,c);$(this,"desc",d.description||this.defaultDesc,void 0,c);return c},trk:function(a){var c=a.ob(),d=this.createElementNS("trk"),e=c.name||x(a).toString();$(this,"name",e,void 0,d);$(this,"desc",c.description||this.defaultDesc,void 0,d);c=a.H();if(c instanceof im)$(this,
"trkseg",a.H(),void 0,d);else if(c instanceof jm)for(a=0,e=c.o.length;a<e;++a)$(this,"trkseg",c.o[a],void 0,d);else if(c instanceof om)for(a=0,e=c.b.length;a<e;++a)$(this,"trkseg",c.b[a],void 0,d);return d},trkseg:function(a){var c=this.createElementNS("trkseg");a=a.s();for(var d=0,e=a.length;d<e;++d)$(this,"trkpt",a[d],void 0,c);return c},trkpt:function(a){var c=this.createElementNS("trkpt");c.setAttribute("lon",a[0]);c.setAttribute("lat",a[1]);return c},metadata:function(a){var c=this.createElementNS("metadata");
t(a.name)&&$(this,"name",a.name,void 0,c);t(a.desc)&&$(this,"desc",a.desc,void 0,c);t(a.author)&&$(this,"author",a.author,void 0,c);return c},name:function(a){var c=this.createElementNS("name");c.appendChild(this.createTextNode(a));return c},desc:function(a){var c=this.createElementNS("desc");c.appendChild(this.createTextNode(a));return c},author:function(a){var c=this.createElementNS("author");c.appendChild(this.createTextNode(a));return c}}};gp.call(this)}F(ip,gp);
ip.prototype.D=function(a){u(a)&&(a=dp(a));a&&9==a.nodeType&&(a=a.documentElement);var b={metadata:{projection:"EPSG:4326"}};this.Za(a,b);return b};ip.prototype.ec=function(a,b){this.ga=b;return this.D(a)};ip.prototype.dc=function(a,b){this.ga=b;return this.D(a)};
ip.prototype.write=function(a){var b=ia(a.features)?a.features:[a.features],c=this.createElementNS("gpx");c.setAttribute("version","1.1");c.setAttribute("creator",this.creator);this.setAttributeNS(c,"http://www.w3.org/2001/XMLSchema-instance","xsi:schemaLocation",this.schemaLocation);t(a.metadata)&&$(this,"metadata",a.metadata,void 0,c);a=0;for(var d=b.length;a<d;a++)$(this,"_feature",b[a],void 0,c);return hp(this,c)};function jp(a){hm.call(this);this.o=a;for(var b=0,c=0,d=a.length;c<d;++c)t(b)&&(b=a[c].dimension);this.dimension=b}F(jp,hm);jp.prototype.O=ba("geometrycollection");function kp(){}F(kp,fp);ga(kp);kp.prototype.D=function(a){a=JSON.parse(a);return lp(this,a)};kp.prototype.ec=function(a,b){var c=JSON.parse(a);return mp(this,c,b)};kp.prototype.dc=function(a,b){return mp(this,a,b)};
function lp(a,b,c){if("FeatureCollection"===b.type){a=b.features;b=a.length;var d=Array(b),e;for(e=0;e<b;++e)d[e]=np(a[e],c);c=d}else if("Feature"===b.type)c=np(b,c);else if("GeometryCollection"===b.type){b=b.geometries;d=b.length;e=Array(d);var f;for(f=0;f<d;++f)e[f]=lp(a,b[f],c);c=e}else c=np({type:"Feature",geometry:b},c).H();return c}
function mp(a,b,c){c=lp(a,b,c);a=[];var d;if(c instanceof P)a=[c];else if(c instanceof Bd)d=new P,d.Ea(c),a=[d];else if(ia(c))for(var e,f,g=0,h=c.length;g<h;++g)if(e=c[g],f=f||e instanceof Bd)d=new P,d.Ea(e),a[g]=d;else{a=c;break}f="EPSG:4326";null!=b.crs&&(b=b.crs,"name"===b.type&&(f=b.properties.name));return{features:a,metadata:{projection:f}}}
function np(a,b){var c=a.geometry,d=null,e=b||{},f=new P(a.properties);t(a.id)&&(f.Ka=a.id);if(c){var d=c.type,e=e.aa,g;e&&(g=e(f,mc[d]));switch(d){case "Point":d=new km(c.coordinates,g);break;case "LineString":d=new im(c.coordinates,g);break;case "Polygon":d=new om(c.coordinates,g);break;case "MultiPoint":d=new lm(c.coordinates,g);break;case "MultiLineString":d=new jm(c.coordinates,g);break;case "MultiPolygon":d=new pm(c.coordinates,g);break;default:throw Error("Bad geometry type: "+d);}f.Ea(d)}return f}
function op(a){var b=a.O();return{type:lc(function(a){return a===b}),coordinates:a.s()}}function pp(a){var b=a.H();a=a.ob();return{type:"Feature",properties:gc(a,function(a){return!(a instanceof Bd)}),geometry:op(b)}}
kp.prototype.write=function(a){var b;if(a instanceof jp){b=[];for(var c=0,d=a.o.length;c<d;++c)b.push(op(a.o[c]));b={type:"GeometryCollection",geometries:b}}else if(a instanceof Bd)b=op(a);else if(a instanceof P)b=pp(a);else if(ia(a)){b=[];c=0;for(d=a.length;c<d;++c)b.push(pp(a[c]));b={type:"FeatureCollection",features:b}}return JSON.stringify(b)};var mc={Point:"point",LineString:"linestring",Polygon:"polygon",MultiPoint:"multipoint",MultiLineString:"multilinestring",MultiPolygon:"multipolygon",GeometryCollection:"geometrycollection"};/*
 Portions of this code are from MochiKit, received by
 The Closure Authors under the MIT license. All other code is Copyright
 2005-2009 The Closure Authors. All Rights Reserved.
*/
function qp(a,b){this.c=[];this.k=a;this.g=b||null}m=qp.prototype;m.nb=!1;m.Tb=!1;m.Uc=!1;m.Ae=!1;m.sd=!1;m.Vc=0;m.cancel=function(a){if(this.nb)this.b instanceof qp&&this.b.cancel();else{if(this.a){var b=this.a;delete this.a;a?b.cancel(a):(b.Vc--,0>=b.Vc&&b.cancel())}this.k?this.k.call(this.g,this):this.sd=!0;this.nb||this.Cb(new rp(this))}};m.Dd=function(a,b){this.Uc=!1;sp(this,a,b)};function sp(a,b,c){a.nb=!0;a.b=c;a.Tb=!b;tp(a)}function up(a){if(a.nb){if(!a.sd)throw new vp(a);a.sd=!1}}
m.aa=function(a){up(this);sp(this,!0,a)};m.Cb=function(a){up(this);sp(this,!1,a)};function wp(a,b,c){return xp(a,b,null,c)}function xp(a,b,c,d){a.c.push([b,c,d]);a.nb&&tp(a);return a}function yp(a){return La(a.c,function(a){return ma(a[1])})}
function tp(a){a.f&&(a.nb&&yp(a))&&(p.clearTimeout(a.f),delete a.f);a.a&&(a.a.Vc--,delete a.a);for(var b=a.b,c=!1,d=!1;a.c.length&&!a.Uc;){var e=a.c.shift(),f=e[0],g=e[1],e=e[2];if(f=a.Tb?g:f)try{var h=f.call(e||a.g,b);t(h)&&(a.Tb=a.Tb&&(h==b||h instanceof Error),a.b=b=h);b instanceof qp&&(d=!0,a.Uc=!0)}catch(l){b=l,a.Tb=!0,yp(a)||(c=!0)}}a.b=b;d&&(xp(b,y(a.Dd,a,!0),y(a.Dd,a,!1)),b.Ae=!0);c&&(a.f=p.setTimeout(Ue(b),0))}function vp(a){ua.call(this);this.a=a}F(vp,ua);vp.prototype.message="Deferred has already fired";
vp.prototype.name="AlreadyCalledError";function rp(a){ua.call(this);this.a=a}F(rp,ua);rp.prototype.message="Deferred was canceled";rp.prototype.name="CanceledError";function zp(a,b,c,d,e,f){qp.call(this,e,f);this.e=a;this.d=[];this.V=!!b;this.q=!!c;this.p=!!d;for(b=this.r=0;b<a.length;b++)xp(a[b],y(this.i,this,b,!0),y(this.i,this,b,!1));0!=a.length||this.V||this.aa(this.d)}F(zp,qp);zp.prototype.i=function(a,b,c){this.r++;this.d[a]=[b,c];this.nb||(this.V&&b?this.aa([a,c]):this.q&&!b?this.Cb(c):this.r==this.e.length&&this.aa(this.d));this.p&&!b&&(c=null);return c};zp.prototype.Cb=function(a){zp.F.Cb.call(this,a);for(a=0;a<this.e.length;a++)this.e[a].cancel()};
function Ap(a){return wp(new zp(a,!1,!0),function(a){for(var c=[],d=0;d<a.length;d++)c[d]=a[d][1];return c})};var Bp;
Bp={e:["BC","AD"],d:["Before Christ","Anno Domini"],g:"JFMAMJJASOND".split(""),ac:"JFMAMJJASOND".split(""),f:"January February March April May June July August September October November December".split(" "),q:"January February March April May June July August September October November December".split(" "),r:"Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec".split(" "),G:"Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec".split(" "),la:"Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" "),R:"Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" "),
p:"Sun Mon Tue Wed Thu Fri Sat".split(" "),K:"Sun Mon Tue Wed Thu Fri Sat".split(" "),V:"SMTWTFS".split(""),t:"SMTWTFS".split(""),k:["Q1","Q2","Q3","Q4"],i:["1st quarter","2nd quarter","3rd quarter","4th quarter"],a:["AM","PM"],b:["EEEE, MMMM d, y","MMMM d, y","MMM d, y","M/d/yy"],$:["h:mm:ss a zzzz","h:mm:ss a z","h:mm:ss a","h:mm a"],c:["{1} 'at' {0}","{1} 'at' {0}","{1}, {0}","{1}, {0}"],pe:6,na:[5,6],qe:5};var Cp=/^(\d{4})(?:(?:-?(\d{2})(?:-?(\d{2}))?)|(?:-?(\d{3}))|(?:-?W(\d{2})(?:-?([1-7]))?))?$/,Dp=/^(\d{2})(?::?(\d{2})(?::?(\d{2})(\.\d+)?)?)?$/,Ep=/Z|(?:([-+])(\d{2})(?::?(\d{2}))?)$/;
function Fp(a){var b=new Gp(2E3);a=va(a);a=a.split(-1==a.indexOf("T")?" ":"T");var c;var d=a[0].match(Cp);if(d){var e=Number(d[2]),f=Number(d[3]),g=Number(d[4]);c=Number(d[5]);var h=Number(d[6])||1;b.a.setFullYear(Number(d[1]));g?(b.a.setDate(1),b.a.setMonth(0),b.add(new Hp(Ip,g-1))):c?(b.a.setMonth(0),b.a.setDate(1),d=b.a.getDay()||7,b.add(new Hp(Ip,(4>=d?1-d:8-d)+(Number(h)+7*(Number(c)-1))-1))):(e&&(b.a.setDate(1),b.a.setMonth(e-1)),f&&b.a.setDate(f));c=!0}else c=!1;c&&!(c=2>a.length)&&(a=a[1],
c=a.match(Ep),h=0,c&&("Z"!=c[0]&&(h=60*c[2]+Number(c[3]),h*="-"==c[1]?1:-1),h-=b.a.getTimezoneOffset(),a=a.substr(0,a.length-c[0].length)),(c=a.match(Dp))?(b.a.setHours(Number(c[1])),b.a.setMinutes(Number(c[2])||0),b.a.setSeconds(Number(c[3])||0),b.a.setMilliseconds(c[4]?1E3*c[4]:0),0!=h&&b.a.setTime(b.getTime()+6E4*h),c=!0):c=!1);return c?b:null}
function Hp(a,b,c,d,e,f){u(a)?(this.f=a==Jp?b:0,this.d=a==Kp?b:0,this.a=a==Ip?b:0,this.b=a==Lp?b:0,this.c=a==Mp?b:0,this.e=a==Np?b:0):(this.f=a||0,this.d=b||0,this.a=c||0,this.b=d||0,this.c=e||0,this.e=f||0)}Hp.prototype.da=function(){return new Hp(this.f,this.d,this.a,this.b,this.c,this.e)};var Jp="y",Kp="m",Ip="d",Lp="h",Mp="n",Np="s";Hp.prototype.add=function(a){this.f+=a.f;this.d+=a.d;this.a+=a.a;this.b+=a.b;this.c+=a.c;this.e+=a.e};
function Op(a,b,c){la(a)?(this.a=new Date(a,b||0,c||1),Pp(this,c||1)):na(a)?(this.a=new Date(a.getFullYear(),a.getMonth(),a.getDate()),Pp(this,a.getDate())):(this.a=new Date(ta()),this.a.setHours(0),this.a.setMinutes(0),this.a.setSeconds(0),this.a.setMilliseconds(0))}m=Op.prototype;m.rc=Bp.pe;m.sc=Bp.qe;m.da=function(){var a=new Op(this.a);a.rc=this.rc;a.sc=this.sc;return a};m.getFullYear=function(){return this.a.getFullYear()};m.getMonth=function(){return this.a.getMonth()};m.getDate=function(){return this.a.getDate()};
m.getTime=function(){return this.a.getTime()};function Qp(a){a=a.a.getTimezoneOffset();if(0==a)a="Z";else{var b=Math.abs(a)/60,c=Math.floor(b),b=60*(b-c);a=(0<a?"-":"+")+Ca(c)+":"+Ca(b)}return a}
m.add=function(a){if(a.f||a.d){var b=this.getMonth()+a.d+12*a.f,c=this.getFullYear()+Math.floor(b/12),b=b%12;0>b&&(b+=12);var d;a:{switch(b){case 1:d=0!=c%4||0==c%100&&0!=c%400?28:29;break a;case 5:case 8:case 10:case 3:d=30;break a}d=31}d=Math.min(d,this.getDate());this.a.setDate(1);this.a.setFullYear(c);this.a.setMonth(b);this.a.setDate(d)}a.a&&(a=new Date((new Date(this.getFullYear(),this.getMonth(),this.getDate(),12)).getTime()+864E5*a.a),this.a.setDate(1),this.a.setFullYear(a.getFullYear()),
this.a.setMonth(a.getMonth()),this.a.setDate(a.getDate()),Pp(this,a.getDate()))};m.yc=function(a,b){return[this.getFullYear(),Ca(this.getMonth()+1),Ca(this.getDate())].join(a?"-":"")+(b?Qp(this):"")};m.toString=function(){return this.yc()};function Pp(a,b){a.getDate()!=b&&a.a.setUTCHours(a.a.getUTCHours()+(a.getDate()<b?1:-1))}m.valueOf=function(){return this.a.valueOf()};function Gp(a,b,c,d,e,f,g){this.a=la(a)?new Date(a,b||0,c||1,d||0,e||0,f||0,g||0):new Date(a?a.getTime():ta())}F(Gp,Op);
Gp.prototype.add=function(a){Op.prototype.add.call(this,a);a.b&&this.a.setHours(this.a.getHours()+a.b);a.c&&this.a.setMinutes(this.a.getMinutes()+a.c);a.e&&this.a.setSeconds(this.a.getSeconds()+a.e)};Gp.prototype.yc=function(a,b){var c=Op.prototype.yc.call(this,a);return a?c+" "+Ca(this.a.getHours())+":"+Ca(this.a.getMinutes())+":"+Ca(this.a.getSeconds())+(b?Qp(this):""):c+"T"+Ca(this.a.getHours())+Ca(this.a.getMinutes())+Ca(this.a.getSeconds())+(b?Qp(this):"")};Gp.prototype.toString=function(){return this.yc()};
Gp.prototype.da=function(){var a=new Gp(this.a);a.rc=this.rc;a.sc=this.sc;return a};function Rp(a){this.d=a.url instanceof nk?a.url:new U(a.url);this.b=t(a.width)?a.width instanceof nk?a.width:new U(a.width):null;this.a=t(a.height)?a.height instanceof nk?a.height:new U(a.height):null;this.c=t(a.opacity)?a.opacity instanceof nk?a.opacity:new U(a.opacity):new U(Sp);this.e=t(a.rotation)?a.rotation instanceof nk?a.rotation:new U(a.rotation):new U(Tp);this.f=t(a.xOffset)?a.xOffset instanceof nk?a.xOffset:new U(a.xOffset):new U(Up);this.g=t(a.yOffset)?a.yOffset instanceof nk?a.yOffset:
new U(a.yOffset):new U(Vp)}Rp.prototype.cb=function(a){var b;a instanceof P&&(b=a,a=(a=b.H())?a.O():null);var c=null;if("point"===a||"multipoint"===a){a=Uk(this.d,b);var d;null===this.b||(d=Number(Uk(this.b,b)));var e;null===this.a||(e=Number(Uk(this.a,b)));var c=Number(Uk(this.c,b)),f=Number(Uk(this.e,b)),g=Number(Uk(this.f,b));b=Number(Uk(this.g,b));c=new qm({url:a,width:d,height:e,opacity:c,rotation:f,xOffset:g,yOffset:b})}return c};var Sp=1,Tp=0,Up=0,Vp=0;function Wp(a){a=t(a)?a:{};this.extractAttributes=t(a.extractAttributes)?a.extractAttributes:!0;this.extractStyles=t(a.extractStyles)?a.extractStyles:!1;this.schemaLocation="http://www.opengis.net/kml/2.2 http://schemas.opengis.net/kml/2.2.0/ogckml22.xsd";this.dimension=t(a.dimension)?a.dimension:3;this.maxDepth=t(a.maxDepth)?a.maxDepth:0;this.trackAttributes=t(a.trackAttributes)?a.trackAttributes:null;this.A="http://www.opengis.net/kml/2.2";this.j={"http://www.opengis.net/kml/2.2":{kml:function(a,
c){t(c.features)||(c.features=[]);t(c.links)||(c.links=[]);X(this,a,c)},Document:function(a,c){X(this,a,c)},"*":function(a,c){if(!0===this.extractAttributes){var d=a.childNodes.length;1!==d&&2!==d||3!==a.firstChild.nodeType&&4!==a.firstChild.nodeType||this.j[this.A]._attribute.apply(this,arguments)}},NetworkLink:function(a,c){var d={};X(this,a,d);c.links.push(d)},Link:function(a,c){X(this,a,c)},_attribute:function(a,c){var d=a.localName||a.nodeName.split(":").pop(),e=Y(a);c.properties?c.properties[d]=
e.replace(this.S.xa,""):c[d]=e.replace(this.S.xa,"")},Placemark:function(a,c){var d={properties:{}},e,f,g=a.getAttribute("id");X(this,a,d);if(t(d.ka)){var h=d.ka,l;delete d.ka;for(var n=0,r=h.Ab.length;n<r;++n){if(this.trackAttributes)for(l=0,e=this.trackAttributes.length;l<e;++l)f=this.trackAttributes[l],d.properties[f]=h.attributes[f][n];d.properties.when=h.Ab[n];t(h.bb[n])&&(d.properties.heading=parseFloat(h.bb[n][0]),d.properties.tilt=parseFloat(h.bb[n][1]),d.properties.roll=parseFloat(h.bb[n][2]));
3===h.Hb[n].coordinates.length&&(d.properties.altitude=h.Hb[n].coordinates[2]);l=new P(d.properties);null!==g&&(l.Ka=g);var q=h.Hb[n];q&&(e=void 0,this.ga&&(f=this.ga.aa)&&(e=f(l,q.type)),e=Xp(this,{geometry:q},e),t(e)&&l.Ea(e));c.features.push(l)}}else t(d.geometry)&&(h=d.properties.styleUrl,t(h)&&(0==h.lastIndexOf("#",0)||c.links.push({href:h})),l=new P(d.properties),null!==g&&(l.Ka=g),d.geometry&&(e=void 0,this.ga&&(f=this.ga.aa)&&(e=f(l,d.geometry.type)),e=Xp(this,d,e),t(e)&&l.Ea(e)),g=void 0,
t(d.Nc)&&(g=d.Nc[0].symbolizers),Yp(l,c.styles,g),c.features.push(l))},MultiGeometry:function(a,c){var d=[];X(this,a,d);var e=Wa(d,function(a){return a.type}),f;if(1===hc(e))switch(ic(e)){case "point":f={type:"multipoint",N:d};break;case "linestring":f={type:"multilinestring",N:d};break;case "polygon":f={type:"multipolygon",N:d}}else f={type:"geometrycollection",N:d};ia(c)?c.push(f):c.geometry=f},Point:function(a,c){var d=[];X(this,a,d);d={type:"point",coordinates:d[0][0]};ia(c)?c.push(d):c.geometry=
d},Polygon:function(a,c){var d=[];X(this,a,d);d={type:"polygon",coordinates:d};ia(c)?c.push(d):c.geometry=d},LineString:function(a,c){var d=[];X(this,a,d);d={type:"linestring",coordinates:d[0]};ia(c)?c.push(d):c.geometry=d},outerBoundaryIs:function(a,c){X(this,a,c)},LinearRing:function(a,c){X(this,a,c)},coordinates:function(a,c){for(var d=this.S,e=Y(a).replace(d.xa,"").split(d.Jb),f=[],g=0,h=e.length;g<h;g++){for(var l=e[g].replace(d.Rf,"").split(","),n=[],r=Math.min(l.length,this.dimension),q=0;q<
r;q++)n.push(parseFloat(l[q]));f.push(n)}c.push(f)},innerBoundaryIs:function(a,c){X(this,a,c)},Folder:function(a,c){X(this,a,c)},ExtendedData:function(a,c){X(this,a,c.properties)},SchemaData:function(a,c){X(this,a,c)},SimpleData:function(a,c){c[a.getAttribute("name")]=Y(a)},Data:function(a,c){var d={};X(this,a,d);c[a.getAttribute("name")]=d.value},when:function(a,c){var d=Y(a),e=d.split("T");2===e.length&&2===e[1].split("-").length&&(d+=":00");c.Ab.push(Fp(d).a)},_trackPointAttribute:function(a,c){var d=
a.nodeName.split(":").pop();c.attributes[d].push(Y(a))},Style:function(a,c){if(!0===this.extractStyles){c.styles||(c.styles=[]);var d={symbolizers:[],ids:[]},e=a.getAttribute("id");null===e||(d.id=e);X(this,a,d);c.styles.push(d)}},LineStyle:function(a,c){var d={},e={};X(this,a,d);d.color&&(e.color=d.color.color,e.opacity=d.color.opacity);d.width&&(e.width=parseFloat(d.width));c.ids.push(a.getAttribute("id"));c.symbolizers.push(new Ll(e))},PolyStyle:function(a,c){var d={},e={};X(this,a,d);"0"!==d.fill&&
"false"!==d.fill&&(d.color?(e.color=d.color.color,e.opacity=d.color.opacity):(e.color="#ffffff",e.opacity=1),c.symbolizers.push(new Dl(e)));"0"!==d.outline&&"false"!==d.outline&&(d.color?(e.color=d.color.color,e.opacity=d.color.opacity):(e.color="#ffffff",e.opacity=1),c.symbolizers.push(new Ll(e)));c.ids.push(a.getAttribute("id"))},fill:function(a,c){c.fill=Y(a)},outline:function(a,c){c.outline=Y(a)},scale:function(a,c){c.scale=parseFloat(Y(a))},Icon:function(a,c){c.ub={};X(this,a,c.ub)},href:function(a,
c){c.href=Y(a)},w:function(a,c){c.fg=Y(a)},h:function(a,c){c.Ve=Y(a)},x:function(a,c){c.x=Y(a)},y:function(a,c){c.y=Y(a)},hotSpot:function(a,c){c.Wb={x:parseFloat(a.getAttribute("x")),y:parseFloat(a.getAttribute("y")),hg:a.getAttribute("xunits"),ig:a.getAttribute("yunits")}},IconStyle:function(a,c){var d={},e={};X(this,a,d);var f=d.scale||1,g=32*f,h=32*f,l,n;if(t(d.ub)&&(l=d.ub.href,t(l))){n=d.ub.fg;var r=d.ub.Ve;0!=l.lastIndexOf("http://maps.google.com/mapfiles/kml",0)||(t(n)||t(r))||(r=n=64,f/=
2);n=n||r;r=r||n;n&&(g=parseInt(n,10)*f);r&&(h=parseInt(r,10)*f);if(n=l.match(this.S.Cf)){var r=n[1],q=n[2];l=d.ub.x;n=d.ub.y;l="http://maps.google.com/mapfiles/kml/pal"+r+"/icon"+(8*(n?7-n/32:7)+(l?l/32:0))+q}e.opacity=1;e.url=l}t(d.Wb)&&(l=d.Wb.x,n=d.Wb.y,r=d.Wb.hg,d=d.Wb.ig,"pixels"===r?e.xOffset=-l*f:"insetPixels"===r?e.xOffset=-g+l*f:"fraction"===r&&(e.xOffset=-g*l),"pixels"==d?e.yOffset=-h+n*f+1:"insetPixels"==d?e.yOffset=-(n*f)+1:"fraction"==d&&(e.yOffset=-h*(1-n)+1));e.width=g;e.height=h;
c.ids.push(a.getAttribute("id"));c.symbolizers.push(new Rp(e))},color:function(a,c){var d=Y(a);d&&(d=d.match(this.S.Bf))&&(c.color={color:"#"+d[4]+d[3]+d[2],opacity:parseInt(d[1],16)/255})},width:function(a,c){c.width=Y(a)}},"http://www.google.com/kml/ext/2.2":{Track:function(a,c){c.ka={Ab:[],Hb:[],bb:[]};if(this.trackAttributes){var d;c.ka.attributes={};for(var e=0,f=this.trackAttributes.length;e<f;++e){d=this.trackAttributes[e];c.ka.attributes[d]=[];var g=this.j[this.A];d in g||(g[d]=g._trackPointAttribute)}}X(this,
a,c.ka);if(c.ka.Ab.length!==c.ka.Hb.length)throw Error("gx:Track with unequal number of when ("+c.ka.Ab.length+") and gx:coord ("+c.ka.Hb.length+") elements.");if(0<c.ka.bb.length&&c.ka.Ab.length!==c.ka.bb.length)throw Error("gx:Track with unequal number of when ("+c.ka.Ab.length+") and gx:angles ("+c.ka.bb.length+") elements.");},coord:function(a,c){for(var d=Y(a).replace(this.S.xa,"").split(/\s+/),e=0,f=this.dimension;e<f;++e)d[e]=parseFloat(d[e]);c.Hb.push({type:"point",coordinates:d})},angles:function(a,
c){var d=Y(a).replace(this.S.xa,"").split(/\s+/);c.bb.push(d)}}};this.a={"http://www.opengis.net/kml/2.2":{kml:function(a){var c=this.createElementNS("kml");$(this,"Document",a,null,c);return c},Document:function(a){var c=this.createElementNS("Document"),d;for(d in a)if(a.hasOwnProperty(d)&&u(a[d])){var e=this.createElementNS(d);e.appendChild(this.createTextNode(a[d]));c.appendChild(e)}if(t(a.Nc))for(d=0,e=a.Nc.length;d<e;++d)$(this,"_style",a.Nc[d],null,c);d=0;for(e=a.features.length;d<e;++d)$(this,
"_feature",a.features[d],null,c);return c},_style:function(a){var c=this.createElementNS("Style");t(a.id)&&this.setAttributeNS(c,null,"id",a.id);for(var d=0,e=a.symbolizers.length;d<e;++d)$(this,"_symbolizer",{Oc:a.symbolizers[d],id:a.xf?a.xf[d]:void 0},null,c);return c},_symbolizer:function(a){var c=a.Oc;if(c instanceof Rp)return $(this,"IconStyle",a);if(c instanceof Ll)return $(this,"LineStyle",a);if(c instanceof Dl)return $(this,"PolyStyle",a)},PolyStyle:function(a){var c=this.createElementNS("PolyStyle");
a.id&&this.setAttributeNS(c,null,"id",a.id);a=a.Oc.cb("polygon");var d,e;0!==a.pa?($(this,"fill","1",null,c),d=a.fillColor,e=a.pa):$(this,"fill","0",null,c);a.sa?($(this,"outline","1",null,c),d=d||a.strokeColor,e=e||a.sa):$(this,"outline","0",null,c);d&&e&&$(this,"color",{color:d.substring(1),opacity:e},null,c);return c},fill:function(a){var c=this.createElementNS("fill");c.appendChild(this.createTextNode(a));return c},outline:function(a){var c=this.createElementNS("outline");c.appendChild(this.createTextNode(a));
return c},LineStyle:function(a){var c=this.createElementNS("LineStyle");a.id&&this.setAttributeNS(c,null,"id",a.id);a=a.Oc.cb("linestring");$(this,"color",{color:a.color.substring(1),opacity:a.opacity},null,c);$(this,"width",a.width,null,c);return c},color:function(a){var c=a.color;a=(255*a.opacity).toString(16)+c.substring(4,6)+c.substring(2,4)+c.substring(0,2);c=this.createElementNS("color");c.appendChild(this.createTextNode(a));return c},width:function(a){var c=this.createElementNS("width");c.appendChild(this.createTextNode(a));
return c},IconStyle:function(a){var c=this.createElementNS("IconStyle");this.setAttributeNS(c,null,"id",a.id);$(this,"Icon",a.Oc.cb("point").url,null,c);return c},Icon:function(a){var c=this.createElementNS("Icon");$(this,"href",a,null,c);return c},href:function(a){var c=this.createElementNS("href");c.appendChild(this.createTextNode(a));return c},_feature:function(a){var c=this.createElementNS("Placemark"),d=a.Ka;t(d)&&c.setAttribute("id",d);$(this,"name",a,null,c);$(this,"description",a,null,c);
t(a.get("styleUrl"))?$(this,"styleUrl",a,null,c):(d=a.Db(),null===d||$(this,"_style",{symbolizers:d},null,c));$(this,"_geometry",a.H(),null,c);return c},name:function(a){a=a.get("name");if(t(a)){var c=this.createElementNS("name");c.appendChild(this.createTextNode(a));return c}},description:function(a){a=a.get("description");if(t(a)){var c=this.createElementNS("description");c.appendChild(this.createTextNode(a));return c}},styleUrl:function(a){a=a.get("styleUrl");var c=this.createElementNS("styleUrl");
c.appendChild(this.createTextNode(a));return c},_geometry:function(a){if(a instanceof km)return $(this,"Point",a);if(a instanceof im)return $(this,"LineString",a);if(a instanceof om)return $(this,"Polygon",a);if(a instanceof hm)return $(this,"MultiGeometry",a)},MultiGeometry:function(a){for(var c=this.createElementNS("MultiGeometry"),d=0,e=a.o.length;d<e;++d)$(this,"_geometry",a.o[d],null,c);return c},Point:function(a){var c=this.createElementNS("Point");a=a.s();$(this,"coordinates",[a],null,c);return c},
LineString:function(a){var c=this.createElementNS("LineString");$(this,"coordinates",a.s(),null,c);return c},Polygon:function(a){var c=this.createElementNS("Polygon");a=a.s();$(this,"outerBoundaryIs",a[0],null,c);for(var d=1,e=a.length;d<e;++d)$(this,"innerBoundaryIs",a[d],null,c);return c},outerBoundaryIs:function(a){var c=this.createElementNS("outerBoundaryIs");$(this,"LinearRing",a,null,c);return c},innerBoundaryIs:function(a){var c=this.createElementNS("innerBoundaryIs");$(this,"LinearRing",a,
null,c);return c},LinearRing:function(a){var c=this.createElementNS("LinearRing");$(this,"coordinates",a,null,c);return c},coordinates:function(a){for(var c=this.createElementNS("coordinates"),d="",e=0,f=a.length;e<f;++e){for(var g=0,h=a[e].length;g<h;++g)d+=a[e][g],g<h-1&&(d+=",");e<f-1&&(d+=" ")}c.appendChild(this.createTextNode(d));return c}}};gp.call(this);J(this.S,{Bf:/(\w{2})(\w{2})(\w{2})(\w{2})/,Cf:/root:\/\/icons\/palette-(\d+)(\.\w+)/,a:/\$\[(.*?)\]/g})}F(Wp,gp);m=Wp.prototype;
m.fe=function(a,b,c){this.ga=c;this.D(a,b)};m.ge=function(a,b,c){this.ga=c;this.D(a,b)};m.ec=function(a,b){this.ga=b;return this.D(a)};m.dc=function(a,b){this.ga=b;return this.D(a)};
function Zp(a,b,c,d){var e;if(a.c<a.maxDepth){a.c++;for(var f=0,g=c.links.length;f<g;++f){var h=c.links[f];if(!0!==h.eg){e=!0;var l=new qp,n=new bl,r=a;L(n,"complete",function(a){if(ql(a.target)){var e;var f=a.target;try{e=f.a?f.a.responseXML:null}catch(g){e=null}e=e||rl(a.target);u(e)&&(e=dp(e));gb(a.target);e&&(9==e.nodeType&&(e=e.documentElement),r.Za(e,c));Zp(r,b,c,d);this.aa(e)}},!1,l);b.push(l);hl(n,h.href);h.eg=!0}}}!0!==e&&!0!==a.Ad&&d.call(a)}
m.D=function(a,b){u(a)&&(a=dp(a));a&&9==a.nodeType&&(a=a.documentElement);var c={metadata:{projection:"EPSG:4326"}};this.Za(a,c);if(t(b)){var d=[];this.c=0;this.Ad=!1;Zp(this,d,c,function(){this.Ad=!0;xp(Ap(d),function(){for(var a=0,d=c.features.length;a<d;++a)Yp(c.features[a],c.styles);b.call(null,c)},function(){throw Error("KML: parsing of NetworkLinks failed");},this)})}else return c};
function Yp(a,b,c){var d,e;if(a.get("styleUrl")&&null===a.Db()){var f=a.get("styleUrl"),f=f.substring(f.indexOf("#")+1);if(t(b))for(d=0,e=b.length;d<e;++d)if(b[d].id===f){c=b[d].symbolizers;break}}t(c)&&(a.c=c)}
function Xp(a,b,c){var d=null,e;switch(b.geometry.type){case "point":d=new km(b.geometry.coordinates,c);break;case "linestring":d=new im(b.geometry.coordinates,c);break;case "polygon":d=new om(b.geometry.coordinates,c);break;case "multipoint":a=[];d=0;for(e=b.geometry.N.length;d<e;d++)a.push(b.geometry.N[d].coordinates);d=new lm(a,c);break;case "multilinestring":a=[];d=0;for(e=b.geometry.N.length;d<e;d++)a.push(b.geometry.N[d].coordinates);d=new jm(a,c);break;case "multipolygon":a=[];d=0;for(e=b.geometry.N.length;d<
e;d++)a.push(b.geometry.N[d].coordinates);d=new pm(a,c);break;case "geometrycollection":var f=[],d=0;for(e=b.geometry.N.length;d<e;d++)f.push(Xp(a,{geometry:b.geometry.N[d]},c));d=new jp(f)}return d}m.write=function(a){a=$(this,"kml",a);this.setAttributeNS(a,"http://www.w3.org/2001/XMLSchema-instance","xsi:schemaLocation",this.schemaLocation);return hp(this,a)};function $p(){this.a=new P}F($p,fp);ga($p);function aq(a,b){for(var c=[],d,e=0,f=a.length;e<f;++e)d=a[e],0<e&&c.pop(),d=0<=d?b[d]:b[~d].slice().reverse(),c.push.apply(c,d);return c}$p.prototype.D=function(a){a=JSON.parse(a);return this.dc(a).features};$p.prototype.ec=function(a,b){var c=JSON.parse(a);if("Topology"!==c.type)throw Error('Not a "Topology" type object');return{features:bq(this,c,b),metadata:{projection:"EPSG:4326"}}};
$p.prototype.dc=function(a,b){if("Topology"!==a.type)throw Error('Not a "Topology" type object');return{features:bq(this,a,b),metadata:{projection:"EPSG:4326"}}};
function cq(a,b,c,d,e,f){var g=b.type;if("Point"===g){c=b.coordinates;dq(c,d,e);f=f&&f.aa;var h;f&&(h=f(a.a,"point"));a=new km(c,h)}else if("LineString"===g){c=aq(b.arcs,c);f=f&&f.aa;var l;f&&(l=f(a.a,"linestring"));a=new im(c,l)}else if("Polygon"===g){var n=b.arcs;d=n.length;var r=Array(d);for(e=0;e<d;++e)r[e]=aq(n[e],c);f=f&&f.aa;var q;f&&(q=f(a.a,"polygon"));a=new om(r,q)}else if("MultiPoint"===g){c=b.coordinates;r=0;for(q=c.length;r<q;++r)dq(c[r],d,e);f=f&&f.aa;var w;f&&(w=f(a.a,"multipoint"));
a=new lm(c,w)}else if("MultiLineString"===g){q=b.arcs;d=q.length;r=Array(d);for(e=0;e<d;++e)r[e]=aq(q[e],c);(f=f&&f.aa)&&(n=f(a.a,"multilinestring"));a=new jm(r,n)}else if("MultiPolygon"===g){n=b.arcs;d=n.length;q=Array(d);for(g=0;g<d;++g){e=n[g];w=e.length;h=Array(w);for(l=0;l<w;++l)h[l]=aq(e[l],c);q[g]=h}(f=f&&f.aa)&&(r=f(a.a,"multipolygon"));a=new pm(q,r)}else throw Error("Unsupported geometry type: "+g);f=new P;f.Ea(a);t(b.id)&&(f.Ka=String(b.id));return f}
function eq(a,b,c,d,e,f){b=b.geometries;for(var g=b.length,h=Array(g),l=0;l<g;++l)h[l]=cq(a,b[l],c,d,e,f);return h}function bq(a,b,c){for(var d=b.transform,e=d.scale,d=d.translate,f=b.arcs,g=0,h=f.length;g<h;++g)for(var l=f[g],n=e,r=d,q=0,w=0,s=void 0,A=0,B=l.length;A<B;++A)s=l[A],q+=s[0],w+=s[1],s[0]=q,s[1]=w,dq(s,n,r);b=b.objects;var g=[],v;for(v in b)"GeometryCollection"===b[v].type?g.push.apply(g,eq(a,b[v],f,e,d,c)):g.push(cq(a,b[v],f,e,d,c));return g}
function dq(a,b,c){a[0]=a[0]*b[0]+c[0];a[1]=a[1]*b[1]+c[1]};function fq(){}F(fq,fp);ga(fq);var gq=/^\s*(\w+)\s*\(\s*(.*)\s*\)\s*$/,hq=/\s+/,iq=/\)\s*,\s*\(/,jq=/\)\s*\)\s*,\s*\(\s*\(/,kq=/^\s*\(?(.*?)\)?\s*$/,lq=/,\s*([A-Za-z])/g,mq=/[\n\r]/g;m=fq.prototype;m.md=function(a){a=va(a).split(hq);return new km(Ia(a,parseFloat))};m.ld=function(a){a=va(a).split(",");for(var b=[],c=0,d=a.length;c<d;++c)b.push(this.md.apply(this,[a[c]]).s());return new im(b)};
m.be=function(a){var b;a=va(a).split(iq);for(var c=[],d=0,e=a.length;d<e;++d)b=a[d].replace(kq,"$1"),b=this.ld.apply(this,[b]).s(),c.push(b);return new om(c)};m.Gd=function(a){a=a.s();return a[0]+" "+a[1]};m.Xc=function(a){a=a.s();for(var b=[],c=0,d=a.length;c<d;++c)b.push(a[c][0]+" "+a[c][1]);return b.join(",")};m.Hd=function(a){for(var b=[],c=0,d=a.b.length;c<d;++c)b.push("("+this.Xc.apply(this,[a.b[c]])+")");return b.join(",")};
m.ce=function(a){a=a.replace(mq," ");a=gq.exec(a);var b;if(a)switch(b=a[1].toLowerCase(),a=a[2],b){case "point":b=this.md(a);break;case "multipoint":var c=va(a).split(",");a=[];for(var d=0,e=c.length;d<e;++d)b=c[d].replace(kq,"$1"),a.push(this.md.apply(this,[b]));b=a.length;c=Array(b);for(d=0;d<b;++d)c[d]=a[d].s();b=new lm(c,void 0);break;case "linestring":b=this.ld(a);break;case "multilinestring":c=va(a).split(iq);a=[];d=0;for(e=c.length;d<e;++d)b=c[d].replace(kq,"$1"),a.push(this.ld.apply(this,
[b]));b=a.length;c=Array(b);for(d=0;d<b;++d)c[d]=a[d].s();b=new jm(c,void 0);break;case "polygon":b=this.be(a);break;case "multipolygon":c=va(a).split(jq);a=[];d=0;for(e=c.length;d<e;++d)b=c[d].replace(kq,"$1"),a.push(this.be.apply(this,[b]));b=a.length;c=Array(b);for(d=0;d<b;++d)c[d]=a[d].s();b=new pm(c,void 0);break;case "geometrycollection":a=a.replace(lq,"|$1");a=va(a).split("|");b=[];c=0;for(d=a.length;c<d;++c)b.push(this.ce.apply(this,[a[c]]));b=new jp(b);break;default:throw Error("Bad geometry type: "+
b);}return b};
m.ae=function(a){var b=a.O(),c=b.toUpperCase()+"(";if(a instanceof km)c+=this.Gd(a);else if(a instanceof lm){for(var b=c,c=[],d=0,e=a.o.length;d<e;++d)c.push("("+this.Gd.apply(this,[a.o[d]])+")");c=b+c.join(",")}else if(a instanceof im)c+=this.Xc(a);else if(a instanceof jm){b=c;c=[];d=0;for(e=a.o.length;d<e;++d)c.push("("+this.Xc.apply(this,[a.o[d]])+")");c=b+c.join(",")}else if(a instanceof om)c+=this.Hd(a);else if(a instanceof pm){b=c;c=[];d=0;for(e=a.o.length;d<e;++d)c.push("("+this.Hd.apply(this,[a.o[d]])+
")");c=b+c.join(",")}else if(a instanceof jp){b=c;c=[];d=0;for(e=a.o.length;d<e;++d)c.push(this.ae.apply(this,[a.o[d]]));c=b+c.join(",")}else throw Error("Bad geometry type: "+b);return c+")"};m.D=function(a){return this.ce(a)};m.write=function(a){return this.ae(a)};function nq(a){var b=t(a)?a:{};this.extractAttributes=t(b.extractAttributes)?b.extractAttributes:!0;this.surface=t(b.surface)?b.surface:!1;this.curve=t(b.curve)?b.curve:!1;this.multiCurve=t(b.multiCurve)?b.multiCurve:!0;this.multiSurface=t(b.multiSurface)?b.multiSurface:!0;this.readOptions=b.readOptions;this.writeOptions=b.writeOptions;t(b.schemaLocation)&&(this.schemaLocation=b.schemaLocation);t(b.featureNS)&&(this.featureNS=b.featureNS);t(b.featureType)&&(this.featureType=b.featureType);this.Xf=
!t(a)||u(a.featureType);this.A="http://www.opengis.net/gml";this.j={"http://www.opengis.net/wfs":{FeatureCollection:function(a,b){X(this,a,b)}},"http://www.opengis.net/gml":{_inherit:function(a){var b;t(this.srsName)||(b=this.srsName=a.getAttribute("srsName"));t(this.axisOrientation)||(this.axisOrientation=null!=b?he(b).a:"enu")},name:function(a,b){b.name=Y(a)},featureMember:function(a,b){X(this,a,b)},featureMembers:function(a,b){X(this,a,b)},GeometryCollection:function(a,b){var e=[];this.j[this.A]._inherit.apply(this,
[a,e,b]);X(this,a,e);b.geometry={type:"geometrycollection",N:e}},geometryMember:function(a,b){X(this,a,b)},MultiPoint:function(a,b){var e=[];this.j[this.A]._inherit.apply(this,[a,e,b]);X(this,a,e);b.geometry={type:"multipoint",N:e}},pointMember:function(a,b){X(this,a,b)},MultiLineString:function(a,b){var e=[];this.j[this.A]._inherit.apply(this,[a,e,b]);X(this,a,e);b.geometry={type:"multilinestring",N:e}},lineStringMember:function(a,b){X(this,a,b)},MultiPolygon:function(a,b){var e=[];this.j[this.A]._inherit.apply(this,
[a,e,b]);X(this,a,e);b.geometry={type:"multipolygon",N:e}},polygonMember:function(a,b){X(this,a,b)},Point:function(a,b){var e=[];this.j[this.A]._inherit.apply(this,[a,e,b]);X(this,a,e);e={type:"point",coordinates:e[0][0]};ia(b)?b.push(e):b.geometry=e},LineString:function(a,b){var e=[];this.j[this.A]._inherit.apply(this,[a,e,b]);X(this,a,e);e={type:"linestring",coordinates:e[0]};ia(b)?b.push(e):b.geometry=e},Polygon:function(a,b){var e={de:null,Cc:[]};this.j[this.A]._inherit.apply(this,[a,e,b]);X(this,
a,e);e.Cc.unshift(e.de);e={type:"polygon",coordinates:e.Cc};ia(b)?b.push(e):b.geometry=e},LinearRing:function(a,b){var e=[];this.j[this.A]._inherit.apply(this,[a,e,b]);X(this,a,e);ia(b)?b.push(e):b.geometry={type:"linearring",coordinates:e[0]}},coordinates:function(a,b){for(var e=Y(a).replace(this.S.xa,""),e=e.replace(this.S.td,","),f=a.getAttribute("cs")||",",g=a.getAttribute("ts")||this.S.Jb,g=e.split(g),h=g.length,l=Array(h),n=0;n<h;++n)e=Ia(g[n].split(f),parseFloat),"en"===this.axisOrientation.substr(0,
2)?l[n]=e:2===e.length?l[n]=e.reverse():3===e.length&&(l[n]=[e[1],e[0],e[2]]);b.push(l)},coord:function(a,b){var e={};0===b.length&&b.push([]);X(this,a,e);t(e.z)?b.push([e.x,e.y,e.z]):b[0].push([e.x,e.y])},X:function(a,b){b.x=parseFloat(Y(a))},Y:function(a,b){b.y=parseFloat(Y(a))},Z:function(a,b){b.z=parseFloat(Y(a))}}};this.d={"*":function(a,b){var e,f=a.localName||a.nodeName.split(":").pop();b.features?this.Xf||-1===Ea(this.featureType,f)?f===this.featureType&&(e="_typeName"):e="_typeName":0===
a.childNodes.length||1===a.childNodes.length&&3===a.firstChild.nodeType?this.extractAttributes&&(e="_attribute"):e="_geometry";e&&this.j[this.featureNS][e].apply(this,[a,b])},_typeName:function(a,b){var e={properties:{}};X(this,a,e);e.name&&(e.properties.name=e.name);var f=new P(e.properties);if(e=e.geometry){var g=void 0;if(this.ga){var h=this.ga.aa;h&&(g=h(f,e.type))}e=oq(this,{geometry:e},g);t(e)&&f.Ea(e)}e=a.getAttribute("fid")||this.getAttributeNS(a,this.A,"id");null!==e&&(f.Ka=e);b.features.push(f)},
_geometry:function(a,b){this.geometryName||(this.geometryName=a.nodeName.split(":").pop());X(this,a,b)},_attribute:function(a,b){var e=a.localName||a.nodeName.split(":").pop();b.properties[e]=Y(a)}};t(this.featureNS)&&(this.j[this.featureNS]=this.d);this.a={"http://www.opengis.net/gml":{featureMember:function(a){var b=this.createElementNS("gml:featureMember");$(this,"_typeName",a,this.featureNS,b);return b},MultiPoint:function(a){for(var b=this.createElementNS("gml:MultiPoint"),e=0,f=a.o.length;e<
f;++e)$(this,"pointMember",a.o[e],null,b);return b},pointMember:function(a){var b=this.createElementNS("gml:pointMember");$(this,"Point",a,null,b);return b},MultiLineString:function(a){for(var b=this.createElementNS("gml:MultiLineString"),e=0,f=a.o.length;e<f;++e)$(this,"lineStringMember",a.o[e],null,b);return b},lineStringMember:function(a){var b=this.createElementNS("gml:lineStringMember");$(this,"LineString",a,null,b);return b},MultiPolygon:function(a){for(var b=this.createElementNS("gml:MultiPolygon"),
e=0,f=a.o.length;e<f;++e)$(this,"polygonMember",a.o[e],null,b);return b},polygonMember:function(a){var b=this.createElementNS("gml:polygonMember");$(this,"Polygon",a,null,b);return b},GeometryCollection:function(a){for(var b=this.createElementNS("gml:GeometryCollection"),e=0,f=a.o.length;e<f;++e)$(this,"geometryMember",a.o[e],null,b);return b},geometryMember:function(a){var b=this.createElementNS("gml:geometryMember");a=$(this,"_geometry",a,this.featureNS);b.appendChild(a.firstChild);return b}},"http://www.opengis.net/wfs":{FeatureCollection:function(a){for(var b=
this.createElementNS("wfs:FeatureCollection","http://www.opengis.net/wfs"),e=0,f=a.length;e<f;++e)$(this,"featureMember",a[e],null,b);return b}}};this.c={_typeName:function(a){var b=this.createElementNS("feature:"+this.featureType,this.featureNS),e=a.Ka;t(e)&&this.setAttributeNS(b,this.A,"fid",e);null!==a.H()&&$(this,"_geometry",a.H(),this.featureNS,b);a=a.ob();for(var f in a)e=a[f],null==e||e instanceof Bd||$(this,"_attribute",{name:f,value:e},this.featureNS,b);return b},_geometry:function(a){var b=
this.createElementNS("feature:"+this.geometryName,this.featureNS),e=a.O(),f;"point"===e?f=$(this,"Point",a,null,b):"multipoint"===e?f=$(this,"MultiPoint",a,null,b):"linearring"===e?f=$(this,"LinearRing",a.s(),null,b):"linestring"===e?f=$(this,"LineString",a,null,b):"multilinestring"===e?f=$(this,"MultiLineString",a,null,b):"polygon"===e?f=$(this,"Polygon",a,null,b):"multipolygon"===e?f=$(this,"MultiPolygon",a,null,b):"geometrycollection"===e&&(f=$(this,"GeometryCollection",a,null,b));null!=this.srsName&&
this.setAttributeNS(f,null,"srsName",this.srsName);return b},_attribute:function(a){var b=this.createElementNS("feature:"+a.name,this.featureNS);b.appendChild(this.createTextNode(a.value));return b}};t(this.featureNS)&&(this.a[this.featureNS]=this.c);gp.call(this)}F(nq,gp);
nq.prototype.D=function(a,b){var c;t(b)&&t(b.srsName)?c=b.srsName:t(this.readOptions)&&t(this.readOptions.srsName)&&(c=this.readOptions.srsName);t(c)&&(this.srsName=u(c)?c:c.Ta);t(b)&&t(b.axisOrientation)?this.axisOrientation=b.axisOrientation:t(this.readOptions)&&t(this.readOptions.axisOrientation)&&(this.axisOrientation=this.readOptions.axisOrientation);"string"==typeof a&&(a=dp(a));a&&9==a.nodeType&&(a=a.documentElement);c={features:[],metadata:{}};this.Za(a,c,!0);c.metadata.projection=this.srsName;
delete this.srsName;delete this.axisOrientation;return c};
nq.prototype.Za=function(a,b,c){!0===c&&!0===this.e&&(this.featureType=null,delete this.j[this.featureNS],delete this.a[this.featureNS],this.featureNS=null);this.featureNS||(a.namespaceURI in this.j||a.parentNode.namespaceURI!=this.A||!/^(.*:)?featureMembers?$/.test(a.parentNode.nodeName))||(this.featureType=a.nodeName.split(":").pop(),this.j[a.namespaceURI]=this.d,this.a[a.namespaceURI]=this.c,this.featureNS=a.namespaceURI,this.e=!0);return gp.prototype.Za.apply(this,[a,b])};
function oq(a,b,c){var d=null,e;switch(b.geometry.type){case "point":d=new km(b.geometry.coordinates,c);break;case "linearring":d=new mm(b.geometry.coordinates,c);break;case "linestring":d=new im(b.geometry.coordinates,c);break;case "polygon":d=new om(b.geometry.coordinates,c);break;case "multipoint":a=[];d=0;for(e=b.geometry.N.length;d<e;d++)a.push(b.geometry.N[d].coordinates);d=new lm(a,c);break;case "multilinestring":a=[];d=0;for(e=b.geometry.N.length;d<e;d++)a.push(b.geometry.N[d].coordinates);
d=new jm(a,c);break;case "multipolygon":a=[];d=0;for(e=b.geometry.N.length;d<e;d++)a.push(b.geometry.N[d].coordinates);d=new pm(a,c);break;case "geometrycollection":var f=[],d=0;for(e=b.geometry.N.length;d<e;d++)f.push(oq(a,{geometry:b.geometry.N[d]},c));d=new jp(f)}return d}nq.prototype.ec=function(a,b){this.ga=b;return this.D(a)};
function pq(a,b,c){var d;t(c)&&t(c.srsName)?d=c.srsName:t(a.writeOptions)&&t(a.writeOptions.srsName)?d=a.writeOptions.srsName:t(b.metadata)&&(d=b.metadata.projection);a.srsName=u(d)?d:d.Ta;a.axisOrientation=t(c)&&t(c.axisOrientation)?c.axisOrientation:t(a.writeOptions)&&t(a.writeOptions.axisOrientation)?a.writeOptions.axisOrientation:he(a.srsName).a};function qq(a){this.schemaLocation="http://www.opengis.net/gml http://schemas.opengis.net/gml/2.1.2/feature.xsd";nq.call(this,a);J(this.j["http://www.opengis.net/gml"],{outerBoundaryIs:function(a,c){var d=[];X(this,a,d);c.outer=d[0][0]},innerBoundaryIs:function(a,c){var d=[];X(this,a,d);c.Cc.push(d[0][0])},Box:function(a,c){var d=[];this.j[this.A]._inherit.apply(this,[a,d,c]);X(this,a,d);c.projection=a.getAttribute("srsName");c.bounds=[d[0][0][0],d[0][1][0],d[0][0][1],d[0][1][1]]}});J(this.a["http://www.opengis.net/gml"],
{Point:function(a){var c=this.createElementNS("gml:Point");$(this,"coordinates",[a.s()],null,c);return c},coordinates:function(a){for(var c=a.length,d=Array(c),e=0;e<c;++e){var f=a[e],g=Qa(f);"en"!==this.axisOrientation.substr(0,2)&&(g[0]=f[1],g[1]=f[0]);d[e]=g.join(",")}a=d.join(" ");c=this.createElementNS("gml:coordinates");this.setAttributeNS(c,null,"decimal",".");this.setAttributeNS(c,null,"cs",",");this.setAttributeNS(c,null,"ts"," ");c.appendChild(this.createTextNode(a));return c},LineString:function(a){var c=
this.createElementNS("gml:LineString");$(this,"coordinates",a.s(),null,c);return c},Polygon:function(a){var c=this.createElementNS("gml:Polygon");a=a.s();$(this,"outerBoundaryIs",a[0].reverse(),null,c);for(var d=1;d<a.length;++d)$(this,"innerBoundaryIs",a[d].reverse(),null,c);return c},outerBoundaryIs:function(a){var c=this.createElementNS("gml:outerBoundaryIs");$(this,"LinearRing",a,null,c);return c},innerBoundaryIs:function(a){var c=this.createElementNS("gml:innerBoundaryIs");$(this,"LinearRing",
a,null,c);return c},LinearRing:function(a){var c=this.createElementNS("gml:LinearRing");$(this,"coordinates",a,null,c);return c},Box:function(a){var c=this.createElementNS("gml:Box");$(this,"coordinates",[[a[0],a[1]],[a[2],a[3]]],null,c);null!=this.srsName&&c.setAttribute("srsName",this.srsName);return c}})}F(qq,nq);
qq.prototype.write=function(a,b){pq(this,a,b);var c=$(this,"FeatureCollection",a.features,"http://www.opengis.net/wfs");this.setAttributeNS(c,"http://www.w3.org/2001/XMLSchema-instance","xsi:schemaLocation",this.schemaLocation);c=hp(this,c);delete this.srsName;delete this.axisOrientation;return c};function rq(a){this.schemaLocation="http://www.opengis.net/gml http://schemas.opengis.net/gml/3.1.1/profiles/gmlsfProfile/1.0.0/gmlsf.xsd";nq.call(this,a);this.c._geometry=function(a){var c=this.createElementNS("feature:"+this.geometryName,this.featureNS),d=a.O(),e;"point"===d?e=$(this,"Point",a,null,c):"multipoint"===d?e=$(this,"MultiPoint",a,null,c):"linestring"===d?e=!0===this.curve?$(this,"Curve",a,null,c):$(this,"LineString",a,null,c):"linearring"===d?e=$(this,"LinearRing",a.s(),null,c):"multilinestring"===
d?e=!1===this.multiCurve?$(this,"MultiLineString",a,null,c):$(this,"MultiCurve",a,null,c):"polygon"===d?e=!0===this.surface?$(this,"Surface",a,null,c):$(this,"Polygon",a,null,c):"multipolygon"===d?e=!1===this.multiSurface?$(this,"MultiPolygon",a,null,c):$(this,"MultiSurface",a,null,c):"geometrycollection"===d&&(e=$(this,"MultiGeometry",a,null,c));null!=this.srsName&&this.setAttributeNS(e,null,"srsName",this.srsName);return c};J(this.j["http://www.opengis.net/gml"],{_inherit:We(this.j["http://www.opengis.net/gml"]._inherit,
function(a,c,d){if(a=parseInt(a.getAttribute("srsDimension"),10)||d&&d.le)c.le=a}),featureMembers:function(a,c){X(this,a,c)},Curve:function(a,c){var d=[];this.j[this.A]._inherit.apply(this,[a,d,c]);X(this,a,d);d={type:"linestring",coordinates:d[0]};ia(c)?c.push(d):c.geometry=d},segments:function(a,c){X(this,a,c)},LineStringSegment:function(a,c){var d=[];X(this,a,d);c.push(d[0])},pos:function(a,c){var d=Y(a).replace(this.S.xa,""),d=Ia(d.split(this.S.Jb),parseFloat);"en"===this.axisOrientation.substr(0,
2)?c.push([d]):2===d.length?c.push([d.reverse()]):3===d.length&&c.push([d[1],d[0],d[2]])},posList:function(a,c){for(var d=Y(a).replace(this.S.xa,"").split(this.S.Jb),e=c.le||parseInt(a.getAttribute("srsDimension")||a.getAttribute("dimension"),10)||2,f,g,h=Array(d.length/e),l=0,n=d.length;l<n;l+=e){f=parseFloat(d[l]);g=parseFloat(d[l+1]);var r="en"===this.axisOrientation.substr(0,2);3===e?h[l/e]=r?[f,g,parseFloat(d[l+2])]:[g,f,parseFloat(d[l+2])]:2===e&&(h[l/e]=r?[f,g]:[g,f])}c.push(h)},Surface:function(a,
c){X(this,a,c)},patches:function(a,c){X(this,a,c)},PolygonPatch:function(a,c){this.j[this.A].Polygon.apply(this,[a,c])},exterior:function(a,c){var d=[];X(this,a,d);c.de=d[0][0]},interior:function(a,c){var d=[];X(this,a,d);c.Cc.push(d[0][0])},MultiCurve:function(a,c){var d=[];this.j[this.A]._inherit.apply(this,[a,d,c]);X(this,a,d);c.geometry={type:"multilinestring",N:d}},curveMember:function(a,c){X(this,a,c)},MultiSurface:function(a,c){var d=[];this.j[this.A]._inherit.apply(this,[a,d,c]);X(this,a,
d);c.geometry={type:"multipolygon",N:d}},surfaceMember:function(a,c){X(this,a,c)},surfaceMembers:function(a,c){X(this,a,c)},pointMembers:function(a,c){X(this,a,c)},lineStringMembers:function(a,c){X(this,a,c)},polygonMembers:function(a,c){X(this,a,c)},geometryMembers:function(a,c){X(this,a,c)},Envelope:function(a,c){var d=[];this.j[this.A]._inherit.apply(this,[a,d,c]);X(this,a,d);c.projection=a.getAttribute("srsName");c.bounds=[d[0][0][0][0],d[1][0][0][0],d[0][0][0][1],d[1][0][0][1]]},lowerCorner:function(a,
c){var d=[];this.j[this.A].pos.apply(this,[a,d]);c.push(d)},upperCorner:function(a,c){var d=[];this.j[this.A].pos.apply(this,[a,d]);c.push(d)}});J(this.a["http://www.opengis.net/gml"],{featureMembers:function(a){for(var c=this.createElementNS("gml:featureMembers"),d=0,e=a.length;d<e;++d)$(this,"_typeName",a[d],this.featureNS,c);return c},Point:function(a){var c=this.createElementNS("gml:Point");$(this,"pos",a.s(),null,c);return c},pos:function(a){a="en"===this.axisOrientation.substr(0,2)?a[0]+" "+
a[1]:a[1]+" "+a[0];var c=this.createElementNS("gml:pos");c.appendChild(this.createTextNode(a));return c},LineString:function(a){var c=this.createElementNS("gml:LineString");$(this,"posList",a.s(),null,c);return c},Curve:function(a){var c=this.createElementNS("gml:Curve");$(this,"segments",a,null,c);return c},segments:function(a){var c=this.createElementNS("gml:segments");$(this,"LineStringSegment",a,null,c);return c},LineStringSegment:function(a){var c=this.createElementNS("gml:LineStringSegment");
$(this,"posList",a.s(),null,c);return c},posList:function(a){for(var c=a.length,d=Array(c),e,f=0;f<c;++f)e=a[f],d[f]="en"===this.axisOrientation.substr(0,2)?e[0]+" "+e[1]:e[1]+" "+e[0];a=this.createElementNS("gml:posList");a.appendChild(this.createTextNode(d.join(" ")));return a},Surface:function(a){var c=this.createElementNS("gml:Surface");$(this,"patches",a,null,c);return c},patches:function(a){var c=this.createElementNS("gml:patches");$(this,"PolygonPatch",a,null,c);return c},PolygonPatch:function(a){var c=
this.createElementNS("gml:PolygonPatch");c.setAttribute("interpolation","planar");a=a.s();$(this,"exterior",a[0].reverse(),null,c);for(var d=1,e=a.length;d<e;++d)$(this,"interior",a[d].reverse(),null,c);return c},Polygon:function(a){var c=this.createElementNS("gml:Polygon");a=a.s();$(this,"exterior",a[0].reverse(),null,c);for(var d=1,e=a.length;d<e;++d)$(this,"interior",a[d].reverse(),null,c);return c},exterior:function(a){var c=this.createElementNS("gml:exterior");$(this,"LinearRing",a,null,c);return c},
interior:function(a){var c=this.createElementNS("gml:interior");$(this,"LinearRing",a,null,c);return c},LinearRing:function(a){var c=this.createElementNS("gml:LinearRing");$(this,"posList",a,null,c);return c},MultiCurve:function(a){for(var c=this.createElementNS("gml:MultiCurve"),d=0,e=a.o.length;d<e;++d)$(this,"curveMember",a.o[d],null,c);return c},curveMember:function(a){var c=this.createElementNS("gml:curveMember");this.curve?$(this,"Curve",a,null,c):$(this,"LineString",a,null,c);return c},MultiSurface:function(a){for(var c=
this.createElementNS("gml:MultiSurface"),d=0,e=a.o.length;d<e;++d)$(this,"surfaceMember",a.o[d],null,c);return c},surfaceMember:function(a){var c=this.createElementNS("gml:surfaceMember");this.surface?$(this,"Surface",a,null,c):$(this,"Polygon",a,null,c);return c},Envelope:function(a){var c=this.createElementNS("gml:Envelope");$(this,"lowerCorner",a,null,c);$(this,"upperCorner",a,null,c);t(this.srsName)&&c.setAttribute("srsName",this.srsName);return c},lowerCorner:function(a){a="en"===this.axisOrientation.substr(0,
2)?a[0]+" "+a[2]:a[2]+" "+a[0];var c=this.createElementNS("gml:lowerCorner");c.appendChild(this.createTextNode(a));return c},upperCorner:function(a){a="en"===this.axisOrientation.substr(0,2)?a[1]+" "+a[3]:a[3]+" "+a[1];var c=this.createElementNS("gml:upperCorner");c.appendChild(this.createTextNode(a));return c}})}F(rq,nq);
rq.prototype.write=function(a,b){pq(this,a,b);var c=$(this,"featureMembers",a.features);this.setAttributeNS(c,"http://www.w3.org/2001/XMLSchema-instance","xsi:schemaLocation",this.schemaLocation);c=hp(this,c);delete this.srsName;delete this.axisOrientation;return c};function sq(){function a(a,b){b.Yf.push(Y(a))}function b(a,b){var e={code:a.getAttribute("exceptionCode"),mh:a.getAttribute("locator"),Yf:[]};b.Jd.push(e);X(this,a,e)}this.j={"http://www.opengis.net/ogc":{ServiceExceptionReport:function(a,b){b.exceptionReport={};b.exceptionReport.exceptions=[];X(this,a,b.exceptionReport)},ServiceException:function(a,b){var e={};e.code=a.getAttribute("code");e.locator=a.getAttribute("locator");e.text=Y(a);b.exceptions.push(e)}},"http://www.opengis.net/ows":{ExceptionReport:function(a,
b){b.success=!1;b.Yc={version:a.getAttribute("version"),language:a.getAttribute("language"),Jd:[]};X(this,a,b.Yc)},Exception:function(a,d){b.apply(this,arguments)},ExceptionText:function(b,d){a.apply(this,arguments)}},"http://www.opengis.net/ows/1.1":{ExceptionReport:function(a,b){b.Yc={version:a.getAttribute("version"),language:a.getAttribute("xml:lang"),Jd:[]};X(this,a,b.Yc)},Exception:function(a,d){b.apply(this,arguments)},ExceptionText:function(b,d){a.apply(this,arguments)}}};gp.call(this)}
F(sq,gp);sq.prototype.D=function(a){u(a)&&(a=dp(a));var b={exceptionReport:null};a&&X(this,a,b);return b};function tq(a){this.b=a=t(a)?a:{};this.mc=a.mc||null;this.version=a.version;this.profile=a.profile;t(a.ic)?this.ic=a.ic:this.ic=!1;t(a.Mc)?this.Mc=a.Mc:this.Mc=!1}function uq(a,b,c){b?(c=a.version,c||(c=b.getAttribute("version"),c||(c=a.mc))):c=c&&c.version||a.version||a.mc;return c}
function vq(a,b){b=b||a.mc;var c=a.profile?"_"+a.profile:"";if(!a.parser||a.parser.VERSION!=b){var d=a.a["v"+b.replace(/\./g,"_")+c];if(!d&&(""!==c&&a.ic&&(c="",d=a.a["v"+b.replace(/\./g,"_")+c]),!d))throw"Can't find a parser for version "+b+c;a.parser=new d(a.b)}return a.parser}tq.prototype.write=function(a,b){var c=uq(this,null,b);this.parser=vq(this,c);c=this.parser.write(a,b);return!1===this.Mc?c:ep(c)};
tq.prototype.D=function(a,b){u(a)&&(a=dp(a));var c=uq(this,a.documentElement);this.parser=vq(this,c);var d=this.parser.D(a,b),e=this.parser.Id||null;null!==e&&void 0===d[e]&&(e=new sq,d.error=e.D(a));d.version=c;return d};function wq(){this.A="http://www.opengis.net/wms";this.Id="service";this.j={"http://www.opengis.net/wms":{Service:function(a,b){b.service={};X(this,a,b.service)},Name:function(a,b){b.name=Y(a)},Title:function(a,b){b.title=Y(a)},Abstract:function(a,b){b["abstract"]=Y(a)},BoundingBox:function(a){var b={};b.bbox=[parseFloat(a.getAttribute("minx")),parseFloat(a.getAttribute("miny")),parseFloat(a.getAttribute("maxx")),parseFloat(a.getAttribute("maxy"))];a={x:parseFloat(a.getAttribute("resx")),y:parseFloat(a.getAttribute("resy"))};
isNaN(a.x)&&isNaN(a.y)||(b.res=a);return b},OnlineResource:function(a,b){b.href=this.getAttributeNS(a,"http://www.w3.org/1999/xlink","href")},ContactInformation:function(a,b){b.contactInformation={};X(this,a,b.contactInformation)},ContactPersonPrimary:function(a,b){b.personPrimary={};X(this,a,b.personPrimary)},ContactPerson:function(a,b){b.person=Y(a)},ContactOrganization:function(a,b){b.organization=Y(a)},ContactPosition:function(a,b){b.position=Y(a)},ContactAddress:function(a,b){b.contactAddress=
{};X(this,a,b.contactAddress)},AddressType:function(a,b){b.type=Y(a)},Address:function(a,b){b.address=Y(a)},City:function(a,b){b.city=Y(a)},StateOrProvince:function(a,b){b.stateOrProvince=Y(a)},PostCode:function(a,b){b.postcode=Y(a)},Country:function(a,b){b.country=Y(a)},ContactVoiceTelephone:function(a,b){b.phone=Y(a)},ContactFacsimileTelephone:function(a,b){b.fax=Y(a)},ContactElectronicMailAddress:function(a,b){b.email=Y(a)},Fees:function(a,b){var c=Y(a);c&&"none"!=c.toLowerCase()&&(b.fees=c)},
AccessConstraints:function(a,b){var c=Y(a);c&&"none"!=c.toLowerCase()&&(b.accessConstraints=c)},Capability:function(a,b){b.capability={};b.capability.nestedLayers=[];b.capability.layers=[];X(this,a,b.capability)},Request:function(a,b){b.request={};X(this,a,b.request)},GetCapabilities:function(a,b){b.getcapabilities={};b.getcapabilities.formats=[];X(this,a,b.getcapabilities)},Format:function(a,b){ia(b.formats)?b.formats.push(Y(a)):b.format=Y(a)},DCPType:function(a,b){X(this,a,b)},HTTP:function(a,b){X(this,
a,b)},Get:function(a,b){b.get={};X(this,a,b.get)},Post:function(a,b){b.post={};X(this,a,b.post)},GetMap:function(a,b){b.getmap={};b.getmap.formats=[];X(this,a,b.getmap)},GetFeatureInfo:function(a,b){b.getfeatureinfo={};b.getfeatureinfo.formats=[];X(this,a,b.getfeatureinfo)},Exception:function(a,b){b.exception={};b.exception.formats=[];X(this,a,b.exception)},Layer:function(a,b){var c,d;b.capability?(d=b.capability,c=b):d=b;var e=a.getAttributeNode("queryable"),f=e&&e.specified?a.getAttribute("queryable"):
null,g=(e=a.getAttributeNode("cascaded"))&&e.specified?a.getAttribute("cascaded"):null,h=(e=a.getAttributeNode("opaque"))&&e.specified?a.getAttribute("opaque"):null,l=a.getAttribute("noSubsets"),n=a.getAttribute("fixedWidth"),r=a.getAttribute("fixedHeight"),e=c||{},f={nestedLayers:[],styles:c?[].concat(c.styles):[],srs:{},metadataURLs:[],bbox:{},llbbox:e.llbbox,dimensions:{},authorityURLs:{},identifiers:{},keywords:[],queryable:f&&""!==f?"1"===f||"true"===f:e.queryable||!1,cascaded:null!==g?parseInt(g,
10):e.cascaded||0,opaque:h?"1"===h||"true"===h:e.opaque||!1,noSubsets:null!==l?"1"===l||"true"===l:e.noSubsets||!1,fixedWidth:null!==n?parseInt(n,10):e.fixedWidth||0,fixedHeight:null!==r?parseInt(r,10):e.fixedHeight||0,minScale:e.minScale,maxScale:e.maxScale,attribution:e.attribution};c&&(J(f.srs,e.srs),J(f.bbox,e.bbox),J(f.dimensions,e.dimensions),J(f.authorityURLs,e.authorityURLs));b.nestedLayers.push(f);f.capability=d;X(this,a,f);delete f.capability;f.name&&(c=f.name.split(":"),g=d.request,e=g.getfeatureinfo,
0<c.length&&(f.prefix=c[0]),d.layers.push(f),t(f.formats)||(f.formats=g.getmap.formats),!t(f.infoFormats)&&e&&(f.infoFormats=e.formats))},Attribution:function(a,b){b.attribution={};X(this,a,b.attribution)},LogoURL:function(a,b){b.logo={width:a.getAttribute("width"),height:a.getAttribute("height")};X(this,a,b.logo)},Style:function(a,b){var c={};b.styles.push(c);X(this,a,c)},LegendURL:function(a,b){var c={width:a.getAttribute("width"),height:a.getAttribute("height")};b.legend=c;X(this,a,c)},MetadataURL:function(a,
b){var c={type:a.getAttribute("type")};b.metadataURLs.push(c);X(this,a,c)},DataURL:function(a,b){b.dataURL={};X(this,a,b.dataURL)},FeatureListURL:function(a,b){b.featureListURL={};X(this,a,b.featureListURL)},AuthorityURL:function(a,b){var c=a.getAttribute("name"),d={};X(this,a,d);b.authorityURLs[c]=d.href},Identifier:function(a,b){var c=a.getAttribute("authority");b.identifiers[c]=Y(a)},KeywordList:function(a,b){X(this,a,b)},SRS:function(a,b){b.srs[Y(a)]=!0}}};gp.call(this)}F(wq,gp);
wq.prototype.D=function(a){u(a)&&(a=dp(a));a&&9==a.nodeType&&(a=a.documentElement);var b={};this.Za(a,b);return b};function xq(){wq.call(this);var a=this.j["http://www.opengis.net/wms"].BoundingBox;J(this.j["http://www.opengis.net/wms"],{WMT_MS_Capabilities:function(a,c){X(this,a,c)},Keyword:function(a,c){c.keywords&&c.keywords.push({value:Y(a)})},DescribeLayer:function(a,c){c.describelayer={formats:[]};X(this,a,c.describelayer)},GetLegendGraphic:function(a,c){c.getlegendgraphic={formats:[]};X(this,a,c.getlegendgraphic)},GetStyles:function(a,c){c.getstyles={formats:[]};X(this,a,c.getstyles)},PutStyles:function(a,
c){c.putstyles={formats:[]};X(this,a,c.putstyles)},UserDefinedSymbolization:function(a,c){var d={supportSLD:1==parseInt(a.getAttribute("SupportSLD"),10),userLayer:1==parseInt(a.getAttribute("UserLayer"),10),userStyle:1==parseInt(a.getAttribute("UserStyle"),10),remoteWFS:1==parseInt(a.getAttribute("RemoteWFS"),10)};c.userSymbols=d},LatLonBoundingBox:function(a,c){c.llbbox=[parseFloat(a.getAttribute("minx")),parseFloat(a.getAttribute("miny")),parseFloat(a.getAttribute("maxx")),parseFloat(a.getAttribute("maxy"))]},
BoundingBox:function(b,c){var d=a.apply(this,arguments);d.srs=b.getAttribute("SRS");c.bbox[d.srs]=d},ScaleHint:function(a,c){var d=parseFloat(a.getAttribute("min")),e=parseFloat(a.getAttribute("max")),f=Math.pow(2,0.5),g=25.4/0.28;0!==d&&(c.maxScale=parseFloat(39.37*(d/f)*g));Infinity!=e&&(c.minScale=parseFloat(39.37*(e/f)*g))},Dimension:function(a,c){var d={name:a.getAttribute("name").toLowerCase(),units:a.getAttribute("units"),unitsymbol:a.getAttribute("unitSymbol")};c.dimensions[d.name]=d},Extent:function(a,
c){var d=a.getAttribute("name").toLowerCase();d in c.dimensions&&(d=c.dimensions[d],d.nearestVal="1"===a.getAttribute("nearestValue"),d.multipleVal="1"===a.getAttribute("multipleValues"),d.current="1"===a.getAttribute("current"),d["default"]=a.getAttribute("default")||"",d.values=Y(a).split(","))}})}F(xq,wq);function yq(){xq.call(this);this.version="1.1.0";J(this.j["http://www.opengis.net/wms"],{SRS:function(a,b){for(var c=Y(a).split(/ +/),d=0,e=c.length;d<e;d++)b.srs[c[d]]=!0}})}F(yq,xq);function zq(){xq.call(this);this.version="1.1.1";J(this.j["http://www.opengis.net/wms"],{SRS:function(a,b){b.srs[Y(a)]=!0}})}F(zq,xq);function Aq(){zq.call(this);this.profile="WMSC";J(this.j["http://www.opengis.net/wms"],{VendorSpecificCapabilities:function(a,b){b.vendorSpecific={tileSets:[]};X(this,a,b.vendorSpecific)},TileSet:function(a,b){var c={srs:{},bbox:{},resolutions:[]};X(this,a,c);b.nh.push(c)},Resolutions:function(a,b){for(var c=Y(a).split(" "),d=0,e=c.length;d<e;d++)""!==c[d]&&b.resolutions.push(parseFloat(c[d]))},Width:function(a,b){b.width=parseInt(Y(a),10)},Height:function(a,b){b.height=parseInt(Y(a),10)},Layers:function(a,
b){b.layers=Y(a)},Styles:function(a,b){b.styles=Y(a)}})}F(Aq,zq);function Bq(){wq.call(this);var a=this.j["http://www.opengis.net/wms"].BoundingBox;J(this.j["http://www.opengis.net/wms"],{WMS_Capabilities:function(a,c){X(this,a,c)},LayerLimit:function(a,c){c.layerLimit=parseInt(Y(a),10)},MaxWidth:function(a,c){c.maxWidth=parseInt(Y(a),10)},MaxHeight:function(a,c){c.maxHeight=parseInt(Y(a),10)},BoundingBox:function(b,c){var d=a.apply(this,arguments);d.srs=b.getAttribute("CRS");c.bbox[d.srs]=d},CRS:function(a,c){this.j["http://www.opengis.net/wms"].SRS.apply(this,
arguments)},EX_GeographicBoundingBox:function(a,c){c.llbbox=[];X(this,a,c.llbbox)},westBoundLongitude:function(a,c){c[0]=Y(a)},eastBoundLongitude:function(a,c){c[2]=Y(a)},southBoundLatitude:function(a,c){c[1]=Y(a)},northBoundLatitude:function(a,c){c[3]=Y(a)},MinScaleDenominator:function(a,c){c.maxScale=parseFloat(Y(a)).toPrecision(16)},MaxScaleDenominator:function(a,c){c.minScale=parseFloat(Y(a)).toPrecision(16)},Dimension:function(a,c){var d={name:a.getAttribute("name").toLowerCase(),units:a.getAttribute("units"),
unitsymbol:a.getAttribute("unitSymbol"),nearestVal:"1"===a.getAttribute("nearestValue"),multipleVal:"1"===a.getAttribute("multipleValues"),"default":a.getAttribute("default")||"",current:"1"===a.getAttribute("current"),values:Y(a).split(",")};c.dimensions[d.name]=d},Keyword:function(a,c){var d={value:Y(a),vocabulary:a.getAttribute("vocabulary")};c.keywords&&c.keywords.push(d)}});this.j.sld={UserDefinedSymbolization:function(a,c){this.j["http://www.opengis.net/wms"].jh.apply(this,arguments);var d=
a.getAttribute("InlineFeature");c.userSymbols.inlineFeature=1==parseInt(d,10);d=a.getAttribute("RemoteWCS");c.userSymbols.remoteWCS=1==parseInt(d,10)},DescribeLayer:function(a,c){this.j["http://www.opengis.net/wms"].yg.apply(this,arguments)},GetLegendGraphic:function(a,c){this.j["http://www.opengis.net/wms"].Eg.apply(this,arguments)}}}F(Bq,wq);function Cq(a){a=a||{};a.defaultVersion="1.1.1";this.a={};this.a.v1_1_0=yq;this.a.v1_1_1=zq;this.a.v1_1_1_WMSC=Aq;this.a.v1_3_0=Bq;tq.call(this,a)}F(Cq,tq);function Dq(){this.j={"http://www.opengis.net/ows":{ServiceIdentification:function(a,b){b.serviceIdentification={};X(this,a,b.serviceIdentification)},Title:function(a,b){b.title=Y(a)},Abstract:function(a,b){b["abstract"]=Y(a)},Keywords:function(a,b){b.keywords={};X(this,a,b.keywords)},Keyword:function(a,b){b[Y(a)]=!0},ServiceType:function(a,b){b.serviceType={codeSpace:a.getAttribute("codeSpace"),value:Y(a)}},ServiceTypeVersion:function(a,b){b.serviceTypeVersion=Y(a)},Fees:function(a,b){b.fees=Y(a)},
AccessConstraints:function(a,b){b.accessConstraints=Y(a)},ServiceProvider:function(a,b){b.serviceProvider={};X(this,a,b.serviceProvider)},ProviderName:function(a,b){b.providerName=Y(a)},ProviderSite:function(a,b){b.providerSite=this.getAttributeNS(a,"http://www.w3.org/1999/xlink","href")},ServiceContact:function(a,b){b.serviceContact={};X(this,a,b.serviceContact)},IndividualName:function(a,b){b.individualName=Y(a)},PositionName:function(a,b){b.positionName=Y(a)},ContactInfo:function(a,b){b.contactInfo=
{};X(this,a,b.contactInfo)},Phone:function(a,b){b.phone={};X(this,a,b.phone)},Voice:function(a,b){b.voice=Y(a)},Address:function(a,b){b.address={};X(this,a,b.address)},DeliveryPoint:function(a,b){b.deliveryPoint=Y(a)},City:function(a,b){b.city=Y(a)},AdministrativeArea:function(a,b){b.administrativeArea=Y(a)},PostalCode:function(a,b){b.postalCode=Y(a)},Country:function(a,b){b.country=Y(a)},ElectronicMailAddress:function(a,b){b.electronicMailAddress=Y(a)},Role:function(a,b){b.role=Y(a)},OperationsMetadata:function(a,
b){b.operationsMetadata={};X(this,a,b.operationsMetadata)},Operation:function(a,b){var c=a.getAttribute("name");b[c]={};X(this,a,b[c])},DCP:function(a,b){b.dcp={};X(this,a,b.dcp)},HTTP:function(a,b){b.http={};X(this,a,b.http)},Get:function(a,b){b.get||(b.get=[]);var c={url:this.getAttributeNS(a,"http://www.w3.org/1999/xlink","href")};X(this,a,c);b.get.push(c)},Post:function(a,b){b.post||(b.post=[]);var c={url:this.getAttributeNS(a,"http://www.w3.org/1999/xlink","href")};X(this,a,c);b.post.push(c)},
Parameter:function(a,b){b.parameters||(b.parameters={});var c=a.getAttribute("name");b.parameters[c]={};X(this,a,b.parameters[c])},Constraint:function(a,b){b.constraints||(b.constraints={});var c=a.getAttribute("name");b.constraints[c]={};X(this,a,b.constraints[c])},Value:function(a,b){b[Y(a)]=!0},OutputFormat:function(a,b){b.formats.push({value:Y(a)});X(this,a,b)},WGS84BoundingBox:function(a,b){var c={};c.crs=a.getAttribute("crs");b.BoundingBox?b.BoundingBox.push(c):(b.projection=c.crs,c=b);X(this,
a,c)},BoundingBox:function(a,b){this.j[a.namespaceURI].WGS84BoundingBox.apply(this,[a,b])},LowerCorner:function(a,b){var c=Y(a).replace(this.S.xa,""),c=c.replace(this.S.td,","),c=c.split(this.S.Jb);b.left=c[0];b.bottom=c[1]},UpperCorner:function(a,b){var c=Y(a).replace(this.S.xa,""),c=c.replace(this.S.td,","),c=c.split(this.S.Jb);b.right=c[0];b.top=c[1];b.bounds=[parseFloat(b.left),parseFloat(b.right),parseFloat(b.bottom),parseFloat(b.top)];delete b.left;delete b.bottom;delete b.right;delete b.top},
Language:function(a,b){b.language=Y(a)}}};gp.call(this)}F(Dq,gp);function Eq(){Dq.call(this);this.j["http://www.opengis.net/ows/1.1"]=this.j["http://www.opengis.net/ows"];J(this.j["http://www.opengis.net/ows/1.1"],{AllowedValues:function(a,b){b.allowedValues={};X(this,a,b.allowedValues)},AnyValue:function(a,b){b.anyValue=!0},DataType:function(a,b){b.dataType=Y(a)},Range:function(a,b){b.range={};X(this,a,b.range)},MinimumValue:function(a,b){b.minValue=Y(a)},MaximumValue:function(a,b){b.maxValue=Y(a)},Identifier:function(a,b){b.identifier=Y(a)},SupportedCRS:function(a,
b){b.supportedCRS=Y(a)}})}F(Eq,Dq);function Fq(){this.A="http://www.opengis.net/wmts/1.0";this.Id="serviceIdentification";this.j={"http://www.opengis.net/wmts/1.0":{Capabilities:function(a,c){X(this,a,c)},Contents:function(a,c){c.contents={};c.contents.layers=[];c.contents.tileMatrixSets={};X(this,a,c.contents)},Layer:function(a,c){var d={styles:[],formats:[],dimensions:[],tileMatrixSetLinks:[],layers:[]};X(this,a,d);c.layers.push(d)},Style:function(a,c){var d={};d.isDefault="true"===a.getAttribute("isDefault");X(this,a,d);c.styles.push(d)},
Format:function(a,c){c.formats.push(Y(a))},TileMatrixSetLink:function(a,c){var d={};X(this,a,d);c.tileMatrixSetLinks.push(d)},TileMatrixSet:function(a,c){if(c.layers){var d={matrixIds:[]};X(this,a,d);c.tileMatrixSets[d.identifier]=d}else c.tileMatrixSet=Y(a)},TileMatrix:function(a,c){var d={supportedCRS:c.supportedCRS};X(this,a,d);c.matrixIds.push(d)},ScaleDenominator:function(a,c){c.scaleDenominator=parseFloat(Y(a))},TopLeftCorner:function(a,c){var d=Y(a).split(" "),e=he(c.supportedCRS).a;c.topLeftCorner=
ld([parseFloat(d[0]),parseFloat(d[1])],e)},TileWidth:function(a,c){c.tileWidth=parseInt(Y(a),10)},TileHeight:function(a,c){c.tileHeight=parseInt(Y(a),10)},MatrixWidth:function(a,c){c.matrixWidth=parseInt(Y(a),10)},MatrixHeight:function(a,c){c.matrixHeight=parseInt(Y(a),10)},ResourceURL:function(a,c){var d=a.getAttribute("resourceType"),e=a.getAttribute("format"),f=a.getAttribute("template");c.resourceUrls||(c.resourceUrls={});c.resourceUrls[d]||(c.resourceUrls[d]={});c.resourceUrls[d][e]||(c.resourceUrls[d][e]=
[]);c.resourceUrls[d][e].push(f)},WSDL:function(a,c){c.wsdl={};c.wsdl.href=this.getAttributeNS(a,"http://www.w3.org/1999/xlink","href")},ServiceMetadataURL:function(a,c){c.serviceMetadataUrl={};c.serviceMetadataUrl.href=this.getAttributeNS(a,"http://www.w3.org/1999/xlink","href")},LegendURL:function(a,c){c.legend={};c.legend.href=this.getAttributeNS(a,"http://www.w3.org/1999/xlink","href");c.legend.format=a.getAttribute("format")},Dimension:function(a,c){var d={values:[]};X(this,a,d);c.dimensions.push(d)},
Default:function(a,c){c["default"]=Y(a)},Value:function(a,c){c.values.push(Y(a))}}};var a=new Eq;this.j["http://www.opengis.net/ows/1.1"]=a.j["http://www.opengis.net/ows/1.1"];gp.call(this)}F(Fq,gp);Fq.prototype.D=function(a){u(a)&&(a=dp(a));a&&9==a.nodeType&&(a=a.documentElement);var b={};this.Za(a,b);return b};function Gq(a){a=a||{};a.defaultVersion="1.0.0";this.a={};this.a.v1_0_0=Fq;tq.call(this,a)}F(Gq,tq);function Hq(a,b){var c=b||{},d=c.document||document,e=Hf("SCRIPT"),f={je:e,yb:void 0},g=new qp(Iq,f),h=null,l=null!=c.timeout?c.timeout:5E3;0<l&&(h=window.setTimeout(function(){Jq(e,!0);g.Cb(new Kq(Lq,"Timeout reached for loading script "+a))},l),f.yb=h);e.onload=e.onreadystatechange=function(){e.readyState&&"loaded"!=e.readyState&&"complete"!=e.readyState||(Jq(e,c.Bd||!1,h),g.aa(null))};e.onerror=function(){Jq(e,!0,h);g.Cb(new Kq(Mq,"Error while loading script "+a))};Bf(e,{type:"text/javascript",
charset:"UTF-8",src:a});Nq(d).appendChild(e);return g}function Nq(a){var b=a.getElementsByTagName("HEAD");return b&&0!=b.length?b[0]:a.documentElement}function Iq(){if(this&&this.je){var a=this.je;a&&"SCRIPT"==a.tagName&&Jq(a,!0,this.yb)}}function Jq(a,b,c){null!=c&&p.clearTimeout(c);a.onload=ea;a.onerror=ea;a.onreadystatechange=ea;b&&window.setTimeout(function(){Mf(a)},0)}var Mq=0,Lq=1;function Kq(a,b){var c="Jsloader error (code #"+a+")";b&&(c+=": "+b);ua.call(this,c);this.code=a}F(Kq,ua);function Oq(a,b){this.b=new xe(a);this.a=b?b:"callback";this.yb=5E3}var Pq=0;Oq.prototype.cancel=function(a){a&&(a.Wc&&a.Wc.cancel(),a.Q&&Qq(a.Q,!1))};function Rq(a){return function(){Qq(a,!1)}}function Sq(a,b){return function(c){Qq(a,!0);b.apply(void 0,arguments)}}function Qq(a,b){p._callbacks_[a]&&(b?delete p._callbacks_[a]:p._callbacks_[a]=ea)};function Tq(a){return function(b){return null===b?void 0:a.replace("{z}",""+b.z).replace("{x}",""+b.x).replace("{y}",""+b.y)}}function Uq(a){return 1===a.length?a[0]:function(b,c){return null===b?void 0:a[cd((b.x<<b.z)+b.y,a.length)].call(this,b,c)}}function Vq(a,b){var c=hk,d=nd();return function(e,f){if(null!==e){var g=this.tileGrid;null===g&&(g=sj(f));var h=g.Aa(e.z),g=mj(g,e,d);return c.call(this,a,b,g,h,f)}}}function Wq(){}
function Xq(a,b){var c=new Xa(0,0,0);return function(d,e){return null===d?void 0:b.call(this,a.call(this,d,e,c),e)}}function Yq(a){var b=[],c=/\{(\d)-(\d)\}/.exec(a)||/\{([a-z])-([a-z])\}/.exec(a);if(c){var d=c[2].charCodeAt(0),e;for(e=c[1].charCodeAt(0);e<=d;++e)b.push(a.replace(c[0],String.fromCharCode(e)))}else b.push(a);return b};function Zq(a,b,c,d){xh.call(this,a,b);this.f=c;this.b=new Image;null!==d&&(this.b.crossOrigin=d);this.e={};this.d=null}F(Zq,xh);Zq.prototype.ha=function(a){if(t(a)){var b=x(a);if(b in this.e)return this.e[b];a=nc(this.e)?this.b:this.b.cloneNode(!1);return this.e[b]=a}return this.b};Zq.prototype.c=k("f");Zq.prototype.g=function(){this.a=3;Fa(this.d,Ec);this.d=null;M(this,"change")};Zq.prototype.i=function(){this.a=this.b.naturalWidth&&this.b.naturalHeight?2:4;Fa(this.d,Ec);this.d=null;M(this,"change")};function $q(a){Rj.call(this,{attributions:a.attributions,extent:a.extent,logo:a.logo,opaque:a.opaque,projection:a.projection,tileGrid:a.tileGrid});this.Ga=t(a.Ga)?a.Ga:Wq;this.p=t(a.crossOrigin)?a.crossOrigin:null;this.a=new gm}F($q,Rj);$q.prototype.od=function(){return this.a.T()>this.a.d};$q.prototype.Nb=function(a){this.a.Nb(a)};
$q.prototype.c=function(a,b,c,d){var e=this.eb(a,b,c);if(em(this.a,e))return this.a.get(e);a=new Xa(a,b,c);d=this.Ga(a,d);d=new Zq(a,t(d)?0:4,t(d)?d:"",this.p);fm(this.a,e,d);return d};$q.prototype.ne=function(a,b,c){a=this.eb(a,b,c);em(this.a,a)&&this.a.get(a)};function ar(a){var b=Array(a.maxZoom+1),c,d=2*dj/256;for(c=0;c<=a.maxZoom;++c)b[c]=d/Math.pow(2,c);kj.call(this,{minZoom:a.minZoom,origin:[-dj,dj],resolutions:b,tileSize:[256,256]})}F(ar,kj);
function br(a,b){var c=t(b)?b:{},d=a.minZoom,e=a.maxZoom,f=t(c.gg)?c.gg:!0,g=new Xa(0,0,0),h=null;if(t(c.extent)){var h=Array(e+1),l;for(l=0;l<=e;++l)h[l]=l<d?null:nj(a,c.extent,l)}return function(a,b,c){b=a.z;if(b<d||e<b)return null;var l=Math.pow(2,b),s=a.x;if(f)s=cd(s,l);else if(0>s||l<=s)return null;a=a.y;return a<-l||-1<a||null!==h&&(g.z=b,g.x=s,g.y=a,!h[b].contains(g))?null:t(c)?(c.z=b,c.x=s,c.y=-a-1,c):new Xa(b,s,-a-1)}}
ar.prototype.xc=function(a,b){return a.z<this.maxZoom?ab(2*a.x,2*(a.x+1),2*a.y,2*(a.y+1),b):null};ar.prototype.tc=function(a,b,c,d){d=ab(0,a.x,0,a.y,d);for(a=a.z-1;a>=this.minZoom;--a)if(d.a=d.d>>=1,d.c=d.b>>=1,b.call(c,a,d))return!0;return!1};function cr(a){$q.call(this,{crossOrigin:"anonymous",opaque:!0,projection:he("EPSG:3857")});this.i=t(a.culture)?a.culture:"en-us";this.d=!1;var b=new xe("//dev.virtualearth.net/REST/v1/Imagery/Metadata/"+a.style),b=new Oq(b,"jsonp"),c={include:"ImageryProviders",key:a.key};a=y(this.k,this);var d=c||null,c="_"+(Pq++).toString(36)+ta().toString(36);p._callbacks_||(p._callbacks_={});var e=b.b.da();if(d)for(var f in d)d.hasOwnProperty&&!d.hasOwnProperty(f)||Ke(e,f,d[f]);a&&(p._callbacks_[c]=Sq(c,a),Ke(e,
b.a,"_callbacks_."+c));f=Hq(e.toString(),{timeout:b.yb,Bd:!0});xp(f,null,Rq(c),void 0)}F(cr,$q);
cr.prototype.k=function(a){var b=a.brandLogoUri,c=a.resourceSets[0].resources[0],d=new ar({minZoom:c.zoomMin,maxZoom:c.zoomMax,tileSize:[c.imageWidth,c.imageHeight]});this.tileGrid=d;var e=this.i;this.Ga=Xq(br(d),Uq(Ia(c.imageUrlSubdomains,function(a){var b=c.imageUrl.replace("{subdomain}",a).replace("{culture}",e);return function(a){return null===a?void 0:b.replace("{quadkey}",Za(a))}})));var f=Ld(he("EPSG:4326"),this.fa());this.e=Ia(c.imageryProviders,function(a){var b=a.attribution,c={};Fa(a.coverageAreas,
function(a){var b=a.zoomMin,e=a.zoomMax;a=a.bbox;a=zd([a[1],a[3],a[0],a[2]],f);var g,h;for(g=b;g<=e;++g)h=g.toString(),b=nj(d,a,g),h in c?c[h].push(b):c[h]=[b]});return new bb({html:b,tileRanges:c})});this.f=b;this.d=!0;++this.b;M(this,"load")};cr.prototype.Ba=k("d");function dr(a){var b=a.projection||he("EPSG:3857"),c=Wq;t(a.Ga)?c=a.Ga:t(a.urls)?c=Uq(Ia(a.urls,Tq)):t(a.url)&&(c=Yq(a.url),c=Uq(Ia(c,Tq)));var d=new ar({maxZoom:a.maxZoom,minZoom:a.minZoom}),e=br(d,{extent:a.extent}),c=Xq(e,c);$q.call(this,{attributions:a.attributions,crossOrigin:a.crossOrigin,extent:a.extent,logo:a.logo,projection:b,tileGrid:d,Ga:c})}F(dr,$q);function er(a){a=t(a)?a:{};dr.call(this,{attributions:t(a.attributions)?a.attributions:t(a.attribution)?[a.attribution]:fr,crossOrigin:"anonymous",opaque:!0,maxZoom:t(a.maxZoom)?a.maxZoom:18,url:t(a.url)?a.url:"http://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png"})}F(er,dr);
var gr=new bb({html:'Data \x26copy; \x3ca href\x3d"http://www.openstreetmap.org/"\x3eOpenStreetMap\x3c/a\x3e contributors, \x3ca href\x3d"http://www.openstreetmap.org/copyright"\x3eODbL\x3c/a\x3e'}),hr=new bb({html:'Tiles \x26copy; \x3ca href\x3d"http://www.openstreetmap.org/"\x3eOpenStreetMap\x3c/a\x3e contributors, \x3ca href\x3d"http://creativecommons.org/licenses/by-sa/2.0/"\x3eCC BY-SA\x3c/a\x3e'}),fr=[hr,gr];function ir(){dr.call(this,{attributions:[new bb({html:'Tiles Courtesy of \x3ca href\x3d"http://www.mapquest.com/" target\x3d"_blank"\x3eMapQuest\x3c/a\x3e'}),gr],crossOrigin:"anonymous",logo:"http://developer.mapquest.com/content/osm/mq_logo.png",opaque:!0,maxZoom:28,url:"http://otile{1-4}.mqcdn.com/tiles/1.0.0/osm/{z}/{x}/{y}.jpg"})}F(ir,dr);
function jr(){dr.call(this,{attributions:[new bb({html:'Tiles Courtesy of \x3ca href\x3d"http://www.mapquest.com/" target\x3d"_blank"\x3eMapQuest\x3c/a\x3e'}),new bb({html:"Portions Courtesy NASA/JPL-Caltech and U.S. Depart. of Agriculture, Farm Service Agency"})],crossOrigin:"anonymous",logo:"http://developer.mapquest.com/content/osm/mq_logo.png",maxZoom:18,opaque:!0,url:"http://oatile{1-4}.mqcdn.com/tiles/1.0.0/sat/{z}/{x}/{y}.jpg"})}F(jr,dr);function hk(a,b,c,d,e){d={SERVICE:"WMS",VERSION:"1.3.0",REQUEST:"GetMap",FORMAT:"image/png",TRANSPARENT:!0,WIDTH:Math.round(d[0]),HEIGHT:Math.round(d[1])};J(d,b);d.STYLES=b.STYLES||new String("");b="1.3"<d.VERSION;d[b?"CRS":"SRS"]=e.Ta;e=e.a;d.BBOX=(b&&"ne"==e.substr(0,2)?[c[2],c[0],c[3],c[1]]:[c[0],c[2],c[1],c[3]]).join(",");return ue(we([a],d))}
function kr(a,b,c,d,e){a=a.replace("REQUEST\x3dGetMap","REQUEST\x3dGetFeatureInfo").replace(lr,"LAYERS\x3d$1\x26QUERY_LAYERS\x3d$1");c=t(c)?rc(c):{};var f={method:"iframe",params:{}};J(f,c);c={INFO_FORMAT:"text/html"};var g=parseFloat(a.match(mr)[1]),h=Math.round(b[0]);b=Math.round(b[1]);1.3<=g?J(c,{I:h,J:b}):J(c,{X:h,Y:b});J(c,f.params);a=ue(we([a],c));"iframe"==f.method?p.setTimeout(function(){d('\x3ciframe seamless src\x3d"'+a+'"\x3e\x3c/iframe\x3e')},0):"xhr_get"==f.method&&gl(a,function(a){a=
a.target;ql(a)?d(rl(a)):t(e)&&e()})}var lr=/LAYERS=([^&]+)/,mr=/VERSION=([^&]+)/;function nr(a){this.d=a.params;jk.call(this,{attributions:a.attributions,crossOrigin:a.crossOrigin,extent:a.extent,projection:a.projection,resolutions:a.resolutions,Eb:t(a.url)?gk(a.url,this.d):ik});this.k=t(a.ad)?a.ad:{};this.a=null;this.t=t(a.ratio)?a.ratio:1.5}F(nr,jk);nr.prototype.p=k("d");
nr.prototype.ha=function(a,b,c){null===this.c||(b=this.c[$h(this.c,b,0)]);var d=this.a;if(null!==d&&d.B()==b&&rd(d.ba(),a))return d;var d=a=a.slice(),e=this.t,f=(d[1]-d[0])/2*(e-1),e=(d[3]-d[2])/2*(e-1);d[0]-=f;d[1]+=f;d[2]-=e;d[3]+=e;return this.a=kk(this,a,b,[(a[1]-a[0])/b,(a[3]-a[2])/b],c)};nr.prototype.Ua=function(a,b,c,d){var e=b.a().P().fa(),f=b.c(),g=Mh(b,[0,f[1]]);b=Mh(b,[f[0],0]);e=this.Eb([g[0],b[0],g[1],b[1]],f,e);kr(e,a,this.k,c,d)};nr.prototype.q=function(a){J(this.d,a);this.a=null;Ih(this)};var or={terrain:{za:"jpg",opaque:!0},"terrain-background":{za:"jpg",opaque:!0},"terrain-labels":{za:"png",opaque:!1},"terrain-lines":{za:"png",opaque:!1},"toner-background":{za:"png",opaque:!0},toner:{za:"png",opaque:!0},"toner-hybrid":{za:"png",opaque:!1},"toner-labels":{za:"png",opaque:!1},"toner-lines":{za:"png",opaque:!1},"toner-lite":{za:"png",opaque:!0},watercolor:{za:"jpg",opaque:!0}},pr={terrain:{minZoom:4,maxZoom:18},toner:{minZoom:0,maxZoom:20},watercolor:{minZoom:3,maxZoom:16}};
function qr(a){var b=a.layer.indexOf("-"),b=-1==b?a.layer:a.layer.slice(0,b),c=or[a.layer];dr.call(this,{attributions:rr,crossOrigin:"anonymous",maxZoom:pr[b].maxZoom,opaque:c.opaque,url:t(a.url)?a.url:"http://{a-d}.tile.stamen.com/"+a.layer+"/{z}/{x}/{y}."+c.za})}F(qr,dr);var rr=[new bb({html:'Map tiles by \x3ca href\x3d"http://stamen.com/"\x3eStamen Design\x3c/a\x3e, under \x3ca href\x3d"http://creativecommons.org/licenses/by/3.0/"\x3eCC BY 3.0\x3c/a\x3e.'}),gr];function Fr(a){var b=Gr(a.url),c=a.imageExtent,d=a.imageSize,e=(c[3]-c[2])/d[1],f=he(a.projection);jk.call(this,{attributions:a.attributions,crossOrigin:a.crossOrigin,extent:a.extent,projection:a.projection,Eb:b,resolutions:[e]});this.a=kk(this,c,e,d,f)}F(Fr,jk);Fr.prototype.ha=function(a){return yd(a,this.a.ba())?this.a:null};function Gr(a){return function(){return a}};function Hr(a,b){xh.call(this,a,2);this.e=a;this.d=b.Aa(a.z);this.b={}}F(Hr,xh);Hr.prototype.ha=function(a){a=t(a)?x(a):-1;if(a in this.b)return this.b[a];var b=this.d,c=Hf("CANVAS");c.width=b[0];c.height=b[1];var d=c.getContext("2d");d.strokeStyle="black";d.strokeRect(0.5,0.5,b[0]+0.5,b[1]+0.5);d.fillStyle="black";d.textAlign="center";d.textBaseline="middle";d.font="24px sans-serif";d.fillText(this.e.toString(),b[0]/2,b[1]/2);return this.b[a]=c};
function Ir(a){Rj.call(this,{extent:a.extent,opaque:!1,projection:a.projection,tileGrid:a.tileGrid});this.a=new gm}F(Ir,Rj);Ir.prototype.od=function(){return this.a.T()>this.a.d};Ir.prototype.Nb=function(a){this.a.Nb(a)};Ir.prototype.c=function(a,b,c){var d=this.eb(a,b,c);if(em(this.a,d))return this.a.get(d);a=new Hr(new Xa(a,b,c),this.tileGrid);fm(this.a,d,a);return a};var Jr=[];C("grid",function(a){Jr.push(a)});function Kr(a){$q.call(this,{crossOrigin:a.crossOrigin,projection:he("EPSG:3857")});this.d=!1;this.Wc=Hq(a.url,{Bd:!0});wp(this.Wc,this.i,this)}F(Kr,$q);
Kr.prototype.i=function(){var a=Jr.pop(),b=he("EPSG:4326"),c;if(t(a.bounds)){var d=a.bounds,d=[d[0],d[2],d[1],d[3]],e=Ld(b,this.fa());this.g=c=zd(d,e)}var f=a.minzoom||0,d=a.maxzoom||22;this.tileGrid=e=new ar({maxZoom:d,minZoom:f});this.Ga=Xq(br(e,{extent:c}),Uq(Ia(a.tiles,Tq)));if(t(a.attribution)){b=t(c)?c:b.ba();c={};for(var g;f<=d;++f)g=f.toString(),c[g]=[nj(e,b,f)];this.e=[new bb({html:a.attribution,tileRanges:c})]}this.d=!0;++this.b;M(this,"load")};Kr.prototype.Ba=k("d");function Lr(a){var b=Wq,c=a.urls;!t(c)&&t(a.url)&&(c=Yq(a.url));this.d=a.params;this.i="";Mr(this);t(c)&&(b=Ia(c,function(a){return Vq(a,this.d)},this),b=Uq(b));var d=a.extent;$q.call(this,{attributions:a.attributions,crossOrigin:a.crossOrigin,extent:d,tileGrid:a.tileGrid,opaque:!(t(a.params.TRANSPARENT)?a.params.TRANSPARENT:1),projection:a.projection,Ga:Xq(function(a,b){var c=this.tileGrid;null===c&&(c=sj(b));if(c.Qb().length<=a.z)return null;var h=a.x,l=mj(c,a),n=b.ba();d=t(d)?d:n;null!==d&&(b.dd&&
d[0]===n[0]&&d[1]===n[1])&&(l=Math.ceil((d[1]-d[0])/(l[1]-l[0])),h=cd(h,l),l=mj(c,new Xa(a.z,h,a.y)));return null===d||yd(l,d)?new Xa(a.z,h,a.y):null},b)});this.k=t(a.ad)?a.ad:{}}F(Lr,$q);Lr.prototype.eb=function(a,b,c){return this.i+Lr.F.eb.call(this,a,b,c)};Lr.prototype.q=k("d");
Lr.prototype.Ua=function(a,b,c,d){var e=Mh(b,a),f=b.a().P(),g=f.fa(),h=null===this.tileGrid?sj(g):this.tileGrid,f=f.B(),e=pj(h,e[0],e[1],f,!1,void 0),h=mj(h,e);b=Ni(b,xd(h));g=this.Ga(e,g);kr(g,[a[0]-b[0],a[1]-b[1]],this.k,c,d)};function Mr(a){var b=0,c=[],d;for(d in a.d)c[b++]=d+"-"+a.d[d];a.i=c.join("/")}Lr.prototype.t=function(a){J(this.d,a);Mr(this);Ih(this)};function Nr(a){this.c=a.matrixIds;kj.call(this,{origin:a.origin,origins:a.origins,resolutions:a.resolutions,tileSize:a.tileSize,tileSizes:a.tileSizes})}F(Nr,kj);Nr.prototype.g=k("c");
function Or(a){var b=[],c=[],d=[],e=[],f=he(a.supportedCRS).Pb();Ua(a.matrixIds,function(a,b){return b.scaleDenominator-a.scaleDenominator});Fa(a.matrixIds,function(a){c.push(a.identifier);d.push(a.topLeftCorner);b.push(2.8E-4*a.scaleDenominator/f);e.push([a.tileWidth,a.tileHeight])});return new Nr({origins:d,resolutions:b,matrixIds:c,tileSizes:e})};var Pr="KVP";
function Qr(a){function b(a){a=e==Pr?ue(we([a],g)):a.replace(/\{(\w+?)\}/g,function(a,b){return b in g?g[b]:a});return function(b){if(null!==b){var c={TileMatrix:f.c[b.z],TileCol:b.x,TileRow:b.y};J(c,this.d);b=a;return b=e==Pr?ue(we([b],c)):b.replace(/\{(\w+?)\}/g,function(a,b){return c[b]})}}}var c=t(a.version)?a.version:"1.0.0",d=t(a.format)?a.format:"image/jpeg";this.d=a.dimensions||{};this.i="";Rr(this);var e=t(a.requestEncoding)?a.requestEncoding:Pr,f=a.tileGrid,g={Layer:a.layer,style:a.style,
Style:a.style,TileMatrixSet:a.matrixSet};e==Pr&&J(g,{Service:"WMTS",Request:"GetTile",Version:c,Format:d});c=Wq;d=a.urls;!t(d)&&t(a.url)&&(d=Yq(a.url));t(d)&&(c=Uq(Ia(d,b)));var h=nd(),l=new Xa(0,0,0),c=Xq(function(b,c){var d=this.tileGrid;if(d.Qb().length<=b.z)return null;var e=b.x,f=-b.y-1,g=mj(d,b),B=c.ba(),v=t(a.extent)?a.extent:B;null!==v&&(c.dd&&v[0]===B[0]&&v[1]===B[1])&&(g=Math.ceil((v[1]-v[0])/(g[1]-g[0])),e=cd(e,g),l.z=b.z,l.x=e,l.y=b.y,g=mj(d,l,h));return yd(g,v)?new Xa(b.z,e,f):null},
c);$q.call(this,{attributions:a.attributions,crossOrigin:a.crossOrigin,extent:a.extent,projection:a.projection,tileGrid:f,Ga:c})}F(Qr,$q);Qr.prototype.k=k("d");Qr.prototype.eb=function(a,b,c){return this.i+Qr.F.eb.call(this,a,b,c)};function Rr(a){var b=0,c=[],d;for(d in a.d)c[b++]=d+"-"+a.d[d];a.i=c.join("/")}Qr.prototype.q=function(a){J(this.d,a);Rr(this);Ih(this)};function Sr(a){this.c=t(a.color)?a.color instanceof nk?a.color:new U(a.color):new U(Tr);this.a=t(a.fontFamily)?a.fontFamily instanceof nk?a.fontFamily:new U(a.fontFamily):new U(Ur);this.b=t(a.fontSize)?a.fontSize instanceof nk?a.fontSize:new U(a.fontSize):new U(Vr);this.e=a.text instanceof nk?a.text:new U(a.text);this.d=t(a.opacity)?a.opacity instanceof nk?a.opacity:new U(a.opacity):new U(Wr)}F(Sr,Cl);
Sr.prototype.cb=function(a){var b;a instanceof P&&(b=a,b.H());a=Uk(this.c,b);var c=Uk(this.a,b),d=Number(Uk(this.b,b)),e=Uk(this.e,b);b=Number(Uk(this.d,b));return new Vl({color:a,fontFamily:c,fontSize:d,text:e,opacity:b})};var Tr="#000",Ur="sans-serif",Vr=10,Wr=1;function Xr(a){null!=a&&(a.html=a.html,a.tileRanges=a.tileRanges);bb.call(this,a)}F(Xr,bb);C("ol.Attribution",Xr);C("ol.Collection",O);O.prototype.clear=O.prototype.clear;O.prototype.extend=O.prototype.Ff;O.prototype.forEach=O.prototype.forEach;O.prototype.getArray=O.prototype.Gf;O.prototype.getAt=O.prototype.Ee;O.prototype.getLength=O.prototype.wc;O.prototype.insertAt=O.prototype.Dc;O.prototype.pop=O.prototype.pop;O.prototype.push=O.prototype.push;O.prototype.remove=O.prototype.remove;
O.prototype.removeAt=O.prototype.rd;O.prototype.setAt=O.prototype.Vf;Wc.prototype.getElement=Wc.prototype.b;function Yr(a){null!=a&&(a.tracking=a.tracking);ed.call(this,a)}F(Yr,ed);C("ol.DeviceOrientation",Yr);C("ol.DeviceOrientation.SUPPORTED",fd);C("ol.Feature",P);P.prototype.getAttributes=P.prototype.ob;P.prototype.getFeatureId=P.prototype.Je;P.prototype.getGeometry=P.prototype.H;P.prototype.set=P.prototype.n;P.prototype.setGeometry=P.prototype.Ea;
function Zr(a){null!=a&&(a.projection=a.projection,a.tracking=a.tracking,a.trackingOptions=a.trackingOptions);Q.call(this,a)}F(Zr,Q);C("ol.Geolocation",Zr);C("ol.Geolocation.SUPPORTED",ke);function $r(a){null!=a&&(a.controls=a.controls,a.interactions=a.interactions,a.layers=a.layers,a.overlays=a.overlays,a.renderer=a.renderer,a.renderers=a.renderers,a.target=a.target,a.view=a.view);V.call(this,a)}F($r,V);C("ol.Map",$r);V.prototype.addControl=V.prototype.xe;V.prototype.addLayer=V.prototype.zd;
V.prototype.addOverlay=V.prototype.ye;V.prototype.beforeRender=V.prototype.Ha;V.prototype.getControls=V.prototype.Ie;V.prototype.getFeatureInfo=V.prototype.Ke;V.prototype.getFeatures=V.prototype.Kd;V.prototype.getInteractions=V.prototype.Le;V.prototype.getLayers=V.prototype.se;V.prototype.getOverlays=V.prototype.Ne;V.prototype.getRenderer=V.prototype.Oe;V.prototype.removeControl=V.prototype.Pf;V.prototype.removeLayer=V.prototype.he;V.prototype.removeOverlay=V.prototype.Qf;V.prototype.updateSize=V.prototype.na;
Lh.prototype.getCoordinate=Lh.prototype.d;Lh.prototype.getPixel=Lh.prototype.e;Lh.prototype.preventDefault=Lh.prototype.U;Lh.prototype.stopPropagation=Lh.prototype.rb;C("ol.Object",N);N.prototype.bindTo=N.prototype.ze;N.prototype.get=N.prototype.get;N.prototype.notify=N.prototype.Zd;N.prototype.on=N.prototype.Lf;N.prototype.once=N.prototype.Nf;N.prototype.set=N.prototype.n;N.prototype.setValues=N.prototype.$b;N.prototype.un=N.prototype.ag;N.prototype.unByKey=N.prototype.bg;N.prototype.unbind=N.prototype.ud;
N.prototype.unbindAll=N.prototype.cg;function as(a){null!=a&&(a.element=a.element,a.position=a.position,a.positioning=a.positioning);wo.call(this,a)}F(as,wo);C("ol.Overlay",as);C("ol.OverlayPositioning",vo);vo.BOTTOM_LEFT="bottom-left";vo.BOTTOM_RIGHT="bottom-right";vo.TOP_LEFT="top-left";vo.TOP_RIGHT="top-right";function bs(a){null!=a&&(a.axisOrientation=a.axisOrientation,a.code=a.code,a.extent=a.extent,a.global=a.global,a.units=a.units);Jd.call(this,a)}F(bs,Jd);C("ol.Projection",bs);
Jd.prototype.getAxisOrientation=Jd.prototype.Fe;Jd.prototype.getCode=Jd.prototype.He;Jd.prototype.getExtent=Jd.prototype.ba;Jd.prototype.getMetersPerUnit=Jd.prototype.Pb;Jd.prototype.getPointResolution=Jd.prototype.b;Jd.prototype.getUnits=Jd.prototype.If;Jd.prototype.isGlobal=Jd.prototype.zf;C("ol.ProjectionUnits",Hd);Hd.DEGREES="degrees";Hd.FEET="ft";Hd.METERS="m";C("ol.RendererHint",so);so.CANVAS="canvas";so.DOM="dom";so.WEBGL="webgl";C("ol.RendererHints",ro);ro.createFromQueryData=ro.Be;
function cs(a){null!=a&&(a.center=a.center,a.maxResolution=a.maxResolution,a.maxZoom=a.maxZoom,a.projection=a.projection,a.resolution=a.resolution,a.resolutions=a.resolutions,a.rotation=a.rotation,a.zoom=a.zoom,a.zoomFactor=a.zoomFactor);S.call(this,a)}F(cs,S);C("ol.View2D",cs);S.prototype.calculateExtent=S.prototype.i;S.prototype.constrainResolution=S.prototype.Ia;S.prototype.constrainRotation=S.prototype.kc;S.prototype.fitExtent=S.prototype.$c;S.prototype.getView2D=S.prototype.P;
S.prototype.getZoom=S.prototype.Re;S.prototype.setZoom=S.prototype.p;C("ol.animation.bounce",function(a){null!=a&&(a.duration=a.duration,a.easing=a.easing,a.resolution=a.resolution,a.start=a.start);return qi(a)});C("ol.animation.pan",function(a){null!=a&&(a.duration=a.duration,a.easing=a.easing,a.source=a.source,a.start=a.start);return ri(a)});C("ol.animation.rotate",function(a){null!=a&&(a.duration=a.duration,a.easing=a.easing,a.rotation=a.rotation,a.start=a.start);return si(a)});
C("ol.animation.zoom",function(a){null!=a&&(a.duration=a.duration,a.easing=a.easing,a.resolution=a.resolution,a.start=a.start);return ti(a)});C("ol.canvas.SUPPORTED",Am);function ds(a){null!=a&&(a.className=a.className,a.target=a.target);ki.call(this,a)}F(ds,ki);C("ol.control.Attribution",ds);ki.prototype.setMap=ki.prototype.setMap;function es(a){null!=a&&(a.element=a.element,a.target=a.target);ji.call(this,a)}F(es,ji);C("ol.control.Control",es);ji.prototype.getMap=ji.prototype.$;
ji.prototype.setMap=ji.prototype.setMap;function fs(a){null!=a&&(a.className=a.className,a.keys=a.keys,a.target=a.target);Eo.call(this,a)}F(fs,Eo);C("ol.control.FullScreen",fs);function gs(a){null!=a&&(a.className=a.className,a.target=a.target);li.call(this,a)}F(gs,li);C("ol.control.Logo",gs);li.prototype.setMap=li.prototype.setMap;
function hs(a){null!=a&&(a.className=a.className,a.coordinateFormat=a.coordinateFormat,a.projection=a.projection,a.target=a.target,a.undefinedHTML=a.undefinedHTML);Fo.call(this,a)}F(hs,Fo);C("ol.control.MousePosition",hs);Fo.prototype.setMap=Fo.prototype.setMap;function is(a){null!=a&&(a.className=a.className,a.minWidth=a.minWidth,a.target=a.target,a.units=a.units);Io.call(this,a)}F(is,Io);C("ol.control.ScaleLine",is);Io.prototype.setMap=Io.prototype.setMap;C("ol.control.ScaleLineUnits",Ho);
Ho.DEGREES="degrees";Ho.IMPERIAL="imperial";Ho.METRIC="metric";Ho.NAUTICAL="nautical";Ho.US="us";function js(a){null!=a&&(a.className=a.className,a.delta=a.delta,a.target=a.target);ui.call(this,a)}F(js,ui);C("ol.control.Zoom",js);ui.prototype.setMap=ui.prototype.setMap;function ks(a){null!=a&&(a.className=a.className,a.maxResolution=a.maxResolution,a.minResolution=a.minResolution);Xo.call(this,a)}F(ks,Xo);C("ol.control.ZoomSlider",ks);
function ls(a){null!=a&&(a.className=a.className,a.extent=a.extent,a.target=a.target);Zo.call(this,a)}F(ls,Zo);C("ol.control.ZoomToExtent",ls);
C("ol.control.defaults",function(a){if(null!=a){a.attribution=a.attribution;var b=a.attributionOptions;null!=a.attributionOptions&&(b.className=a.attributionOptions.className,b.target=a.attributionOptions.target);a.attributionOptions=b;a.logo=a.logo;b=a.logoOptions;null!=a.logoOptions&&(b.className=a.logoOptions.className,b.target=a.logoOptions.target);a.logoOptions=b;a.zoom=a.zoom;b=a.zoomOptions;null!=a.zoomOptions&&(b.className=a.zoomOptions.className,b.delta=a.zoomOptions.delta,b.target=a.zoomOptions.target);
a.zoomOptions=b}return vi(a)});C("ol.coordinate.createStringXY",function(a){return function(b){return kd(b,a)}});C("ol.coordinate.fromProjectedArray",ld);C("ol.coordinate.toStringHDMS",function(a){return t(a)?hd(a[1],"NS")+" "+hd(a[0],"EW"):""});C("ol.coordinate.toStringXY",kd);C("ol.dom.Input",$o);C("ol.easing.bounce",function(a){a<1/2.75?a*=7.5625*a:a<2/2.75?(a-=1.5/2.75,a=7.5625*a*a+0.75):a<2.5/2.75?(a-=2.25/2.75,a=7.5625*a*a+0.9375):(a-=2.625/2.75,a=7.5625*a*a+0.984375);return a});
C("ol.easing.easeIn",function(a){return a*a*a});C("ol.easing.easeOut",mi);C("ol.easing.elastic",function(a){return Math.pow(2,-10*a)*Math.sin((a-0.075)*2*Math.PI/0.3)+1});C("ol.easing.inAndOut",ni);C("ol.easing.linear",oi);C("ol.easing.upAndDown",pi);C("ol.expr.parse",function(a){return Qk(a)});C("ol.expr.register",function(a,b){Vk[a]=b});C("ol.extent.boundingExtent",md);C("ol.extent.containsCoordinate",qd);C("ol.extent.containsExtent",rd);C("ol.extent.equals",sd);C("ol.extent.extend",td);
C("ol.extent.getBottomLeft",ud);C("ol.extent.getBottomRight",function(a){return[a[1],a[2]]});C("ol.extent.getCenter",vd);C("ol.extent.getHeight",function(a){return a[3]-a[2]});C("ol.extent.getSize",function(a){return[a[1]-a[0],a[3]-a[2]]});C("ol.extent.getTopLeft",xd);C("ol.extent.getTopRight",function(a){return[a[1],a[3]]});C("ol.extent.getWidth",function(a){return a[1]-a[0]});C("ol.extent.intersects",yd);C("ol.extent.isEmpty",function(a){return a[1]<a[0]||a[3]<a[2]});C("ol.extent.transform",zd);
C("ol.geom.Geometry",Bd);C("ol.geom.GeometryType",Cd);Cd.GEOMETRYCOLLECTION="geometrycollection";Cd.LINEARRING="linearring";Cd.LINESTRING="linestring";Cd.MULTILINESTRING="multilinestring";Cd.MULTIPOINT="multipoint";Cd.MULTIPOLYGON="multipolygon";Cd.POINT="point";Cd.POLYGON="polygon";C("ol.geom.LineString",im);im.prototype.getCoordinates=im.prototype.s;C("ol.geom.MultiLineString",jm);jm.prototype.getCoordinates=jm.prototype.s;C("ol.geom.MultiPoint",lm);lm.prototype.getCoordinates=lm.prototype.s;
C("ol.geom.MultiPolygon",pm);pm.prototype.getCoordinates=pm.prototype.s;C("ol.geom.Point",km);km.prototype.getCoordinates=km.prototype.s;C("ol.geom.Polygon",om);om.prototype.getCoordinates=om.prototype.s;C("ol.geom2.LineStringCollection",Vm);
C("ol.geom2.LineStringCollection.pack",function(a,b,c){var d=a.length;c=t(c)?c:0<d?a[0][0].length:2;var e;if(t(b))e=b;else for(b=e=0;b<d;++b)e+=a[b].length;var f=Array(e*c);e={};var g=0,h;for(b=0;b<d;++b)h=g,g=Nm(f,g,a[b],c),e[h+""]=g;a=new Tm(f,g);return new Vm(a,e,c)});C("ol.geom2.PointCollection",Wm);C("ol.geom2.PointCollection.createEmpty",function(a,b){var c=t(b)?b:2,d=new Tm(Array(a*c),0);return new Wm(d,c)});
C("ol.geom2.PointCollection.pack",function(a,b,c){var d=a.length;c=t(c)?c:0<d?a[0].length:2;b=Array(t(b)?b:d*c);Nm(b,0,a,c);a=new Tm(b,d*c);return new Wm(a,c)});Wm.prototype.add=Wm.prototype.add;C("ol.inherits",F);function ms(a){null!=a&&(a.condition=a.condition);bp.call(this,a)}F(ms,bp);C("ol.interaction.DragRotateAndZoom",ms);function ns(a){null!=a&&(a.condition=a.condition,a.layerFilter=a.layerFilter);cp.call(this,a)}F(ns,cp);C("ol.interaction.Select",ns);
C("ol.interaction.condition.altKeyOnly",function(a){return a.va&&!a.Gb&&!a.Xa});C("ol.interaction.condition.altShiftKeysOnly",Fi);C("ol.interaction.condition.always",Se);C("ol.interaction.condition.noModifierKeys",Hi);C("ol.interaction.condition.platformModifierKeyOnly",function(a){return!a.va&&a.Gb&&!a.Xa});C("ol.interaction.condition.shiftKeyOnly",Ii);C("ol.interaction.condition.targetNotEditable",Ji);
C("ol.interaction.defaults",function(a){null!=a&&(a.altShiftDragRotate=a.altShiftDragRotate,a.doubleClickZoom=a.doubleClickZoom,a.dragPan=a.dragPan,a.keyboard=a.keyboard,a.mouseWheelZoom=a.mouseWheelZoom,a.shiftDragZoom=a.shiftDragZoom,a.touchPan=a.touchPan,a.touchRotate=a.touchRotate,a.touchZoom=a.touchZoom,a.zoomDelta=a.zoomDelta);return Zi(a)});
function os(a){null!=a&&(a.brightness=a.brightness,a.contrast=a.contrast,a.hue=a.hue,a.layers=a.layers,a.opacity=a.opacity,a.saturation=a.saturation,a.visible=a.visible);$i.call(this,a)}F(os,$i);C("ol.layer.Group",os);function ps(a){null!=a&&(a.brightness=a.brightness,a.contrast=a.contrast,a.hue=a.hue,a.opacity=a.opacity,a.saturation=a.saturation,a.source=a.source,a.visible=a.visible);Jh.call(this,a)}F(ps,lk);C("ol.layer.Image",ps);C("ol.layer.Layer",Jh);Jh.prototype.getSource=Jh.prototype.ja;
function qs(a){null!=a&&(a.brightness=a.brightness,a.contrast=a.contrast,a.hue=a.hue,a.opacity=a.opacity,a.preload=a.preload,a.saturation=a.saturation,a.source=a.source,a.visible=a.visible);mk.call(this,a)}F(qs,mk);C("ol.layer.Tile",qs);function rs(a){null!=a&&(a.opacity=a.opacity,a.source=a.source,a.style=a.style,a.transformFeatureInfo=a.transformFeatureInfo,a.visible=a.visible);Xl.call(this,a)}F(rs,Xl);C("ol.layer.Vector",rs);C("ol.layer.Vector2",Ym);C("ol.parser.GPX",ip);ip.prototype.read=ip.prototype.D;
ip.prototype.write=ip.prototype.write;C("ol.parser.GeoJSON",kp);kp.read=function(a){return kp.ia().D(a)};kp.write=function(a){return kp.ia().write(a)};kp.prototype.read=kp.prototype.D;kp.prototype.write=kp.prototype.write;C("ol.parser.KML",Wp);Wp.prototype.read=Wp.prototype.D;Wp.prototype.write=Wp.prototype.write;C("ol.parser.TopoJSON",$p);$p.read=function(a){return $p.ia().D(a)};$p.prototype.read=$p.prototype.D;C("ol.parser.WKT",fq);fq.read=function(a){return fq.ia().D(a)};fq.write=function(a){return fq.ia().write(a)};
fq.prototype.read=fq.prototype.D;fq.prototype.write=fq.prototype.write;C("ol.parser.ogc.GML_v2",qq);qq.prototype.read=qq.prototype.D;qq.prototype.write=qq.prototype.write;C("ol.parser.ogc.GML_v3",rq);rq.prototype.read=rq.prototype.D;rq.prototype.write=rq.prototype.write;C("ol.parser.ogc.WMSCapabilities",Cq);Cq.prototype.read=Cq.prototype.D;C("ol.parser.ogc.WMTSCapabilities",Gq);Gq.prototype.read=Gq.prototype.D;C("ol.proj.addProjection",fe);C("ol.proj.common.add",gj);
C("ol.proj.configureProj4jsProjection",function(a){return Md(a)});C("ol.proj.get",he);C("ol.proj.getTransform",ie);C("ol.proj.getTransformFromProjections",Ld);C("ol.proj.transform",function(a,b,c){return ie(b,c)(a)});C("ol.proj.transformWithProjections",function(a,b,c){return Ld(b,c)(a)});zm.prototype.getCanvas=zm.prototype.vc;function ss(a){null!=a&&(a.culture=a.culture,a.key=a.key,a.style=a.style);cr.call(this,a)}F(ss,cr);C("ol.source.BingMaps",ss);C("ol.source.MapQuestOSM",ir);
C("ol.source.MapQuestOpenAerial",jr);C("ol.source.OSM",er);er.DATA_ATTRIBUTION=gr;er.TILE_ATTRIBUTION=hr;function ts(a){null!=a&&(a.attributions=a.attributions,a.crossOrigin=a.crossOrigin,a.extent=a.extent,a.params=a.params,a.projection=a.projection,a.ratio=a.ratio,a.resolutions=a.resolutions,a.url=a.url);nr.call(this,a)}F(ts,nr);C("ol.source.SingleImageWMS",ts);nr.prototype.getParams=nr.prototype.p;nr.prototype.updateParams=nr.prototype.q;Hh.prototype.getExtent=Hh.prototype.ba;
function us(a){null!=a&&(a.layer=a.layer,a.maxZoom=a.maxZoom,a.minZoom=a.minZoom,a.opaque=a.opaque,a.url=a.url);qr.call(this,a)}F(us,qr);C("ol.source.Stamen",us);function vs(a){null!=a&&(a.attributions=a.attributions,a.crossOrigin=a.crossOrigin,a.extent=a.extent,a.imageExtent=a.imageExtent,a.imageSize=a.imageSize,a.projection=a.projection,a.url=a.url);Fr.call(this,a)}F(vs,Fr);C("ol.source.StaticImage",vs);C("ol.source.Tile",Rj);Rj.prototype.getTileGrid=Rj.prototype.Pe;
function ws(a){null!=a&&(a.extent=a.extent,a.projection=a.projection,a.tileGrid=a.tileGrid);Ir.call(this,a)}F(ws,Ir);C("ol.source.TileDebug",ws);function xs(a){null!=a&&(a.crossOrigin=a.crossOrigin,a.url=a.url);Kr.call(this,a)}F(xs,Kr);C("ol.source.TileJSON",xs);function ys(a){null!=a&&(a.attributions=a.attributions,a.crossOrigin=a.crossOrigin,a.extent=a.extent,a.maxZoom=a.maxZoom,a.params=a.params,a.projection=a.projection,a.tileGrid=a.tileGrid,a.url=a.url,a.urls=a.urls);Lr.call(this,a)}F(ys,Lr);
C("ol.source.TileWMS",ys);Lr.prototype.getParams=Lr.prototype.q;Lr.prototype.updateParams=Lr.prototype.t;function zs(a){null!=a&&(a.attributions=a.attributions,a.data=a.data,a.extent=a.extent,a.logo=a.logo,a.parser=a.parser,a.projection=a.projection,a.url=a.url);sl.call(this,a)}F(zs,sl);C("ol.source.Vector",zs);C("ol.source.Vector2",Xm);C("ol.source.WMSGetFeatureInfoMethod",{Fg:"iframe",lh:"xhr_get"});
function As(a){null!=a&&(a.attributions=a.attributions,a.crossOrigin=a.crossOrigin,a.dimensions=a.dimensions,a.extent=a.extent,a.format=a.format,a.layer=a.layer,a.matrixSet=a.matrixSet,a.maxZoom=a.maxZoom,a.projection=a.projection,a.requestEncoding=a.requestEncoding,a.style=a.style,a.tileGrid=a.tileGrid,a.url=a.url,a.urls=a.urls,a.version=a.version);Qr.call(this,a)}F(As,Qr);C("ol.source.WMTS",As);
C("ol.source.WMTS.optionsFromCapabilities",function(a,b){var c=Ma(a.contents.layers,function(a){return a.identifier==b}),d=c.tileMatrixSetLinks[0].tileMatrixSet,e=c.formats[0],f=Na(c.styles,function(a){return a.isDefault});0>f&&(f=0);var f=c.styles[f].identifier,g={};Fa(c.dimensions,function(a){var b=a.identifier,c=a["default"];t(c)||(c=a.values[0]);g[b]=c});var h=a.contents.tileMatrixSets[d],l=Or(h),h=he(h.supportedCRS),n=a.operationsMetadata.GetTile.dcp.http.get,r,q;switch(kc(n[0].constraints.GetEncoding.allowedValues)[0]){case "REST":case "RESTful":q=
"REST";r=c.resourceUrls.tile[e];break;case "KVP":q=Pr,r=[],Fa(n,function(a){a.constraints.GetEncoding.allowedValues.hasOwnProperty(Pr)&&r.push(a.url)})}return{urls:r,layer:b,matrixSet:d,format:e,projection:h,requestEncoding:q,tileGrid:l,style:f,dimensions:g}});Qr.prototype.getDimensions=Qr.prototype.k;Qr.prototype.updateDimensions=Qr.prototype.q;function Bs(a){null!=a&&(a.color=a.color,a.opacity=a.opacity);Dl.call(this,a)}F(Bs,Dl);C("ol.style.Fill",Bs);
function Cs(a){null!=a&&(a.height=a.height,a.opacity=a.opacity,a.rotation=a.rotation,a.url=a.url,a.width=a.width,a.xOffset=a.xOffset,a.yOffset=a.yOffset);Rp.call(this,a)}F(Cs,Rp);C("ol.style.Icon",Cs);function Ds(a){null!=a&&(a.filter=a.filter,a.symbolizers=a.symbolizers);Gl.call(this,a)}F(Ds,Gl);C("ol.style.Rule",Ds);function Es(a){null!=a&&(a.fill=a.fill,a.size=a.size,a.stroke=a.stroke,a.type=a.type);Pl.call(this,a)}F(Es,Pl);C("ol.style.Shape",Es);C("ol.style.ShapeType",Il);Il.CIRCLE="circle";
function Fs(a){null!=a&&(a.color=a.color,a.opacity=a.opacity,a.width=a.width);Ll.call(this,a)}F(Fs,Ll);C("ol.style.Stroke",Fs);function Gs(a){null!=a&&(a.rules=a.rules,a.symbolizers=a.symbolizers);Sl.call(this,a)}F(Gs,Sl);C("ol.style.Style",Gs);function Hs(a){null!=a&&(a.color=a.color,a.fontFamily=a.fontFamily,a.fontSize=a.fontSize,a.opacity=a.opacity,a.text=a.text);Sr.call(this,a)}F(Hs,Sr);C("ol.style.Text",Hs);
function Is(a){null!=a&&(a.minZoom=a.minZoom,a.origin=a.origin,a.origins=a.origins,a.resolutions=a.resolutions,a.tileSize=a.tileSize,a.tileSizes=a.tileSizes);kj.call(this,a)}F(Is,kj);C("ol.tilegrid.TileGrid",Is);kj.prototype.getMinZoom=kj.prototype.Me;kj.prototype.getOrigin=kj.prototype.Fb;kj.prototype.getResolutions=kj.prototype.Qb;kj.prototype.getTileSize=kj.prototype.Aa;
function Js(a){null!=a&&(a.matrixIds=a.matrixIds,a.origin=a.origin,a.origins=a.origins,a.resolutions=a.resolutions,a.tileSize=a.tileSize,a.tileSizes=a.tileSizes);Nr.call(this,a)}F(Js,Nr);C("ol.tilegrid.WMTS",Js);Nr.prototype.getMatrixIds=Nr.prototype.g;function Ks(a){null!=a&&(a.maxZoom=a.maxZoom);ar.call(this,a)}F(Ks,ar);C("ol.tilegrid.XYZ",Ks);C("ol.webgl.SUPPORTED",hn);})();

define("libraries/ol3/ol-20130912", function(){});

/* Copyright (c) 2006-2012 by OpenLayers Contributors (see authors.txt for 
 * full list of contributors). Published under the 2-clause BSD license.
 * See license.txt in the OpenLayers distribution or repository for the
 * full text of the license. */

/**
 * @requires OpenLayers/SingleFile.js
 */

/**
 * Constructor: OpenLayers.Class
 * Base class used to construct all other classes. Includes support for 
 *     multiple inheritance. 
 *     
 * This constructor is new in OpenLayers 2.5.  At OpenLayers 3.0, the old 
 *     syntax for creating classes and dealing with inheritance 
 *     will be removed.
 * 
 * To create a new OpenLayers-style class, use the following syntax:
 * (code)
 *     var MyClass = OpenLayers.Class(prototype);
 * (end)
 *
 * To create a new OpenLayers-style class with multiple inheritance, use the
 *     following syntax:
 * (code)
 *     var MyClass = OpenLayers.Class(Class1, Class2, prototype);
 * (end)
 * 
 * Note that instanceof reflection will only reveal Class1 as superclass.
 *
 */

/* Copyright (c) 2006-2011 by OpenLayers Contributors (see authors.txt for 
 * full list of contributors). Published under the Clear BSD license.  
 * See http://svn.openlayers.org/trunk/openlayers/license.txt for the
 * full text of the license. */

var OpenLayers = {
    /**
     * Constant: VERSION_NUMBER
     */
    VERSION_NUMBER: "Release 2.12",
    

    /**
     * Constant: singleFile
     * TODO: remove this in 3.0 when we stop supporting build profiles that
     * include OpenLayers.js
     */
    singleFile: true,

    /**
     * Method: _getScriptLocation
     * Return the path to this script. This is also implemented in
     * OpenLayers.js
     *
     * Returns:
     * {String} Path to this script
     */
    _getScriptLocation: (function() {
        var r = new RegExp("(^|(.*?\\/))(OpenLayers\.js)(\\?|$)"),
            s = document.getElementsByTagName('script'),
            src, m, l = "";
        for(var i=0, len=s.length; i<len; i++) {
            src = s[i].getAttribute('src');
            if(src) {
                var m = src.match(r);
                if(m) {
                    l = m[1];
                    break;
                }
            }
        }
        return (function() { return l; });
    })()
};


OpenLayers.Class = function() {
    var len = arguments.length;
    var P = arguments[0];
    var F = arguments[len-1];

    var C = typeof F.initialize == "function" ?
        F.initialize :
        function(){ P.prototype.initialize.apply(this, arguments); };

    if (len > 1) {
        var newArgs = [C, P].concat(
                Array.prototype.slice.call(arguments).slice(1, len-1), F);
        OpenLayers.inherit.apply(null, newArgs);
    } else {
        C.prototype = F;
    }
    return C;
};

/**
 * Function: OpenLayers.inherit
 *
 * Parameters:
 * C - {Object} the class that inherits
 * P - {Object} the superclass to inherit from
 *
 * In addition to the mandatory C and P parameters, an arbitrary number of
 * objects can be passed, which will extend C.
 */
OpenLayers.inherit = function(C, P) {
   var F = function() {};
   F.prototype = P.prototype;
   C.prototype = new F;
   var i, l, o;
   for(i=2, l=arguments.length; i<l; i++) {
       o = arguments[i];
       if(typeof o === "function") {
           o = o.prototype;
       }
       OpenLayers.Util.extend(C.prototype, o);
   }
};

/**
 * APIFunction: extend
 * Copy all properties of a source object to a destination object.  Modifies
 *     the passed in destination object.  Any properties on the source object
 *     that are set to undefined will not be (re)set on the destination object.
 *
 * Parameters:
 * destination - {Object} The object that will be modified
 * source - {Object} The object with properties to be set on the destination
 *
 * Returns:
 * {Object} The destination object.
 */
OpenLayers.Util = OpenLayers.Util || {};
OpenLayers.Util.extend = function(destination, source) {
    destination = destination || {};
    if (source) {
        for (var property in source) {
            var value = source[property];
            if (value !== undefined) {
                destination[property] = value;
            }
        }

        /**
         * IE doesn't include the toString property when iterating over an object's
         * properties with the for(property in object) syntax.  Explicitly check if
         * the source has its own toString property.
         */

        /*
         * FF/Windows < 2.0.0.13 reports "Illegal operation on WrappedNative
         * prototype object" when calling hawOwnProperty if the source object
         * is an instance of window.Event.
         */

        var sourceIsEvt = typeof window.Event == "function"
                          && source instanceof window.Event;

        if (!sourceIsEvt
           && source.hasOwnProperty && source.hasOwnProperty("toString")) {
            destination.toString = source.toString;
        }
    }
    return destination;
};


/* Copyright (c) 2006-2012 by OpenLayers Contributors (see authors.txt for 
 * full list of contributors). Published under the 2-clause BSD license.
 * See license.txt in the OpenLayers distribution or repository for the
 * full text of the license. */

/**
 * @requires OpenLayers/BaseTypes/Class.js
 */

/**
 * Class: OpenLayers.Bounds
 * Instances of this class represent bounding boxes.  Data stored as left,
 * bottom, right, top floats. All values are initialized to null, however,
 * you should make sure you set them before using the bounds for anything.
 * 
 * Possible use case:
 * (code)
 *     bounds = new OpenLayers.Bounds();
 *     bounds.extend(new OpenLayers.LonLat(4,5));
 *     bounds.extend(new OpenLayers.LonLat(5,6));
 *     bounds.toBBOX(); // returns 4,5,5,6
 * (end)
 */
OpenLayers.Bounds = OpenLayers.Class({

    /**
     * Property: left
     * {Number} Minimum horizontal coordinate.
     */
    left: null,

    /**
     * Property: bottom
     * {Number} Minimum vertical coordinate.
     */
    bottom: null,

    /**
     * Property: right
     * {Number} Maximum horizontal coordinate.
     */
    right: null,

    /**
     * Property: top
     * {Number} Maximum vertical coordinate.
     */
    top: null,
    
    /**
     * Property: centerLonLat
     * {<OpenLayers.LonLat>} A cached center location.  This should not be
     *     accessed directly.  Use <getCenterLonLat> instead.
     */
    centerLonLat: null,

    /**
     * Constructor: OpenLayers.Bounds
     * Construct a new bounds object. Coordinates can either be passed as four
     * arguments, or as a single argument.
     *
     * Parameters (four arguments):
     * left - {Number} The left bounds of the box.  Note that for width
     *        calculations, this is assumed to be less than the right value.
     * bottom - {Number} The bottom bounds of the box.  Note that for height
     *          calculations, this is assumed to be more than the top value.
     * right - {Number} The right bounds.
     * top - {Number} The top bounds.
     *
     * Parameters (single argument):
     * bounds - {Array(Number)} [left, bottom, right, top]
     */
    initialize: function(left, bottom, right, top) {
        if (OpenLayers.Util.isArray(left)) {
            top = left[3];
            right = left[2];
            bottom = left[1];
            left = left[0];
        }
        if (left != null) {
            this.left = OpenLayers.Util.toFloat(left);
        }
        if (bottom != null) {
            this.bottom = OpenLayers.Util.toFloat(bottom);
        }
        if (right != null) {
            this.right = OpenLayers.Util.toFloat(right);
        }
        if (top != null) {
            this.top = OpenLayers.Util.toFloat(top);
        }
    },

    /**
     * Method: clone
     * Create a cloned instance of this bounds.
     *
     * Returns:
     * {<OpenLayers.Bounds>} A fresh copy of the bounds
     */
    clone:function() {
        return new OpenLayers.Bounds(this.left, this.bottom, 
                                     this.right, this.top);
    },

    /**
     * Method: equals
     * Test a two bounds for equivalence.
     *
     * Parameters:
     * bounds - {<OpenLayers.Bounds>}
     *
     * Returns:
     * {Boolean} The passed-in bounds object has the same left,
     *           right, top, bottom components as this.  Note that if bounds 
     *           passed in is null, returns false.
     */
    equals:function(bounds) {
        var equals = false;
        if (bounds != null) {
            equals = ((this.left == bounds.left) && 
                      (this.right == bounds.right) &&
                      (this.top == bounds.top) && 
                      (this.bottom == bounds.bottom));
        }
        return equals;
    },

    /** 
     * APIMethod: toString
     * 
     * Returns:
     * {String} String representation of bounds object. 
     */
    toString:function() {
        return [this.left, this.bottom, this.right, this.top].join(",");
    },

    /**
     * APIMethod: toArray
     *
     * Parameters:
     * reverseAxisOrder - {Boolean} Should we reverse the axis order?
     *
     * Returns:
     * {Array} array of left, bottom, right, top
     */
    toArray: function(reverseAxisOrder) {
        if (reverseAxisOrder === true) {
            return [this.bottom, this.left, this.top, this.right];
        } else {
            return [this.left, this.bottom, this.right, this.top];
        }
    },    

    /** 
     * APIMethod: toBBOX
     * 
     * Parameters:
     * decimal - {Integer} How many significant digits in the bbox coords?
     *                     Default is 6
     * reverseAxisOrder - {Boolean} Should we reverse the axis order?
     * 
     * Returns:
     * {String} Simple String representation of bounds object.
     *          (e.g. <i>"5,42,10,45"</i>)
     */
    toBBOX:function(decimal, reverseAxisOrder) {
        if (decimal== null) {
            decimal = 6; 
        }
        var mult = Math.pow(10, decimal);
        var xmin = Math.round(this.left * mult) / mult;
        var ymin = Math.round(this.bottom * mult) / mult;
        var xmax = Math.round(this.right * mult) / mult;
        var ymax = Math.round(this.top * mult) / mult;
        if (reverseAxisOrder === true) {
            return ymin + "," + xmin + "," + ymax + "," + xmax;
        } else {
            return xmin + "," + ymin + "," + xmax + "," + ymax;
        }
    },
 
    /**
     * APIMethod: toGeometry
     * Create a new polygon geometry based on this bounds.
     *
     * Returns:
     * {<OpenLayers.Geometry.Polygon>} A new polygon with the coordinates
     *     of this bounds.
     */
    toGeometry: function() {
        return new OpenLayers.Geometry.Polygon([
            new OpenLayers.Geometry.LinearRing([
                new OpenLayers.Geometry.Point(this.left, this.bottom),
                new OpenLayers.Geometry.Point(this.right, this.bottom),
                new OpenLayers.Geometry.Point(this.right, this.top),
                new OpenLayers.Geometry.Point(this.left, this.top)
            ])
        ]);
    },
    
    /**
     * APIMethod: getWidth
     * 
     * Returns:
     * {Float} The width of the bounds
     */
    getWidth:function() {
        return (this.right - this.left);
    },

    /**
     * APIMethod: getHeight
     * 
     * Returns:
     * {Float} The height of the bounds (top minus bottom).
     */
    getHeight:function() {
        return (this.top - this.bottom);
    },

    /**
     * APIMethod: getSize
     * 
     * Returns:
     * {<OpenLayers.Size>} The size of the box.
     */
    getSize:function() {
        return new OpenLayers.Size(this.getWidth(), this.getHeight());
    },

    /**
     * APIMethod: getCenterPixel
     * 
     * Returns:
     * {<OpenLayers.Pixel>} The center of the bounds in pixel space.
     */
    getCenterPixel:function() {
        return new OpenLayers.Pixel( (this.left + this.right) / 2,
                                     (this.bottom + this.top) / 2);
    },

    /**
     * APIMethod: getCenterLonLat
     * 
     * Returns:
     * {<OpenLayers.LonLat>} The center of the bounds in map space.
     */
    getCenterLonLat:function() {
        if(!this.centerLonLat) {
            this.centerLonLat = new OpenLayers.LonLat(
                (this.left + this.right) / 2, (this.bottom + this.top) / 2
            );
        }
        return this.centerLonLat;
    },

    /**
     * APIMethod: scale
     * Scales the bounds around a pixel or lonlat. Note that the new 
     *     bounds may return non-integer properties, even if a pixel
     *     is passed. 
     * 
     * Parameters:
     * ratio - {Float} 
     * origin - {<OpenLayers.Pixel> or <OpenLayers.LonLat>}
     *          Default is center.
     *
     * Returns:
     * {<OpenLayers.Bounds>} A new bounds that is scaled by ratio
     *                      from origin.
     */
    scale: function(ratio, origin){
        if(origin == null){
            origin = this.getCenterLonLat();
        }
        
        var origx,origy;

        // get origin coordinates
        if(origin.CLASS_NAME == "OpenLayers.LonLat"){
            origx = origin.lon;
            origy = origin.lat;
        } else {
            origx = origin.x;
            origy = origin.y;
        }

        var left = (this.left - origx) * ratio + origx;
        var bottom = (this.bottom - origy) * ratio + origy;
        var right = (this.right - origx) * ratio + origx;
        var top = (this.top - origy) * ratio + origy;
        
        return new OpenLayers.Bounds(left, bottom, right, top);
    },

    /**
     * APIMethod: add
     * 
     * Parameters:
     * x - {Float}
     * y - {Float}
     * 
     * Returns:
     * {<OpenLayers.Bounds>} A new bounds whose coordinates are the same as
     *     this, but shifted by the passed-in x and y values.
     */
    add:function(x, y) {
        if ( (x == null) || (y == null) ) {
            throw new TypeError('Bounds.add cannot receive null values');
        }
        return new OpenLayers.Bounds(this.left + x, this.bottom + y,
                                     this.right + x, this.top + y);
    },
    
    /**
     * APIMethod: extend
     * Extend the bounds to include the point, lonlat, or bounds specified.
     *     Note, this function assumes that left < right and bottom < top.
     * 
     * Parameters: 
     * object - {Object} Can be LonLat, Point, or Bounds
     */
    extend:function(object) {
        var bounds = null;
        if (object) {
            // clear cached center location
            switch(object.CLASS_NAME) {
                case "OpenLayers.LonLat":    
                    bounds = new OpenLayers.Bounds(object.lon, object.lat,
                                                    object.lon, object.lat);
                    break;
                case "OpenLayers.Geometry.Point":
                    bounds = new OpenLayers.Bounds(object.x, object.y,
                                                    object.x, object.y);
                    break;
                    
                case "OpenLayers.Bounds":    
                    bounds = object;
                    break;
            }
    
            if (bounds) {
                this.centerLonLat = null;
                if ( (this.left == null) || (bounds.left < this.left)) {
                    this.left = bounds.left;
                }
                if ( (this.bottom == null) || (bounds.bottom < this.bottom) ) {
                    this.bottom = bounds.bottom;
                } 
                if ( (this.right == null) || (bounds.right > this.right) ) {
                    this.right = bounds.right;
                }
                if ( (this.top == null) || (bounds.top > this.top) ) { 
                    this.top = bounds.top;
                }
            }
        }
    },

    /**
     * APIMethod: containsLonLat
     * 
     * Parameters:
     * ll - {<OpenLayers.LonLat>|Object} OpenLayers.LonLat or an
     *     object with a 'lon' and 'lat' properties.
     * options - {Object} Optional parameters
     *
     * Acceptable options:
     * inclusive - {Boolean} Whether or not to include the border.
     *     Default is true.
     * worldBounds - {<OpenLayers.Bounds>} If a worldBounds is provided, the
     *     ll will be considered as contained if it exceeds the world bounds,
     *     but can be wrapped around the dateline so it is contained by this
     *     bounds.
     *
     * Returns:
     * {Boolean} The passed-in lonlat is within this bounds.
     */
    containsLonLat: function(ll, options) {
        if (typeof options === "boolean") {
            options =  {inclusive: options};
        }
        options = options || {};
        var contains = this.contains(ll.lon, ll.lat, options.inclusive),
            worldBounds = options.worldBounds;
        if (worldBounds && !contains) {
            var worldWidth = worldBounds.getWidth();
            var worldCenterX = (worldBounds.left + worldBounds.right) / 2;
            var worldsAway = Math.round((ll.lon - worldCenterX) / worldWidth);
            contains = this.containsLonLat({
                lon: ll.lon - worldsAway * worldWidth,
                lat: ll.lat
            }, {inclusive: options.inclusive});
        }
        return contains;
    },

    /**
     * APIMethod: containsPixel
     * 
     * Parameters:
     * px - {<OpenLayers.Pixel>}
     * inclusive - {Boolean} Whether or not to include the border. Default is
     *     true.
     *
     * Returns:
     * {Boolean} The passed-in pixel is within this bounds.
     */
    containsPixel:function(px, inclusive) {
        return this.contains(px.x, px.y, inclusive);
    },
    
    /**
     * APIMethod: contains
     * 
     * Parameters:
     * x - {Float}
     * y - {Float}
     * inclusive - {Boolean} Whether or not to include the border. Default is
     *     true.
     *
     * Returns:
     * {Boolean} Whether or not the passed-in coordinates are within this
     *     bounds.
     */
    contains:function(x, y, inclusive) {
        //set default
        if (inclusive == null) {
            inclusive = true;
        }

        if (x == null || y == null) {
            return false;
        }

        x = OpenLayers.Util.toFloat(x);
        y = OpenLayers.Util.toFloat(y);

        var contains = false;
        if (inclusive) {
            contains = ((x >= this.left) && (x <= this.right) && 
                        (y >= this.bottom) && (y <= this.top));
        } else {
            contains = ((x > this.left) && (x < this.right) && 
                        (y > this.bottom) && (y < this.top));
        }              
        return contains;
    },

    /**
     * APIMethod: intersectsBounds
     * Determine whether the target bounds intersects this bounds.  Bounds are
     *     considered intersecting if any of their edges intersect or if one
     *     bounds contains the other.
     * 
     * Parameters:
     * bounds - {<OpenLayers.Bounds>} The target bounds.
     * options - {Object} Optional parameters.
     * 
     * Acceptable options:
     * inclusive - {Boolean} Treat coincident borders as intersecting.  Default
     *     is true.  If false, bounds that do not overlap but only touch at the
     *     border will not be considered as intersecting.
     * worldBounds - {<OpenLayers.Bounds>} If a worldBounds is provided, two
     *     bounds will be considered as intersecting if they intersect when 
     *     shifted to within the world bounds.  This applies only to bounds that
     *     cross or are completely outside the world bounds.
     *
     * Returns:
     * {Boolean} The passed-in bounds object intersects this bounds.
     */
    intersectsBounds:function(bounds, options) {
        if (typeof options === "boolean") {
            options =  {inclusive: options};
        }
        options = options || {};
        if (options.worldBounds) {
            var self = this.wrapDateLine(options.worldBounds);
            bounds = bounds.wrapDateLine(options.worldBounds);
        } else {
            self = this;
        }
        if (options.inclusive == null) {
            options.inclusive = true;
        }
        var intersects = false;
        var mightTouch = (
            self.left == bounds.right ||
            self.right == bounds.left ||
            self.top == bounds.bottom ||
            self.bottom == bounds.top
        );
        
        // if the two bounds only touch at an edge, and inclusive is false,
        // then the bounds don't *really* intersect.
        if (options.inclusive || !mightTouch) {
            // otherwise, if one of the boundaries even partially contains another,
            // inclusive of the edges, then they do intersect.
            var inBottom = (
                ((bounds.bottom >= self.bottom) && (bounds.bottom <= self.top)) ||
                ((self.bottom >= bounds.bottom) && (self.bottom <= bounds.top))
            );
            var inTop = (
                ((bounds.top >= self.bottom) && (bounds.top <= self.top)) ||
                ((self.top > bounds.bottom) && (self.top < bounds.top))
            );
            var inLeft = (
                ((bounds.left >= self.left) && (bounds.left <= self.right)) ||
                ((self.left >= bounds.left) && (self.left <= bounds.right))
            );
            var inRight = (
                ((bounds.right >= self.left) && (bounds.right <= self.right)) ||
                ((self.right >= bounds.left) && (self.right <= bounds.right))
            );
            intersects = ((inBottom || inTop) && (inLeft || inRight));
        }
        // document me
        if (options.worldBounds && !intersects) {
            var world = options.worldBounds;
            var width = world.getWidth();
            var selfCrosses = !world.containsBounds(self);
            var boundsCrosses = !world.containsBounds(bounds);
            if (selfCrosses && !boundsCrosses) {
                bounds = bounds.add(-width, 0);
                intersects = self.intersectsBounds(bounds, {inclusive: options.inclusive});
            } else if (boundsCrosses && !selfCrosses) {
                self = self.add(-width, 0);
                intersects = bounds.intersectsBounds(self, {inclusive: options.inclusive});                
            }
        }
        return intersects;
    },
    
    /**
     * APIMethod: containsBounds
     * Determine whether the target bounds is contained within this bounds.
     * 
     * bounds - {<OpenLayers.Bounds>} The target bounds.
     * partial - {Boolean} If any of the target corners is within this bounds
     *     consider the bounds contained.  Default is false.  If false, the
     *     entire target bounds must be contained within this bounds.
     * inclusive - {Boolean} Treat shared edges as contained.  Default is
     *     true.
     *
     * Returns:
     * {Boolean} The passed-in bounds object is contained within this bounds. 
     */
    containsBounds:function(bounds, partial, inclusive) {
        if (partial == null) {
            partial = false;
        }
        if (inclusive == null) {
            inclusive = true;
        }
        var bottomLeft  = this.contains(bounds.left, bounds.bottom, inclusive);
        var bottomRight = this.contains(bounds.right, bounds.bottom, inclusive);
        var topLeft  = this.contains(bounds.left, bounds.top, inclusive);
        var topRight = this.contains(bounds.right, bounds.top, inclusive);
        
        return (partial) ? (bottomLeft || bottomRight || topLeft || topRight)
                         : (bottomLeft && bottomRight && topLeft && topRight);
    },

    /** 
     * APIMethod: determineQuadrant
     * 
     * Parameters:
     * lonlat - {<OpenLayers.LonLat>}
     * 
     * Returns:
     * {String} The quadrant ("br" "tr" "tl" "bl") of the bounds in which the
     *     coordinate lies.
     */
    determineQuadrant: function(lonlat) {
    
        var quadrant = "";
        var center = this.getCenterLonLat();
        
        quadrant += (lonlat.lat < center.lat) ? "b" : "t";
        quadrant += (lonlat.lon < center.lon) ? "l" : "r";
    
        return quadrant; 
    },
    
    /**
     * APIMethod: transform
     * Transform the Bounds object from source to dest. 
     *
     * Parameters: 
     * source - {<OpenLayers.Projection>} Source projection. 
     * dest   - {<OpenLayers.Projection>} Destination projection. 
     *
     * Returns:
     * {<OpenLayers.Bounds>} Itself, for use in chaining operations.
     */
    transform: function(source, dest) {
        // clear cached center location
        this.centerLonLat = null;
        var ll = OpenLayers.Projection.transform(
            {'x': this.left, 'y': this.bottom}, source, dest);
        var lr = OpenLayers.Projection.transform(
            {'x': this.right, 'y': this.bottom}, source, dest);
        var ul = OpenLayers.Projection.transform(
            {'x': this.left, 'y': this.top}, source, dest);
        var ur = OpenLayers.Projection.transform(
            {'x': this.right, 'y': this.top}, source, dest);
        this.left   = Math.min(ll.x, ul.x);
        this.bottom = Math.min(ll.y, lr.y);
        this.right  = Math.max(lr.x, ur.x);
        this.top    = Math.max(ul.y, ur.y);
        return this;
    },

    /**
     * APIMethod: wrapDateLine
     *  
     * Parameters:
     * maxExtent - {<OpenLayers.Bounds>}
     * options - {Object} Some possible options are:
     *
     * Allowed Options:
     *                    leftTolerance - {float} Allow for a margin of error 
     *                                            with the 'left' value of this 
     *                                            bound.
     *                                            Default is 0.
     *                    rightTolerance - {float} Allow for a margin of error 
     *                                             with the 'right' value of 
     *                                             this bound.
     *                                             Default is 0.
     * 
     * Returns:
     * {<OpenLayers.Bounds>} A copy of this bounds, but wrapped around the 
     *                       "dateline" (as specified by the borders of 
     *                       maxExtent). Note that this function only returns 
     *                       a different bounds value if this bounds is 
     *                       *entirely* outside of the maxExtent. If this 
     *                       bounds straddles the dateline (is part in/part 
     *                       out of maxExtent), the returned bounds will always 
     *                       cross the left edge of the given maxExtent.
     *.
     */
    wrapDateLine: function(maxExtent, options) {    
        options = options || {};
        
        var leftTolerance = options.leftTolerance || 0;
        var rightTolerance = options.rightTolerance || 0;

        var newBounds = this.clone();
    
        if (maxExtent) {
            var width = maxExtent.getWidth();

            //shift right?
            while (newBounds.left < maxExtent.left && 
                   newBounds.right - rightTolerance <= maxExtent.left ) { 
                newBounds = newBounds.add(width, 0);
            }

            //shift left?
            while (newBounds.left + leftTolerance >= maxExtent.right && 
                   newBounds.right > maxExtent.right ) { 
                newBounds = newBounds.add(-width, 0);
            }
           
            // crosses right only? force left
            var newLeft = newBounds.left + leftTolerance;
            if (newLeft < maxExtent.right && newLeft > maxExtent.left && 
                   newBounds.right - rightTolerance > maxExtent.right) {
                newBounds = newBounds.add(-width, 0);
            }
        }
                
        return newBounds;
    },

    CLASS_NAME: "OpenLayers.Bounds"
});

/** 
 * APIFunction: fromString
 * Alternative constructor that builds a new OpenLayers.Bounds from a 
 *     parameter string
 * 
 * Parameters: 
 * str - {String}Comma-separated bounds string. (e.g. <i>"5,42,10,45"</i>)
 * reverseAxisOrder - {Boolean} Does the string use reverse axis order?
 * 
 * Returns:
 * {<OpenLayers.Bounds>} New bounds object built from the 
 *                       passed-in String.
 */
OpenLayers.Bounds.fromString = function(str, reverseAxisOrder) {
    var bounds = str.split(",");
    return OpenLayers.Bounds.fromArray(bounds, reverseAxisOrder);
};

/** 
 * APIFunction: fromArray
 * Alternative constructor that builds a new OpenLayers.Bounds
 *     from an array
 * 
 * Parameters:
 * bbox - {Array(Float)} Array of bounds values (e.g. <i>[5,42,10,45]</i>)
 * reverseAxisOrder - {Boolean} Does the array use reverse axis order?
 *
 * Returns:
 * {<OpenLayers.Bounds>} New bounds object built from the passed-in Array.
 */
OpenLayers.Bounds.fromArray = function(bbox, reverseAxisOrder) {
    return reverseAxisOrder === true ?
           new OpenLayers.Bounds(bbox[1], bbox[0], bbox[3], bbox[2]) :
           new OpenLayers.Bounds(bbox[0], bbox[1], bbox[2], bbox[3]);
};

/** 
 * APIFunction: fromSize
 * Alternative constructor that builds a new OpenLayers.Bounds
 *     from a size
 * 
 * Parameters:
 * size - {<OpenLayers.Size>|Object} OpenLayers.Size or an object with
 *     a 'w' and 'h' properties.
 *
 * Returns:
 * {<OpenLayers.Bounds>} New bounds object built from the passed-in size.
 */
OpenLayers.Bounds.fromSize = function(size) {
    return new OpenLayers.Bounds(0,
                                 size.h,
                                 size.w,
                                 0);
};

/**
 * Function: oppositeQuadrant
 * Get the opposite quadrant for a given quadrant string.
 *
 * Parameters:
 * quadrant - {String} two character quadrant shortstring
 *
 * Returns:
 * {String} The opposing quadrant ("br" "tr" "tl" "bl"). For Example, if 
 *          you pass in "bl" it returns "tr", if you pass in "br" it 
 *          returns "tl", etc.
 */
OpenLayers.Bounds.oppositeQuadrant = function(quadrant) {
    var opp = "";
    
    opp += (quadrant.charAt(0) == 't') ? 'b' : 't';
    opp += (quadrant.charAt(1) == 'l') ? 'r' : 'l';
    
    return opp;
};


/* Copyright (c) 2006-2012 by OpenLayers Contributors (see authors.txt for 
 * full list of contributors). Published under the 2-clause BSD license.
 * See license.txt in the OpenLayers distribution or repository for the
 * full text of the license. */

/**
 * @requires OpenLayers/BaseTypes/Class.js
 */

/**
 * Class: OpenLayers.LonLat
 * This class represents a longitude and latitude pair
 */
OpenLayers.LonLat = OpenLayers.Class({

    /** 
     * APIProperty: lon
     * {Float} The x-axis coodinate in map units
     */
    lon: 0.0,
    
    /** 
     * APIProperty: lat
     * {Float} The y-axis coordinate in map units
     */
    lat: 0.0,

    /**
     * Constructor: OpenLayers.LonLat
     * Create a new map location. Coordinates can be passed either as two
     * arguments, or as a single argument.
     *
     * Parameters (two arguments):
     * lon - {Number} The x-axis coordinate in map units.  If your map is in
     *     a geographic projection, this will be the Longitude.  Otherwise,
     *     it will be the x coordinate of the map location in your map units.
     * lat - {Number} The y-axis coordinate in map units.  If your map is in
     *     a geographic projection, this will be the Latitude.  Otherwise,
     *     it will be the y coordinate of the map location in your map units.
     *
     * Parameters (single argument):
     * location - {Array(Float)} [lon, lat]
     */
    initialize: function(lon, lat) {
        if (OpenLayers.Util.isArray(lon)) {
            lat = lon[1];
            lon = lon[0];
        }
        this.lon = OpenLayers.Util.toFloat(lon);
        this.lat = OpenLayers.Util.toFloat(lat);
    },
    
    /**
     * Method: toString
     * Return a readable string version of the lonlat
     *
     * Returns:
     * {String} String representation of OpenLayers.LonLat object. 
     *           (e.g. <i>"lon=5,lat=42"</i>)
     */
    toString:function() {
        return ("lon=" + this.lon + ",lat=" + this.lat);
    },

    /** 
     * APIMethod: toShortString
     * 
     * Returns:
     * {String} Shortened String representation of OpenLayers.LonLat object. 
     *         (e.g. <i>"5, 42"</i>)
     */
    toShortString:function() {
        return (this.lon + ", " + this.lat);
    },

    /** 
     * APIMethod: clone
     * 
     * Returns:
     * {<OpenLayers.LonLat>} New OpenLayers.LonLat object with the same lon 
     *                       and lat values
     */
    clone:function() {
        return new OpenLayers.LonLat(this.lon, this.lat);
    },

    /** 
     * APIMethod: add
     * 
     * Parameters:
     * lon - {Float}
     * lat - {Float}
     * 
     * Returns:
     * {<OpenLayers.LonLat>} A new OpenLayers.LonLat object with the lon and 
     *                       lat passed-in added to this's. 
     */
    add:function(lon, lat) {
        if ( (lon == null) || (lat == null) ) {
            throw new TypeError('LonLat.add cannot receive null values');
        }
        return new OpenLayers.LonLat(this.lon + OpenLayers.Util.toFloat(lon), 
                                     this.lat + OpenLayers.Util.toFloat(lat));
    },

    /** 
     * APIMethod: equals
     * 
     * Parameters:
     * ll - {<OpenLayers.LonLat>}
     * 
     * Returns:
     * {Boolean} Boolean value indicating whether the passed-in 
     *           <OpenLayers.LonLat> object has the same lon and lat 
     *           components as this.
     *           Note: if ll passed in is null, returns false
     */
    equals:function(ll) {
        var equals = false;
        if (ll != null) {
            equals = ((this.lon == ll.lon && this.lat == ll.lat) ||
                      (isNaN(this.lon) && isNaN(this.lat) && isNaN(ll.lon) && isNaN(ll.lat)));
        }
        return equals;
    },

    /**
     * APIMethod: transform
     * Transform the LonLat object from source to dest. This transformation is
     *    *in place*: if you want a *new* lonlat, use .clone() first.
     *
     * Parameters: 
     * source - {<OpenLayers.Projection>} Source projection. 
     * dest   - {<OpenLayers.Projection>} Destination projection. 
     *
     * Returns:
     * {<OpenLayers.LonLat>} Itself, for use in chaining operations.
     */
    transform: function(source, dest) {
        var point = OpenLayers.Projection.transform(
            {'x': this.lon, 'y': this.lat}, source, dest);
        this.lon = point.x;
        this.lat = point.y;
        return this;
    },
    
    /**
     * APIMethod: wrapDateLine
     * 
     * Parameters:
     * maxExtent - {<OpenLayers.Bounds>}
     * 
     * Returns:
     * {<OpenLayers.LonLat>} A copy of this lonlat, but wrapped around the 
     *                       "dateline" (as specified by the borders of 
     *                       maxExtent)
     */
    wrapDateLine: function(maxExtent) {    

        var newLonLat = this.clone();
    
        if (maxExtent) {
            //shift right?
            while (newLonLat.lon < maxExtent.left) {
                newLonLat.lon +=  maxExtent.getWidth();
            }    
           
            //shift left?
            while (newLonLat.lon > maxExtent.right) {
                newLonLat.lon -= maxExtent.getWidth();
            }    
        }
                
        return newLonLat;
    },

    CLASS_NAME: "OpenLayers.LonLat"
});

/** 
 * Function: fromString
 * Alternative constructor that builds a new <OpenLayers.LonLat> from a 
 *     parameter string
 * 
 * Parameters:
 * str - {String} Comma-separated Lon,Lat coordinate string. 
 *                 (e.g. <i>"5,40"</i>)
 * 
 * Returns:
 * {<OpenLayers.LonLat>} New <OpenLayers.LonLat> object built from the 
 *                       passed-in String.
 */
OpenLayers.LonLat.fromString = function(str) {
    var pair = str.split(",");
    return new OpenLayers.LonLat(pair[0], pair[1]);
};

/** 
 * Function: fromArray
 * Alternative constructor that builds a new <OpenLayers.LonLat> from an 
 *     array of two numbers that represent lon- and lat-values.
 * 
 * Parameters:
 * arr - {Array(Float)} Array of lon/lat values (e.g. [5,-42])
 * 
 * Returns:
 * {<OpenLayers.LonLat>} New <OpenLayers.LonLat> object built from the 
 *                       passed-in array.
 */
OpenLayers.LonLat.fromArray = function(arr) {
    var gotArr = OpenLayers.Util.isArray(arr),
        lon = gotArr && arr[0],
        lat = gotArr && arr[1];
    return new OpenLayers.LonLat(lon, lat);
};


/* Copyright (c) 2006-2012 by OpenLayers Contributors (see authors.txt for 
 * full list of contributors). Published under the 2-clause BSD license.
 * See license.txt in the OpenLayers distribution or repository for the
 * full text of the license. */

/**
 * @requires OpenLayers/BaseTypes/Class.js
 */

/**
 * Class: OpenLayers.Pixel
 * This class represents a screen coordinate, in x and y coordinates
 */
OpenLayers.Pixel = OpenLayers.Class({
    
    /**
     * APIProperty: x
     * {Number} The x coordinate
     */
    x: 0.0,

    /**
     * APIProperty: y
     * {Number} The y coordinate
     */
    y: 0.0,
    
    /**
     * Constructor: OpenLayers.Pixel
     * Create a new OpenLayers.Pixel instance
     *
     * Parameters:
     * x - {Number} The x coordinate
     * y - {Number} The y coordinate
     *
     * Returns:
     * An instance of OpenLayers.Pixel
     */
    initialize: function(x, y) {
        this.x = parseFloat(x);
        this.y = parseFloat(y);
    },
    
    /**
     * Method: toString
     * Cast this object into a string
     *
     * Returns:
     * {String} The string representation of Pixel. ex: "x=200.4,y=242.2"
     */
    toString:function() {
        return ("x=" + this.x + ",y=" + this.y);
    },

    /**
     * APIMethod: clone
     * Return a clone of this pixel object
     *
     * Returns:
     * {<OpenLayers.Pixel>} A clone pixel
     */
    clone:function() {
        return new OpenLayers.Pixel(this.x, this.y); 
    },
    
    /**
     * APIMethod: equals
     * Determine whether one pixel is equivalent to another
     *
     * Parameters:
     * px - {<OpenLayers.Pixel>|Object} An OpenLayers.Pixel or an object with
     *                                  a 'x' and 'y' properties.
     *
     * Returns:
     * {Boolean} The point passed in as parameter is equal to this. Note that
     * if px passed in is null, returns false.
     */
    equals:function(px) {
        var equals = false;
        if (px != null) {
            equals = ((this.x == px.x && this.y == px.y) ||
                      (isNaN(this.x) && isNaN(this.y) && isNaN(px.x) && isNaN(px.y)));
        }
        return equals;
    },

    /**
     * APIMethod: distanceTo
     * Returns the distance to the pixel point passed in as a parameter.
     *
     * Parameters:
     * px - {<OpenLayers.Pixel>}
     *
     * Returns:
     * {Float} The pixel point passed in as parameter to calculate the
     *     distance to.
     */
    distanceTo:function(px) {
        return Math.sqrt(
            Math.pow(this.x - px.x, 2) +
            Math.pow(this.y - px.y, 2)
        );
    },

    /**
     * APIMethod: add
     *
     * Parameters:
     * x - {Integer}
     * y - {Integer}
     *
     * Returns:
     * {<OpenLayers.Pixel>} A new Pixel with this pixel's x&y augmented by the 
     * values passed in.
     */
    add:function(x, y) {
        if ( (x == null) || (y == null) ) {
            throw new TypeError('Pixel.add cannot receive null values');
        }
        return new OpenLayers.Pixel(this.x + x, this.y + y);
    },

    /**
    * APIMethod: offset
    * 
    * Parameters
    * px - {<OpenLayers.Pixel>|Object} An OpenLayers.Pixel or an object with
    *                                  a 'x' and 'y' properties.
    * 
    * Returns:
    * {<OpenLayers.Pixel>} A new Pixel with this pixel's x&y augmented by the 
    *                      x&y values of the pixel passed in.
    */
    offset:function(px) {
        var newPx = this.clone();
        if (px) {
            newPx = this.add(px.x, px.y);
        }
        return newPx;
    },

    CLASS_NAME: "OpenLayers.Pixel"
});

/* Copyright (c) 2006-2012 by OpenLayers Contributors (see authors.txt for 
 * full list of contributors). Published under the 2-clause BSD license.
 * See license.txt in the OpenLayers distribution or repository for the
 * full text of the license. */

/**
 * @requires OpenLayers/BaseTypes/Class.js
 */

/**
 * Class: OpenLayers.Size
 * Instances of this class represent a width/height pair
 */
OpenLayers.Size = OpenLayers.Class({

    /**
     * APIProperty: w
     * {Number} width
     */
    w: 0.0,
    
    /**
     * APIProperty: h
     * {Number} height
     */
    h: 0.0,


    /**
     * Constructor: OpenLayers.Size
     * Create an instance of OpenLayers.Size
     *
     * Parameters:
     * w - {Number} width
     * h - {Number} height
     */
    initialize: function(w, h) {
        this.w = parseFloat(w);
        this.h = parseFloat(h);
    },

    /**
     * Method: toString
     * Return the string representation of a size object
     *
     * Returns:
     * {String} The string representation of OpenLayers.Size object. 
     * (e.g. <i>"w=55,h=66"</i>)
     */
    toString:function() {
        return ("w=" + this.w + ",h=" + this.h);
    },

    /**
     * APIMethod: clone
     * Create a clone of this size object
     *
     * Returns:
     * {<OpenLayers.Size>} A new OpenLayers.Size object with the same w and h
     * values
     */
    clone:function() {
        return new OpenLayers.Size(this.w, this.h);
    },

    /**
     *
     * APIMethod: equals
     * Determine where this size is equal to another
     *
     * Parameters:
     * sz - {<OpenLayers.Size>|Object} An OpenLayers.Size or an object with
     *                                  a 'w' and 'h' properties.
     *
     * Returns: 
     * {Boolean} The passed in size has the same h and w properties as this one.
     * Note that if sz passed in is null, returns false.
     */
    equals:function(sz) {
        var equals = false;
        if (sz != null) {
            equals = ((this.w == sz.w && this.h == sz.h) ||
                      (isNaN(this.w) && isNaN(this.h) && isNaN(sz.w) && isNaN(sz.h)));
        }
        return equals;
    },

    CLASS_NAME: "OpenLayers.Size"
});


/* Copyright (c) 2006-2012 by OpenLayers Contributors (see authors.txt for 
 * full list of contributors). Published under the 2-clause BSD license.
 * See license.txt in the OpenLayers distribution or repository for the
 * full text of the license. */

/**
 * @requires OpenLayers/BaseTypes.js
 * @requires OpenLayers/BaseTypes/Bounds.js
 * @requires OpenLayers/BaseTypes/Element.js
 * @requires OpenLayers/BaseTypes/LonLat.js
 * @requires OpenLayers/BaseTypes/Pixel.js
 * @requires OpenLayers/BaseTypes/Size.js
 * @requires OpenLayers/Lang.js
 */

/**
 * Namespace: Util
 */
OpenLayers.Util = OpenLayers.Util || {};

/** 
 * Function: getElement
 * This is the old $() from prototype
 *
 * Parameters:
 * e - {String or DOMElement or Window}
 *
 * Returns:
 * {Array(DOMElement) or DOMElement}
 */
OpenLayers.Util.getElement = function() {
    var elements = [];

    for (var i=0, len=arguments.length; i<len; i++) {
        var element = arguments[i];
        if (typeof element == 'string') {
            element = document.getElementById(element);
        }
        if (arguments.length == 1) {
            return element;
        }
        elements.push(element);
    }
    return elements;
};

/**
 * Function: isElement
 * A cross-browser implementation of "e instanceof Element".
 *
 * Parameters:
 * o - {Object} The object to test.
 *
 * Returns:
 * {Boolean}
 */
OpenLayers.Util.isElement = function(o) {
    return !!(o && o.nodeType === 1);
};

/**
 * Function: isArray
 * Tests that the provided object is an array.
 * This test handles the cross-IFRAME case not caught
 * by "a instanceof Array" and should be used instead.
 * 
 * Parameters:
 * a - {Object} the object test.
 * 
 * Returns:
 * {Boolean} true if the object is an array.
 */
OpenLayers.Util.isArray = function(a) {
	return (Object.prototype.toString.call(a) === '[object Array]');
};

/** 
 * Maintain existing definition of $.
 */
if(typeof window.$  === "undefined") {
    window.$ = OpenLayers.Util.getElement;
}

/** 
 * Function: removeItem
 * Remove an object from an array. Iterates through the array
 *     to find the item, then removes it.
 *
 * Parameters:
 * array - {Array}
 * item - {Object}
 * 
 * Returns:
 * {Array} A reference to the array
 */
OpenLayers.Util.removeItem = function(array, item) {
    for(var i = array.length - 1; i >= 0; i--) {
        if(array[i] == item) {
            array.splice(i,1);
            //break;more than once??
        }
    }
    return array;
};

/** 
 * Function: indexOf
 * Seems to exist already in FF, but not in MOZ.
 * 
 * Parameters:
 * array - {Array}
 * obj - {*}
 * 
 * Returns:
 * {Integer} The index at, which the first object was found in the array.
 *           If not found, returns -1.
 */
OpenLayers.Util.indexOf = function(array, obj) {
    // use the build-in function if available.
    if (typeof array.indexOf == "function") {
        return array.indexOf(obj);
    } else {
        for (var i = 0, len = array.length; i < len; i++) {
            if (array[i] == obj) {
                return i;
            }
        }
        return -1;   
    }
};



/**
 * Function: modifyDOMElement
 * 
 * Modifies many properties of a DOM element all at once.  Passing in 
 * null to an individual parameter will avoid setting the attribute.
 *
 * Parameters:
 * element - {DOMElement} DOM element to modify.
 * id - {String} The element id attribute to set.
 * px - {<OpenLayers.Pixel>|Object} The element left and top position,
 *                                  OpenLayers.Pixel or an object with
 *                                  a 'x' and 'y' properties.
 * sz - {<OpenLayers.Size>|Object} The element width and height,
 *                                 OpenLayers.Size or an object with a
 *                                 'w' and 'h' properties.
 * position - {String}       The position attribute.  eg: absolute, 
 *                           relative, etc.
 * border - {String}         The style.border attribute.  eg:
 *                           solid black 2px
 * overflow - {String}       The style.overview attribute.  
 * opacity - {Float}         Fractional value (0.0 - 1.0)
 */
OpenLayers.Util.modifyDOMElement = function(element, id, px, sz, position, 
                                            border, overflow, opacity) {

    if (id) {
        element.id = id;
    }
    if (px) {
        element.style.left = px.x + "px";
        element.style.top = px.y + "px";
    }
    if (sz) {
        element.style.width = sz.w + "px";
        element.style.height = sz.h + "px";
    }
    if (position) {
        element.style.position = position;
    }
    if (border) {
        element.style.border = border;
    }
    if (overflow) {
        element.style.overflow = overflow;
    }
    if (parseFloat(opacity) >= 0.0 && parseFloat(opacity) < 1.0) {
        element.style.filter = 'alpha(opacity=' + (opacity * 100) + ')';
        element.style.opacity = opacity;
    } else if (parseFloat(opacity) == 1.0) {
        element.style.filter = '';
        element.style.opacity = '';
    }
};

/** 
 * Function: createDiv
 * Creates a new div and optionally set some standard attributes.
 * Null may be passed to each parameter if you do not wish to
 * set a particular attribute.
 * Note - zIndex is NOT set on the resulting div.
 * 
 * Parameters:
 * id - {String} An identifier for this element.  If no id is
 *               passed an identifier will be created 
 *               automatically.
 * px - {<OpenLayers.Pixel>|Object} The element left and top position,
 *                                  OpenLayers.Pixel or an object with
 *                                  a 'x' and 'y' properties.
 * sz - {<OpenLayers.Size>|Object} The element width and height,
 *                                 OpenLayers.Size or an object with a
 *                                 'w' and 'h' properties.
 * imgURL - {String} A url pointing to an image to use as a 
 *                   background image.
 * position - {String} The style.position value. eg: absolute,
 *                     relative etc.
 * border - {String} The the style.border value. 
 *                   eg: 2px solid black
 * overflow - {String} The style.overflow value. Eg. hidden
 * opacity - {Float} Fractional value (0.0 - 1.0)
 * 
 * Returns: 
 * {DOMElement} A DOM Div created with the specified attributes.
 */
OpenLayers.Util.createDiv = function(id, px, sz, imgURL, position, 
                                     border, overflow, opacity) {

    var dom = document.createElement('div');

    if (imgURL) {
        dom.style.backgroundImage = 'url(' + imgURL + ')';
    }

    //set generic properties
    if (!id) {
        id = OpenLayers.Util.createUniqueID("OpenLayersDiv");
    }
    if (!position) {
        position = "absolute";
    }
    OpenLayers.Util.modifyDOMElement(dom, id, px, sz, position, 
                                     border, overflow, opacity);

    return dom;
};

/**
 * Function: createImage
 * Creates an img element with specific attribute values.
 *  
 * Parameters:
 * id - {String} The id field for the img.  If none assigned one will be
 *               automatically generated.
 * px - {<OpenLayers.Pixel>|Object} The element left and top position,
 *                                  OpenLayers.Pixel or an object with
 *                                  a 'x' and 'y' properties.
 * sz - {<OpenLayers.Size>|Object} The element width and height,
 *                                 OpenLayers.Size or an object with a
 *                                 'w' and 'h' properties.
 * imgURL - {String} The url to use as the image source.
 * position - {String} The style.position value.
 * border - {String} The border to place around the image.
 * opacity - {Float} Fractional value (0.0 - 1.0)
 * delayDisplay - {Boolean} If true waits until the image has been
 *                          loaded.
 * 
 * Returns:
 * {DOMElement} A DOM Image created with the specified attributes.
 */
OpenLayers.Util.createImage = function(id, px, sz, imgURL, position, border,
                                       opacity, delayDisplay) {

    var image = document.createElement("img");

    //set generic properties
    if (!id) {
        id = OpenLayers.Util.createUniqueID("OpenLayersDiv");
    }
    if (!position) {
        position = "relative";
    }
    OpenLayers.Util.modifyDOMElement(image, id, px, sz, position, 
                                     border, null, opacity);

    if (delayDisplay) {
        image.style.display = "none";
        function display() {
            image.style.display = "";
            OpenLayers.Event.stopObservingElement(image);
        }
        OpenLayers.Event.observe(image, "load", display);
        OpenLayers.Event.observe(image, "error", display);
    }
    
    //set special properties
    image.style.alt = id;
    image.galleryImg = "no";
    if (imgURL) {
        image.src = imgURL;
    }
        
    return image;
};

/**
 * Property: IMAGE_RELOAD_ATTEMPTS
 * {Integer} How many times should we try to reload an image before giving up?
 *           Default is 0
 */
OpenLayers.IMAGE_RELOAD_ATTEMPTS = 0;

/**
 * Property: alphaHackNeeded
 * {Boolean} true if the png alpha hack is necessary and possible, false otherwise.
 */
OpenLayers.Util.alphaHackNeeded = null;

/**
 * Function: alphaHack
 * Checks whether it's necessary (and possible) to use the png alpha
 * hack which allows alpha transparency for png images under Internet
 * Explorer.
 * 
 * Returns:
 * {Boolean} true if the png alpha hack is necessary and possible, false otherwise.
 */
OpenLayers.Util.alphaHack = function() {
    if (OpenLayers.Util.alphaHackNeeded == null) {
        var arVersion = navigator.appVersion.split("MSIE");
        var version = parseFloat(arVersion[1]);
        var filter = false;
    
        // IEs4Lin dies when trying to access document.body.filters, because 
        // the property is there, but requires a DLL that can't be provided. This
        // means that we need to wrap this in a try/catch so that this can
        // continue.
    
        try { 
            filter = !!(document.body.filters);
        } catch (e) {}    
    
        OpenLayers.Util.alphaHackNeeded = (filter && 
                                           (version >= 5.5) && (version < 7));
    }
    return OpenLayers.Util.alphaHackNeeded;
};

/** 
 * Function: modifyAlphaImageDiv
 * 
 * Parameters:
 * div - {DOMElement} Div containing Alpha-adjusted Image
 * id - {String}
 * px - {<OpenLayers.Pixel>|Object} OpenLayers.Pixel or an object with
 *                                  a 'x' and 'y' properties.
 * sz - {<OpenLayers.Size>|Object} OpenLayers.Size or an object with
 *                                 a 'w' and 'h' properties.
 * imgURL - {String}
 * position - {String}
 * border - {String}
 * sizing - {String} 'crop', 'scale', or 'image'. Default is "scale"
 * opacity - {Float} Fractional value (0.0 - 1.0)
 */ 
OpenLayers.Util.modifyAlphaImageDiv = function(div, id, px, sz, imgURL, 
                                               position, border, sizing, 
                                               opacity) {

    OpenLayers.Util.modifyDOMElement(div, id, px, sz, position,
                                     null, null, opacity);

    var img = div.childNodes[0];

    if (imgURL) {
        img.src = imgURL;
    }
    OpenLayers.Util.modifyDOMElement(img, div.id + "_innerImage", null, sz, 
                                     "relative", border);
    
    if (OpenLayers.Util.alphaHack()) {
        if(div.style.display != "none") {
            div.style.display = "inline-block";
        }
        if (sizing == null) {
            sizing = "scale";
        }
        
        div.style.filter = "progid:DXImageTransform.Microsoft" +
                           ".AlphaImageLoader(src='" + img.src + "', " +
                           "sizingMethod='" + sizing + "')";
        if (parseFloat(div.style.opacity) >= 0.0 && 
            parseFloat(div.style.opacity) < 1.0) {
            div.style.filter += " alpha(opacity=" + div.style.opacity * 100 + ")";
        }

        img.style.filter = "alpha(opacity=0)";
    }
};

/** 
 * Function: createAlphaImageDiv
 * 
 * Parameters:
 * id - {String}
 * px - {<OpenLayers.Pixel>|Object} OpenLayers.Pixel or an object with
 *                                  a 'x' and 'y' properties.
 * sz - {<OpenLayers.Size>|Object} OpenLayers.Size or an object with
 *                                 a 'w' and 'h' properties.
 * imgURL - {String}
 * position - {String}
 * border - {String}
 * sizing - {String} 'crop', 'scale', or 'image'. Default is "scale"
 * opacity - {Float} Fractional value (0.0 - 1.0)
 * delayDisplay - {Boolean} If true waits until the image has been
 *                          loaded.
 * 
 * Returns:
 * {DOMElement} A DOM Div created with a DOM Image inside it. If the hack is 
 *              needed for transparency in IE, it is added.
 */ 
OpenLayers.Util.createAlphaImageDiv = function(id, px, sz, imgURL, 
                                               position, border, sizing, 
                                               opacity, delayDisplay) {
    
    var div = OpenLayers.Util.createDiv();
    var img = OpenLayers.Util.createImage(null, null, null, null, null, null, 
                                          null, delayDisplay);
    img.className = "olAlphaImg";
    div.appendChild(img);

    OpenLayers.Util.modifyAlphaImageDiv(div, id, px, sz, imgURL, position, 
                                        border, sizing, opacity);
    
    return div;
};


/** 
 * Function: upperCaseObject
 * Creates a new hashtable and copies over all the keys from the 
 *     passed-in object, but storing them under an uppercased
 *     version of the key at which they were stored.
 * 
 * Parameters: 
 * object - {Object}
 * 
 * Returns: 
 * {Object} A new Object with all the same keys but uppercased
 */
OpenLayers.Util.upperCaseObject = function (object) {
    var uObject = {};
    for (var key in object) {
        uObject[key.toUpperCase()] = object[key];
    }
    return uObject;
};

/** 
 * Function: applyDefaults
 * Takes an object and copies any properties that don't exist from
 *     another properties, by analogy with OpenLayers.Util.extend() from
 *     Prototype.js.
 * 
 * Parameters:
 * to - {Object} The destination object.
 * from - {Object} The source object.  Any properties of this object that
 *     are undefined in the to object will be set on the to object.
 *
 * Returns:
 * {Object} A reference to the to object.  Note that the to argument is modified
 *     in place and returned by this function.
 */
OpenLayers.Util.applyDefaults = function (to, from) {
    to = to || {};
    /*
     * FF/Windows < 2.0.0.13 reports "Illegal operation on WrappedNative
     * prototype object" when calling hawOwnProperty if the source object is an
     * instance of window.Event.
     */
    var fromIsEvt = typeof window.Event == "function"
                    && from instanceof window.Event;

    for (var key in from) {
        if (to[key] === undefined ||
            (!fromIsEvt && from.hasOwnProperty
             && from.hasOwnProperty(key) && !to.hasOwnProperty(key))) {
            to[key] = from[key];
        }
    }
    /**
     * IE doesn't include the toString property when iterating over an object's
     * properties with the for(property in object) syntax.  Explicitly check if
     * the source has its own toString property.
     */
    if(!fromIsEvt && from && from.hasOwnProperty
       && from.hasOwnProperty('toString') && !to.hasOwnProperty('toString')) {
        to.toString = from.toString;
    }
    
    return to;
};

/**
 * Function: getParameterString
 * 
 * Parameters:
 * params - {Object}
 * 
 * Returns:
 * {String} A concatenation of the properties of an object in 
 *          http parameter notation. 
 *          (ex. <i>"key1=value1&key2=value2&key3=value3"</i>)
 *          If a parameter is actually a list, that parameter will then
 *          be set to a comma-seperated list of values (foo,bar) instead
 *          of being URL escaped (foo%3Abar). 
 */
OpenLayers.Util.getParameterString = function(params) {
    var paramsArray = [];
    
    for (var key in params) {
      var value = params[key];
      if ((value != null) && (typeof value != 'function')) {
        var encodedValue;
        if (typeof value == 'object' && value.constructor == Array) {
          /* value is an array; encode items and separate with "," */
          var encodedItemArray = [];
          var item;
          for (var itemIndex=0, len=value.length; itemIndex<len; itemIndex++) {
            item = value[itemIndex];
            encodedItemArray.push(encodeURIComponent(
                (item === null || item === undefined) ? "" : item)
            );
          }
          encodedValue = encodedItemArray.join(",");
        }
        else {
          /* value is a string; simply encode */
          encodedValue = encodeURIComponent(value);
        }
        paramsArray.push(encodeURIComponent(key) + "=" + encodedValue);
      }
    }
    
    return paramsArray.join("&");
};

/**
 * Function: urlAppend
 * Appends a parameter string to a url. This function includes the logic for
 * using the appropriate character (none, & or ?) to append to the url before
 * appending the param string.
 * 
 * Parameters:
 * url - {String} The url to append to
 * paramStr - {String} The param string to append
 * 
 * Returns:
 * {String} The new url
 */
OpenLayers.Util.urlAppend = function(url, paramStr) {
    var newUrl = url;
    if(paramStr) {
        var parts = (url + " ").split(/[?&]/);
        newUrl += (parts.pop() === " " ?
            paramStr :
            parts.length ? "&" + paramStr : "?" + paramStr);
    }
    return newUrl;
};

/** 
 * Function: getImagesLocation
 * 
 * Returns:
 * {String} The fully formatted image location string
 */
OpenLayers.Util.getImagesLocation = function() {
    return OpenLayers.ImgPath || (OpenLayers._getScriptLocation() + "img/");
};

/** 
 * Function: getImageLocation
 * 
 * Returns:
 * {String} The fully formatted location string for a specified image
 */
OpenLayers.Util.getImageLocation = function(image) {
    return OpenLayers.Util.getImagesLocation() + image;
};


/** 
 * Function: Try
 * Execute functions until one of them doesn't throw an error. 
 *     Capitalized because "try" is a reserved word in JavaScript.
 *     Taken directly from OpenLayers.Util.Try()
 * 
 * Parameters:
 * [*] - {Function} Any number of parameters may be passed to Try()
 *    It will attempt to execute each of them until one of them 
 *    successfully executes. 
 *    If none executes successfully, returns null.
 * 
 * Returns:
 * {*} The value returned by the first successfully executed function.
 */
OpenLayers.Util.Try = function() {
    var returnValue = null;

    for (var i=0, len=arguments.length; i<len; i++) {
      var lambda = arguments[i];
      try {
        returnValue = lambda();
        break;
      } catch (e) {}
    }

    return returnValue;
};

/**
 * Function: getXmlNodeValue
 * 
 * Parameters:
 * node - {XMLNode}
 * 
 * Returns:
 * {String} The text value of the given node, without breaking in firefox or IE
 */
OpenLayers.Util.getXmlNodeValue = function(node) {
    var val = null;
    OpenLayers.Util.Try( 
        function() {
            val = node.text;
            if (!val) {
                val = node.textContent;
            }
            if (!val) {
                val = node.firstChild.nodeValue;
            }
        }, 
        function() {
            val = node.textContent;
        }); 
    return val;
};

/** 
 * Function: mouseLeft
 * 
 * Parameters:
 * evt - {Event}
 * div - {HTMLDivElement}
 * 
 * Returns:
 * {Boolean}
 */
OpenLayers.Util.mouseLeft = function (evt, div) {
    // start with the element to which the mouse has moved
    var target = (evt.relatedTarget) ? evt.relatedTarget : evt.toElement;
    // walk up the DOM tree.
    while (target != div && target != null) {
        target = target.parentNode;
    }
    // if the target we stop at isn't the div, then we've left the div.
    return (target != div);
};

/**
 * Property: precision
 * {Number} The number of significant digits to retain to avoid
 * floating point precision errors.
 *
 * We use 14 as a "safe" default because, although IEEE 754 double floats
 * (standard on most modern operating systems) support up to about 16
 * significant digits, 14 significant digits are sufficient to represent
 * sub-millimeter accuracy in any coordinate system that anyone is likely to
 * use with OpenLayers.
 *
 * If DEFAULT_PRECISION is set to 0, the original non-truncating behavior
 * of OpenLayers <2.8 is preserved. Be aware that this will cause problems
 * with certain projections, e.g. spherical Mercator.
 *
 */
OpenLayers.Util.DEFAULT_PRECISION = 14;

/**
 * Function: toFloat
 * Convenience method to cast an object to a Number, rounded to the
 * desired floating point precision.
 *
 * Parameters:
 * number    - {Number} The number to cast and round.
 * precision - {Number} An integer suitable for use with
 *      Number.toPrecision(). Defaults to OpenLayers.Util.DEFAULT_PRECISION.
 *      If set to 0, no rounding is performed.
 *
 * Returns:
 * {Number} The cast, rounded number.
 */
OpenLayers.Util.toFloat = function (number, precision) {
    if (precision == null) {
        precision = OpenLayers.Util.DEFAULT_PRECISION;
    }
    if (typeof number !== "number") {
        number = parseFloat(number);
    }
    return precision === 0 ? number :
                             parseFloat(number.toPrecision(precision));
};

/**
 * Function: rad
 * 
 * Parameters:
 * x - {Float}
 * 
 * Returns:
 * {Float}
 */
OpenLayers.Util.rad = function(x) {return x*Math.PI/180;};

/**
 * Function: deg
 *
 * Parameters:
 * x - {Float}
 *
 * Returns:
 * {Float}
 */
OpenLayers.Util.deg = function(x) {return x*180/Math.PI;};

/**
 * Property: VincentyConstants
 * {Object} Constants for Vincenty functions.
 */
OpenLayers.Util.VincentyConstants = {
    a: 6378137,
    b: 6356752.3142,
    f: 1/298.257223563
};

/**
 * APIFunction: distVincenty
 * Given two objects representing points with geographic coordinates, this
 *     calculates the distance between those points on the surface of an
 *     ellipsoid.
 *
 * Parameters:
 * p1 - {<OpenLayers.LonLat>} (or any object with both .lat, .lon properties)
 * p2 - {<OpenLayers.LonLat>} (or any object with both .lat, .lon properties)
 *
 * Returns:
 * {Float} The distance (in km) between the two input points as measured on an
 *     ellipsoid.  Note that the input point objects must be in geographic
 *     coordinates (decimal degrees) and the return distance is in kilometers.
 */
OpenLayers.Util.distVincenty = function(p1, p2) {
    var ct = OpenLayers.Util.VincentyConstants;
    var a = ct.a, b = ct.b, f = ct.f;

    var L = OpenLayers.Util.rad(p2.lon - p1.lon);
    var U1 = Math.atan((1-f) * Math.tan(OpenLayers.Util.rad(p1.lat)));
    var U2 = Math.atan((1-f) * Math.tan(OpenLayers.Util.rad(p2.lat)));
    var sinU1 = Math.sin(U1), cosU1 = Math.cos(U1);
    var sinU2 = Math.sin(U2), cosU2 = Math.cos(U2);
    var lambda = L, lambdaP = 2*Math.PI;
    var iterLimit = 20;
    while (Math.abs(lambda-lambdaP) > 1e-12 && --iterLimit>0) {
        var sinLambda = Math.sin(lambda), cosLambda = Math.cos(lambda);
        var sinSigma = Math.sqrt((cosU2*sinLambda) * (cosU2*sinLambda) +
        (cosU1*sinU2-sinU1*cosU2*cosLambda) * (cosU1*sinU2-sinU1*cosU2*cosLambda));
        if (sinSigma==0) {
            return 0;  // co-incident points
        }
        var cosSigma = sinU1*sinU2 + cosU1*cosU2*cosLambda;
        var sigma = Math.atan2(sinSigma, cosSigma);
        var alpha = Math.asin(cosU1 * cosU2 * sinLambda / sinSigma);
        var cosSqAlpha = Math.cos(alpha) * Math.cos(alpha);
        var cos2SigmaM = cosSigma - 2*sinU1*sinU2/cosSqAlpha;
        var C = f/16*cosSqAlpha*(4+f*(4-3*cosSqAlpha));
        lambdaP = lambda;
        lambda = L + (1-C) * f * Math.sin(alpha) *
        (sigma + C*sinSigma*(cos2SigmaM+C*cosSigma*(-1+2*cos2SigmaM*cos2SigmaM)));
    }
    if (iterLimit==0) {
        return NaN;  // formula failed to converge
    }
    var uSq = cosSqAlpha * (a*a - b*b) / (b*b);
    var A = 1 + uSq/16384*(4096+uSq*(-768+uSq*(320-175*uSq)));
    var B = uSq/1024 * (256+uSq*(-128+uSq*(74-47*uSq)));
    var deltaSigma = B*sinSigma*(cos2SigmaM+B/4*(cosSigma*(-1+2*cos2SigmaM*cos2SigmaM)-
        B/6*cos2SigmaM*(-3+4*sinSigma*sinSigma)*(-3+4*cos2SigmaM*cos2SigmaM)));
    var s = b*A*(sigma-deltaSigma);
    var d = s.toFixed(3)/1000; // round to 1mm precision
    return d;
};

/**
 * APIFunction: destinationVincenty
 * Calculate destination point given start point lat/long (numeric degrees),
 * bearing (numeric degrees) & distance (in m).
 * Adapted from Chris Veness work, see
 * http://www.movable-type.co.uk/scripts/latlong-vincenty-direct.html
 *
 * Parameters:
 * lonlat  - {<OpenLayers.LonLat>} (or any object with both .lat, .lon
 *     properties) The start point.
 * brng     - {Float} The bearing (degrees).
 * dist     - {Float} The ground distance (meters).
 *
 * Returns:
 * {<OpenLayers.LonLat>} The destination point.
 */
OpenLayers.Util.destinationVincenty = function(lonlat, brng, dist) {
    var u = OpenLayers.Util;
    var ct = u.VincentyConstants;
    var a = ct.a, b = ct.b, f = ct.f;

    var lon1 = lonlat.lon;
    var lat1 = lonlat.lat;

    var s = dist;
    var alpha1 = u.rad(brng);
    var sinAlpha1 = Math.sin(alpha1);
    var cosAlpha1 = Math.cos(alpha1);

    var tanU1 = (1-f) * Math.tan(u.rad(lat1));
    var cosU1 = 1 / Math.sqrt((1 + tanU1*tanU1)), sinU1 = tanU1*cosU1;
    var sigma1 = Math.atan2(tanU1, cosAlpha1);
    var sinAlpha = cosU1 * sinAlpha1;
    var cosSqAlpha = 1 - sinAlpha*sinAlpha;
    var uSq = cosSqAlpha * (a*a - b*b) / (b*b);
    var A = 1 + uSq/16384*(4096+uSq*(-768+uSq*(320-175*uSq)));
    var B = uSq/1024 * (256+uSq*(-128+uSq*(74-47*uSq)));

    var sigma = s / (b*A), sigmaP = 2*Math.PI;
    while (Math.abs(sigma-sigmaP) > 1e-12) {
        var cos2SigmaM = Math.cos(2*sigma1 + sigma);
        var sinSigma = Math.sin(sigma);
        var cosSigma = Math.cos(sigma);
        var deltaSigma = B*sinSigma*(cos2SigmaM+B/4*(cosSigma*(-1+2*cos2SigmaM*cos2SigmaM)-
            B/6*cos2SigmaM*(-3+4*sinSigma*sinSigma)*(-3+4*cos2SigmaM*cos2SigmaM)));
        sigmaP = sigma;
        sigma = s / (b*A) + deltaSigma;
    }

    var tmp = sinU1*sinSigma - cosU1*cosSigma*cosAlpha1;
    var lat2 = Math.atan2(sinU1*cosSigma + cosU1*sinSigma*cosAlpha1,
        (1-f)*Math.sqrt(sinAlpha*sinAlpha + tmp*tmp));
    var lambda = Math.atan2(sinSigma*sinAlpha1, cosU1*cosSigma - sinU1*sinSigma*cosAlpha1);
    var C = f/16*cosSqAlpha*(4+f*(4-3*cosSqAlpha));
    var L = lambda - (1-C) * f * sinAlpha *
        (sigma + C*sinSigma*(cos2SigmaM+C*cosSigma*(-1+2*cos2SigmaM*cos2SigmaM)));

    var revAz = Math.atan2(sinAlpha, -tmp);  // final bearing

    return new OpenLayers.LonLat(lon1+u.deg(L), u.deg(lat2));
};

/**
 * Function: getParameters
 * Parse the parameters from a URL or from the current page itself into a 
 *     JavaScript Object. Note that parameter values with commas are separated
 *     out into an Array.
 * 
 * Parameters:
 * url - {String} Optional url used to extract the query string.
 *                If url is null or is not supplied, query string is taken 
 *                from the page location.
 * 
 * Returns:
 * {Object} An object of key/value pairs from the query string.
 */
OpenLayers.Util.getParameters = function(url) {
    // if no url specified, take it from the location bar
    url = (url === null || url === undefined) ? window.location.href : url;

    //parse out parameters portion of url string
    var paramsString = "";
    if (OpenLayers.String.contains(url, '?')) {
        var start = url.indexOf('?') + 1;
        var end = OpenLayers.String.contains(url, "#") ?
                    url.indexOf('#') : url.length;
        paramsString = url.substring(start, end);
    }

    var parameters = {};
    var pairs = paramsString.split(/[&;]/);
    for(var i=0, len=pairs.length; i<len; ++i) {
        var keyValue = pairs[i].split('=');
        if (keyValue[0]) {

            var key = keyValue[0];
            try {
                key = decodeURIComponent(key);
            } catch (err) {
                key = unescape(key);
            }
            
            // being liberal by replacing "+" with " "
            var value = (keyValue[1] || '').replace(/\+/g, " ");

            try {
                value = decodeURIComponent(value);
            } catch (err) {
                value = unescape(value);
            }
            
            // follow OGC convention of comma delimited values
            value = value.split(",");

            //if there's only one value, do not return as array                    
            if (value.length == 1) {
                value = value[0];
            }                
            
            parameters[key] = value;
         }
     }
    return parameters;
};

/**
 * Property: lastSeqID
 * {Integer} The ever-incrementing count variable.
 *           Used for generating unique ids.
 */
OpenLayers.Util.lastSeqID = 0;

/**
 * Function: createUniqueID
 * Create a unique identifier for this session.  Each time this function
 *     is called, a counter is incremented.  The return will be the optional
 *     prefix (defaults to "id_") appended with the counter value.
 * 
 * Parameters:
 * prefix - {String} Optional string to prefix unique id. Default is "id_".
 * 
 * Returns:
 * {String} A unique id string, built on the passed in prefix.
 */
OpenLayers.Util.createUniqueID = function(prefix) {
    if (prefix == null) {
        prefix = "id_";
    }
    OpenLayers.Util.lastSeqID += 1; 
    return prefix + OpenLayers.Util.lastSeqID;        
};

/**
 * Constant: INCHES_PER_UNIT
 * {Object} Constant inches per unit -- borrowed from MapServer mapscale.c
 * derivation of nautical miles from http://en.wikipedia.org/wiki/Nautical_mile
 * Includes the full set of units supported by CS-MAP (http://trac.osgeo.org/csmap/)
 * and PROJ.4 (http://trac.osgeo.org/proj/)
 * The hardcoded table is maintain in a CS-MAP source code module named CSdataU.c
 * The hardcoded table of PROJ.4 units are in pj_units.c.
 */
OpenLayers.INCHES_PER_UNIT = { 
    'inches': 1.0,
    'ft': 12.0,
    'mi': 63360.0,
    'm': 39.3701,
    'km': 39370.1,
    'dd': 4374754,
    'yd': 36
};
OpenLayers.INCHES_PER_UNIT["in"]= OpenLayers.INCHES_PER_UNIT.inches;
OpenLayers.INCHES_PER_UNIT["degrees"] = OpenLayers.INCHES_PER_UNIT.dd;
OpenLayers.INCHES_PER_UNIT["nmi"] = 1852 * OpenLayers.INCHES_PER_UNIT.m;

// Units from CS-Map
OpenLayers.METERS_PER_INCH = 0.02540005080010160020;
OpenLayers.Util.extend(OpenLayers.INCHES_PER_UNIT, {
    "Inch": OpenLayers.INCHES_PER_UNIT.inches,
    "Meter": 1.0 / OpenLayers.METERS_PER_INCH,   //EPSG:9001
    "Foot": 0.30480060960121920243 / OpenLayers.METERS_PER_INCH,   //EPSG:9003
    "IFoot": 0.30480000000000000000 / OpenLayers.METERS_PER_INCH,   //EPSG:9002
    "ClarkeFoot": 0.3047972651151 / OpenLayers.METERS_PER_INCH,   //EPSG:9005
    "SearsFoot": 0.30479947153867624624 / OpenLayers.METERS_PER_INCH,   //EPSG:9041
    "GoldCoastFoot": 0.30479971018150881758 / OpenLayers.METERS_PER_INCH,   //EPSG:9094
    "IInch": 0.02540000000000000000 / OpenLayers.METERS_PER_INCH,
    "MicroInch": 0.00002540000000000000 / OpenLayers.METERS_PER_INCH,
    "Mil": 0.00000002540000000000 / OpenLayers.METERS_PER_INCH,
    "Centimeter": 0.01000000000000000000 / OpenLayers.METERS_PER_INCH,
    "Kilometer": 1000.00000000000000000000 / OpenLayers.METERS_PER_INCH,   //EPSG:9036
    "Yard": 0.91440182880365760731 / OpenLayers.METERS_PER_INCH,
    "SearsYard": 0.914398414616029 / OpenLayers.METERS_PER_INCH,   //EPSG:9040
    "IndianYard": 0.91439853074444079983 / OpenLayers.METERS_PER_INCH,   //EPSG:9084
    "IndianYd37": 0.91439523 / OpenLayers.METERS_PER_INCH,   //EPSG:9085
    "IndianYd62": 0.9143988 / OpenLayers.METERS_PER_INCH,   //EPSG:9086
    "IndianYd75": 0.9143985 / OpenLayers.METERS_PER_INCH,   //EPSG:9087
    "IndianFoot": 0.30479951 / OpenLayers.METERS_PER_INCH,   //EPSG:9080
    "IndianFt37": 0.30479841 / OpenLayers.METERS_PER_INCH,   //EPSG:9081
    "IndianFt62": 0.3047996 / OpenLayers.METERS_PER_INCH,   //EPSG:9082
    "IndianFt75": 0.3047995 / OpenLayers.METERS_PER_INCH,   //EPSG:9083
    "Mile": 1609.34721869443738887477 / OpenLayers.METERS_PER_INCH,
    "IYard": 0.91440000000000000000 / OpenLayers.METERS_PER_INCH,   //EPSG:9096
    "IMile": 1609.34400000000000000000 / OpenLayers.METERS_PER_INCH,   //EPSG:9093
    "NautM": 1852.00000000000000000000 / OpenLayers.METERS_PER_INCH,   //EPSG:9030
    "Lat-66": 110943.316488932731 / OpenLayers.METERS_PER_INCH,
    "Lat-83": 110946.25736872234125 / OpenLayers.METERS_PER_INCH,
    "Decimeter": 0.10000000000000000000 / OpenLayers.METERS_PER_INCH,
    "Millimeter": 0.00100000000000000000 / OpenLayers.METERS_PER_INCH,
    "Dekameter": 10.00000000000000000000 / OpenLayers.METERS_PER_INCH,
    "Decameter": 10.00000000000000000000 / OpenLayers.METERS_PER_INCH,
    "Hectometer": 100.00000000000000000000 / OpenLayers.METERS_PER_INCH,
    "GermanMeter": 1.0000135965 / OpenLayers.METERS_PER_INCH,   //EPSG:9031
    "CaGrid": 0.999738 / OpenLayers.METERS_PER_INCH,
    "ClarkeChain": 20.1166194976 / OpenLayers.METERS_PER_INCH,   //EPSG:9038
    "GunterChain": 20.11684023368047 / OpenLayers.METERS_PER_INCH,   //EPSG:9033
    "BenoitChain": 20.116782494375872 / OpenLayers.METERS_PER_INCH,   //EPSG:9062
    "SearsChain": 20.11676512155 / OpenLayers.METERS_PER_INCH,   //EPSG:9042
    "ClarkeLink": 0.201166194976 / OpenLayers.METERS_PER_INCH,   //EPSG:9039
    "GunterLink": 0.2011684023368047 / OpenLayers.METERS_PER_INCH,   //EPSG:9034
    "BenoitLink": 0.20116782494375872 / OpenLayers.METERS_PER_INCH,   //EPSG:9063
    "SearsLink": 0.2011676512155 / OpenLayers.METERS_PER_INCH,   //EPSG:9043
    "Rod": 5.02921005842012 / OpenLayers.METERS_PER_INCH,
    "IntnlChain": 20.1168 / OpenLayers.METERS_PER_INCH,   //EPSG:9097
    "IntnlLink": 0.201168 / OpenLayers.METERS_PER_INCH,   //EPSG:9098
    "Perch": 5.02921005842012 / OpenLayers.METERS_PER_INCH,
    "Pole": 5.02921005842012 / OpenLayers.METERS_PER_INCH,
    "Furlong": 201.1684023368046 / OpenLayers.METERS_PER_INCH,
    "Rood": 3.778266898 / OpenLayers.METERS_PER_INCH,
    "CapeFoot": 0.3047972615 / OpenLayers.METERS_PER_INCH,
    "Brealey": 375.00000000000000000000 / OpenLayers.METERS_PER_INCH,
    "ModAmFt": 0.304812252984505969011938 / OpenLayers.METERS_PER_INCH,
    "Fathom": 1.8288 / OpenLayers.METERS_PER_INCH,
    "NautM-UK": 1853.184 / OpenLayers.METERS_PER_INCH,
    "50kilometers": 50000.0 / OpenLayers.METERS_PER_INCH,
    "150kilometers": 150000.0 / OpenLayers.METERS_PER_INCH
});

//unit abbreviations supported by PROJ.4
OpenLayers.Util.extend(OpenLayers.INCHES_PER_UNIT, {
    "mm": OpenLayers.INCHES_PER_UNIT["Meter"] / 1000.0,
    "cm": OpenLayers.INCHES_PER_UNIT["Meter"] / 100.0,
    "dm": OpenLayers.INCHES_PER_UNIT["Meter"] * 100.0,
    "km": OpenLayers.INCHES_PER_UNIT["Meter"] * 1000.0,
    "kmi": OpenLayers.INCHES_PER_UNIT["nmi"],    //International Nautical Mile
    "fath": OpenLayers.INCHES_PER_UNIT["Fathom"], //International Fathom
    "ch": OpenLayers.INCHES_PER_UNIT["IntnlChain"],  //International Chain
    "link": OpenLayers.INCHES_PER_UNIT["IntnlLink"], //International Link
    "us-in": OpenLayers.INCHES_PER_UNIT["inches"], //U.S. Surveyor's Inch
    "us-ft": OpenLayers.INCHES_PER_UNIT["Foot"],	//U.S. Surveyor's Foot
    "us-yd": OpenLayers.INCHES_PER_UNIT["Yard"],	//U.S. Surveyor's Yard
    "us-ch": OpenLayers.INCHES_PER_UNIT["GunterChain"], //U.S. Surveyor's Chain
    "us-mi": OpenLayers.INCHES_PER_UNIT["Mile"],   //U.S. Surveyor's Statute Mile
    "ind-yd": OpenLayers.INCHES_PER_UNIT["IndianYd37"],  //Indian Yard
    "ind-ft": OpenLayers.INCHES_PER_UNIT["IndianFt37"],  //Indian Foot
    "ind-ch": 20.11669506 / OpenLayers.METERS_PER_INCH  //Indian Chain
});

/** 
 * Constant: DOTS_PER_INCH
 * {Integer} 72 (A sensible default)
 */
OpenLayers.DOTS_PER_INCH = 72;

/**
 * Function: normalizeScale
 * 
 * Parameters:
 * scale - {float}
 * 
 * Returns:
 * {Float} A normalized scale value, in 1 / X format. 
 *         This means that if a value less than one ( already 1/x) is passed
 *         in, it just returns scale directly. Otherwise, it returns 
 *         1 / scale
 */
OpenLayers.Util.normalizeScale = function (scale) {
    var normScale = (scale > 1.0) ? (1.0 / scale) 
                                  : scale;
    return normScale;
};

/**
 * Function: getResolutionFromScale
 * 
 * Parameters:
 * scale - {Float}
 * units - {String} Index into OpenLayers.INCHES_PER_UNIT hashtable.
 *                  Default is degrees
 * 
 * Returns:
 * {Float} The corresponding resolution given passed-in scale and unit 
 *     parameters.  If the given scale is falsey, the returned resolution will
 *     be undefined.
 */
OpenLayers.Util.getResolutionFromScale = function (scale, units) {
    var resolution;
    if (scale) {
        if (units == null) {
            units = "degrees";
        }
        var normScale = OpenLayers.Util.normalizeScale(scale);
        resolution = 1 / (normScale * OpenLayers.INCHES_PER_UNIT[units]
                                        * OpenLayers.DOTS_PER_INCH);        
    }
    return resolution;
};

/**
 * Function: getScaleFromResolution
 * 
 * Parameters:
 * resolution - {Float}
 * units - {String} Index into OpenLayers.INCHES_PER_UNIT hashtable.
 *                  Default is degrees
 * 
 * Returns:
 * {Float} The corresponding scale given passed-in resolution and unit 
 *         parameters.
 */
OpenLayers.Util.getScaleFromResolution = function (resolution, units) {

    if (units == null) {
        units = "degrees";
    }

    var scale = resolution * OpenLayers.INCHES_PER_UNIT[units] *
                    OpenLayers.DOTS_PER_INCH;
    return scale;
};

/**
 * Function: pagePosition
 * Calculates the position of an element on the page (see
 * http://code.google.com/p/doctype/wiki/ArticlePageOffset)
 *
 * OpenLayers.Util.pagePosition is based on Yahoo's getXY method, which is
 * Copyright (c) 2006, Yahoo! Inc.
 * All rights reserved.
 * 
 * Redistribution and use of this software in source and binary forms, with or
 * without modification, are permitted provided that the following conditions
 * are met:
 * 
 * * Redistributions of source code must retain the above copyright notice,
 *   this list of conditions and the following disclaimer.
 * 
 * * Redistributions in binary form must reproduce the above copyright notice,
 *   this list of conditions and the following disclaimer in the documentation
 *   and/or other materials provided with the distribution.
 * 
 * * Neither the name of Yahoo! Inc. nor the names of its contributors may be
 *   used to endorse or promote products derived from this software without
 *   specific prior written permission of Yahoo! Inc.
 * 
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE 
 * POSSIBILITY OF SUCH DAMAGE.
 *
 * Parameters:
 * forElement - {DOMElement}
 * 
 * Returns:
 * {Array} two item array, Left value then Top value.
 */
OpenLayers.Util.pagePosition =  function(forElement) {
    // NOTE: If element is hidden (display none or disconnected or any the
    // ancestors are hidden) we get (0,0) by default but we still do the
    // accumulation of scroll position.

    var pos = [0, 0];
    var viewportElement = OpenLayers.Util.getViewportElement();
    if (!forElement || forElement == window || forElement == viewportElement) {
        // viewport is always at 0,0 as that defined the coordinate system for
        // this function - this avoids special case checks in the code below
        return pos;
    }

    // Gecko browsers normally use getBoxObjectFor to calculate the position.
    // When invoked for an element with an implicit absolute position though it
    // can be off by one. Therefore the recursive implementation is used in
    // those (relatively rare) cases.
    var BUGGY_GECKO_BOX_OBJECT =
        OpenLayers.IS_GECKO && document.getBoxObjectFor &&
        OpenLayers.Element.getStyle(forElement, 'position') == 'absolute' &&
        (forElement.style.top == '' || forElement.style.left == '');

    var parent = null;
    var box;

    if (forElement.getBoundingClientRect) { // IE
        box = forElement.getBoundingClientRect();
        var scrollTop = viewportElement.scrollTop;
        var scrollLeft = viewportElement.scrollLeft;

        pos[0] = box.left + scrollLeft;
        pos[1] = box.top + scrollTop;

    } else if (document.getBoxObjectFor && !BUGGY_GECKO_BOX_OBJECT) { // gecko
        // Gecko ignores the scroll values for ancestors, up to 1.9.  See:
        // https://bugzilla.mozilla.org/show_bug.cgi?id=328881 and
        // https://bugzilla.mozilla.org/show_bug.cgi?id=330619

        box = document.getBoxObjectFor(forElement);
        var vpBox = document.getBoxObjectFor(viewportElement);
        pos[0] = box.screenX - vpBox.screenX;
        pos[1] = box.screenY - vpBox.screenY;

    } else { // safari/opera
        pos[0] = forElement.offsetLeft;
        pos[1] = forElement.offsetTop;
        parent = forElement.offsetParent;
        if (parent != forElement) {
            while (parent) {
                pos[0] += parent.offsetLeft;
                pos[1] += parent.offsetTop;
                parent = parent.offsetParent;
            }
        }

        var browser = OpenLayers.BROWSER_NAME;

        // opera & (safari absolute) incorrectly account for body offsetTop
        if (browser == "opera" || (browser == "safari" &&
              OpenLayers.Element.getStyle(forElement, 'position') == 'absolute')) {
            pos[1] -= document.body.offsetTop;
        }

        // accumulate the scroll positions for everything but the body element
        parent = forElement.offsetParent;
        while (parent && parent != document.body) {
            pos[0] -= parent.scrollLeft;
            // see https://bugs.opera.com/show_bug.cgi?id=249965
            if (browser != "opera" || parent.tagName != 'TR') {
                pos[1] -= parent.scrollTop;
            }
            parent = parent.offsetParent;
        }
    }
    
    return pos;
};

/**
 * Function: getViewportElement
 * Returns die viewport element of the document. The viewport element is
 * usually document.documentElement, except in IE,where it is either
 * document.body or document.documentElement, depending on the document's
 * compatibility mode (see
 * http://code.google.com/p/doctype/wiki/ArticleClientViewportElement)
 *
 * Returns:
 * {DOMElement}
 */
OpenLayers.Util.getViewportElement = function() {
    var viewportElement = arguments.callee.viewportElement;
    if (viewportElement == undefined) {
        viewportElement = (OpenLayers.BROWSER_NAME == "msie" &&
            document.compatMode != 'CSS1Compat') ? document.body :
            document.documentElement;
        arguments.callee.viewportElement = viewportElement;
    }
    return viewportElement;
};

/** 
 * Function: isEquivalentUrl
 * Test two URLs for equivalence. 
 * 
 * Setting 'ignoreCase' allows for case-independent comparison.
 * 
 * Comparison is based on: 
 *  - Protocol
 *  - Host (evaluated without the port)
 *  - Port (set 'ignorePort80' to ignore "80" values)
 *  - Hash ( set 'ignoreHash' to disable)
 *  - Pathname (for relative <-> absolute comparison) 
 *  - Arguments (so they can be out of order)
 *  
 * Parameters:
 * url1 - {String}
 * url2 - {String}
 * options - {Object} Allows for customization of comparison:
 *                    'ignoreCase' - Default is True
 *                    'ignorePort80' - Default is True
 *                    'ignoreHash' - Default is True
 *
 * Returns:
 * {Boolean} Whether or not the two URLs are equivalent
 */
OpenLayers.Util.isEquivalentUrl = function(url1, url2, options) {
    options = options || {};

    OpenLayers.Util.applyDefaults(options, {
        ignoreCase: true,
        ignorePort80: true,
        ignoreHash: true
    });

    var urlObj1 = OpenLayers.Util.createUrlObject(url1, options);
    var urlObj2 = OpenLayers.Util.createUrlObject(url2, options);

    //compare all keys except for "args" (treated below)
    for(var key in urlObj1) {
        if(key !== "args") {
            if(urlObj1[key] != urlObj2[key]) {
                return false;
            }
        }
    }

    // compare search args - irrespective of order
    for(var key in urlObj1.args) {
        if(urlObj1.args[key] != urlObj2.args[key]) {
            return false;
        }
        delete urlObj2.args[key];
    }
    // urlObj2 shouldn't have any args left
    for(var key in urlObj2.args) {
        return false;
    }
    
    return true;
};

/**
 * Function: createUrlObject
 * 
 * Parameters:
 * url - {String}
 * options - {Object} A hash of options.
 *
 * Valid options:
 *   ignoreCase - {Boolean} lowercase url,
 *   ignorePort80 - {Boolean} don't include explicit port if port is 80,
 *   ignoreHash - {Boolean} Don't include part of url after the hash (#).
 * 
 * Returns:
 * {Object} An object with separate url, a, port, host, and args parsed out 
 *          and ready for comparison
 */
OpenLayers.Util.createUrlObject = function(url, options) {
    options = options || {};

    // deal with relative urls first
    if(!(/^\w+:\/\//).test(url)) {
        var loc = window.location;
        var port = loc.port ? ":" + loc.port : "";
        var fullUrl = loc.protocol + "//" + loc.host.split(":").shift() + port;
        if(url.indexOf("/") === 0) {
            // full pathname
            url = fullUrl + url;
        } else {
            // relative to current path
            var parts = loc.pathname.split("/");
            parts.pop();
            url = fullUrl + parts.join("/") + "/" + url;
        }
    }
  
    if (options.ignoreCase) {
        url = url.toLowerCase(); 
    }

    var a = document.createElement('a');
    a.href = url;
    
    var urlObject = {};
    
    //host (without port)
    urlObject.host = a.host.split(":").shift();

    //protocol
    urlObject.protocol = a.protocol;  

    //port (get uniform browser behavior with port 80 here)
    if(options.ignorePort80) {
        urlObject.port = (a.port == "80" || a.port == "0") ? "" : a.port;
    } else {
        urlObject.port = (a.port == "" || a.port == "0") ? "80" : a.port;
    }

    //hash
    urlObject.hash = (options.ignoreHash || a.hash === "#") ? "" : a.hash;  
    
    //args
    var queryString = a.search;
    if (!queryString) {
        var qMark = url.indexOf("?");
        queryString = (qMark != -1) ? url.substr(qMark) : "";
    }
    urlObject.args = OpenLayers.Util.getParameters(queryString);

    // pathname
    //
    // This is a workaround for Internet Explorer where
    // window.location.pathname has a leading "/", but
    // a.pathname has no leading "/".
    urlObject.pathname = (a.pathname.charAt(0) == "/") ? a.pathname : "/" + a.pathname;
    
    return urlObject; 
};
 
/**
 * Function: removeTail
 * Takes a url and removes everything after the ? and #
 * 
 * Parameters:
 * url - {String} The url to process
 * 
 * Returns:
 * {String} The string with all queryString and Hash removed
 */
OpenLayers.Util.removeTail = function(url) {
    var head = null;
    
    var qMark = url.indexOf("?");
    var hashMark = url.indexOf("#");

    if (qMark == -1) {
        head = (hashMark != -1) ? url.substr(0,hashMark) : url;
    } else {
        head = (hashMark != -1) ? url.substr(0,Math.min(qMark, hashMark)) 
                                  : url.substr(0, qMark);
    }
    return head;
};

/**
 * Constant: IS_GECKO
 * {Boolean} True if the userAgent reports the browser to use the Gecko engine
 */
OpenLayers.IS_GECKO = (function() {
    var ua = navigator.userAgent.toLowerCase();
    return ua.indexOf("webkit") == -1 && ua.indexOf("gecko") != -1;
})();

/**
 * Constant: CANVAS_SUPPORTED
 * {Boolean} True if canvas 2d is supported.
 */
OpenLayers.CANVAS_SUPPORTED = (function() {
    var elem = document.createElement('canvas');
    return !!(elem.getContext && elem.getContext('2d'));
})();

/**
 * Constant: BROWSER_NAME
 * {String}
 * A substring of the navigator.userAgent property.  Depending on the userAgent
 *     property, this will be the empty string or one of the following:
 *     * "opera" -- Opera
 *     * "msie"  -- Internet Explorer
 *     * "safari" -- Safari
 *     * "firefox" -- Firefox
 *     * "mozilla" -- Mozilla
 */
OpenLayers.BROWSER_NAME = (function() {
    var name = "";
    var ua = navigator.userAgent.toLowerCase();
    if (ua.indexOf("opera") != -1) {
        name = "opera";
    } else if (ua.indexOf("msie") != -1) {
        name = "msie";
    } else if (ua.indexOf("safari") != -1) {
        name = "safari";
    } else if (ua.indexOf("mozilla") != -1) {
        if (ua.indexOf("firefox") != -1) {
            name = "firefox";
        } else {
            name = "mozilla";
        }
    }
    return name;
})();

/**
 * Function: getBrowserName
 * 
 * Returns:
 * {String} A string which specifies which is the current 
 *          browser in which we are running. 
 * 
 *          Currently-supported browser detection and codes:
 *           * 'opera' -- Opera
 *           * 'msie'  -- Internet Explorer
 *           * 'safari' -- Safari
 *           * 'firefox' -- Firefox
 *           * 'mozilla' -- Mozilla
 * 
 *          If we are unable to property identify the browser, we 
 *           return an empty string.
 */
OpenLayers.Util.getBrowserName = function() {
    return OpenLayers.BROWSER_NAME;
};

/**
 * Method: getRenderedDimensions
 * Renders the contentHTML offscreen to determine actual dimensions for
 *     popup sizing. As we need layout to determine dimensions the content
 *     is rendered -9999px to the left and absolute to ensure the 
 *     scrollbars do not flicker
 *     
 * Parameters:
 * contentHTML
 * size - {<OpenLayers.Size>} If either the 'w' or 'h' properties is 
 *     specified, we fix that dimension of the div to be measured. This is 
 *     useful in the case where we have a limit in one dimension and must 
 *     therefore meaure the flow in the other dimension.
 * options - {Object}
 *
 * Allowed Options:
 *     displayClass - {String} Optional parameter.  A CSS class name(s) string
 *         to provide the CSS context of the rendered content.
 *     containerElement - {DOMElement} Optional parameter. Insert the HTML to 
 *         this node instead of the body root when calculating dimensions. 
 * 
 * Returns:
 * {<OpenLayers.Size>}
 */
OpenLayers.Util.getRenderedDimensions = function(contentHTML, size, options) {
    
    var w, h;
    
    // create temp container div with restricted size
    var container = document.createElement("div");
    container.style.visibility = "hidden";
        
    var containerElement = (options && options.containerElement) 
    	? options.containerElement : document.body;
    
    // Opera and IE7 can't handle a node with position:aboslute if it inherits
    // position:absolute from a parent.
    var parentHasPositionAbsolute = false;
    var superContainer = null;
    var parent = containerElement;
    while (parent && parent.tagName.toLowerCase()!="body") {
        var parentPosition = OpenLayers.Element.getStyle(parent, "position");
        if(parentPosition == "absolute") {
            parentHasPositionAbsolute = true;
            break;
        } else if (parentPosition && parentPosition != "static") {
            break;
        }
        parent = parent.parentNode;
    }
    if(parentHasPositionAbsolute && (containerElement.clientHeight === 0 || 
                                     containerElement.clientWidth === 0) ){
        superContainer = document.createElement("div");
        superContainer.style.visibility = "hidden";
        superContainer.style.position = "absolute";
        superContainer.style.overflow = "visible";
        superContainer.style.width = document.body.clientWidth + "px";
        superContainer.style.height = document.body.clientHeight + "px";
        superContainer.appendChild(container);
    }
    container.style.position = "absolute";

    //fix a dimension, if specified.
    if (size) {
        if (size.w) {
            w = size.w;
            container.style.width = w + "px";
        } else if (size.h) {
            h = size.h;
            container.style.height = h + "px";
        }
    }

    //add css classes, if specified
    if (options && options.displayClass) {
        container.className = options.displayClass;
    }
    
    // create temp content div and assign content
    var content = document.createElement("div");
    content.innerHTML = contentHTML;
    
    // we need overflow visible when calculating the size
    content.style.overflow = "visible";
    if (content.childNodes) {
        for (var i=0, l=content.childNodes.length; i<l; i++) {
            if (!content.childNodes[i].style) continue;
            content.childNodes[i].style.overflow = "visible";
        }
    }
    
    // add content to restricted container 
    container.appendChild(content);
    
    // append container to body for rendering
    if (superContainer) {
        containerElement.appendChild(superContainer);
    } else {
        containerElement.appendChild(container);
    }
    
    // calculate scroll width of content and add corners and shadow width
    if (!w) {
        w = parseInt(content.scrollWidth);
    
        // update container width to allow height to adjust
        container.style.width = w + "px";
    }        
    // capture height and add shadow and corner image widths
    if (!h) {
        h = parseInt(content.scrollHeight);
    }

    // remove elements
    container.removeChild(content);
    if (superContainer) {
        superContainer.removeChild(container);
        containerElement.removeChild(superContainer);
    } else {
        containerElement.removeChild(container);
    }
    
    return new OpenLayers.Size(w, h);
};

/**
 * APIFunction: getScrollbarWidth
 * This function has been modified by the OpenLayers from the original version,
 *     written by Matthew Eernisse and released under the Apache 2 
 *     license here:
 * 
 *     http://www.fleegix.org/articles/2006/05/30/getting-the-scrollbar-width-in-pixels
 * 
 *     It has been modified simply to cache its value, since it is physically 
 *     impossible that this code could ever run in more than one browser at 
 *     once. 
 * 
 * Returns:
 * {Integer}
 */
OpenLayers.Util.getScrollbarWidth = function() {
    
    var scrollbarWidth = OpenLayers.Util._scrollbarWidth;
    
    if (scrollbarWidth == null) {
        var scr = null;
        var inn = null;
        var wNoScroll = 0;
        var wScroll = 0;
    
        // Outer scrolling div
        scr = document.createElement('div');
        scr.style.position = 'absolute';
        scr.style.top = '-1000px';
        scr.style.left = '-1000px';
        scr.style.width = '100px';
        scr.style.height = '50px';
        // Start with no scrollbar
        scr.style.overflow = 'hidden';
    
        // Inner content div
        inn = document.createElement('div');
        inn.style.width = '100%';
        inn.style.height = '200px';
    
        // Put the inner div in the scrolling div
        scr.appendChild(inn);
        // Append the scrolling div to the doc
        document.body.appendChild(scr);
    
        // Width of the inner div sans scrollbar
        wNoScroll = inn.offsetWidth;
    
        // Add the scrollbar
        scr.style.overflow = 'scroll';
        // Width of the inner div width scrollbar
        wScroll = inn.offsetWidth;
    
        // Remove the scrolling div from the doc
        document.body.removeChild(document.body.lastChild);
    
        // Pixel width of the scroller
        OpenLayers.Util._scrollbarWidth = (wNoScroll - wScroll);
        scrollbarWidth = OpenLayers.Util._scrollbarWidth;
    }

    return scrollbarWidth;
};

/**
 * APIFunction: getFormattedLonLat
 * This function will return latitude or longitude value formatted as 
 *
 * Parameters:
 * coordinate - {Float} the coordinate value to be formatted
 * axis - {String} value of either 'lat' or 'lon' to indicate which axis is to
 *          to be formatted (default = lat)
 * dmsOption - {String} specify the precision of the output can be one of:
 *           'dms' show degrees minutes and seconds
 *           'dm' show only degrees and minutes
 *           'd' show only degrees
 * 
 * Returns:
 * {String} the coordinate value formatted as a string
 */
OpenLayers.Util.getFormattedLonLat = function(coordinate, axis, dmsOption) {
    if (!dmsOption) {
        dmsOption = 'dms';    //default to show degree, minutes, seconds
    }
	
	coordinate = (coordinate+540)%360 - 180; // normalize for sphere being round
	
    var abscoordinate = Math.abs(coordinate);
    var coordinatedegrees = Math.floor(abscoordinate);

    var coordinateminutes = (abscoordinate - coordinatedegrees)/(1/60);
    var tempcoordinateminutes = coordinateminutes;
    coordinateminutes = Math.floor(coordinateminutes);
    var coordinateseconds = (tempcoordinateminutes - coordinateminutes)/(1/60);
    coordinateseconds =  Math.round(coordinateseconds*10);
    coordinateseconds /= 10;

    if( coordinateseconds >= 60) { 
        coordinateseconds -= 60; 
        coordinateminutes += 1; 
        if( coordinateminutes >= 60) { 
            coordinateminutes -= 60; 
            coordinatedegrees += 1; 
        } 
    }
    
    if( coordinatedegrees < 10 ) {
        coordinatedegrees = "0" + coordinatedegrees;
    }
    var str = coordinatedegrees + "\u00B0";

    if (dmsOption.indexOf('dm') >= 0) {
        if( coordinateminutes < 10 ) {
            coordinateminutes = "0" + coordinateminutes;
        }
        str += coordinateminutes + "'";
  
        if (dmsOption.indexOf('dms') >= 0) {
            if( coordinateseconds < 10 ) {
                coordinateseconds = "0" + coordinateseconds;
            }
            str += coordinateseconds + '"';
        }
    }
    
    if (axis == "lon") {
        str += coordinate < 0 ? OpenLayers.i18n("W") : OpenLayers.i18n("E");
    } else {
        str += coordinate < 0 ? OpenLayers.i18n("S") : OpenLayers.i18n("N");
    }
    return str;
};

define("libraries/ol3/ol3-ol2-compatibility", function(){});

/*
  proj4js.js -- Javascript reprojection library. 
  
  Authors:      Mike Adair madairATdmsolutions.ca
                Richard Greenwood richATgreenwoodmap.com
                Didier Richard didier.richardATign.fr
                Stephen Irons
  License:      LGPL as per: http://www.gnu.org/copyleft/lesser.html 
                Note: This program is an almost direct port of the C library
                Proj4.
*/
Proj4js={defaultDatum:'WGS84',transform:function(source,dest,point){if(!source.readyToUse||!dest.readyToUse){this.reportError("Proj4js initialization for "+source.srsCode+" not yet complete");return point;}
if((source.srsProjNumber=="900913"&&dest.datumCode!="WGS84")||(dest.srsProjNumber=="900913"&&source.datumCode!="WGS84")){var wgs84=Proj4js.WGS84;this.transform(source,wgs84,point);source=wgs84;}
if(source.projName=="longlat"){point.x*=Proj4js.common.D2R;point.y*=Proj4js.common.D2R;}else{if(source.to_meter){point.x*=source.to_meter;point.y*=source.to_meter;}
source.inverse(point);}
if(source.from_greenwich){point.x+=source.from_greenwich;}
point=this.datum_transform(source.datum,dest.datum,point);if(dest.from_greenwich){point.x-=dest.from_greenwich;}
if(dest.projName=="longlat"){point.x*=Proj4js.common.R2D;point.y*=Proj4js.common.R2D;}else{dest.forward(point);if(dest.to_meter){point.x/=dest.to_meter;point.y/=dest.to_meter;}}
return point;},datum_transform:function(source,dest,point){if(source.compare_datums(dest)){return point;}
if(source.datum_type==Proj4js.common.PJD_NODATUM||dest.datum_type==Proj4js.common.PJD_NODATUM){return point;}
if(source.datum_type==Proj4js.common.PJD_GRIDSHIFT)
{alert("ERROR: Grid shift transformations are not implemented yet.");}
if(dest.datum_type==Proj4js.common.PJD_GRIDSHIFT)
{alert("ERROR: Grid shift transformations are not implemented yet.");}
if(source.es!=dest.es||source.a!=dest.a||source.datum_type==Proj4js.common.PJD_3PARAM||source.datum_type==Proj4js.common.PJD_7PARAM||dest.datum_type==Proj4js.common.PJD_3PARAM||dest.datum_type==Proj4js.common.PJD_7PARAM)
{source.geodetic_to_geocentric(point);if(source.datum_type==Proj4js.common.PJD_3PARAM||source.datum_type==Proj4js.common.PJD_7PARAM){source.geocentric_to_wgs84(point);}
if(dest.datum_type==Proj4js.common.PJD_3PARAM||dest.datum_type==Proj4js.common.PJD_7PARAM){dest.geocentric_from_wgs84(point);}
dest.geocentric_to_geodetic(point);}
if(dest.datum_type==Proj4js.common.PJD_GRIDSHIFT)
{alert("ERROR: Grid shift transformations are not implemented yet.");}
return point;},reportError:function(msg){},extend:function(destination,source){destination=destination||{};if(source){for(var property in source){var value=source[property];if(value!==undefined){destination[property]=value;}}}
return destination;},Class:function(){var Class=function(){this.initialize.apply(this,arguments);};var extended={};var parent;for(var i=0;i<arguments.length;++i){if(typeof arguments[i]=="function"){parent=arguments[i].prototype;}else{parent=arguments[i];}
Proj4js.extend(extended,parent);}
Class.prototype=extended;return Class;},bind:function(func,object){var args=Array.prototype.slice.apply(arguments,[2]);return function(){var newArgs=args.concat(Array.prototype.slice.apply(arguments,[0]));return func.apply(object,newArgs);};},scriptName:"proj4js-compressed.js",defsLookupService:'http://spatialreference.org/ref',libPath:null,getScriptLocation:function(){if(this.libPath)return this.libPath;var scriptName=this.scriptName;var scriptNameLen=scriptName.length;var scripts=document.getElementsByTagName('script');for(var i=0;i<scripts.length;i++){var src=scripts[i].getAttribute('src');if(src){var index=src.lastIndexOf(scriptName);if((index>-1)&&(index+scriptNameLen==src.length)){this.libPath=src.slice(0,-scriptNameLen);break;}}}
return this.libPath||"";},loadScript:function(url,onload,onfail,loadCheck){var script=document.createElement('script');script.defer=false;script.type="text/javascript";script.id=url;script.src=url;script.onload=onload;script.onerror=onfail;script.loadCheck=loadCheck;if(/MSIE/.test(navigator.userAgent)){script.onreadystatechange=this.checkReadyState;}
document.getElementsByTagName('head')[0].appendChild(script);},checkReadyState:function(){if(this.readyState=='loaded'){if(!this.loadCheck()){this.onerror();}else{this.onload();}}}};Proj4js.Proj=Proj4js.Class({readyToUse:false,title:null,projName:null,units:null,datum:null,x0:0,y0:0,initialize:function(srsCode){this.srsCodeInput=srsCode;if(srsCode.indexOf('urn:')==0){var urn=srsCode.split(':');if((urn[1]=='ogc'||urn[1]=='x-ogc')&&(urn[2]=='def')&&(urn[3]=='crs')){srsCode=urn[4]+':'+urn[urn.length-1];}}else if(srsCode.indexOf('http://')==0){var url=srsCode.split('#');if(url[0].match(/epsg.org/)){srsCode='EPSG:'+url[1];}else if(url[0].match(/RIG.xml/)){srsCode='IGNF:'+url[1];}}
this.srsCode=srsCode.toUpperCase();if(this.srsCode.indexOf("EPSG")==0){this.srsCode=this.srsCode;this.srsAuth='epsg';this.srsProjNumber=this.srsCode.substring(5);}else if(this.srsCode.indexOf("IGNF")==0){this.srsCode=this.srsCode;this.srsAuth='IGNF';this.srsProjNumber=this.srsCode.substring(5);}else if(this.srsCode.indexOf("CRS")==0){this.srsCode=this.srsCode;this.srsAuth='CRS';this.srsProjNumber=this.srsCode.substring(4);}else{this.srsAuth='';this.srsProjNumber=this.srsCode;}
this.loadProjDefinition();},loadProjDefinition:function(){if(Proj4js.defs[this.srsCode]){this.defsLoaded();return;}
var url=Proj4js.getScriptLocation()+'defs/'+this.srsAuth.toUpperCase()+this.srsProjNumber+'.js';Proj4js.loadScript(url,Proj4js.bind(this.defsLoaded,this),Proj4js.bind(this.loadFromService,this),Proj4js.bind(this.checkDefsLoaded,this));},loadFromService:function(){var url=Proj4js.defsLookupService+'/'+this.srsAuth+'/'+this.srsProjNumber+'/proj4js/';Proj4js.loadScript(url,Proj4js.bind(this.defsLoaded,this),Proj4js.bind(this.defsFailed,this),Proj4js.bind(this.checkDefsLoaded,this));},defsLoaded:function(){this.parseDefs();this.loadProjCode(this.projName);},checkDefsLoaded:function(){if(Proj4js.defs[this.srsCode]){return true;}else{return false;}},defsFailed:function(){Proj4js.reportError('failed to load projection definition for: '+this.srsCode);Proj4js.defs[this.srsCode]=Proj4js.defs['WGS84'];this.defsLoaded();},loadProjCode:function(projName){if(Proj4js.Proj[projName]){this.initTransforms();return;}
var url=Proj4js.getScriptLocation()+'projCode/'+projName+'.js';Proj4js.loadScript(url,Proj4js.bind(this.loadProjCodeSuccess,this,projName),Proj4js.bind(this.loadProjCodeFailure,this,projName),Proj4js.bind(this.checkCodeLoaded,this,projName));},loadProjCodeSuccess:function(projName){if(Proj4js.Proj[projName].dependsOn){this.loadProjCode(Proj4js.Proj[projName].dependsOn);}else{this.initTransforms();}},loadProjCodeFailure:function(projName){Proj4js.reportError("failed to find projection file for: "+projName);},checkCodeLoaded:function(projName){if(Proj4js.Proj[projName]){return true;}else{return false;}},initTransforms:function(){Proj4js.extend(this,Proj4js.Proj[this.projName]);this.init();this.readyToUse=true;},parseDefs:function(){this.defData=Proj4js.defs[this.srsCode];var paramName,paramVal;if(!this.defData){return;}
var paramArray=this.defData.split("+");for(var prop=0;prop<paramArray.length;prop++){var property=paramArray[prop].split("=");paramName=property[0].toLowerCase();paramVal=property[1];switch(paramName.replace(/\s/gi,"")){case"":break;case"title":this.title=paramVal;break;case"proj":this.projName=paramVal.replace(/\s/gi,"");break;case"units":this.units=paramVal.replace(/\s/gi,"");break;case"datum":this.datumCode=paramVal.replace(/\s/gi,"");break;case"nadgrids":this.nagrids=paramVal.replace(/\s/gi,"");break;case"ellps":this.ellps=paramVal.replace(/\s/gi,"");break;case"a":this.a=parseFloat(paramVal);break;case"b":this.b=parseFloat(paramVal);break;case"rf":this.rf=parseFloat(paramVal);break;case"lat_0":this.lat0=paramVal*Proj4js.common.D2R;break;case"lat_1":this.lat1=paramVal*Proj4js.common.D2R;break;case"lat_2":this.lat2=paramVal*Proj4js.common.D2R;break;case"lat_ts":this.lat_ts=paramVal*Proj4js.common.D2R;break;case"lon_0":this.long0=paramVal*Proj4js.common.D2R;break;case"alpha":this.alpha=parseFloat(paramVal)*Proj4js.common.D2R;break;case"lonc":this.longc=paramVal*Proj4js.common.D2R;break;case"x_0":this.x0=parseFloat(paramVal);break;case"y_0":this.y0=parseFloat(paramVal);break;case"k_0":this.k0=parseFloat(paramVal);break;case"k":this.k0=parseFloat(paramVal);break;case"r_a":this.R_A=true;break;case"zone":this.zone=parseInt(paramVal);break;case"south":this.utmSouth=true;break;case"towgs84":this.datum_params=paramVal.split(",");break;case"to_meter":this.to_meter=parseFloat(paramVal);break;case"from_greenwich":this.from_greenwich=paramVal*Proj4js.common.D2R;break;case"pm":paramVal=paramVal.replace(/\s/gi,"");this.from_greenwich=Proj4js.PrimeMeridian[paramVal]?Proj4js.PrimeMeridian[paramVal]:parseFloat(paramVal);this.from_greenwich*=Proj4js.common.D2R;break;case"no_defs":break;default:}}
this.deriveConstants();},deriveConstants:function(){if(this.nagrids=='@null')this.datumCode='none';if(this.datumCode&&this.datumCode!='none'){var datumDef=Proj4js.Datum[this.datumCode];if(datumDef){this.datum_params=datumDef.towgs84?datumDef.towgs84.split(','):null;this.ellps=datumDef.ellipse;this.datumName=datumDef.datumName?datumDef.datumName:this.datumCode;}}
if(!this.a){var ellipse=Proj4js.Ellipsoid[this.ellps]?Proj4js.Ellipsoid[this.ellps]:Proj4js.Ellipsoid['WGS84'];Proj4js.extend(this,ellipse);}
if(this.rf&&!this.b)this.b=(1.0-1.0/this.rf)*this.a;if(Math.abs(this.a-this.b)<Proj4js.common.EPSLN){this.sphere=true;this.b=this.a;}
this.a2=this.a*this.a;this.b2=this.b*this.b;this.es=(this.a2-this.b2)/this.a2;this.e=Math.sqrt(this.es);if(this.R_A){this.a*=1.-this.es*(Proj4js.common.SIXTH+this.es*(Proj4js.common.RA4+this.es*Proj4js.common.RA6));this.a2=this.a*this.a;this.b2=this.b*this.b;this.es=0.;}
this.ep2=(this.a2-this.b2)/this.b2;if(!this.k0)this.k0=1.0;this.datum=new Proj4js.datum(this);}});Proj4js.Proj.longlat={init:function(){},forward:function(pt){return pt;},inverse:function(pt){return pt;}};Proj4js.defs={'WGS84':"+title=long/lat:WGS84 +proj=longlat +ellps=WGS84 +datum=WGS84 +units=degrees",'EPSG:4326':"+title=long/lat:WGS84 +proj=longlat +a=6378137.0 +b=6356752.31424518 +ellps=WGS84 +datum=WGS84 +units=degrees",'EPSG:4269':"+title=long/lat:NAD83 +proj=longlat +a=6378137.0 +b=6356752.31414036 +ellps=GRS80 +datum=NAD83 +units=degrees",'EPSG:3785':"+title= Google Mercator +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs"};Proj4js.defs['GOOGLE']=Proj4js.defs['EPSG:3785'];Proj4js.defs['EPSG:900913']=Proj4js.defs['EPSG:3785'];Proj4js.defs['EPSG:102113']=Proj4js.defs['EPSG:3785'];Proj4js.common={PI:3.141592653589793238,HALF_PI:1.570796326794896619,TWO_PI:6.283185307179586477,FORTPI:0.78539816339744833,R2D:57.29577951308232088,D2R:0.01745329251994329577,SEC_TO_RAD:4.84813681109535993589914102357e-6,EPSLN:1.0e-10,MAX_ITER:20,COS_67P5:0.38268343236508977,AD_C:1.0026000,PJD_UNKNOWN:0,PJD_3PARAM:1,PJD_7PARAM:2,PJD_GRIDSHIFT:3,PJD_WGS84:4,PJD_NODATUM:5,SRS_WGS84_SEMIMAJOR:6378137.0,SIXTH:.1666666666666666667,RA4:.04722222222222222222,RA6:.02215608465608465608,RV4:.06944444444444444444,RV6:.04243827160493827160,msfnz:function(eccent,sinphi,cosphi){var con=eccent*sinphi;return cosphi/(Math.sqrt(1.0-con*con));},tsfnz:function(eccent,phi,sinphi){var con=eccent*sinphi;var com=.5*eccent;con=Math.pow(((1.0-con)/(1.0+con)),com);return(Math.tan(.5*(this.HALF_PI-phi))/con);},phi2z:function(eccent,ts){var eccnth=.5*eccent;var con,dphi;var phi=this.HALF_PI-2*Math.atan(ts);for(i=0;i<=15;i++){con=eccent*Math.sin(phi);dphi=this.HALF_PI-2*Math.atan(ts*(Math.pow(((1.0-con)/(1.0+con)),eccnth)))-phi;phi+=dphi;if(Math.abs(dphi)<=.0000000001)return phi;}
alert("phi2z has NoConvergence");return(-9999);},qsfnz:function(eccent,sinphi){var con;if(eccent>1.0e-7){con=eccent*sinphi;return((1.0-eccent*eccent)*(sinphi/(1.0-con*con)-(.5/eccent)*Math.log((1.0-con)/(1.0+con))));}else{return(2.0*sinphi);}},asinz:function(x){if(Math.abs(x)>1.0){x=(x>1.0)?1.0:-1.0;}
return Math.asin(x);},e0fn:function(x){return(1.0-0.25*x*(1.0+x/16.0*(3.0+1.25*x)));},e1fn:function(x){return(0.375*x*(1.0+0.25*x*(1.0+0.46875*x)));},e2fn:function(x){return(0.05859375*x*x*(1.0+0.75*x));},e3fn:function(x){return(x*x*x*(35.0/3072.0));},mlfn:function(e0,e1,e2,e3,phi){return(e0*phi-e1*Math.sin(2.0*phi)+e2*Math.sin(4.0*phi)-e3*Math.sin(6.0*phi));},srat:function(esinp,exp){return(Math.pow((1.0-esinp)/(1.0+esinp),exp));},sign:function(x){if(x<0.0)return(-1);else return(1);},adjust_lon:function(x){x=(Math.abs(x)<this.PI)?x:(x-(this.sign(x)*this.TWO_PI));return x;},adjust_lat:function(x){x=(Math.abs(x)<this.HALF_PI)?x:(x-(this.sign(x)*this.PI));return x;},latiso:function(eccent,phi,sinphi){if(Math.abs(phi)>this.HALF_PI)return+Number.NaN;if(phi==this.HALF_PI)return Number.POSITIVE_INFINITY;if(phi==-1.0*this.HALF_PI)return-1.0*Number.POSITIVE_INFINITY;var con=eccent*sinphi;return Math.log(Math.tan((this.HALF_PI+phi)/2.0))+eccent*Math.log((1.0-con)/(1.0+con))/2.0;},fL:function(x,L){return 2.0*Math.atan(x*Math.exp(L))-this.HALF_PI;},invlatiso:function(eccent,ts){var phi=this.fL(1.0,ts);var Iphi=0.0;var con=0.0;do{Iphi=phi;con=eccent*Math.sin(Iphi);phi=this.fL(Math.exp(eccent*Math.log((1.0+con)/(1.0-con))/2.0),ts)}while(Math.abs(phi-Iphi)>1.0e-12);return phi;},sinh:function(x)
{var r=Math.exp(x);r=(r-1.0/r)/2.0;return r;},cosh:function(x)
{var r=Math.exp(x);r=(r+1.0/r)/2.0;return r;},tanh:function(x)
{var r=Math.exp(x);r=(r-1.0/r)/(r+1.0/r);return r;},asinh:function(x)
{var s=(x>=0?1.0:-1.0);return s*(Math.log(Math.abs(x)+Math.sqrt(x*x+1.0)));},acosh:function(x)
{return 2.0*Math.log(Math.sqrt((x+1.0)/2.0)+Math.sqrt((x-1.0)/2.0));},atanh:function(x)
{return Math.log((x-1.0)/(x+1.0))/2.0;},gN:function(a,e,sinphi)
{var temp=e*sinphi;return a/Math.sqrt(1.0-temp*temp);}};Proj4js.datum=Proj4js.Class({initialize:function(proj){this.datum_type=Proj4js.common.PJD_WGS84;if(proj.datumCode&&proj.datumCode=='none'){this.datum_type=Proj4js.common.PJD_NODATUM;}
if(proj&&proj.datum_params){for(var i=0;i<proj.datum_params.length;i++){proj.datum_params[i]=parseFloat(proj.datum_params[i]);}
if(proj.datum_params[0]!=0||proj.datum_params[1]!=0||proj.datum_params[2]!=0){this.datum_type=Proj4js.common.PJD_3PARAM;}
if(proj.datum_params.length>3){if(proj.datum_params[3]!=0||proj.datum_params[4]!=0||proj.datum_params[5]!=0||proj.datum_params[6]!=0){this.datum_type=Proj4js.common.PJD_7PARAM;proj.datum_params[3]*=Proj4js.common.SEC_TO_RAD;proj.datum_params[4]*=Proj4js.common.SEC_TO_RAD;proj.datum_params[5]*=Proj4js.common.SEC_TO_RAD;proj.datum_params[6]=(proj.datum_params[6]/1000000.0)+1.0;}}}
if(proj){this.a=proj.a;this.b=proj.b;this.es=proj.es;this.ep2=proj.ep2;this.datum_params=proj.datum_params;}},compare_datums:function(dest){if(this.datum_type!=dest.datum_type){return false;}else if(this.a!=dest.a||Math.abs(this.es-dest.es)>0.000000000050){return false;}else if(this.datum_type==Proj4js.common.PJD_3PARAM){return(this.datum_params[0]==dest.datum_params[0]&&this.datum_params[1]==dest.datum_params[1]&&this.datum_params[2]==dest.datum_params[2]);}else if(this.datum_type==Proj4js.common.PJD_7PARAM){return(this.datum_params[0]==dest.datum_params[0]&&this.datum_params[1]==dest.datum_params[1]&&this.datum_params[2]==dest.datum_params[2]&&this.datum_params[3]==dest.datum_params[3]&&this.datum_params[4]==dest.datum_params[4]&&this.datum_params[5]==dest.datum_params[5]&&this.datum_params[6]==dest.datum_params[6]);}else if(this.datum_type==Proj4js.common.PJD_GRIDSHIFT){return strcmp(pj_param(this.params,"snadgrids").s,pj_param(dest.params,"snadgrids").s)==0;}else{return true;}},geodetic_to_geocentric:function(p){var Longitude=p.x;var Latitude=p.y;var Height=p.z?p.z:0;var X;var Y;var Z;var Error_Code=0;var Rn;var Sin_Lat;var Sin2_Lat;var Cos_Lat;if(Latitude<-Proj4js.common.HALF_PI&&Latitude>-1.001*Proj4js.common.HALF_PI){Latitude=-Proj4js.common.HALF_PI;}else if(Latitude>Proj4js.common.HALF_PI&&Latitude<1.001*Proj4js.common.HALF_PI){Latitude=Proj4js.common.HALF_PI;}else if((Latitude<-Proj4js.common.HALF_PI)||(Latitude>Proj4js.common.HALF_PI)){Proj4js.reportError('geocent:lat out of range:'+Latitude);return null;}
if(Longitude>Proj4js.common.PI)Longitude-=(2*Proj4js.common.PI);Sin_Lat=Math.sin(Latitude);Cos_Lat=Math.cos(Latitude);Sin2_Lat=Sin_Lat*Sin_Lat;Rn=this.a/(Math.sqrt(1.0e0-this.es*Sin2_Lat));X=(Rn+Height)*Cos_Lat*Math.cos(Longitude);Y=(Rn+Height)*Cos_Lat*Math.sin(Longitude);Z=((Rn*(1-this.es))+Height)*Sin_Lat;p.x=X;p.y=Y;p.z=Z;return Error_Code;},geocentric_to_geodetic:function(p){var genau=1.E-12;var genau2=(genau*genau);var maxiter=30;var P;var RR;var CT;var ST;var RX;var RK;var RN;var CPHI0;var SPHI0;var CPHI;var SPHI;var SDPHI;var At_Pole;var iter;var X=p.x;var Y=p.y;var Z=p.z?p.z:0.0;var Longitude;var Latitude;var Height;At_Pole=false;P=Math.sqrt(X*X+Y*Y);RR=Math.sqrt(X*X+Y*Y+Z*Z);if(P/this.a<genau){At_Pole=true;Longitude=0.0;if(RR/this.a<genau){Latitude=Proj4js.common.HALF_PI;Height=-this.b;return;}}else{Longitude=Math.atan2(Y,X);}
CT=Z/RR;ST=P/RR;RX=1.0/Math.sqrt(1.0-this.es*(2.0-this.es)*ST*ST);CPHI0=ST*(1.0-this.es)*RX;SPHI0=CT*RX;iter=0;do
{iter++;RN=this.a/Math.sqrt(1.0-this.es*SPHI0*SPHI0);Height=P*CPHI0+Z*SPHI0-RN*(1.0-this.es*SPHI0*SPHI0);RK=this.es*RN/(RN+Height);RX=1.0/Math.sqrt(1.0-RK*(2.0-RK)*ST*ST);CPHI=ST*(1.0-RK)*RX;SPHI=CT*RX;SDPHI=SPHI*CPHI0-CPHI*SPHI0;CPHI0=CPHI;SPHI0=SPHI;}
while(SDPHI*SDPHI>genau2&&iter<maxiter);Latitude=Math.atan(SPHI/Math.abs(CPHI));p.x=Longitude;p.y=Latitude;p.z=Height;return p;},geocentric_to_geodetic_noniter:function(p){var X=p.x;var Y=p.y;var Z=p.z?p.z:0;var Longitude;var Latitude;var Height;var W;var W2;var T0;var T1;var S0;var S1;var Sin_B0;var Sin3_B0;var Cos_B0;var Sin_p1;var Cos_p1;var Rn;var Sum;var At_Pole;X=parseFloat(X);Y=parseFloat(Y);Z=parseFloat(Z);At_Pole=false;if(X!=0.0)
{Longitude=Math.atan2(Y,X);}
else
{if(Y>0)
{Longitude=Proj4js.common.HALF_PI;}
else if(Y<0)
{Longitude=-Proj4js.common.HALF_PI;}
else
{At_Pole=true;Longitude=0.0;if(Z>0.0)
{Latitude=Proj4js.common.HALF_PI;}
else if(Z<0.0)
{Latitude=-Proj4js.common.HALF_PI;}
else
{Latitude=Proj4js.common.HALF_PI;Height=-this.b;return;}}}
W2=X*X+Y*Y;W=Math.sqrt(W2);T0=Z*Proj4js.common.AD_C;S0=Math.sqrt(T0*T0+W2);Sin_B0=T0/S0;Cos_B0=W/S0;Sin3_B0=Sin_B0*Sin_B0*Sin_B0;T1=Z+this.b*this.ep2*Sin3_B0;Sum=W-this.a*this.es*Cos_B0*Cos_B0*Cos_B0;S1=Math.sqrt(T1*T1+Sum*Sum);Sin_p1=T1/S1;Cos_p1=Sum/S1;Rn=this.a/Math.sqrt(1.0-this.es*Sin_p1*Sin_p1);if(Cos_p1>=Proj4js.common.COS_67P5)
{Height=W/Cos_p1-Rn;}
else if(Cos_p1<=-Proj4js.common.COS_67P5)
{Height=W/-Cos_p1-Rn;}
else
{Height=Z/Sin_p1+Rn*(this.es-1.0);}
if(At_Pole==false)
{Latitude=Math.atan(Sin_p1/Cos_p1);}
p.x=Longitude;p.y=Latitude;p.z=Height;return p;},geocentric_to_wgs84:function(p){if(this.datum_type==Proj4js.common.PJD_3PARAM)
{p.x+=this.datum_params[0];p.y+=this.datum_params[1];p.z+=this.datum_params[2];}
else if(this.datum_type==Proj4js.common.PJD_7PARAM)
{var Dx_BF=this.datum_params[0];var Dy_BF=this.datum_params[1];var Dz_BF=this.datum_params[2];var Rx_BF=this.datum_params[3];var Ry_BF=this.datum_params[4];var Rz_BF=this.datum_params[5];var M_BF=this.datum_params[6];var x_out=M_BF*(p.x-Rz_BF*p.y+Ry_BF*p.z)+Dx_BF;var y_out=M_BF*(Rz_BF*p.x+p.y-Rx_BF*p.z)+Dy_BF;var z_out=M_BF*(-Ry_BF*p.x+Rx_BF*p.y+p.z)+Dz_BF;p.x=x_out;p.y=y_out;p.z=z_out;}},geocentric_from_wgs84:function(p){if(this.datum_type==Proj4js.common.PJD_3PARAM)
{p.x-=this.datum_params[0];p.y-=this.datum_params[1];p.z-=this.datum_params[2];}
else if(this.datum_type==Proj4js.common.PJD_7PARAM)
{var Dx_BF=this.datum_params[0];var Dy_BF=this.datum_params[1];var Dz_BF=this.datum_params[2];var Rx_BF=this.datum_params[3];var Ry_BF=this.datum_params[4];var Rz_BF=this.datum_params[5];var M_BF=this.datum_params[6];var x_tmp=(p.x-Dx_BF)/M_BF;var y_tmp=(p.y-Dy_BF)/M_BF;var z_tmp=(p.z-Dz_BF)/M_BF;p.x=x_tmp+Rz_BF*y_tmp-Ry_BF*z_tmp;p.y=-Rz_BF*x_tmp+y_tmp+Rx_BF*z_tmp;p.z=Ry_BF*x_tmp-Rx_BF*y_tmp+z_tmp;}}});Proj4js.Point=Proj4js.Class({initialize:function(x,y,z){if(typeof x=='object'){this.x=x[0];this.y=x[1];this.z=x[2]||0.0;}else if(typeof x=='string'){var coords=x.split(',');this.x=parseFloat(coords[0]);this.y=parseFloat(coords[1]);this.z=parseFloat(coords[2])||0.0;}else{this.x=x;this.y=y;this.z=z||0.0;}},clone:function(){return new Proj4js.Point(this.x,this.y,this.z);},toString:function(){return("x="+this.x+",y="+this.y);},toShortString:function(){return(this.x+", "+this.y);}});Proj4js.PrimeMeridian={"greenwich":0.0,"lisbon":-9.131906111111,"paris":2.337229166667,"bogota":-74.080916666667,"madrid":-3.687938888889,"rome":12.452333333333,"bern":7.439583333333,"jakarta":106.807719444444,"ferro":-17.666666666667,"brussels":4.367975,"stockholm":18.058277777778,"athens":23.7163375,"oslo":10.722916666667};Proj4js.Ellipsoid={"MERIT":{a:6378137.0,rf:298.257,ellipseName:"MERIT 1983"},"SGS85":{a:6378136.0,rf:298.257,ellipseName:"Soviet Geodetic System 85"},"GRS80":{a:6378137.0,rf:298.257222101,ellipseName:"GRS 1980(IUGG, 1980)"},"IAU76":{a:6378140.0,rf:298.257,ellipseName:"IAU 1976"},"airy":{a:6377563.396,b:6356256.910,ellipseName:"Airy 1830"},"APL4.":{a:6378137,rf:298.25,ellipseName:"Appl. Physics. 1965"},"NWL9D":{a:6378145.0,rf:298.25,ellipseName:"Naval Weapons Lab., 1965"},"mod_airy":{a:6377340.189,b:6356034.446,ellipseName:"Modified Airy"},"andrae":{a:6377104.43,rf:300.0,ellipseName:"Andrae 1876 (Den., Iclnd.)"},"aust_SA":{a:6378160.0,rf:298.25,ellipseName:"Australian Natl & S. Amer. 1969"},"GRS67":{a:6378160.0,rf:298.2471674270,ellipseName:"GRS 67(IUGG 1967)"},"bessel":{a:6377397.155,rf:299.1528128,ellipseName:"Bessel 1841"},"bess_nam":{a:6377483.865,rf:299.1528128,ellipseName:"Bessel 1841 (Namibia)"},"clrk66":{a:6378206.4,b:6356583.8,ellipseName:"Clarke 1866"},"clrk80":{a:6378249.145,rf:293.4663,ellipseName:"Clarke 1880 mod."},"CPM":{a:6375738.7,rf:334.29,ellipseName:"Comm. des Poids et Mesures 1799"},"delmbr":{a:6376428.0,rf:311.5,ellipseName:"Delambre 1810 (Belgium)"},"engelis":{a:6378136.05,rf:298.2566,ellipseName:"Engelis 1985"},"evrst30":{a:6377276.345,rf:300.8017,ellipseName:"Everest 1830"},"evrst48":{a:6377304.063,rf:300.8017,ellipseName:"Everest 1948"},"evrst56":{a:6377301.243,rf:300.8017,ellipseName:"Everest 1956"},"evrst69":{a:6377295.664,rf:300.8017,ellipseName:"Everest 1969"},"evrstSS":{a:6377298.556,rf:300.8017,ellipseName:"Everest (Sabah & Sarawak)"},"fschr60":{a:6378166.0,rf:298.3,ellipseName:"Fischer (Mercury Datum) 1960"},"fschr60m":{a:6378155.0,rf:298.3,ellipseName:"Fischer 1960"},"fschr68":{a:6378150.0,rf:298.3,ellipseName:"Fischer 1968"},"helmert":{a:6378200.0,rf:298.3,ellipseName:"Helmert 1906"},"hough":{a:6378270.0,rf:297.0,ellipseName:"Hough"},"intl":{a:6378388.0,rf:297.0,ellipseName:"International 1909 (Hayford)"},"kaula":{a:6378163.0,rf:298.24,ellipseName:"Kaula 1961"},"lerch":{a:6378139.0,rf:298.257,ellipseName:"Lerch 1979"},"mprts":{a:6397300.0,rf:191.0,ellipseName:"Maupertius 1738"},"new_intl":{a:6378157.5,b:6356772.2,ellipseName:"New International 1967"},"plessis":{a:6376523.0,rf:6355863.0,ellipseName:"Plessis 1817 (France)"},"krass":{a:6378245.0,rf:298.3,ellipseName:"Krassovsky, 1942"},"SEasia":{a:6378155.0,b:6356773.3205,ellipseName:"Southeast Asia"},"walbeck":{a:6376896.0,b:6355834.8467,ellipseName:"Walbeck"},"WGS60":{a:6378165.0,rf:298.3,ellipseName:"WGS 60"},"WGS66":{a:6378145.0,rf:298.25,ellipseName:"WGS 66"},"WGS72":{a:6378135.0,rf:298.26,ellipseName:"WGS 72"},"WGS84":{a:6378137.0,rf:298.257223563,ellipseName:"WGS 84"},"sphere":{a:6370997.0,b:6370997.0,ellipseName:"Normal Sphere (r=6370997)"}};Proj4js.Datum={"WGS84":{towgs84:"0,0,0",ellipse:"WGS84",datumName:"WGS84"},"GGRS87":{towgs84:"-199.87,74.79,246.62",ellipse:"GRS80",datumName:"Greek_Geodetic_Reference_System_1987"},"NAD83":{towgs84:"0,0,0",ellipse:"GRS80",datumName:"North_American_Datum_1983"},"NAD27":{nadgrids:"@conus,@alaska,@ntv2_0.gsb,@ntv1_can.dat",ellipse:"clrk66",datumName:"North_American_Datum_1927"},"potsdam":{towgs84:"606.0,23.0,413.0",ellipse:"bessel",datumName:"Potsdam Rauenberg 1950 DHDN"},"carthage":{towgs84:"-263.0,6.0,431.0",ellipse:"clark80",datumName:"Carthage 1934 Tunisia"},"hermannskogel":{towgs84:"653.0,-212.0,449.0",ellipse:"bessel",datumName:"Hermannskogel"},"ire65":{towgs84:"482.530,-130.596,564.557,-1.042,-0.214,-0.631,8.15",ellipse:"mod_airy",datumName:"Ireland 1965"},"nzgd49":{towgs84:"59.47,-5.04,187.44,0.47,-0.1,1.024,-4.5993",ellipse:"intl",datumName:"New Zealand Geodetic Datum 1949"},"OSGB36":{towgs84:"446.448,-125.157,542.060,0.1502,0.2470,0.8421,-20.4894",ellipse:"airy",datumName:"Airy 1830"}};Proj4js.WGS84=new Proj4js.Proj('WGS84');Proj4js.Datum['OSB36']=Proj4js.Datum['OSGB36'];Proj4js.Proj.aea={init:function(){if(Math.abs(this.lat1+this.lat2)<Proj4js.common.EPSLN){Proj4js.reportError("aeaInitEqualLatitudes");return;}
this.temp=this.b/this.a;this.es=1.0-Math.pow(this.temp,2);this.e3=Math.sqrt(this.es);this.sin_po=Math.sin(this.lat1);this.cos_po=Math.cos(this.lat1);this.t1=this.sin_po;this.con=this.sin_po;this.ms1=Proj4js.common.msfnz(this.e3,this.sin_po,this.cos_po);this.qs1=Proj4js.common.qsfnz(this.e3,this.sin_po,this.cos_po);this.sin_po=Math.sin(this.lat2);this.cos_po=Math.cos(this.lat2);this.t2=this.sin_po;this.ms2=Proj4js.common.msfnz(this.e3,this.sin_po,this.cos_po);this.qs2=Proj4js.common.qsfnz(this.e3,this.sin_po,this.cos_po);this.sin_po=Math.sin(this.lat0);this.cos_po=Math.cos(this.lat0);this.t3=this.sin_po;this.qs0=Proj4js.common.qsfnz(this.e3,this.sin_po,this.cos_po);if(Math.abs(this.lat1-this.lat2)>Proj4js.common.EPSLN){this.ns0=(this.ms1*this.ms1-this.ms2*this.ms2)/(this.qs2-this.qs1);}else{this.ns0=this.con;}
this.c=this.ms1*this.ms1+this.ns0*this.qs1;this.rh=this.a*Math.sqrt(this.c-this.ns0*this.qs0)/this.ns0;},forward:function(p){var lon=p.x;var lat=p.y;this.sin_phi=Math.sin(lat);this.cos_phi=Math.cos(lat);var qs=Proj4js.common.qsfnz(this.e3,this.sin_phi,this.cos_phi);var rh1=this.a*Math.sqrt(this.c-this.ns0*qs)/this.ns0;var theta=this.ns0*Proj4js.common.adjust_lon(lon-this.long0);var x=rh1*Math.sin(theta)+this.x0;var y=this.rh-rh1*Math.cos(theta)+this.y0;p.x=x;p.y=y;return p;},inverse:function(p){var rh1,qs,con,theta,lon,lat;p.x-=this.x0;p.y=this.rh-p.y+this.y0;if(this.ns0>=0){rh1=Math.sqrt(p.x*p.x+p.y*p.y);con=1.0;}else{rh1=-Math.sqrt(p.x*p.x+p.y*p.y);con=-1.0;}
theta=0.0;if(rh1!=0.0){theta=Math.atan2(con*p.x,con*p.y);}
con=rh1*this.ns0/this.a;qs=(this.c-con*con)/this.ns0;if(this.e3>=1e-10){con=1-.5*(1.0-this.es)*Math.log((1.0-this.e3)/(1.0+this.e3))/this.e3;if(Math.abs(Math.abs(con)-Math.abs(qs))>.0000000001){lat=this.phi1z(this.e3,qs);}else{if(qs>=0){lat=.5*PI;}else{lat=-.5*PI;}}}else{lat=this.phi1z(e3,qs);}
lon=Proj4js.common.adjust_lon(theta/this.ns0+this.long0);p.x=lon;p.y=lat;return p;},phi1z:function(eccent,qs){var con,com,dphi;var phi=Proj4js.common.asinz(.5*qs);if(eccent<Proj4js.common.EPSLN)return phi;var eccnts=eccent*eccent;for(var i=1;i<=25;i++){sinphi=Math.sin(phi);cosphi=Math.cos(phi);con=eccent*sinphi;com=1.0-con*con;dphi=.5*com*com/cosphi*(qs/(1.0-eccnts)-sinphi/com+.5/eccent*Math.log((1.0-con)/(1.0+con)));phi=phi+dphi;if(Math.abs(dphi)<=1e-7)return phi;}
Proj4js.reportError("aea:phi1z:Convergence error");return null;}};Proj4js.Proj.sterea={dependsOn:'gauss',init:function(){Proj4js.Proj['gauss'].init.apply(this);if(!this.rc){Proj4js.reportError("sterea:init:E_ERROR_0");return;}
this.sinc0=Math.sin(this.phic0);this.cosc0=Math.cos(this.phic0);this.R2=2.0*this.rc;if(!this.title)this.title="Oblique Stereographic Alternative";},forward:function(p){p.x=Proj4js.common.adjust_lon(p.x-this.long0);Proj4js.Proj['gauss'].forward.apply(this,[p]);sinc=Math.sin(p.y);cosc=Math.cos(p.y);cosl=Math.cos(p.x);k=this.k0*this.R2/(1.0+this.sinc0*sinc+this.cosc0*cosc*cosl);p.x=k*cosc*Math.sin(p.x);p.y=k*(this.cosc0*sinc-this.sinc0*cosc*cosl);p.x=this.a*p.x+this.x0;p.y=this.a*p.y+this.y0;return p;},inverse:function(p){var lon,lat;p.x=(p.x-this.x0)/this.a;p.y=(p.y-this.y0)/this.a;p.x/=this.k0;p.y/=this.k0;if((rho=Math.sqrt(p.x*p.x+p.y*p.y))){c=2.0*Math.atan2(rho,this.R2);sinc=Math.sin(c);cosc=Math.cos(c);lat=Math.asin(cosc*this.sinc0+p.y*sinc*this.cosc0/rho);lon=Math.atan2(p.x*sinc,rho*this.cosc0*cosc-p.y*this.sinc0*sinc);}else{lat=this.phic0;lon=0.;}
p.x=lon;p.y=lat;Proj4js.Proj['gauss'].inverse.apply(this,[p]);p.x=Proj4js.common.adjust_lon(p.x+this.long0);return p;}};function phi4z(eccent,e0,e1,e2,e3,a,b,c,phi){var sinphi,sin2ph,tanph,ml,mlp,con1,con2,con3,dphi,i;phi=a;for(i=1;i<=15;i++){sinphi=Math.sin(phi);tanphi=Math.tan(phi);c=tanphi*Math.sqrt(1.0-eccent*sinphi*sinphi);sin2ph=Math.sin(2.0*phi);ml=e0*phi-e1*sin2ph+e2*Math.sin(4.0*phi)-e3*Math.sin(6.0*phi);mlp=e0-2.0*e1*Math.cos(2.0*phi)+4.0*e2*Math.cos(4.0*phi)-6.0*e3*Math.cos(6.0*phi);con1=2.0*ml+c*(ml*ml+b)-2.0*a*(c*ml+1.0);con2=eccent*sin2ph*(ml*ml+b-2.0*a*ml)/(2.0*c);con3=2.0*(a-ml)*(c*mlp-2.0/sin2ph)-2.0*mlp;dphi=con1/(con2+con3);phi+=dphi;if(Math.abs(dphi)<=.0000000001)return(phi);}
Proj4js.reportError("phi4z: No convergence");return null;}
function e4fn(x){var con,com;con=1.0+x;com=1.0-x;return(Math.sqrt((Math.pow(con,con))*(Math.pow(com,com))));}
Proj4js.Proj.poly={init:function(){var temp;if(this.lat0=0)this.lat0=90;this.temp=this.b/this.a;this.es=1.0-Math.pow(this.temp,2);this.e=Math.sqrt(this.es);this.e0=Proj4js.common.e0fn(this.es);this.e1=Proj4js.common.e1fn(this.es);this.e2=Proj4js.common.e2fn(this.es);this.e3=Proj4js.common.e3fn(this.es);this.ml0=Proj4js.common.mlfn(this.e0,this.e1,this.e2,this.e3,this.lat0);},forward:function(p){var sinphi,cosphi;var al;var c;var con,ml;var ms;var x,y;var lon=p.x;var lat=p.y;con=Proj4js.common.adjust_lon(lon-this.long0);if(Math.abs(lat)<=.0000001){x=this.x0+this.a*con;y=this.y0-this.a*this.ml0;}else{sinphi=Math.sin(lat);cosphi=Math.cos(lat);ml=Proj4js.common.mlfn(this.e0,this.e1,this.e2,this.e3,lat);ms=Proj4js.common.msfnz(this.e,sinphi,cosphi);con=sinphi;x=this.x0+this.a*ms*Math.sin(con)/sinphi;y=this.y0+this.a*(ml-this.ml0+ms*(1.0-Math.cos(con))/sinphi);}
p.x=x;p.y=y;return p;},inverse:function(p){var sin_phi,cos_phi;var al;var b;var c;var con,ml;var iflg;var lon,lat;p.x-=this.x0;p.y-=this.y0;al=this.ml0+p.y/this.a;iflg=0;if(Math.abs(al)<=.0000001){lon=p.x/this.a+this.long0;lat=0.0;}else{b=al*al+(p.x/this.a)*(p.x/this.a);iflg=phi4z(this.es,this.e0,this.e1,this.e2,this.e3,this.al,b,c,lat);if(iflg!=1)return(iflg);lon=Proj4js.common.adjust_lon((Proj4js.common.asinz(p.x*c/this.a)/Math.sin(lat))+this.long0);}
p.x=lon;p.y=lat;return p;}};Proj4js.Proj.equi={init:function(){if(!this.x0)this.x0=0;if(!this.y0)this.y0=0;if(!this.lat0)this.lat0=0;if(!this.long0)this.long0=0;},forward:function(p){var lon=p.x;var lat=p.y;var dlon=Proj4js.common.adjust_lon(lon-this.long0);var x=this.x0+this.a*dlon*Math.cos(this.lat0);var y=this.y0+this.a*lat;this.t1=x;this.t2=Math.cos(this.lat0);p.x=x;p.y=y;return p;},inverse:function(p){p.x-=this.x0;p.y-=this.y0;var lat=p.y/this.a;if(Math.abs(lat)>Proj4js.common.HALF_PI){Proj4js.reportError("equi:Inv:DataError");}
var lon=Proj4js.common.adjust_lon(this.long0+p.x/(this.a*Math.cos(this.lat0)));p.x=lon;p.y=lat;}};Proj4js.Proj.merc={init:function(){if(this.lat_ts){if(this.sphere){this.k0=Math.cos(this.lat_ts);}else{this.k0=Proj4js.common.msfnz(this.es,Math.sin(this.lat_ts),Math.cos(this.lat_ts));}}},forward:function(p){var lon=p.x;var lat=p.y;if(lat*Proj4js.common.R2D>90.0&&lat*Proj4js.common.R2D<-90.0&&lon*Proj4js.common.R2D>180.0&&lon*Proj4js.common.R2D<-180.0){Proj4js.reportError("merc:forward: llInputOutOfRange: "+lon+" : "+lat);return null;}
var x,y;if(Math.abs(Math.abs(lat)-Proj4js.common.HALF_PI)<=Proj4js.common.EPSLN){Proj4js.reportError("merc:forward: ll2mAtPoles");return null;}else{if(this.sphere){x=this.x0+this.a*this.k0*Proj4js.common.adjust_lon(lon-this.long0);y=this.y0+this.a*this.k0*Math.log(Math.tan(Proj4js.common.FORTPI+0.5*lat));}else{var sinphi=Math.sin(lat);var ts=Proj4js.common.tsfnz(this.e,lat,sinphi);x=this.x0+this.a*this.k0*Proj4js.common.adjust_lon(lon-this.long0);y=this.y0-this.a*this.k0*Math.log(ts);}
p.x=x;p.y=y;return p;}},inverse:function(p){var x=p.x-this.x0;var y=p.y-this.y0;var lon,lat;if(this.sphere){lat=Proj4js.common.HALF_PI-2.0*Math.atan(Math.exp(-y/this.a*this.k0));}else{var ts=Math.exp(-y/(this.a*this.k0));lat=Proj4js.common.phi2z(this.e,ts);if(lat==-9999){Proj4js.reportError("merc:inverse: lat = -9999");return null;}}
lon=Proj4js.common.adjust_lon(this.long0+x/(this.a*this.k0));p.x=lon;p.y=lat;return p;}};Proj4js.Proj.utm={dependsOn:'tmerc',init:function(){if(!this.zone){Proj4js.reportError("utm:init: zone must be specified for UTM");return;}
this.lat0=0.0;this.long0=((6*Math.abs(this.zone))-183)*Proj4js.common.D2R;this.x0=500000.0;this.y0=this.utmSouth?10000000.0:0.0;this.k0=0.9996;Proj4js.Proj['tmerc'].init.apply(this);this.forward=Proj4js.Proj['tmerc'].forward;this.inverse=Proj4js.Proj['tmerc'].inverse;}};Proj4js.Proj.eqdc={init:function(){if(!this.mode)this.mode=0;this.temp=this.b/this.a;this.es=1.0-Math.pow(this.temp,2);this.e=Math.sqrt(this.es);this.e0=Proj4js.common.e0fn(this.es);this.e1=Proj4js.common.e1fn(this.es);this.e2=Proj4js.common.e2fn(this.es);this.e3=Proj4js.common.e3fn(this.es);this.sinphi=Math.sin(this.lat1);this.cosphi=Math.cos(this.lat1);this.ms1=Proj4js.common.msfnz(this.e,this.sinphi,this.cosphi);this.ml1=Proj4js.common.mlfn(this.e0,this.e1,this.e2,this.e3,this.lat1);if(this.mode!=0){if(Math.abs(this.lat1+this.lat2)<Proj4js.common.EPSLN){Proj4js.reportError("eqdc:Init:EqualLatitudes");}
this.sinphi=Math.sin(this.lat2);this.cosphi=Math.cos(this.lat2);this.ms2=Proj4js.common.msfnz(this.e,this.sinphi,this.cosphi);this.ml2=Proj4js.common.mlfn(this.e0,this.e1,this.e2,this.e3,this.lat2);if(Math.abs(this.lat1-this.lat2)>=Proj4js.common.EPSLN){this.ns=(this.ms1-this.ms2)/(this.ml2-this.ml1);}else{this.ns=this.sinphi;}}else{this.ns=this.sinphi;}
this.g=this.ml1+this.ms1/this.ns;this.ml0=Proj4js.common.mlfn(this.e0,this.e1,this.e2,this.e3,this.lat0);this.rh=this.a*(this.g-this.ml0);},forward:function(p){var lon=p.x;var lat=p.y;var ml=Proj4js.common.mlfn(this.e0,this.e1,this.e2,this.e3,lat);var rh1=this.a*(this.g-ml);var theta=this.ns*Proj4js.common.adjust_lon(lon-this.long0);var x=this.x0+rh1*Math.sin(theta);var y=this.y0+this.rh-rh1*Math.cos(theta);p.x=x;p.y=y;return p;},inverse:function(p){p.x-=this.x0;p.y=this.rh-p.y+this.y0;var con,rh1;if(this.ns>=0){var rh1=Math.sqrt(p.x*p.x+p.y*p.y);var con=1.0;}else{rh1=-Math.sqrt(p.x*p.x+p.y*p.y);con=-1.0;}
var theta=0.0;if(rh1!=0.0)theta=Math.atan2(con*p.x,con*p.y);var ml=this.g-rh1/this.a;var lat=this.phi3z(this.ml,this.e0,this.e1,this.e2,this.e3);var lon=Proj4js.common.adjust_lon(this.long0+theta/this.ns);p.x=lon;p.y=lat;return p;},phi3z:function(ml,e0,e1,e2,e3){var phi;var dphi;phi=ml;for(var i=0;i<15;i++){dphi=(ml+e1*Math.sin(2.0*phi)-e2*Math.sin(4.0*phi)+e3*Math.sin(6.0*phi))/e0-phi;phi+=dphi;if(Math.abs(dphi)<=.0000000001){return phi;}}
Proj4js.reportError("PHI3Z-CONV:Latitude failed to converge after 15 iterations");return null;}};Proj4js.Proj.tmerc={init:function(){this.e0=Proj4js.common.e0fn(this.es);this.e1=Proj4js.common.e1fn(this.es);this.e2=Proj4js.common.e2fn(this.es);this.e3=Proj4js.common.e3fn(this.es);this.ml0=this.a*Proj4js.common.mlfn(this.e0,this.e1,this.e2,this.e3,this.lat0);},forward:function(p){var lon=p.x;var lat=p.y;var delta_lon=Proj4js.common.adjust_lon(lon-this.long0);var con;var x,y;var sin_phi=Math.sin(lat);var cos_phi=Math.cos(lat);if(this.sphere){var b=cos_phi*Math.sin(delta_lon);if((Math.abs(Math.abs(b)-1.0))<.0000000001){Proj4js.reportError("tmerc:forward: Point projects into infinity");return(93);}else{x=.5*this.a*this.k0*Math.log((1.0+b)/(1.0-b));con=Math.acos(cos_phi*Math.cos(delta_lon)/Math.sqrt(1.0-b*b));if(lat<0)con=-con;y=this.a*this.k0*(con-this.lat0);}}else{var al=cos_phi*delta_lon;var als=Math.pow(al,2);var c=this.ep2*Math.pow(cos_phi,2);var tq=Math.tan(lat);var t=Math.pow(tq,2);con=1.0-this.es*Math.pow(sin_phi,2);var n=this.a/Math.sqrt(con);var ml=this.a*Proj4js.common.mlfn(this.e0,this.e1,this.e2,this.e3,lat);x=this.k0*n*al*(1.0+als/6.0*(1.0-t+c+als/20.0*(5.0-18.0*t+Math.pow(t,2)+72.0*c-58.0*this.ep2)))+this.x0;y=this.k0*(ml-this.ml0+n*tq*(als*(0.5+als/24.0*(5.0-t+9.0*c+4.0*Math.pow(c,2)+als/30.0*(61.0-58.0*t+Math.pow(t,2)+600.0*c-330.0*this.ep2)))))+this.y0;}
p.x=x;p.y=y;return p;},inverse:function(p){var con,phi;var delta_phi;var i;var max_iter=6;var lat,lon;if(this.sphere){var f=Math.exp(p.x/(this.a*this.k0));var g=.5*(f-1/f);var temp=this.lat0+p.y/(this.a*this.k0);var h=Math.cos(temp);con=Math.sqrt((1.0-h*h)/(1.0+g*g));lat=Proj4js.common.asinz(con);if(temp<0)
lat=-lat;if((g==0)&&(h==0)){lon=this.long0;}else{lon=Proj4js.common.adjust_lon(Math.atan2(g,h)+this.long0);}}else{var x=p.x-this.x0;var y=p.y-this.y0;con=(this.ml0+y/this.k0)/this.a;phi=con;for(i=0;true;i++){delta_phi=((con+this.e1*Math.sin(2.0*phi)-this.e2*Math.sin(4.0*phi)+this.e3*Math.sin(6.0*phi))/this.e0)-phi;phi+=delta_phi;if(Math.abs(delta_phi)<=Proj4js.common.EPSLN)break;if(i>=max_iter){Proj4js.reportError("tmerc:inverse: Latitude failed to converge");return(95);}}
if(Math.abs(phi)<Proj4js.common.HALF_PI){var sin_phi=Math.sin(phi);var cos_phi=Math.cos(phi);var tan_phi=Math.tan(phi);var c=this.ep2*Math.pow(cos_phi,2);var cs=Math.pow(c,2);var t=Math.pow(tan_phi,2);var ts=Math.pow(t,2);con=1.0-this.es*Math.pow(sin_phi,2);var n=this.a/Math.sqrt(con);var r=n*(1.0-this.es)/con;var d=x/(n*this.k0);var ds=Math.pow(d,2);lat=phi-(n*tan_phi*ds/r)*(0.5-ds/24.0*(5.0+3.0*t+10.0*c-4.0*cs-9.0*this.ep2-ds/30.0*(61.0+90.0*t+298.0*c+45.0*ts-252.0*this.ep2-3.0*cs)));lon=Proj4js.common.adjust_lon(this.long0+(d*(1.0-ds/6.0*(1.0+2.0*t+c-ds/20.0*(5.0-2.0*c+28.0*t-3.0*cs+8.0*this.ep2+24.0*ts)))/cos_phi));}else{lat=Proj4js.common.HALF_PI*Proj4js.common.sign(y);lon=this.long0;}}
p.x=lon;p.y=lat;return p;}};Proj4js.defs["GOOGLE"]="+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs";Proj4js.defs["EPSG:900913"]=Proj4js.defs["GOOGLE"];Proj4js.Proj.gstmerc={init:function(){var temp=this.b/this.a;this.e=Math.sqrt(1.0-temp*temp);this.lc=this.long0;this.rs=Math.sqrt(1.0+this.e*this.e*Math.pow(Math.cos(this.lat0),4.0)/(1.0-this.e*this.e));var sinz=Math.sin(this.lat0);var pc=Math.asin(sinz/this.rs);var sinzpc=Math.sin(pc);this.cp=Proj4js.common.latiso(0.0,pc,sinzpc)-this.rs*Proj4js.common.latiso(this.e,this.lat0,sinz);this.n2=this.k0*this.a*Math.sqrt(1.0-this.e*this.e)/(1.0-this.e*this.e*sinz*sinz);this.xs=this.x0;this.ys=this.y0-this.n2*pc;if(!this.title)this.title="Gauss Schreiber transverse mercator";},forward:function(p){var lon=p.x;var lat=p.y;var L=this.rs*(lon-this.lc);var Ls=this.cp+(this.rs*Proj4js.common.latiso(this.e,lat,Math.sin(lat)));var lat1=Math.asin(Math.sin(L)/Proj4js.common.cosh(Ls));var Ls1=Proj4js.common.latiso(0.0,lat1,Math.sin(lat1));p.x=this.xs+(this.n2*Ls1);p.y=this.ys+(this.n2*Math.atan(Proj4js.common.sinh(Ls)/Math.cos(L)));return p;},inverse:function(p){var x=p.x;var y=p.y;var L=Math.atan(Proj4js.common.sinh((x-this.xs)/this.n2)/Math.cos((y-this.ys)/this.n2));var lat1=Math.asin(Math.sin((y-this.ys)/this.n2)/Proj4js.common.cosh((x-this.xs)/this.n2));var LC=Proj4js.common.latiso(0.0,lat1,Math.sin(lat1));p.x=this.lc+L/this.rs;p.y=Proj4js.common.invlatiso(this.e,(LC-this.cp)/this.rs);return p;}};Proj4js.Proj.ortho={init:function(def){;this.sin_p14=Math.sin(this.lat0);this.cos_p14=Math.cos(this.lat0);},forward:function(p){var sinphi,cosphi;var dlon;var coslon;var ksp;var g;var lon=p.x;var lat=p.y;dlon=Proj4js.common.adjust_lon(lon-this.long0);sinphi=Math.sin(lat);cosphi=Math.cos(lat);coslon=Math.cos(dlon);g=this.sin_p14*sinphi+this.cos_p14*cosphi*coslon;ksp=1.0;if((g>0)||(Math.abs(g)<=Proj4js.common.EPSLN)){var x=this.a*ksp*cosphi*Math.sin(dlon);var y=this.y0+this.a*ksp*(this.cos_p14*sinphi-this.sin_p14*cosphi*coslon);}else{Proj4js.reportError("orthoFwdPointError");}
p.x=x;p.y=y;return p;},inverse:function(p){var rh;var z;var sinz,cosz;var temp;var con;var lon,lat;p.x-=this.x0;p.y-=this.y0;rh=Math.sqrt(p.x*p.x+p.y*p.y);if(rh>this.a+.0000001){Proj4js.reportError("orthoInvDataError");}
z=Proj4js.common.asinz(rh/this.a);sinz=Math.sin(z);cosz=Math.cos(z);lon=this.long0;if(Math.abs(rh)<=Proj4js.common.EPSLN){lat=this.lat0;}
lat=Proj4js.common.asinz(cosz*this.sin_p14+(p.y*sinz*this.cos_p14)/rh);con=Math.abs(lat0)-Proj4js.common.HALF_PI;if(Math.abs(con)<=Proj4js.common.EPSLN){if(this.lat0>=0){lon=Proj4js.common.adjust_lon(this.long0+Math.atan2(p.x,-p.y));}else{lon=Proj4js.common.adjust_lon(this.long0-Math.atan2(-p.x,p.y));}}
con=cosz-this.sin_p14*Math.sin(lat);if((Math.abs(con)>=Proj4js.common.EPSLN)||(Math.abs(x)>=Proj4js.common.EPSLN)){lon=Proj4js.common.adjust_lon(this.long0+Math.atan2((p.x*sinz*this.cos_p14),(con*rh)));}
p.x=lon;p.y=lat;return p;}};Proj4js.Proj.somerc={init:function(){var phy0=this.lat0;this.lambda0=this.long0;var sinPhy0=Math.sin(phy0);var semiMajorAxis=this.a;var invF=this.rf;var flattening=1/invF;var e2=2*flattening-Math.pow(flattening,2);var e=this.e=Math.sqrt(e2);this.R=semiMajorAxis*Math.sqrt(1-e2)/(1-e2*Math.pow(sinPhy0,2.0));this.alpha=Math.sqrt(1+e2/(1-e2)*Math.pow(Math.cos(phy0),4.0));this.b0=Math.asin(sinPhy0/this.alpha);this.K=Math.log(Math.tan(Math.PI/4.0+this.b0/2.0))
-this.alpha*Math.log(Math.tan(Math.PI/4.0+phy0/2.0))
+this.alpha*e/2*Math.log((1+e*sinPhy0)/(1-e*sinPhy0));},forward:function(p){var Sa1=Math.log(Math.tan(Math.PI/4.0-p.y/2.0));var Sa2=this.e/2.0*Math.log((1+this.e*Math.sin(p.y))/(1-this.e*Math.sin(p.y)));var S=-this.alpha*(Sa1+Sa2)+this.K;var b=2.0*(Math.atan(Math.exp(S))-Math.PI/4.0);var I=this.alpha*(p.x-this.lambda0);var rotI=Math.atan(Math.sin(I)/(Math.sin(this.b0)*Math.tan(b)+
Math.cos(this.b0)*Math.cos(I)));var rotB=Math.asin(Math.cos(this.b0)*Math.sin(b)-
Math.sin(this.b0)*Math.cos(b)*Math.cos(I));p.y=this.R/2.0*Math.log((1+Math.sin(rotB))/(1-Math.sin(rotB)))
+this.y0;p.x=this.R*rotI+this.x0;return p;},inverse:function(p){var Y=p.x-this.x0;var X=p.y-this.y0;var rotI=Y/this.R;var rotB=2*(Math.atan(Math.exp(X/this.R))-Math.PI/4.0);var b=Math.asin(Math.cos(this.b0)*Math.sin(rotB)
+Math.sin(this.b0)*Math.cos(rotB)*Math.cos(rotI));var I=Math.atan(Math.sin(rotI)/(Math.cos(this.b0)*Math.cos(rotI)-Math.sin(this.b0)*Math.tan(rotB)));var lambda=this.lambda0+I/this.alpha;var S=0.0;var phy=b;var prevPhy=-1000.0;var iteration=0;while(Math.abs(phy-prevPhy)>0.0000001)
{if(++iteration>20)
{Proj4js.reportError("omercFwdInfinity");return;}
S=1.0/this.alpha*(Math.log(Math.tan(Math.PI/4.0+b/2.0))-this.K)
+this.e*Math.log(Math.tan(Math.PI/4.0
+Math.asin(this.e*Math.sin(phy))/2.0));prevPhy=phy;phy=2.0*Math.atan(Math.exp(S))-Math.PI/2.0;}
p.x=lambda;p.y=phy;return p;}};Proj4js.Proj.stere={ssfn_:function(phit,sinphi,eccen){sinphi*=eccen;return(Math.tan(.5*(Proj4js.common.HALF_PI+phit))*Math.pow((1.-sinphi)/(1.+sinphi),.5*eccen));},TOL:1.e-8,NITER:8,CONV:1.e-10,S_POLE:0,N_POLE:1,OBLIQ:2,EQUIT:3,init:function(){this.phits=this.lat_ts?this.lat_ts:Proj4js.common.HALF_PI;var t=Math.abs(this.lat0);if((Math.abs(t)-Proj4js.common.HALF_PI)<Proj4js.common.EPSLN){this.mode=this.lat0<0.?this.S_POLE:this.N_POLE;}else{this.mode=t>Proj4js.common.EPSLN?this.OBLIQ:this.EQUIT;}
this.phits=Math.abs(this.phits);if(this.es){var X;switch(this.mode){case this.N_POLE:case this.S_POLE:if(Math.abs(this.phits-Proj4js.common.HALF_PI)<Proj4js.common.EPSLN){this.akm1=2.*this.k0/Math.sqrt(Math.pow(1+this.e,1+this.e)*Math.pow(1-this.e,1-this.e));}else{t=Math.sin(this.phits);this.akm1=Math.cos(this.phits)/Proj4js.common.tsfnz(this.e,this.phits,t);t*=this.e;this.akm1/=Math.sqrt(1.-t*t);}
break;case this.EQUIT:this.akm1=2.*this.k0;break;case this.OBLIQ:t=Math.sin(this.lat0);X=2.*Math.atan(this.ssfn_(this.lat0,t,this.e))-Proj4js.common.HALF_PI;t*=this.e;this.akm1=2.*this.k0*Math.cos(this.lat0)/Math.sqrt(1.-t*t);this.sinX1=Math.sin(X);this.cosX1=Math.cos(X);break;}}else{switch(this.mode){case this.OBLIQ:this.sinph0=Math.sin(this.lat0);this.cosph0=Math.cos(this.lat0);case this.EQUIT:this.akm1=2.*this.k0;break;case this.S_POLE:case this.N_POLE:this.akm1=Math.abs(this.phits-Proj4js.common.HALF_PI)>=Proj4js.common.EPSLN?Math.cos(this.phits)/Math.tan(Proj4js.common.FORTPI-.5*this.phits):2.*this.k0;break;}}},forward:function(p){var lon=p.x;lon=Proj4js.common.adjust_lon(lon-this.long0);var lat=p.y;var x,y;if(this.sphere){var sinphi,cosphi,coslam,sinlam;sinphi=Math.sin(lat);cosphi=Math.cos(lat);coslam=Math.cos(lon);sinlam=Math.sin(lon);switch(this.mode){case this.EQUIT:y=1.+cosphi*coslam;if(y<=Proj4js.common.EPSLN){F_ERROR;}
y=this.akm1/y;x=y*cosphi*sinlam;y*=sinphi;break;case this.OBLIQ:y=1.+this.sinph0*sinphi+this.cosph0*cosphi*coslam;if(y<=Proj4js.common.EPSLN){F_ERROR;}
y=this.akm1/y;x=y*cosphi*sinlam;y*=this.cosph0*sinphi-this.sinph0*cosphi*coslam;break;case this.N_POLE:coslam=-coslam;lat=-lat;case this.S_POLE:if(Math.abs(lat-Proj4js.common.HALF_PI)<this.TOL){F_ERROR;}
y=this.akm1*Math.tan(Proj4js.common.FORTPI+.5*lat);x=sinlam*y;y*=coslam;break;}}else{coslam=Math.cos(lon);sinlam=Math.sin(lon);sinphi=Math.sin(lat);if(this.mode==this.OBLIQ||this.mode==this.EQUIT){X=2.*Math.atan(this.ssfn_(lat,sinphi,this.e));sinX=Math.sin(X-Proj4js.common.HALF_PI);cosX=Math.cos(X);}
switch(this.mode){case this.OBLIQ:A=this.akm1/(this.cosX1*(1.+this.sinX1*sinX+this.cosX1*cosX*coslam));y=A*(this.cosX1*sinX-this.sinX1*cosX*coslam);x=A*cosX;break;case this.EQUIT:A=2.*this.akm1/(1.+cosX*coslam);y=A*sinX;x=A*cosX;break;case this.S_POLE:lat=-lat;coslam=-coslam;sinphi=-sinphi;case this.N_POLE:x=this.akm1*Proj4js.common.tsfnz(this.e,lat,sinphi);y=-x*coslam;break;}
x=x*sinlam;}
p.x=x*this.a+this.x0;p.y=y*this.a+this.y0;return p;},inverse:function(p){var x=(p.x-this.x0)/this.a;var y=(p.y-this.y0)/this.a;var lon,lat;var cosphi,sinphi,tp=0.0,phi_l=0.0,rho,halfe=0.0,pi2=0.0;var i;if(this.sphere){var c,rh,sinc,cosc;rh=Math.sqrt(x*x+y*y);c=2.*Math.atan(rh/this.akm1);sinc=Math.sin(c);cosc=Math.cos(c);lon=0.;switch(this.mode){case this.EQUIT:if(Math.abs(rh)<=Proj4js.common.EPSLN){lat=0.;}else{lat=Math.asin(y*sinc/rh);}
if(cosc!=0.||x!=0.)lon=Math.atan2(x*sinc,cosc*rh);break;case this.OBLIQ:if(Math.abs(rh)<=Proj4js.common.EPSLN){lat=this.phi0;}else{lat=Math.asin(cosc*sinph0+y*sinc*cosph0/rh);}
c=cosc-sinph0*Math.sin(lat);if(c!=0.||x!=0.){lon=Math.atan2(x*sinc*cosph0,c*rh);}
break;case this.N_POLE:y=-y;case this.S_POLE:if(Math.abs(rh)<=Proj4js.common.EPSLN){lat=this.phi0;}else{lat=Math.asin(this.mode==this.S_POLE?-cosc:cosc);}
lon=(x==0.&&y==0.)?0.:Math.atan2(x,y);break;}}else{rho=Math.sqrt(x*x+y*y);switch(this.mode){case this.OBLIQ:case this.EQUIT:tp=2.*Math.atan2(rho*this.cosX1,this.akm1);cosphi=Math.cos(tp);sinphi=Math.sin(tp);if(rho==0.0){phi_l=Math.asin(cosphi*this.sinX1);}else{phi_l=Math.asin(cosphi*this.sinX1+(y*sinphi*this.cosX1/rho));}
tp=Math.tan(.5*(Proj4js.common.HALF_PI+phi_l));x*=sinphi;y=rho*this.cosX1*cosphi-y*this.sinX1*sinphi;pi2=Proj4js.common.HALF_PI;halfe=.5*this.e;break;case this.N_POLE:y=-y;case this.S_POLE:tp=-rho/this.akm1;phi_l=Proj4js.common.HALF_PI-2.*Math.atan(tp);pi2=-Proj4js.common.HALF_PI;halfe=-.5*this.e;break;}
for(i=this.NITER;i--;phi_l=lat){sinphi=this.e*Math.sin(phi_l);lat=2.*Math.atan(tp*Math.pow((1.+sinphi)/(1.-sinphi),halfe))-pi2;if(Math.abs(phi_l-lat)<this.CONV){if(this.mode==this.S_POLE)lat=-lat;lon=(x==0.&&y==0.)?0.:Math.atan2(x,y);p.x=Proj4js.common.adjust_lon(lon+this.long0);p.y=lat;return p;}}}}};Proj4js.Proj.nzmg={iterations:1,init:function(){this.A=new Array();this.A[1]=+0.6399175073;this.A[2]=-0.1358797613;this.A[3]=+0.063294409;this.A[4]=-0.02526853;this.A[5]=+0.0117879;this.A[6]=-0.0055161;this.A[7]=+0.0026906;this.A[8]=-0.001333;this.A[9]=+0.00067;this.A[10]=-0.00034;this.B_re=new Array();this.B_im=new Array();this.B_re[1]=+0.7557853228;this.B_im[1]=0.0;this.B_re[2]=+0.249204646;this.B_im[2]=+0.003371507;this.B_re[3]=-0.001541739;this.B_im[3]=+0.041058560;this.B_re[4]=-0.10162907;this.B_im[4]=+0.01727609;this.B_re[5]=-0.26623489;this.B_im[5]=-0.36249218;this.B_re[6]=-0.6870983;this.B_im[6]=-1.1651967;this.C_re=new Array();this.C_im=new Array();this.C_re[1]=+1.3231270439;this.C_im[1]=0.0;this.C_re[2]=-0.577245789;this.C_im[2]=-0.007809598;this.C_re[3]=+0.508307513;this.C_im[3]=-0.112208952;this.C_re[4]=-0.15094762;this.C_im[4]=+0.18200602;this.C_re[5]=+1.01418179;this.C_im[5]=+1.64497696;this.C_re[6]=+1.9660549;this.C_im[6]=+2.5127645;this.D=new Array();this.D[1]=+1.5627014243;this.D[2]=+0.5185406398;this.D[3]=-0.03333098;this.D[4]=-0.1052906;this.D[5]=-0.0368594;this.D[6]=+0.007317;this.D[7]=+0.01220;this.D[8]=+0.00394;this.D[9]=-0.0013;},forward:function(p){var lon=p.x;var lat=p.y;var delta_lat=lat-this.lat0;var delta_lon=lon-this.long0;var d_phi=delta_lat/Proj4js.common.SEC_TO_RAD*1E-5;var d_lambda=delta_lon;var d_phi_n=1;var d_psi=0;for(n=1;n<=10;n++){d_phi_n=d_phi_n*d_phi;d_psi=d_psi+this.A[n]*d_phi_n;}
var th_re=d_psi;var th_im=d_lambda;var th_n_re=1;var th_n_im=0;var th_n_re1;var th_n_im1;var z_re=0;var z_im=0;for(n=1;n<=6;n++){th_n_re1=th_n_re*th_re-th_n_im*th_im;th_n_im1=th_n_im*th_re+th_n_re*th_im;th_n_re=th_n_re1;th_n_im=th_n_im1;z_re=z_re+this.B_re[n]*th_n_re-this.B_im[n]*th_n_im;z_im=z_im+this.B_im[n]*th_n_re+this.B_re[n]*th_n_im;}
x=(z_im*this.a)+this.x0;y=(z_re*this.a)+this.y0;p.x=x;p.y=y;return p;},inverse:function(p){var x=p.x;var y=p.y;var delta_x=x-this.x0;var delta_y=y-this.y0;var z_re=delta_y/this.a;var z_im=delta_x/this.a;var z_n_re=1;var z_n_im=0;var z_n_re1;var z_n_im1;var th_re=0;var th_im=0;for(n=1;n<=6;n++){z_n_re1=z_n_re*z_re-z_n_im*z_im;z_n_im1=z_n_im*z_re+z_n_re*z_im;z_n_re=z_n_re1;z_n_im=z_n_im1;th_re=th_re+this.C_re[n]*z_n_re-this.C_im[n]*z_n_im;th_im=th_im+this.C_im[n]*z_n_re+this.C_re[n]*z_n_im;}
for(i=0;i<this.iterations;i++){var th_n_re=th_re;var th_n_im=th_im;var th_n_re1;var th_n_im1;var num_re=z_re;var num_im=z_im;for(n=2;n<=6;n++){th_n_re1=th_n_re*th_re-th_n_im*th_im;th_n_im1=th_n_im*th_re+th_n_re*th_im;th_n_re=th_n_re1;th_n_im=th_n_im1;num_re=num_re+(n-1)*(this.B_re[n]*th_n_re-this.B_im[n]*th_n_im);num_im=num_im+(n-1)*(this.B_im[n]*th_n_re+this.B_re[n]*th_n_im);}
th_n_re=1;th_n_im=0;var den_re=this.B_re[1];var den_im=this.B_im[1];for(n=2;n<=6;n++){th_n_re1=th_n_re*th_re-th_n_im*th_im;th_n_im1=th_n_im*th_re+th_n_re*th_im;th_n_re=th_n_re1;th_n_im=th_n_im1;den_re=den_re+n*(this.B_re[n]*th_n_re-this.B_im[n]*th_n_im);den_im=den_im+n*(this.B_im[n]*th_n_re+this.B_re[n]*th_n_im);}
var den2=den_re*den_re+den_im*den_im;th_re=(num_re*den_re+num_im*den_im)/den2;th_im=(num_im*den_re-num_re*den_im)/den2;}
var d_psi=th_re;var d_lambda=th_im;var d_psi_n=1;var d_phi=0;for(n=1;n<=9;n++){d_psi_n=d_psi_n*d_psi;d_phi=d_phi+this.D[n]*d_psi_n;}
var lat=this.lat0+(d_phi*Proj4js.common.SEC_TO_RAD*1E5);var lon=this.long0+d_lambda;p.x=lon;p.y=lat;return p;}};Proj4js.Proj.mill={init:function(){},forward:function(p){var lon=p.x;var lat=p.y;var dlon=Proj4js.common.adjust_lon(lon-this.long0);var x=this.x0+this.a*dlon;var y=this.y0+this.a*Math.log(Math.tan((Proj4js.common.PI/4.0)+(lat/2.5)))*1.25;p.x=x;p.y=y;return p;},inverse:function(p){p.x-=this.x0;p.y-=this.y0;var lon=Proj4js.common.adjust_lon(this.long0+p.x/this.a);var lat=2.5*(Math.atan(Math.exp(0.8*p.y/this.a))-Proj4js.common.PI/4.0);p.x=lon;p.y=lat;return p;}};Proj4js.Proj.gnom={init:function(def){this.sin_p14=Math.sin(this.lat0);this.cos_p14=Math.cos(this.lat0);this.infinity_dist=1000*this.a;},forward:function(p){var sinphi,cosphi;var dlon;var coslon;var ksp;var g;var lon=p.x;var lat=p.y;dlon=Proj4js.common.adjust_lon(lon-this.long0);sinphi=Math.sin(lat);cosphi=Math.cos(lat);coslon=Math.cos(dlon);g=this.sin_p14*sinphi+this.cos_p14*cosphi*coslon;ksp=1.0;if((g>0)||(Math.abs(g)<=Proj4js.common.EPSLN)){x=this.x0+this.a*ksp*cosphi*Math.sin(dlon)/g;y=this.y0+this.a*ksp*(this.cos_p14*sinphi-this.sin_p14*cosphi*coslon)/g;}else{Proj4js.reportError("orthoFwdPointError");x=this.x0+this.infinity_dist*cosphi*Math.sin(dlon);y=this.y0+this.infinity_dist*(this.cos_p14*sinphi-this.sin_p14*cosphi*coslon);}
p.x=x;p.y=y;return p;},inverse:function(p){var rh;var z;var sinc,cosc;var c;var lon,lat;p.x=(p.x-this.x0)/this.a;p.y=(p.y-this.y0)/this.a;p.x/=this.k0;p.y/=this.k0;if((rh=Math.sqrt(p.x*p.x+p.y*p.y))){c=Math.atan2(rh,this.rc);sinc=Math.sin(c);cosc=Math.cos(c);lat=Proj4js.common.asinz(cosc*this.sin_p14+(p.y*sinc*this.cos_p14)/rh);lon=Math.atan2(p.x*sinc,rh*this.cos_p14*cosc-p.y*this.sin_p14*sinc);lon=Proj4js.common.adjust_lon(this.long0+lon);}else{lat=this.phic0;lon=0.0;}
p.x=lon;p.y=lat;return p;}};Proj4js.Proj.sinu={init:function(){this.R=6370997.0;},forward:function(p){var x,y,delta_lon;var lon=p.x;var lat=p.y;delta_lon=Proj4js.common.adjust_lon(lon-this.long0);x=this.R*delta_lon*Math.cos(lat)+this.x0;y=this.R*lat+this.y0;p.x=x;p.y=y;return p;},inverse:function(p){var lat,temp,lon;p.x-=this.x0;p.y-=this.y0;lat=p.y/this.R;if(Math.abs(lat)>Proj4js.common.HALF_PI){Proj4js.reportError("sinu:Inv:DataError");}
temp=Math.abs(lat)-Proj4js.common.HALF_PI;if(Math.abs(temp)>Proj4js.common.EPSLN){temp=this.long0+p.x/(this.R*Math.cos(lat));lon=Proj4js.common.adjust_lon(temp);}else{lon=this.long0;}
p.x=lon;p.y=lat;return p;}};Proj4js.Proj.vandg={init:function(){this.R=6370997.0;},forward:function(p){var lon=p.x;var lat=p.y;var dlon=Proj4js.common.adjust_lon(lon-this.long0);var x,y;if(Math.abs(lat)<=Proj4js.common.EPSLN){x=this.x0+this.R*dlon;y=this.y0;}
var theta=Proj4js.common.asinz(2.0*Math.abs(lat/Proj4js.common.PI));if((Math.abs(dlon)<=Proj4js.common.EPSLN)||(Math.abs(Math.abs(lat)-Proj4js.common.HALF_PI)<=Proj4js.common.EPSLN)){x=this.x0;if(lat>=0){y=this.y0+Proj4js.common.PI*this.R*Math.tan(.5*theta);}else{y=this.y0+Proj4js.common.PI*this.R*-Math.tan(.5*theta);}}
var al=.5*Math.abs((Proj4js.common.PI/dlon)-(dlon/Proj4js.common.PI));var asq=al*al;var sinth=Math.sin(theta);var costh=Math.cos(theta);var g=costh/(sinth+costh-1.0);var gsq=g*g;var m=g*(2.0/sinth-1.0);var msq=m*m;var con=Proj4js.common.PI*this.R*(al*(g-msq)+Math.sqrt(asq*(g-msq)*(g-msq)-(msq+asq)*(gsq-msq)))/(msq+asq);if(dlon<0){con=-con;}
x=this.x0+con;con=Math.abs(con/(Proj4js.common.PI*this.R));if(lat>=0){y=this.y0+Proj4js.common.PI*this.R*Math.sqrt(1.0-con*con-2.0*al*con);}else{y=this.y0-Proj4js.common.PI*this.R*Math.sqrt(1.0-con*con-2.0*al*con);}
p.x=x;p.y=y;return p;},inverse:function(p){var dlon;var xx,yy,xys,c1,c2,c3;var al,asq;var a1;var m1;var con;var th1;var d;p.x-=this.x0;p.y-=this.y0;con=Proj4js.common.PI*this.R;xx=p.x/con;yy=p.y/con;xys=xx*xx+yy*yy;c1=-Math.abs(yy)*(1.0+xys);c2=c1-2.0*yy*yy+xx*xx;c3=-2.0*c1+1.0+2.0*yy*yy+xys*xys;d=yy*yy/c3+(2.0*c2*c2*c2/c3/c3/c3-9.0*c1*c2/c3/c3)/27.0;a1=(c1-c2*c2/3.0/c3)/c3;m1=2.0*Math.sqrt(-a1/3.0);con=((3.0*d)/a1)/m1;if(Math.abs(con)>1.0){if(con>=0.0){con=1.0;}else{con=-1.0;}}
th1=Math.acos(con)/3.0;if(p.y>=0){lat=(-m1*Math.cos(th1+Proj4js.common.PI/3.0)-c2/3.0/c3)*Proj4js.common.PI;}else{lat=-(-m1*Math.cos(th1+PI/3.0)-c2/3.0/c3)*Proj4js.common.PI;}
if(Math.abs(xx)<Proj4js.common.EPSLN){lon=this.long0;}
lon=Proj4js.common.adjust_lon(this.long0+Proj4js.common.PI*(xys-1.0+Math.sqrt(1.0+2.0*(xx*xx-yy*yy)+xys*xys))/2.0/xx);p.x=lon;p.y=lat;return p;}};Proj4js.Proj.cea={init:function(){},forward:function(p){var lon=p.x;var lat=p.y;dlon=Proj4js.common.adjust_lon(lon-this.long0);var x=this.x0+this.a*dlon*Math.cos(this.lat_ts);var y=this.y0+this.a*Math.sin(lat)/Math.cos(this.lat_ts);p.x=x;p.y=y;return p;},inverse:function(p){p.x-=this.x0;p.y-=this.y0;var lon=Proj4js.common.adjust_lon(this.long0+(p.x/this.a)/Math.cos(this.lat_ts));var lat=Math.asin((p.y/this.a)*Math.cos(this.lat_ts));p.x=lon;p.y=lat;return p;}};Proj4js.Proj.eqc={init:function(){if(!this.x0)this.x0=0;if(!this.y0)this.y0=0;if(!this.lat0)this.lat0=0;if(!this.long0)this.long0=0;if(!this.lat_ts)this.lat_ts=0;if(!this.title)this.title="Equidistant Cylindrical (Plate Carre)";this.rc=Math.cos(this.lat_ts);},forward:function(p){var lon=p.x;var lat=p.y;var dlon=Proj4js.common.adjust_lon(lon-this.long0);var dlat=Proj4js.common.adjust_lat(lat-this.lat0);p.x=this.x0+(this.a*dlon*this.rc);p.y=this.y0+(this.a*dlat);return p;},inverse:function(p){var x=p.x;var y=p.y;p.x=Proj4js.common.adjust_lon(this.long0+((x-this.x0)/(this.a*this.rc)));p.y=Proj4js.common.adjust_lat(this.lat0+((y-this.y0)/(this.a)));return p;}};Proj4js.Proj.cass={init:function(){if(!this.sphere){this.en=this.pj_enfn(this.es)
this.m0=this.pj_mlfn(this.lat0,Math.sin(this.lat0),Math.cos(this.lat0),this.en);}},C1:.16666666666666666666,C2:.00833333333333333333,C3:.04166666666666666666,C4:.33333333333333333333,C5:.06666666666666666666,forward:function(p){var x,y;var lam=p.x;var phi=p.y;lam=Proj4js.common.adjust_lon(lam-this.long0);if(this.sphere){x=Math.asin(Math.cos(phi)*Math.sin(lam));y=Math.atan2(Math.tan(phi),Math.cos(lam))-this.phi0;}else{this.n=Math.sin(phi);this.c=Math.cos(phi);y=this.pj_mlfn(phi,this.n,this.c,this.en);this.n=1./Math.sqrt(1.-this.es*this.n*this.n);this.tn=Math.tan(phi);this.t=this.tn*this.tn;this.a1=lam*this.c;this.c*=this.es*this.c/(1-this.es);this.a2=this.a1*this.a1;x=this.n*this.a1*(1.-this.a2*this.t*(this.C1-(8.-this.t+8.*this.c)*this.a2*this.C2));y-=this.m0-this.n*this.tn*this.a2*(.5+(5.-this.t+6.*this.c)*this.a2*this.C3);}
p.x=this.a*x+this.x0;p.y=this.a*y+this.y0;return p;},inverse:function(p){p.x-=this.x0;p.y-=this.y0;var x=p.x/this.a;var y=p.y/this.a;if(this.sphere){this.dd=y+this.lat0;phi=Math.asin(Math.sin(this.dd)*Math.cos(x));lam=Math.atan2(Math.tan(x),Math.cos(this.dd));}else{ph1=this.pj_inv_mlfn(this.m0+y,this.es,this.en);this.tn=Math.tan(ph1);this.t=this.tn*this.tn;this.n=Math.sin(ph1);this.r=1./(1.-this.es*this.n*this.n);this.n=Math.sqrt(this.r);this.r*=(1.-this.es)*this.n;this.dd=x/this.n;this.d2=this.dd*this.dd;phi=ph1-(this.n*this.tn/this.r)*this.d2*(.5-(1.+3.*this.t)*this.d2*this.C3);lam=this.dd*(1.+this.t*this.d2*(-this.C4+(1.+3.*this.t)*this.d2*this.C5))/Math.cos(ph1);}
p.x=Proj4js.common.adjust_lon(this.long0+lam);p.y=phi;return p;},pj_enfn:function(es){en=new Array();en[0]=this.C00-es*(this.C02+es*(this.C04+es*(this.C06+es*this.C08)));en[1]=es*(this.C22-es*(this.C04+es*(this.C06+es*this.C08)));var t=es*es;en[2]=t*(this.C44-es*(this.C46+es*this.C48));t*=es;en[3]=t*(this.C66-es*this.C68);en[4]=t*es*this.C88;return en;},pj_mlfn:function(phi,sphi,cphi,en){cphi*=sphi;sphi*=sphi;return(en[0]*phi-cphi*(en[1]+sphi*(en[2]+sphi*(en[3]+sphi*en[4]))));},pj_inv_mlfn:function(arg,es,en){k=1./(1.-es);phi=arg;for(i=Proj4js.common.MAX_ITER;i;--i){s=Math.sin(phi);t=1.-es*s*s;t=(this.pj_mlfn(phi,s,Math.cos(phi),en)-arg)*(t*Math.sqrt(t))*k;phi-=t;if(Math.abs(t)<Proj4js.common.EPSLN)
return phi;}
Proj4js.reportError("cass:pj_inv_mlfn: Convergence error");return phi;},C00:1.0,C02:.25,C04:.046875,C06:.01953125,C08:.01068115234375,C22:.75,C44:.46875,C46:.01302083333333333333,C48:.00712076822916666666,C66:.36458333333333333333,C68:.00569661458333333333,C88:.3076171875}
Proj4js.Proj.gauss={init:function(){sphi=Math.sin(this.lat0);cphi=Math.cos(this.lat0);cphi*=cphi;this.rc=Math.sqrt(1.0-this.es)/(1.0-this.es*sphi*sphi);this.C=Math.sqrt(1.0+this.es*cphi*cphi/(1.0-this.es));this.phic0=Math.asin(sphi/this.C);this.ratexp=0.5*this.C*this.e;this.K=Math.tan(0.5*this.phic0+Proj4js.common.FORTPI)/(Math.pow(Math.tan(0.5*this.lat0+Proj4js.common.FORTPI),this.C)*Proj4js.common.srat(this.e*sphi,this.ratexp));},forward:function(p){var lon=p.x;var lat=p.y;p.y=2.0*Math.atan(this.K*Math.pow(Math.tan(0.5*lat+Proj4js.common.FORTPI),this.C)*Proj4js.common.srat(this.e*Math.sin(lat),this.ratexp))-Proj4js.common.HALF_PI;p.x=this.C*lon;return p;},inverse:function(p){var DEL_TOL=1e-14;var lon=p.x/this.C;var lat=p.y;num=Math.pow(Math.tan(0.5*lat+Proj4js.common.FORTPI)/this.K,1./this.C);for(var i=Proj4js.common.MAX_ITER;i>0;--i){lat=2.0*Math.atan(num*Proj4js.common.srat(this.e*Math.sin(p.y),-0.5*this.e))-Proj4js.common.HALF_PI;if(Math.abs(lat-p.y)<DEL_TOL)break;p.y=lat;}
if(!i){Proj4js.reportError("gauss:inverse:convergence failed");return null;}
p.x=lon;p.y=lat;return p;}};Proj4js.Proj.omerc={init:function(){if(!this.mode)this.mode=0;if(!this.lon1){this.lon1=0;this.mode=1;}
if(!this.lon2)this.lon2=0;if(!this.lat2)this.lat2=0;var temp=this.b/this.a;var es=1.0-Math.pow(temp,2);var e=Math.sqrt(es);this.sin_p20=Math.sin(this.lat0);this.cos_p20=Math.cos(this.lat0);this.con=1.0-this.es*this.sin_p20*this.sin_p20;this.com=Math.sqrt(1.0-es);this.bl=Math.sqrt(1.0+this.es*Math.pow(this.cos_p20,4.0)/(1.0-es));this.al=this.a*this.bl*this.k0*this.com/this.con;if(Math.abs(this.lat0)<Proj4js.common.EPSLN){this.ts=1.0;this.d=1.0;this.el=1.0;}else{this.ts=Proj4js.common.tsfnz(this.e,this.lat0,this.sin_p20);this.con=Math.sqrt(this.con);this.d=this.bl*this.com/(this.cos_p20*this.con);if((this.d*this.d-1.0)>0.0){if(this.lat0>=0.0){this.f=this.d+Math.sqrt(this.d*this.d-1.0);}else{this.f=this.d-Math.sqrt(this.d*this.d-1.0);}}else{this.f=this.d;}
this.el=this.f*Math.pow(this.ts,this.bl);}
if(this.mode!=0){this.g=.5*(this.f-1.0/this.f);this.gama=Proj4js.common.asinz(Math.sin(this.alpha)/this.d);this.longc=this.longc-Proj4js.common.asinz(this.g*Math.tan(this.gama))/this.bl;this.con=Math.abs(this.lat0);if((this.con>Proj4js.common.EPSLN)&&(Math.abs(this.con-Proj4js.common.HALF_PI)>Proj4js.common.EPSLN)){this.singam=Math.sin(this.gama);this.cosgam=Math.cos(this.gama);this.sinaz=Math.sin(this.alpha);this.cosaz=Math.cos(this.alpha);if(this.lat0>=0){this.u=(this.al/this.bl)*Math.atan(Math.sqrt(this.d*this.d-1.0)/this.cosaz);}else{this.u=-(this.al/this.bl)*Math.atan(Math.sqrt(this.d*this.d-1.0)/this.cosaz);}}else{Proj4js.reportError("omerc:Init:DataError");}}else{this.sinphi=Math.sin(this.at1);this.ts1=Proj4js.common.tsfnz(this.e,this.lat1,this.sinphi);this.sinphi=Math.sin(this.lat2);this.ts2=Proj4js.common.tsfnz(this.e,this.lat2,this.sinphi);this.h=Math.pow(this.ts1,this.bl);this.l=Math.pow(this.ts2,this.bl);this.f=this.el/this.h;this.g=.5*(this.f-1.0/this.f);this.j=(this.el*this.el-this.l*this.h)/(this.el*this.el+this.l*this.h);this.p=(this.l-this.h)/(this.l+this.h);this.dlon=this.lon1-this.lon2;if(this.dlon<-Proj4js.common.PI)this.lon2=this.lon2-2.0*Proj4js.common.PI;if(this.dlon>Proj4js.common.PI)this.lon2=this.lon2+2.0*Proj4js.common.PI;this.dlon=this.lon1-this.lon2;this.longc=.5*(this.lon1+this.lon2)-Math.atan(this.j*Math.tan(.5*this.bl*this.dlon)/this.p)/this.bl;this.dlon=Proj4js.common.adjust_lon(this.lon1-this.longc);this.gama=Math.atan(Math.sin(this.bl*this.dlon)/this.g);this.alpha=Proj4js.common.asinz(this.d*Math.sin(this.gama));if(Math.abs(this.lat1-this.lat2)<=Proj4js.common.EPSLN){Proj4js.reportError("omercInitDataError");}else{this.con=Math.abs(this.lat1);}
if((this.con<=Proj4js.common.EPSLN)||(Math.abs(this.con-HALF_PI)<=Proj4js.common.EPSLN)){Proj4js.reportError("omercInitDataError");}else{if(Math.abs(Math.abs(this.lat0)-Proj4js.common.HALF_PI)<=Proj4js.common.EPSLN){Proj4js.reportError("omercInitDataError");}}
this.singam=Math.sin(this.gam);this.cosgam=Math.cos(this.gam);this.sinaz=Math.sin(this.alpha);this.cosaz=Math.cos(this.alpha);if(this.lat0>=0){this.u=(this.al/this.bl)*Math.atan(Math.sqrt(this.d*this.d-1.0)/this.cosaz);}else{this.u=-(this.al/this.bl)*Math.atan(Math.sqrt(this.d*this.d-1.0)/this.cosaz);}}},forward:function(p){var theta;var sin_phi,cos_phi;var b;var c,t,tq;var con,n,ml;var q,us,vl;var ul,vs;var s;var dlon;var ts1;var lon=p.x;var lat=p.y;sin_phi=Math.sin(lat);dlon=Proj4js.common.adjust_lon(lon-this.longc);vl=Math.sin(this.bl*dlon);if(Math.abs(Math.abs(lat)-Proj4js.common.HALF_PI)>Proj4js.common.EPSLN){ts1=Proj4js.common.tsfnz(this.e,lat,sin_phi);q=this.el/(Math.pow(ts1,this.bl));s=.5*(q-1.0/q);t=.5*(q+1.0/q);ul=(s*this.singam-vl*this.cosgam)/t;con=Math.cos(this.bl*dlon);if(Math.abs(con)<.0000001){us=this.al*this.bl*dlon;}else{us=this.al*Math.atan((s*this.cosgam+vl*this.singam)/con)/this.bl;if(con<0)us=us+Proj4js.common.PI*this.al/this.bl;}}else{if(lat>=0){ul=this.singam;}else{ul=-this.singam;}
us=this.al*lat/this.bl;}
if(Math.abs(Math.abs(ul)-1.0)<=Proj4js.common.EPSLN){Proj4js.reportError("omercFwdInfinity");}
vs=.5*this.al*Math.log((1.0-ul)/(1.0+ul))/this.bl;us=us-this.u;var x=this.x0+vs*this.cosaz+us*this.sinaz;var y=this.y0+us*this.cosaz-vs*this.sinaz;p.x=x;p.y=y;return p;},inverse:function(p){var delta_lon;var theta;var delta_theta;var sin_phi,cos_phi;var b;var c,t,tq;var con,n,ml;var vs,us,q,s,ts1;var vl,ul,bs;var dlon;var flag;p.x-=this.x0;p.y-=this.y0;flag=0;vs=p.x*this.cosaz-p.y*this.sinaz;us=p.y*this.cosaz+p.x*this.sinaz;us=us+this.u;q=Math.exp(-this.bl*vs/this.al);s=.5*(q-1.0/q);t=.5*(q+1.0/q);vl=Math.sin(this.bl*us/this.al);ul=(vl*this.cosgam+s*this.singam)/t;if(Math.abs(Math.abs(ul)-1.0)<=Proj4js.common.EPSLN)
{lon=this.longc;if(ul>=0.0){lat=Proj4js.common.HALF_PI;}else{lat=-Proj4js.common.HALF_PI;}}else{con=1.0/this.bl;ts1=Math.pow((this.el/Math.sqrt((1.0+ul)/(1.0-ul))),con);lat=Proj4js.common.phi2z(this.e,ts1);theta=this.longc-Math.atan2((s*this.cosgam-vl*this.singam),con)/this.bl;lon=Proj4js.common.adjust_lon(theta);}
p.x=lon;p.y=lat;return p;}};Proj4js.Proj.lcc={init:function(){if(!this.lat2){this.lat2=this.lat0;}
if(!this.k0)this.k0=1.0;if(Math.abs(this.lat1+this.lat2)<Proj4js.common.EPSLN){Proj4js.reportError("lcc:init: Equal Latitudes");return;}
var temp=this.b/this.a;this.e=Math.sqrt(1.0-temp*temp);var sin1=Math.sin(this.lat1);var cos1=Math.cos(this.lat1);var ms1=Proj4js.common.msfnz(this.e,sin1,cos1);var ts1=Proj4js.common.tsfnz(this.e,this.lat1,sin1);var sin2=Math.sin(this.lat2);var cos2=Math.cos(this.lat2);var ms2=Proj4js.common.msfnz(this.e,sin2,cos2);var ts2=Proj4js.common.tsfnz(this.e,this.lat2,sin2);var ts0=Proj4js.common.tsfnz(this.e,this.lat0,Math.sin(this.lat0));if(Math.abs(this.lat1-this.lat2)>Proj4js.common.EPSLN){this.ns=Math.log(ms1/ms2)/Math.log(ts1/ts2);}else{this.ns=sin1;}
this.f0=ms1/(this.ns*Math.pow(ts1,this.ns));this.rh=this.a*this.f0*Math.pow(ts0,this.ns);if(!this.title)this.title="Lambert Conformal Conic";},forward:function(p){var lon=p.x;var lat=p.y;if(lat<=90.0&&lat>=-90.0&&lon<=180.0&&lon>=-180.0){}else{Proj4js.reportError("lcc:forward: llInputOutOfRange: "+lon+" : "+lat);return null;}
var con=Math.abs(Math.abs(lat)-Proj4js.common.HALF_PI);var ts,rh1;if(con>Proj4js.common.EPSLN){ts=Proj4js.common.tsfnz(this.e,lat,Math.sin(lat));rh1=this.a*this.f0*Math.pow(ts,this.ns);}else{con=lat*this.ns;if(con<=0){Proj4js.reportError("lcc:forward: No Projection");return null;}
rh1=0;}
var theta=this.ns*Proj4js.common.adjust_lon(lon-this.long0);p.x=this.k0*(rh1*Math.sin(theta))+this.x0;p.y=this.k0*(this.rh-rh1*Math.cos(theta))+this.y0;return p;},inverse:function(p){var rh1,con,ts;var lat,lon;x=(p.x-this.x0)/this.k0;y=(this.rh-(p.y-this.y0)/this.k0);if(this.ns>0){rh1=Math.sqrt(x*x+y*y);con=1.0;}else{rh1=-Math.sqrt(x*x+y*y);con=-1.0;}
var theta=0.0;if(rh1!=0){theta=Math.atan2((con*x),(con*y));}
if((rh1!=0)||(this.ns>0.0)){con=1.0/this.ns;ts=Math.pow((rh1/(this.a*this.f0)),con);lat=Proj4js.common.phi2z(this.e,ts);if(lat==-9999)return null;}else{lat=-Proj4js.common.HALF_PI;}
lon=Proj4js.common.adjust_lon(theta/this.ns+this.long0);p.x=lon;p.y=lat;return p;}};Proj4js.Proj.laea={S_POLE:1,N_POLE:2,EQUIT:3,OBLIQ:4,init:function(){var t=Math.abs(this.lat0);if(Math.abs(t-Proj4js.common.HALF_PI)<Proj4js.common.EPSLN){this.mode=this.lat0<0.?this.S_POLE:this.N_POLE;}else if(Math.abs(t)<Proj4js.common.EPSLN){this.mode=this.EQUIT;}else{this.mode=this.OBLIQ;}
if(this.es>0){var sinphi;this.qp=Proj4js.common.qsfnz(this.e,1.0);this.mmf=.5/(1.-this.es);this.apa=this.authset(this.es);switch(this.mode){case this.N_POLE:case this.S_POLE:this.dd=1.;break;case this.EQUIT:this.rq=Math.sqrt(.5*this.qp);this.dd=1./this.rq;this.xmf=1.;this.ymf=.5*this.qp;break;case this.OBLIQ:this.rq=Math.sqrt(.5*this.qp);sinphi=Math.sin(this.lat0);this.sinb1=Proj4js.common.qsfnz(this.e,sinphi)/this.qp;this.cosb1=Math.sqrt(1.-this.sinb1*this.sinb1);this.dd=Math.cos(this.lat0)/(Math.sqrt(1.-this.es*sinphi*sinphi)*this.rq*this.cosb1);this.ymf=(this.xmf=this.rq)/this.dd;this.xmf*=this.dd;break;}}else{if(this.mode==this.OBLIQ){this.sinph0=Math.sin(this.lat0);this.cosph0=Math.cos(this.lat0);}}},forward:function(p){var x,y;var lam=p.x;var phi=p.y;lam=Proj4js.common.adjust_lon(lam-this.long0);if(this.sphere){var coslam,cosphi,sinphi;sinphi=Math.sin(phi);cosphi=Math.cos(phi);coslam=Math.cos(lam);switch(this.mode){case this.EQUIT:y=(this.mode==this.EQUIT)?1.+cosphi*coslam:1.+this.sinph0*sinphi+this.cosph0*cosphi*coslam;if(y<=Proj4js.common.EPSLN){Proj4js.reportError("laea:fwd:y less than eps");return null;}
y=Math.sqrt(2./y);x=y*cosphi*Math.sin(lam);y*=(this.mode==this.EQUIT)?sinphi:this.cosph0*sinphi-this.sinph0*cosphi*coslam;break;case this.N_POLE:coslam=-coslam;case this.S_POLE:if(Math.abs(phi+this.phi0)<Proj4js.common.EPSLN){Proj4js.reportError("laea:fwd:phi < eps");return null;}
y=Proj4js.common.FORTPI-phi*.5;y=2.*((this.mode==this.S_POLE)?Math.cos(y):Math.sin(y));x=y*Math.sin(lam);y*=coslam;break;}}else{var coslam,sinlam,sinphi,q,sinb=0.0,cosb=0.0,b=0.0;coslam=Math.cos(lam);sinlam=Math.sin(lam);sinphi=Math.sin(phi);q=Proj4js.common.qsfnz(this.e,sinphi);if(this.mode==this.OBLIQ||this.mode==this.EQUIT){sinb=q/this.qp;cosb=Math.sqrt(1.-sinb*sinb);}
switch(this.mode){case this.OBLIQ:b=1.+this.sinb1*sinb+this.cosb1*cosb*coslam;break;case this.EQUIT:b=1.+cosb*coslam;break;case this.N_POLE:b=Proj4js.common.HALF_PI+phi;q=this.qp-q;break;case this.S_POLE:b=phi-Proj4js.common.HALF_PI;q=this.qp+q;break;}
if(Math.abs(b)<Proj4js.common.EPSLN){Proj4js.reportError("laea:fwd:b < eps");return null;}
switch(this.mode){case this.OBLIQ:case this.EQUIT:b=Math.sqrt(2./b);if(this.mode==this.OBLIQ){y=this.ymf*b*(this.cosb1*sinb-this.sinb1*cosb*coslam);}else{y=(b=Math.sqrt(2./(1.+cosb*coslam)))*sinb*this.ymf;}
x=this.xmf*b*cosb*sinlam;break;case this.N_POLE:case this.S_POLE:if(q>=0.){x=(b=Math.sqrt(q))*sinlam;y=coslam*((this.mode==this.S_POLE)?b:-b);}else{x=y=0.;}
break;}}
p.x=this.a*x+this.x0;p.y=this.a*y+this.y0;return p;},inverse:function(p){p.x-=this.x0;p.y-=this.y0;var x=p.x/this.a;var y=p.y/this.a;if(this.sphere){var cosz=0.0,rh,sinz=0.0;rh=Math.sqrt(x*x+y*y);var phi=rh*.5;if(phi>1.){Proj4js.reportError("laea:Inv:DataError");return null;}
phi=2.*Math.asin(phi);if(this.mode==this.OBLIQ||this.mode==this.EQUIT){sinz=Math.sin(phi);cosz=Math.cos(phi);}
switch(this.mode){case this.EQUIT:phi=(Math.abs(rh)<=Proj4js.common.EPSLN)?0.:Math.asin(y*sinz/rh);x*=sinz;y=cosz*rh;break;case this.OBLIQ:phi=(Math.abs(rh)<=Proj4js.common.EPSLN)?this.phi0:Math.asin(cosz*sinph0+y*sinz*cosph0/rh);x*=sinz*cosph0;y=(cosz-Math.sin(phi)*sinph0)*rh;break;case this.N_POLE:y=-y;phi=Proj4js.common.HALF_PI-phi;break;case this.S_POLE:phi-=Proj4js.common.HALF_PI;break;}
lam=(y==0.&&(this.mode==this.EQUIT||this.mode==this.OBLIQ))?0.:Math.atan2(x,y);}else{var cCe,sCe,q,rho,ab=0.0;switch(this.mode){case this.EQUIT:case this.OBLIQ:x/=this.dd;y*=this.dd;rho=Math.sqrt(x*x+y*y);if(rho<Proj4js.common.EPSLN){p.x=0.;p.y=this.phi0;return p;}
sCe=2.*Math.asin(.5*rho/this.rq);cCe=Math.cos(sCe);x*=(sCe=Math.sin(sCe));if(this.mode==this.OBLIQ){ab=cCe*this.sinb1+y*sCe*this.cosb1/rho
q=this.qp*ab;y=rho*this.cosb1*cCe-y*this.sinb1*sCe;}else{ab=y*sCe/rho;q=this.qp*ab;y=rho*cCe;}
break;case this.N_POLE:y=-y;case this.S_POLE:q=(x*x+y*y);if(!q){p.x=0.;p.y=this.phi0;return p;}
ab=1.-q/this.qp;if(this.mode==this.S_POLE){ab=-ab;}
break;}
lam=Math.atan2(x,y);phi=this.authlat(Math.asin(ab),this.apa);}
p.x=Proj4js.common.adjust_lon(this.long0+lam);p.y=phi;return p;},P00:.33333333333333333333,P01:.17222222222222222222,P02:.10257936507936507936,P10:.06388888888888888888,P11:.06640211640211640211,P20:.01641501294219154443,authset:function(es){var t;var APA=new Array();APA[0]=es*this.P00;t=es*es;APA[0]+=t*this.P01;APA[1]=t*this.P10;t*=es;APA[0]+=t*this.P02;APA[1]+=t*this.P11;APA[2]=t*this.P20;return APA;},authlat:function(beta,APA){var t=beta+beta;return(beta+APA[0]*Math.sin(t)+APA[1]*Math.sin(t+t)+APA[2]*Math.sin(t+t+t));}};Proj4js.Proj.aeqd={init:function(){this.sin_p12=Math.sin(this.lat0);this.cos_p12=Math.cos(this.lat0);},forward:function(p){var lon=p.x;var lat=p.y;var ksp;var sinphi=Math.sin(p.y);var cosphi=Math.cos(p.y);var dlon=Proj4js.common.adjust_lon(lon-this.long0);var coslon=Math.cos(dlon);var g=this.sin_p12*sinphi+this.cos_p12*cosphi*coslon;if(Math.abs(Math.abs(g)-1.0)<Proj4js.common.EPSLN){ksp=1.0;if(g<0.0){Proj4js.reportError("aeqd:Fwd:PointError");return;}}else{var z=Math.acos(g);ksp=z/Math.sin(z);}
p.x=this.x0+this.a*ksp*cosphi*Math.sin(dlon);p.y=this.y0+this.a*ksp*(this.cos_p12*sinphi-this.sin_p12*cosphi*coslon);return p;},inverse:function(p){p.x-=this.x0;p.y-=this.y0;var rh=Math.sqrt(p.x*p.x+p.y*p.y);if(rh>(2.0*Proj4js.common.HALF_PI*this.a)){Proj4js.reportError("aeqdInvDataError");return;}
var z=rh/this.a;var sinz=Math.sin(z);var cosz=Math.cos(z);var lon=this.long0;var lat;if(Math.abs(rh)<=Proj4js.common.EPSLN){lat=this.lat0;}else{lat=Proj4js.common.asinz(cosz*this.sin_p12+(p.y*sinz*this.cos_p12)/rh);var con=Math.abs(this.lat0)-Proj4js.common.HALF_PI;if(Math.abs(con)<=Proj4js.common.EPSLN){if(lat0>=0.0){lon=Proj4js.common.adjust_lon(this.long0+Math.atan2(p.x,-p.y));}else{lon=Proj4js.common.adjust_lon(this.long0-Math.atan2(-p.x,p.y));}}else{con=cosz-this.sin_p12*Math.sin(lat);if((Math.abs(con)<Proj4js.common.EPSLN)&&(Math.abs(p.x)<Proj4js.common.EPSLN)){}else{var temp=Math.atan2((p.x*sinz*this.cos_p12),(con*rh));lon=Proj4js.common.adjust_lon(this.long0+Math.atan2((p.x*sinz*this.cos_p12),(con*rh)));}}}
p.x=lon;p.y=lat;return p;}};Proj4js.Proj.moll={init:function(){},forward:function(p){var lon=p.x;var lat=p.y;var delta_lon=Proj4js.common.adjust_lon(lon-this.long0);var theta=lat;var con=Proj4js.common.PI*Math.sin(lat);for(var i=0;true;i++){var delta_theta=-(theta+Math.sin(theta)-con)/(1.0+Math.cos(theta));theta+=delta_theta;if(Math.abs(delta_theta)<Proj4js.common.EPSLN)break;if(i>=50){Proj4js.reportError("moll:Fwd:IterationError");}}
theta/=2.0;if(Proj4js.common.PI/2-Math.abs(lat)<Proj4js.common.EPSLN)delta_lon=0;var x=0.900316316158*this.a*delta_lon*Math.cos(theta)+this.x0;var y=1.4142135623731*this.a*Math.sin(theta)+this.y0;p.x=x;p.y=y;return p;},inverse:function(p){var theta;var arg;p.x-=this.x0;var arg=p.y/(1.4142135623731*this.a);if(Math.abs(arg)>0.999999999999)arg=0.999999999999;var theta=Math.asin(arg);var lon=Proj4js.common.adjust_lon(this.long0+(p.x/(0.900316316158*this.a*Math.cos(theta))));if(lon<(-Proj4js.common.PI))lon=-Proj4js.common.PI;if(lon>Proj4js.common.PI)lon=Proj4js.common.PI;arg=(2.0*theta+Math.sin(2.0*theta))/Proj4js.common.PI;if(Math.abs(arg)>1.0)arg=1.0;var lat=Math.asin(arg);p.x=lon;p.y=lat;return p;}};
define("libraries/proj4js-1.0.1/proj4js-compressed", function(){});

/*
 * css.normalize.js https://raw.github.com/guybedford/require-css/master/normalize.js
 *
 * CSS Normalization
 *
 * CSS paths are normalized based on an optional basePath and the RequireJS config
 *
 * Usage:
 *   normalize(css, fromBasePath, toBasePath);
 *
 * css: the stylesheet content to normalize
 * fromBasePath: the absolute base path of the css relative to any root (but without ../ backtracking)
 * toBasePath: the absolute new base path of the css relative to the same root
 * 
 * Absolute dependencies are left untouched.
 *
 * Urls in the CSS are picked up by regular expressions.
 * These will catch all statements of the form:
 *
 * url(*)
 * url('*')
 * url("*")
 * 
 * @import '*'
 * @import "*"
 *
 * (and so also @import url(*) variations)
 *
 * For urls needing normalization
 *
 */

define('normalize',['require', 'module'], function(require, module) {
  
  // regular expression for removing double slashes
  // eg http://www.example.com//my///url/here -> http://www.example.com/my/url/here
  var slashes = /([^:])\/+/g
  var removeDoubleSlashes = function(uri) {
    return uri.replace(slashes, '$1/');
  }

  // given a relative URI, and two absolute base URIs, convert it from one base to another
  var protocolRegEx = /[^\:\/]*:\/\/([^\/])*/
  function convertURIBase(uri, fromBase, toBase) {
    if(uri.indexOf("data:") === 0)
      return uri;
    uri = removeDoubleSlashes(uri);
    // absolute urls are left in tact
    if (uri.match(/^\//) || uri.match(protocolRegEx))
      return uri;
    // if toBase specifies a protocol path, ensure this is the same protocol as fromBase, if not
    // use absolute path at fromBase
    var toBaseProtocol = toBase.match(protocolRegEx);
    var fromBaseProtocol = fromBase.match(protocolRegEx);
    if (fromBaseProtocol && (!toBaseProtocol || toBaseProtocol[1] != fromBaseProtocol[1] || toBaseProtocol[2] != fromBaseProtocol[2]))
      return absoluteURI(uri, fromBase);
    
    else {
      return relativeURI(absoluteURI(uri, fromBase), toBase);
    }
  };
  
  // given a relative URI, calculate the absolute URI
  function absoluteURI(uri, base) {
    if (uri.substr(0, 2) == './')
      uri = uri.substr(2);    
    
    var baseParts = base.split('/');
    var uriParts = uri.split('/');
    
    baseParts.pop();
    
    while (curPart = uriParts.shift())
      if (curPart == '..')
        baseParts.pop();
      else
        baseParts.push(curPart);
    
    return baseParts.join('/');
  };


  // given an absolute URI, calculate the relative URI
  function relativeURI(uri, base) {
    
    // reduce base and uri strings to just their difference string
    var baseParts = base.split('/');
    baseParts.pop();
    base = baseParts.join('/') + '/';
    i = 0;
    while (base.substr(i, 1) == uri.substr(i, 1))
      i++;
    while (base.substr(i, 1) != '/')
      i--;
    base = base.substr(i + 1);
    uri = uri.substr(i + 1);

    // each base folder difference is thus a backtrack
    baseParts = base.split('/');
    var uriParts = uri.split('/');
    out = '';
    while (baseParts.shift())
      out += '../';
    
    // finally add uri parts
    while (curPart = uriParts.shift())
      out += curPart + '/';
    
    return out.substr(0, out.length - 1);
  };
  
  var normalizeCSS = function(source, fromBase, toBase, cssBase) {

    fromBase = removeDoubleSlashes(fromBase);
    toBase = removeDoubleSlashes(toBase);

    var urlRegEx = /@import\s*("([^"]*)"|'([^']*)')|url\s*\(\s*(\s*"([^"]*)"|'([^']*)'|[^\)]*\s*)\s*\)/ig;
    var result, url, source;

    while (result = urlRegEx.exec(source)) {
      url = result[3] || result[2] || result[5] || result[6] || result[4];
      var newUrl;
      if (cssBase && url.substr(0, 1) == '/')
        newUrl = cssBase + url;
      else
        newUrl = convertURIBase(url, fromBase, toBase);
      var quoteLen = result[5] || result[6] ? 1 : 0;
      source = source.substr(0, urlRegEx.lastIndex - url.length - quoteLen - 1) + newUrl + source.substr(urlRegEx.lastIndex - quoteLen - 1);
      urlRegEx.lastIndex = urlRegEx.lastIndex + (newUrl.length - url.length);
    }
    
    return source;
  };
  
  normalizeCSS.convertURIBase = convertURIBase;
  
  return normalizeCSS;
});
/*
 * Require-CSS RequireJS css! loader plugin https://raw.github.com/guybedford/require-css/master/css.js
 * 0.0.8
 * Guy Bedford 2013
 * MIT
 */

/*
 *
 * Usage:
 *  require(['css!./mycssFile']);
 *
 * NB leave out the '.css' extension.
 *
 * - Fully supports cross origin CSS loading
 * - Works with builds
 *
 * Tested and working in (up to latest versions as of March 2013):
 * Android
 * iOS 6
 * IE 6 - 10
 * Chome 3 - 26
 * Firefox 3.5 - 19
 * Opera 10 - 12
 * 
 * browserling.com used for virtual testing environment
 *
 * Credit to B Cavalier & J Hann for the elegant IE 6 - 9 hack.
 * 
 * Sources that helped along the way:
 * - https://developer.mozilla.org/en-US/docs/Browser_detection_using_the_user_agent
 * - http://www.phpied.com/when-is-a-stylesheet-really-loaded/
 * - https://github.com/cujojs/curl/blob/master/src/curl/plugin/css.js
 *
 */

define('css',['./normalize'], function(normalize) {
  var i = 0;
  function indexOf(a, e) { for (var i=0, l=a.length; i < l; i++) if (a[i] === e) return i; return -1 }

  if (typeof window == 'undefined')
    return { load: function(n, r, load){ load() } };

  // set to true to enable test prompts for device testing
  var testing = false;
  
  var head = document.getElementsByTagName('head')[0];

  var engine = window.navigator.userAgent.match(/Trident\/([^ ;]*)|AppleWebKit\/([^ ;]*)|Opera\/([^ ;]*)|rv\:([^ ;]*)(.*?)Gecko\/([^ ;]*)|MSIE\s([^ ;]*)/);
  var hackLinks = false;

  if (!engine) {}
  else if (engine[1] || engine[7]) {
    hackLinks = parseInt(engine[1]) < 6 || parseInt(engine[7]) <= 9;
    engine = 'trident';
  }
  else if (engine[2]) {
    // unfortunately style querying still doesnt work with onload callback in webkit
    hackLinks = true;
    engine = 'webkit';
  }
  else if (engine[3]) {
    // engine = 'opera';
  }
  else if (engine[4]) {
    hackLinks = parseInt(engine[4]) < 18;
    engine = 'gecko';
  }
  else if (testing)
    alert('Engine detection failed');
  
  //main api object
  var cssAPI = {};

  var absUrlRegEx = /^\/|([^\:\/]*:)/;
  
  cssAPI.pluginBuilder = './css-builder';

  // used by layer builds to register their css buffers
  
  // the current layer buffer items (from addBuffer)
  var curBuffer = [];

  // the callbacks for buffer loads
  var onBufferLoad = {};

  // the full list of resources in the buffer
  var bufferResources = [];

  cssAPI.addBuffer = function(resourceId) {
    // just in case layer scripts are included twice, also check
    // against the previous buffers
    if (indexOf(curBuffer, resourceId) != -1)
      return;
    if (indexOf(bufferResources, resourceId) != -1)
      return;
    curBuffer.push(resourceId);
    bufferResources.push(resourceId);
  }
  cssAPI.setBuffer = function(css, isLess) {
    var pathname = window.location.pathname.split('/');
    pathname.pop();
    pathname = pathname.join('/') + '/';

    var baseParts = require.toUrl('base_url').split('/');
    baseParts.pop();
    var baseUrl = baseParts.join('/') + '/';
    baseUrl = normalize.convertURIBase(baseUrl, pathname, '/');
    if (!baseUrl.match(absUrlRegEx))
      baseUrl = '/' + baseUrl;
    if (baseUrl.substr(baseUrl.length - 1, 1) != '/')
      baseUrl = baseUrl + '/';

    cssAPI.inject(normalize(css, baseUrl, pathname));

    // set up attach callback if registered
    // clear the current buffer for the next layer
    // (just the less or css part as we have two buffers in one effectively)
    for (var i = 0; i < curBuffer.length; i++) {
      // find the resources in the less or css buffer dependening which one this is
      if ((isLess && curBuffer[i].substr(curBuffer[i].length - 5, 5) == '.less') ||
        (!isLess && curBuffer[i].substr(curBuffer[i].length - 4, 4) == '.css')) {
        (function(resourceId) {
          // mark that the onBufferLoad is about to be called (set to true if not already a callback function)
          onBufferLoad[resourceId] = onBufferLoad[resourceId] || true;

          // set a short timeout (as injection isn't instant in Chrome), then call the load
          setTimeout(function() {
            if (typeof onBufferLoad[resourceId] == 'function')
              onBufferLoad[resourceId]();
            // remove from onBufferLoad to indicate loaded
            delete onBufferLoad[resourceId];
          }, 7);
        })(curBuffer[i]);

        // remove the current resource from the buffer
        curBuffer.splice(i--, 1);
      }
    }
  }
  cssAPI.attachBuffer = function(resourceId, load) {
    // attach can happen during buffer collecting, or between injection and callback
    // we assume it is not possible to attach multiple callbacks
    // requirejs plugin load function ensures this by queueing duplicate calls

    // check if the resourceId is in the current buffer
    for (var i = 0; i < curBuffer.length; i++)
      if (curBuffer[i] == resourceId) {
        onBufferLoad[resourceId] = load;
        return true;
      }

    // check if the resourceId is waiting for injection callback
    // (onBufferLoad === true is a shortcut indicator for this)
    if (onBufferLoad[resourceId] === true) {
      onBufferLoad[resourceId] = load;
      return true;
    }

    // if it's in the full buffer list and not either of the above, its loaded already
    if (indexOf(bufferResources, resourceId) != -1) {
      load();
      return true;
    }
  }

  var webkitLoadCheck = function(link, callback) {
    setTimeout(function() {
      for (var i = 0; i < document.styleSheets.length; i++) {
        var sheet = document.styleSheets[i];
        if (sheet.href == link.href)
          return callback();
      }
      webkitLoadCheck(link, callback);
    }, 10);
  }

  var mozillaLoadCheck = function(style, callback) {
    setTimeout(function() {
      try {
        style.sheet.cssRules;
        return callback();
      } catch (e){}
      mozillaLoadCheck(style, callback);
    }, 10);
  }

  // ie link detection, as adapted from https://github.com/cujojs/curl/blob/master/src/curl/plugin/css.js
  if (engine == 'trident' && hackLinks) {
    var ieStyles = [],
      ieQueue = [],
      ieStyleCnt = 0;
    var ieLoad = function(url, callback) {
      var style;
      ieQueue.push({
        url: url,
        cb: callback
      });
      style = ieStyles.shift();
      if (!style && ieStyleCnt++ < 31) {
        style = document.createElement('style');
        head.appendChild(style);
      }
      if (style)
        ieLoadNextImport(style);
    }
    var ieLoadNextImport = function(style) {
      var curImport = ieQueue.shift();
      if (!curImport) {
        style.onload = noop;
        ieStyles.push(style);
        return;  
      }
      style.onload = function() {
        curImport.cb(curImport.ss);
        ieLoadNextImport(style);
      };
      try {
      var curSheet = style.styleSheet;
      curImport.ss = curSheet.imports[curSheet.addImport(curImport.url)];
      } catch (e) {
        alert("Got Error:" + e);
      }
    }
  }

  // uses the <link> load method
  var createLink = function(url) {
    var link = document.createElement('link');
    link.type = 'text/css';
    link.rel = 'stylesheet';
    link.href = url;
    return link;
  }

  var noop = function(){}

  cssAPI.linkLoad = function(url, callback) {
    var timeout = setTimeout(function() {
      if (testing) alert('timeout');
      callback();
    }, waitSeconds * 1000 - 100);
    var _callback = function() {
      clearTimeout(timeout);
      if (link)
        link.onload = noop;
      // for style querying, a short delay still seems necessary
      setTimeout(callback, 7);
    }
    if (!hackLinks) {
      var link = createLink(url);
      link.onload = _callback;
      head.appendChild(link);
    }
    // hacks
    else {
      if (engine == 'webkit') {
        var link = createLink(url);
        webkitLoadCheck(link, _callback);
        head.appendChild(link);
      }
      else if (engine == 'gecko') {
        var style = document.createElement('style');
        style.textContent = '@import "' + url + '"';
        mozillaLoadCheck(style, _callback);
        head.appendChild(style);
      }
      else if (engine == 'trident')
        ieLoad(url, _callback);
    }
  }

  /* injection api */
  var progIds = ['Msxml2.XMLHTTP', 'Microsoft.XMLHTTP', 'Msxml2.XMLHTTP.4.0'];
  var fileCache = {};
  var get = function(url, callback, errback) {
    if (fileCache[url]) {
      callback(fileCache[url]);
      return;
    }

    var xhr, i, progId;
    if (typeof XMLHttpRequest !== 'undefined')
      xhr = new XMLHttpRequest();
    else if (typeof ActiveXObject !== 'undefined')
      for (i = 0; i < 3; i += 1) {
        progId = progIds[i];
        try {
          xhr = new ActiveXObject(progId);
        }
        catch (e) {}
  
        if (xhr) {
          progIds = [progId];  // so faster next time
          break;
        }
      }
    
    xhr.open('GET', url, requirejs.inlineRequire ? false : true);
  
    xhr.onreadystatechange = function (evt) {
      var status, err;
      //Do not explicitly handle errors, those should be
      //visible via console output in the browser.
      if (xhr.readyState === 4) {
        status = xhr.status;
        if (status > 399 && status < 600) {
          //An http 4xx or 5xx error. Signal an error.
          err = new Error(url + ' HTTP status: ' + status);
          err.xhr = xhr;
          errback(err);
        }
        else {
          fileCache[url] = xhr.responseText;
          callback(xhr.responseText);
        }
      }
    };
    
    xhr.send(null);
  }
  //uses the <style> load method
  var styleCnt = 0;
  var curStyle;
  cssAPI.inject = function(css) {
    if (styleCnt < 31) {
      curStyle = document.createElement('style');
      curStyle.type = 'text/css';
      head.appendChild(curStyle);
      styleCnt++;
    }
    if (curStyle.styleSheet)
      curStyle.styleSheet.cssText += css;
    else
      curStyle.appendChild(document.createTextNode(css));
  }
  
  // NB add @media query support for media imports
  var importRegEx = /@import\s*(url)?\s*(('([^']*)'|"([^"]*)")|\(('([^']*)'|"([^"]*)"|([^\)]*))\))\s*;?/g;

  var pathname = window.location.pathname.split('/');
  pathname.pop();
  pathname = pathname.join('/') + '/';

  var loadCSS = function(fileUrl, callback, errback) {

    //make file url absolute
    if (!fileUrl.match(absUrlRegEx))
      fileUrl = '/' + normalize.convertURIBase(fileUrl, pathname, '/');

    get(fileUrl, function(css) {

      // normalize the css (except import statements)
      css = normalize(css, fileUrl, pathname);

      // detect all import statements in the css and normalize
      var importUrls = [];
      var importIndex = [];
      var importLength = [];
      var match;
      while (match = importRegEx.exec(css)) {
        var importUrl = match[4] || match[5] || match[7] || match[8] || match[9];

        importUrls.push(importUrl);
        importIndex.push(importRegEx.lastIndex - match[0].length);
        importLength.push(match[0].length);
      }

      // load the import stylesheets and substitute into the css
      var completeCnt = 0;
      for (var i = 0; i < importUrls.length; i++)
        (function(i) {
          loadCSS(importUrls[i], function(importCSS) {
            css = css.substr(0, importIndex[i]) + importCSS + css.substr(importIndex[i] + importLength[i]);
            var lenDiff = importCSS.length - importLength[i];
            for (var j = i + 1; j < importUrls.length; j++)
              importIndex[j] += lenDiff;
            completeCnt++;
            if (completeCnt == importUrls.length) {
              callback(css);
            }
          }, errback);
        })(i);

      if (importUrls.length == 0)
        callback(css);
    }, errback);
  }

  
  cssAPI.normalize = function(name, normalize) {
    if (name.substr(name.length - 4, 4) == '.css')
      name = name.substr(0, name.length - 4);
    
    return normalize(name);
  }
  
  var waitSeconds;
  var alerted = false;
  cssAPI.load = function(cssId, req, load, config, parse) {
    
    waitSeconds = waitSeconds || config.waitSeconds || 7;

    var resourceId = cssId + (!parse ? '.css' : '.less');

    // attach the load function to a buffer if there is one in registration
    // if not, we do a full injection load
    if (cssAPI.attachBuffer(resourceId, load))
      return;

    var fileUrl = req.toUrl(resourceId);
    
    if (!alerted && testing) {
      alert(hackLinks ? 'hacking links' : 'not hacking');
      alerted = true;
    }

    if (!parse) {
      cssAPI.linkLoad(fileUrl, load);
    }
    else {
      loadCSS(fileUrl, function(css) {
        // run parsing after normalization - since less is a CSS subset this works fine
        if (parse)
          css = parse(css, function(css) {
            cssAPI.inject(css);
            setTimeout(load, 7);
          });
      });
    }
  }

  if (testing)
    cssAPI.inspect = function() {
      if (stylesheet.styleSheet)
        return stylesheet.styleSheet.cssText;
      else if (stylesheet.innerHTML)
        return stylesheet.innerHTML;
    }
  
  return cssAPI;
});
requirejs.s.contexts._.nextTick = function(f){f()}; require(['css'], function(css) { css.addBuffer('resources/ol3/bundle/ol3-default/css/ol.css'); }); requirejs.s.contexts._.nextTick = requirejs.nextTick;
define('bundles/oskari/bundle/map-ol3/module',[
	"oskari",
	"jquery",
	"libraries/ol3/base",
	"libraries/ol3/ol-20130912",
	"libraries/ol3/ol3-ol2-compatibility",
	"libraries/proj4js-1.0.1/proj4js-compressed",
	"css!resources/ol3/bundle/ol3-default/css/ol.css"
], function(Oskari, jQuery) {
	return Oskari.bundleCls("ol3").category({
		create: function() {
			return this;
		},
		update: function(manager, bundle, bi, info) {

		},
		start: function() {},
		stop: function() {
			// delete OpenLayers...just joking
		}
	})
});
/*! jQuery UI - v1.9.1 - 2012-11-09
* http://jqueryui.com
* Includes: jquery.ui.core.js, jquery.ui.widget.js, jquery.ui.mouse.js, jquery.ui.position.js, jquery.ui.draggable.js, jquery.ui.droppable.js, jquery.ui.resizable.js, jquery.ui.selectable.js, jquery.ui.sortable.js, jquery.ui.slider.js, jquery.ui.tooltip.js
* Copyright (c) 2012 jQuery Foundation and other contributors Licensed MIT */

(function(e,t){function i(t,n){var r,i,o,u=t.nodeName.toLowerCase();return"area"===u?(r=t.parentNode,i=r.name,!t.href||!i||r.nodeName.toLowerCase()!=="map"?!1:(o=e("img[usemap=#"+i+"]")[0],!!o&&s(o))):(/input|select|textarea|button|object/.test(u)?!t.disabled:"a"===u?t.href||n:n)&&s(t)}function s(t){return e.expr.filters.visible(t)&&!e(t).parents().andSelf().filter(function(){return e.css(this,"visibility")==="hidden"}).length}var n=0,r=/^ui-id-\d+$/;e.ui=e.ui||{};if(e.ui.version)return;e.extend(e.ui,{version:"1.9.1",keyCode:{BACKSPACE:8,COMMA:188,DELETE:46,DOWN:40,END:35,ENTER:13,ESCAPE:27,HOME:36,LEFT:37,NUMPAD_ADD:107,NUMPAD_DECIMAL:110,NUMPAD_DIVIDE:111,NUMPAD_ENTER:108,NUMPAD_MULTIPLY:106,NUMPAD_SUBTRACT:109,PAGE_DOWN:34,PAGE_UP:33,PERIOD:190,RIGHT:39,SPACE:32,TAB:9,UP:38}}),e.fn.extend({_focus:e.fn.focus,focus:function(t,n){return typeof t=="number"?this.each(function(){var r=this;setTimeout(function(){e(r).focus(),n&&n.call(r)},t)}):this._focus.apply(this,arguments)},scrollParent:function(){var t;return e.ui.ie&&/(static|relative)/.test(this.css("position"))||/absolute/.test(this.css("position"))?t=this.parents().filter(function(){return/(relative|absolute|fixed)/.test(e.css(this,"position"))&&/(auto|scroll)/.test(e.css(this,"overflow")+e.css(this,"overflow-y")+e.css(this,"overflow-x"))}).eq(0):t=this.parents().filter(function(){return/(auto|scroll)/.test(e.css(this,"overflow")+e.css(this,"overflow-y")+e.css(this,"overflow-x"))}).eq(0),/fixed/.test(this.css("position"))||!t.length?e(document):t},zIndex:function(n){if(n!==t)return this.css("zIndex",n);if(this.length){var r=e(this[0]),i,s;while(r.length&&r[0]!==document){i=r.css("position");if(i==="absolute"||i==="relative"||i==="fixed"){s=parseInt(r.css("zIndex"),10);if(!isNaN(s)&&s!==0)return s}r=r.parent()}}return 0},uniqueId:function(){return this.each(function(){this.id||(this.id="ui-id-"+ ++n)})},removeUniqueId:function(){return this.each(function(){r.test(this.id)&&e(this).removeAttr("id")})}}),e("<a>").outerWidth(1).jquery||e.each(["Width","Height"],function(n,r){function u(t,n,r,s){return e.each(i,function(){n-=parseFloat(e.css(t,"padding"+this))||0,r&&(n-=parseFloat(e.css(t,"border"+this+"Width"))||0),s&&(n-=parseFloat(e.css(t,"margin"+this))||0)}),n}var i=r==="Width"?["Left","Right"]:["Top","Bottom"],s=r.toLowerCase(),o={innerWidth:e.fn.innerWidth,innerHeight:e.fn.innerHeight,outerWidth:e.fn.outerWidth,outerHeight:e.fn.outerHeight};e.fn["inner"+r]=function(n){return n===t?o["inner"+r].call(this):this.each(function(){e(this).css(s,u(this,n)+"px")})},e.fn["outer"+r]=function(t,n){return typeof t!="number"?o["outer"+r].call(this,t):this.each(function(){e(this).css(s,u(this,t,!0,n)+"px")})}}),e.extend(e.expr[":"],{data:e.expr.createPseudo?e.expr.createPseudo(function(t){return function(n){return!!e.data(n,t)}}):function(t,n,r){return!!e.data(t,r[3])},focusable:function(t){return i(t,!isNaN(e.attr(t,"tabindex")))},tabbable:function(t){var n=e.attr(t,"tabindex"),r=isNaN(n);return(r||n>=0)&&i(t,!r)}}),e(function(){var t=document.body,n=t.appendChild(n=document.createElement("div"));n.offsetHeight,e.extend(n.style,{minHeight:"100px",height:"auto",padding:0,borderWidth:0}),e.support.minHeight=n.offsetHeight===100,e.support.selectstart="onselectstart"in n,t.removeChild(n).style.display="none"}),function(){var t=/msie ([\w.]+)/.exec(navigator.userAgent.toLowerCase())||[];e.ui.ie=t.length?!0:!1,e.ui.ie6=parseFloat(t[1],10)===6}(),e.fn.extend({disableSelection:function(){return this.bind((e.support.selectstart?"selectstart":"mousedown")+".ui-disableSelection",function(e){e.preventDefault()})},enableSelection:function(){return this.unbind(".ui-disableSelection")}}),e.extend(e.ui,{plugin:{add:function(t,n,r){var i,s=e.ui[t].prototype;for(i in r)s.plugins[i]=s.plugins[i]||[],s.plugins[i].push([n,r[i]])},call:function(e,t,n){var r,i=e.plugins[t];if(!i||!e.element[0].parentNode||e.element[0].parentNode.nodeType===11)return;for(r=0;r<i.length;r++)e.options[i[r][0]]&&i[r][1].apply(e.element,n)}},contains:e.contains,hasScroll:function(t,n){if(e(t).css("overflow")==="hidden")return!1;var r=n&&n==="left"?"scrollLeft":"scrollTop",i=!1;return t[r]>0?!0:(t[r]=1,i=t[r]>0,t[r]=0,i)},isOverAxis:function(e,t,n){return e>t&&e<t+n},isOver:function(t,n,r,i,s,o){return e.ui.isOverAxis(t,r,s)&&e.ui.isOverAxis(n,i,o)}})})(jQuery);(function(e,t){var n=0,r=Array.prototype.slice,i=e.cleanData;e.cleanData=function(t){for(var n=0,r;(r=t[n])!=null;n++)try{e(r).triggerHandler("remove")}catch(s){}i(t)},e.widget=function(t,n,r){var i,s,o,u,a=t.split(".")[0];t=t.split(".")[1],i=a+"-"+t,r||(r=n,n=e.Widget),e.expr[":"][i.toLowerCase()]=function(t){return!!e.data(t,i)},e[a]=e[a]||{},s=e[a][t],o=e[a][t]=function(e,t){if(!this._createWidget)return new o(e,t);arguments.length&&this._createWidget(e,t)},e.extend(o,s,{version:r.version,_proto:e.extend({},r),_childConstructors:[]}),u=new n,u.options=e.widget.extend({},u.options),e.each(r,function(t,i){e.isFunction(i)&&(r[t]=function(){var e=function(){return n.prototype[t].apply(this,arguments)},r=function(e){return n.prototype[t].apply(this,e)};return function(){var t=this._super,n=this._superApply,s;return this._super=e,this._superApply=r,s=i.apply(this,arguments),this._super=t,this._superApply=n,s}}())}),o.prototype=e.widget.extend(u,{widgetEventPrefix:u.widgetEventPrefix||t},r,{constructor:o,namespace:a,widgetName:t,widgetBaseClass:i,widgetFullName:i}),s?(e.each(s._childConstructors,function(t,n){var r=n.prototype;e.widget(r.namespace+"."+r.widgetName,o,n._proto)}),delete s._childConstructors):n._childConstructors.push(o),e.widget.bridge(t,o)},e.widget.extend=function(n){var i=r.call(arguments,1),s=0,o=i.length,u,a;for(;s<o;s++)for(u in i[s])a=i[s][u],i[s].hasOwnProperty(u)&&a!==t&&(e.isPlainObject(a)?n[u]=e.isPlainObject(n[u])?e.widget.extend({},n[u],a):e.widget.extend({},a):n[u]=a);return n},e.widget.bridge=function(n,i){var s=i.prototype.widgetFullName;e.fn[n]=function(o){var u=typeof o=="string",a=r.call(arguments,1),f=this;return o=!u&&a.length?e.widget.extend.apply(null,[o].concat(a)):o,u?this.each(function(){var r,i=e.data(this,s);if(!i)return e.error("cannot call methods on "+n+" prior to initialization; "+"attempted to call method '"+o+"'");if(!e.isFunction(i[o])||o.charAt(0)==="_")return e.error("no such method '"+o+"' for "+n+" widget instance");r=i[o].apply(i,a);if(r!==i&&r!==t)return f=r&&r.jquery?f.pushStack(r.get()):r,!1}):this.each(function(){var t=e.data(this,s);t?t.option(o||{})._init():new i(o,this)}),f}},e.Widget=function(){},e.Widget._childConstructors=[],e.Widget.prototype={widgetName:"widget",widgetEventPrefix:"",defaultElement:"<div>",options:{disabled:!1,create:null},_createWidget:function(t,r){r=e(r||this.defaultElement||this)[0],this.element=e(r),this.uuid=n++,this.eventNamespace="."+this.widgetName+this.uuid,this.options=e.widget.extend({},this.options,this._getCreateOptions(),t),this.bindings=e(),this.hoverable=e(),this.focusable=e(),r!==this&&(e.data(r,this.widgetName,this),e.data(r,this.widgetFullName,this),this._on(this.element,{remove:function(e){e.target===r&&this.destroy()}}),this.document=e(r.style?r.ownerDocument:r.document||r),this.window=e(this.document[0].defaultView||this.document[0].parentWindow)),this._create(),this._trigger("create",null,this._getCreateEventData()),this._init()},_getCreateOptions:e.noop,_getCreateEventData:e.noop,_create:e.noop,_init:e.noop,destroy:function(){this._destroy(),this.element.unbind(this.eventNamespace).removeData(this.widgetName).removeData(this.widgetFullName).removeData(e.camelCase(this.widgetFullName)),this.widget().unbind(this.eventNamespace).removeAttr("aria-disabled").removeClass(this.widgetFullName+"-disabled "+"ui-state-disabled"),this.bindings.unbind(this.eventNamespace),this.hoverable.removeClass("ui-state-hover"),this.focusable.removeClass("ui-state-focus")},_destroy:e.noop,widget:function(){return this.element},option:function(n,r){var i=n,s,o,u;if(arguments.length===0)return e.widget.extend({},this.options);if(typeof n=="string"){i={},s=n.split("."),n=s.shift();if(s.length){o=i[n]=e.widget.extend({},this.options[n]);for(u=0;u<s.length-1;u++)o[s[u]]=o[s[u]]||{},o=o[s[u]];n=s.pop();if(r===t)return o[n]===t?null:o[n];o[n]=r}else{if(r===t)return this.options[n]===t?null:this.options[n];i[n]=r}}return this._setOptions(i),this},_setOptions:function(e){var t;for(t in e)this._setOption(t,e[t]);return this},_setOption:function(e,t){return this.options[e]=t,e==="disabled"&&(this.widget().toggleClass(this.widgetFullName+"-disabled ui-state-disabled",!!t).attr("aria-disabled",t),this.hoverable.removeClass("ui-state-hover"),this.focusable.removeClass("ui-state-focus")),this},enable:function(){return this._setOption("disabled",!1)},disable:function(){return this._setOption("disabled",!0)},_on:function(t,n){var r,i=this;n?(t=r=e(t),this.bindings=this.bindings.add(t)):(n=t,t=this.element,r=this.widget()),e.each(n,function(n,s){function o(){if(i.options.disabled===!0||e(this).hasClass("ui-state-disabled"))return;return(typeof s=="string"?i[s]:s).apply(i,arguments)}typeof s!="string"&&(o.guid=s.guid=s.guid||o.guid||e.guid++);var u=n.match(/^(\w+)\s*(.*)$/),a=u[1]+i.eventNamespace,f=u[2];f?r.delegate(f,a,o):t.bind(a,o)})},_off:function(e,t){t=(t||"").split(" ").join(this.eventNamespace+" ")+this.eventNamespace,e.unbind(t).undelegate(t)},_delay:function(e,t){function n(){return(typeof e=="string"?r[e]:e).apply(r,arguments)}var r=this;return setTimeout(n,t||0)},_hoverable:function(t){this.hoverable=this.hoverable.add(t),this._on(t,{mouseenter:function(t){e(t.currentTarget).addClass("ui-state-hover")},mouseleave:function(t){e(t.currentTarget).removeClass("ui-state-hover")}})},_focusable:function(t){this.focusable=this.focusable.add(t),this._on(t,{focusin:function(t){e(t.currentTarget).addClass("ui-state-focus")},focusout:function(t){e(t.currentTarget).removeClass("ui-state-focus")}})},_trigger:function(t,n,r){var i,s,o=this.options[t];r=r||{},n=e.Event(n),n.type=(t===this.widgetEventPrefix?t:this.widgetEventPrefix+t).toLowerCase(),n.target=this.element[0],s=n.originalEvent;if(s)for(i in s)i in n||(n[i]=s[i]);return this.element.trigger(n,r),!(e.isFunction(o)&&o.apply(this.element[0],[n].concat(r))===!1||n.isDefaultPrevented())}},e.each({show:"fadeIn",hide:"fadeOut"},function(t,n){e.Widget.prototype["_"+t]=function(r,i,s){typeof i=="string"&&(i={effect:i});var o,u=i?i===!0||typeof i=="number"?n:i.effect||n:t;i=i||{},typeof i=="number"&&(i={duration:i}),o=!e.isEmptyObject(i),i.complete=s,i.delay&&r.delay(i.delay),o&&e.effects&&(e.effects.effect[u]||e.uiBackCompat!==!1&&e.effects[u])?r[t](i):u!==t&&r[u]?r[u](i.duration,i.easing,s):r.queue(function(n){e(this)[t](),s&&s.call(r[0]),n()})}}),e.uiBackCompat!==!1&&(e.Widget.prototype._getCreateOptions=function(){return e.metadata&&e.metadata.get(this.element[0])[this.widgetName]})})(jQuery);(function(e,t){var n=!1;e(document).mouseup(function(e){n=!1}),e.widget("ui.mouse",{version:"1.9.1",options:{cancel:"input,textarea,button,select,option",distance:1,delay:0},_mouseInit:function(){var t=this;this.element.bind("mousedown."+this.widgetName,function(e){return t._mouseDown(e)}).bind("click."+this.widgetName,function(n){if(!0===e.data(n.target,t.widgetName+".preventClickEvent"))return e.removeData(n.target,t.widgetName+".preventClickEvent"),n.stopImmediatePropagation(),!1}),this.started=!1},_mouseDestroy:function(){this.element.unbind("."+this.widgetName),this._mouseMoveDelegate&&e(document).unbind("mousemove."+this.widgetName,this._mouseMoveDelegate).unbind("mouseup."+this.widgetName,this._mouseUpDelegate)},_mouseDown:function(t){if(n)return;this._mouseStarted&&this._mouseUp(t),this._mouseDownEvent=t;var r=this,i=t.which===1,s=typeof this.options.cancel=="string"&&t.target.nodeName?e(t.target).closest(this.options.cancel).length:!1;if(!i||s||!this._mouseCapture(t))return!0;this.mouseDelayMet=!this.options.delay,this.mouseDelayMet||(this._mouseDelayTimer=setTimeout(function(){r.mouseDelayMet=!0},this.options.delay));if(this._mouseDistanceMet(t)&&this._mouseDelayMet(t)){this._mouseStarted=this._mouseStart(t)!==!1;if(!this._mouseStarted)return t.preventDefault(),!0}return!0===e.data(t.target,this.widgetName+".preventClickEvent")&&e.removeData(t.target,this.widgetName+".preventClickEvent"),this._mouseMoveDelegate=function(e){return r._mouseMove(e)},this._mouseUpDelegate=function(e){return r._mouseUp(e)},e(document).bind("mousemove."+this.widgetName,this._mouseMoveDelegate).bind("mouseup."+this.widgetName,this._mouseUpDelegate),t.preventDefault(),n=!0,!0},_mouseMove:function(t){return!e.ui.ie||document.documentMode>=9||!!t.button?this._mouseStarted?(this._mouseDrag(t),t.preventDefault()):(this._mouseDistanceMet(t)&&this._mouseDelayMet(t)&&(this._mouseStarted=this._mouseStart(this._mouseDownEvent,t)!==!1,this._mouseStarted?this._mouseDrag(t):this._mouseUp(t)),!this._mouseStarted):this._mouseUp(t)},_mouseUp:function(t){return e(document).unbind("mousemove."+this.widgetName,this._mouseMoveDelegate).unbind("mouseup."+this.widgetName,this._mouseUpDelegate),this._mouseStarted&&(this._mouseStarted=!1,t.target===this._mouseDownEvent.target&&e.data(t.target,this.widgetName+".preventClickEvent",!0),this._mouseStop(t)),!1},_mouseDistanceMet:function(e){return Math.max(Math.abs(this._mouseDownEvent.pageX-e.pageX),Math.abs(this._mouseDownEvent.pageY-e.pageY))>=this.options.distance},_mouseDelayMet:function(e){return this.mouseDelayMet},_mouseStart:function(e){},_mouseDrag:function(e){},_mouseStop:function(e){},_mouseCapture:function(e){return!0}})})(jQuery);(function(e,t){function h(e,t,n){return[parseInt(e[0],10)*(l.test(e[0])?t/100:1),parseInt(e[1],10)*(l.test(e[1])?n/100:1)]}function p(t,n){return parseInt(e.css(t,n),10)||0}e.ui=e.ui||{};var n,r=Math.max,i=Math.abs,s=Math.round,o=/left|center|right/,u=/top|center|bottom/,a=/[\+\-]\d+%?/,f=/^\w+/,l=/%$/,c=e.fn.position;e.position={scrollbarWidth:function(){if(n!==t)return n;var r,i,s=e("<div style='display:block;width:50px;height:50px;overflow:hidden;'><div style='height:100px;width:auto;'></div></div>"),o=s.children()[0];return e("body").append(s),r=o.offsetWidth,s.css("overflow","scroll"),i=o.offsetWidth,r===i&&(i=s[0].clientWidth),s.remove(),n=r-i},getScrollInfo:function(t){var n=t.isWindow?"":t.element.css("overflow-x"),r=t.isWindow?"":t.element.css("overflow-y"),i=n==="scroll"||n==="auto"&&t.width<t.element[0].scrollWidth,s=r==="scroll"||r==="auto"&&t.height<t.element[0].scrollHeight;return{width:i?e.position.scrollbarWidth():0,height:s?e.position.scrollbarWidth():0}},getWithinInfo:function(t){var n=e(t||window),r=e.isWindow(n[0]);return{element:n,isWindow:r,offset:n.offset()||{left:0,top:0},scrollLeft:n.scrollLeft(),scrollTop:n.scrollTop(),width:r?n.width():n.outerWidth(),height:r?n.height():n.outerHeight()}}},e.fn.position=function(t){if(!t||!t.of)return c.apply(this,arguments);t=e.extend({},t);var n,l,d,v,m,g=e(t.of),y=e.position.getWithinInfo(t.within),b=e.position.getScrollInfo(y),w=g[0],E=(t.collision||"flip").split(" "),S={};return w.nodeType===9?(l=g.width(),d=g.height(),v={top:0,left:0}):e.isWindow(w)?(l=g.width(),d=g.height(),v={top:g.scrollTop(),left:g.scrollLeft()}):w.preventDefault?(t.at="left top",l=d=0,v={top:w.pageY,left:w.pageX}):(l=g.outerWidth(),d=g.outerHeight(),v=g.offset()),m=e.extend({},v),e.each(["my","at"],function(){var e=(t[this]||"").split(" "),n,r;e.length===1&&(e=o.test(e[0])?e.concat(["center"]):u.test(e[0])?["center"].concat(e):["center","center"]),e[0]=o.test(e[0])?e[0]:"center",e[1]=u.test(e[1])?e[1]:"center",n=a.exec(e[0]),r=a.exec(e[1]),S[this]=[n?n[0]:0,r?r[0]:0],t[this]=[f.exec(e[0])[0],f.exec(e[1])[0]]}),E.length===1&&(E[1]=E[0]),t.at[0]==="right"?m.left+=l:t.at[0]==="center"&&(m.left+=l/2),t.at[1]==="bottom"?m.top+=d:t.at[1]==="center"&&(m.top+=d/2),n=h(S.at,l,d),m.left+=n[0],m.top+=n[1],this.each(function(){var o,u,a=e(this),f=a.outerWidth(),c=a.outerHeight(),w=p(this,"marginLeft"),x=p(this,"marginTop"),T=f+w+p(this,"marginRight")+b.width,N=c+x+p(this,"marginBottom")+b.height,C=e.extend({},m),k=h(S.my,a.outerWidth(),a.outerHeight());t.my[0]==="right"?C.left-=f:t.my[0]==="center"&&(C.left-=f/2),t.my[1]==="bottom"?C.top-=c:t.my[1]==="center"&&(C.top-=c/2),C.left+=k[0],C.top+=k[1],e.support.offsetFractions||(C.left=s(C.left),C.top=s(C.top)),o={marginLeft:w,marginTop:x},e.each(["left","top"],function(r,i){e.ui.position[E[r]]&&e.ui.position[E[r]][i](C,{targetWidth:l,targetHeight:d,elemWidth:f,elemHeight:c,collisionPosition:o,collisionWidth:T,collisionHeight:N,offset:[n[0]+k[0],n[1]+k[1]],my:t.my,at:t.at,within:y,elem:a})}),e.fn.bgiframe&&a.bgiframe(),t.using&&(u=function(e){var n=v.left-C.left,s=n+l-f,o=v.top-C.top,u=o+d-c,h={target:{element:g,left:v.left,top:v.top,width:l,height:d},element:{element:a,left:C.left,top:C.top,width:f,height:c},horizontal:s<0?"left":n>0?"right":"center",vertical:u<0?"top":o>0?"bottom":"middle"};l<f&&i(n+s)<l&&(h.horizontal="center"),d<c&&i(o+u)<d&&(h.vertical="middle"),r(i(n),i(s))>r(i(o),i(u))?h.important="horizontal":h.important="vertical",t.using.call(this,e,h)}),a.offset(e.extend(C,{using:u}))})},e.ui.position={fit:{left:function(e,t){var n=t.within,i=n.isWindow?n.scrollLeft:n.offset.left,s=n.width,o=e.left-t.collisionPosition.marginLeft,u=i-o,a=o+t.collisionWidth-s-i,f;t.collisionWidth>s?u>0&&a<=0?(f=e.left+u+t.collisionWidth-s-i,e.left+=u-f):a>0&&u<=0?e.left=i:u>a?e.left=i+s-t.collisionWidth:e.left=i:u>0?e.left+=u:a>0?e.left-=a:e.left=r(e.left-o,e.left)},top:function(e,t){var n=t.within,i=n.isWindow?n.scrollTop:n.offset.top,s=t.within.height,o=e.top-t.collisionPosition.marginTop,u=i-o,a=o+t.collisionHeight-s-i,f;t.collisionHeight>s?u>0&&a<=0?(f=e.top+u+t.collisionHeight-s-i,e.top+=u-f):a>0&&u<=0?e.top=i:u>a?e.top=i+s-t.collisionHeight:e.top=i:u>0?e.top+=u:a>0?e.top-=a:e.top=r(e.top-o,e.top)}},flip:{left:function(e,t){var n=t.within,r=n.offset.left+n.scrollLeft,s=n.width,o=n.isWindow?n.scrollLeft:n.offset.left,u=e.left-t.collisionPosition.marginLeft,a=u-o,f=u+t.collisionWidth-s-o,l=t.my[0]==="left"?-t.elemWidth:t.my[0]==="right"?t.elemWidth:0,c=t.at[0]==="left"?t.targetWidth:t.at[0]==="right"?-t.targetWidth:0,h=-2*t.offset[0],p,d;if(a<0){p=e.left+l+c+h+t.collisionWidth-s-r;if(p<0||p<i(a))e.left+=l+c+h}else if(f>0){d=e.left-t.collisionPosition.marginLeft+l+c+h-o;if(d>0||i(d)<f)e.left+=l+c+h}},top:function(e,t){var n=t.within,r=n.offset.top+n.scrollTop,s=n.height,o=n.isWindow?n.scrollTop:n.offset.top,u=e.top-t.collisionPosition.marginTop,a=u-o,f=u+t.collisionHeight-s-o,l=t.my[1]==="top",c=l?-t.elemHeight:t.my[1]==="bottom"?t.elemHeight:0,h=t.at[1]==="top"?t.targetHeight:t.at[1]==="bottom"?-t.targetHeight:0,p=-2*t.offset[1],d,v;a<0?(v=e.top+c+h+p+t.collisionHeight-s-r,e.top+c+h+p>a&&(v<0||v<i(a))&&(e.top+=c+h+p)):f>0&&(d=e.top-t.collisionPosition.marginTop+c+h+p-o,e.top+c+h+p>f&&(d>0||i(d)<f)&&(e.top+=c+h+p))}},flipfit:{left:function(){e.ui.position.flip.left.apply(this,arguments),e.ui.position.fit.left.apply(this,arguments)},top:function(){e.ui.position.flip.top.apply(this,arguments),e.ui.position.fit.top.apply(this,arguments)}}},function(){var t,n,r,i,s,o=document.getElementsByTagName("body")[0],u=document.createElement("div");t=document.createElement(o?"div":"body"),r={visibility:"hidden",width:0,height:0,border:0,margin:0,background:"none"},o&&e.extend(r,{position:"absolute",left:"-1000px",top:"-1000px"});for(s in r)t.style[s]=r[s];t.appendChild(u),n=o||document.documentElement,n.insertBefore(t,n.firstChild),u.style.cssText="position: absolute; left: 10.7432222px;",i=e(u).offset().left,e.support.offsetFractions=i>10&&i<11,t.innerHTML="",n.removeChild(t)}(),e.uiBackCompat!==!1&&function(e){var n=e.fn.position;e.fn.position=function(r){if(!r||!r.offset)return n.call(this,r);var i=r.offset.split(" "),s=r.at.split(" ");return i.length===1&&(i[1]=i[0]),/^\d/.test(i[0])&&(i[0]="+"+i[0]),/^\d/.test(i[1])&&(i[1]="+"+i[1]),s.length===1&&(/left|center|right/.test(s[0])?s[1]="center":(s[1]=s[0],s[0]="center")),n.call(this,e.extend(r,{at:s[0]+i[0]+" "+s[1]+i[1],offset:t}))}}(jQuery)})(jQuery);(function(e,t){e.widget("ui.draggable",e.ui.mouse,{version:"1.9.1",widgetEventPrefix:"drag",options:{addClasses:!0,appendTo:"parent",axis:!1,connectToSortable:!1,containment:!1,cursor:"auto",cursorAt:!1,grid:!1,handle:!1,helper:"original",iframeFix:!1,opacity:!1,refreshPositions:!1,revert:!1,revertDuration:500,scope:"default",scroll:!0,scrollSensitivity:20,scrollSpeed:20,snap:!1,snapMode:"both",snapTolerance:20,stack:!1,zIndex:!1},_create:function(){this.options.helper=="original"&&!/^(?:r|a|f)/.test(this.element.css("position"))&&(this.element[0].style.position="relative"),this.options.addClasses&&this.element.addClass("ui-draggable"),this.options.disabled&&this.element.addClass("ui-draggable-disabled"),this._mouseInit()},_destroy:function(){this.element.removeClass("ui-draggable ui-draggable-dragging ui-draggable-disabled"),this._mouseDestroy()},_mouseCapture:function(t){var n=this.options;return this.helper||n.disabled||e(t.target).is(".ui-resizable-handle")?!1:(this.handle=this._getHandle(t),this.handle?(e(n.iframeFix===!0?"iframe":n.iframeFix).each(function(){e('<div class="ui-draggable-iframeFix" style="background: #fff;"></div>').css({width:this.offsetWidth+"px",height:this.offsetHeight+"px",position:"absolute",opacity:"0.001",zIndex:1e3}).css(e(this).offset()).appendTo("body")}),!0):!1)},_mouseStart:function(t){var n=this.options;return this.helper=this._createHelper(t),this.helper.addClass("ui-draggable-dragging"),this._cacheHelperProportions(),e.ui.ddmanager&&(e.ui.ddmanager.current=this),this._cacheMargins(),this.cssPosition=this.helper.css("position"),this.scrollParent=this.helper.scrollParent(),this.offset=this.positionAbs=this.element.offset(),this.offset={top:this.offset.top-this.margins.top,left:this.offset.left-this.margins.left},e.extend(this.offset,{click:{left:t.pageX-this.offset.left,top:t.pageY-this.offset.top},parent:this._getParentOffset(),relative:this._getRelativeOffset()}),this.originalPosition=this.position=this._generatePosition(t),this.originalPageX=t.pageX,this.originalPageY=t.pageY,n.cursorAt&&this._adjustOffsetFromHelper(n.cursorAt),n.containment&&this._setContainment(),this._trigger("start",t)===!1?(this._clear(),!1):(this._cacheHelperProportions(),e.ui.ddmanager&&!n.dropBehaviour&&e.ui.ddmanager.prepareOffsets(this,t),this._mouseDrag(t,!0),e.ui.ddmanager&&e.ui.ddmanager.dragStart(this,t),!0)},_mouseDrag:function(t,n){this.position=this._generatePosition(t),this.positionAbs=this._convertPositionTo("absolute");if(!n){var r=this._uiHash();if(this._trigger("drag",t,r)===!1)return this._mouseUp({}),!1;this.position=r.position}if(!this.options.axis||this.options.axis!="y")this.helper[0].style.left=this.position.left+"px";if(!this.options.axis||this.options.axis!="x")this.helper[0].style.top=this.position.top+"px";return e.ui.ddmanager&&e.ui.ddmanager.drag(this,t),!1},_mouseStop:function(t){var n=!1;e.ui.ddmanager&&!this.options.dropBehaviour&&(n=e.ui.ddmanager.drop(this,t)),this.dropped&&(n=this.dropped,this.dropped=!1);var r=this.element[0],i=!1;while(r&&(r=r.parentNode))r==document&&(i=!0);if(!i&&this.options.helper==="original")return!1;if(this.options.revert=="invalid"&&!n||this.options.revert=="valid"&&n||this.options.revert===!0||e.isFunction(this.options.revert)&&this.options.revert.call(this.element,n)){var s=this;e(this.helper).animate(this.originalPosition,parseInt(this.options.revertDuration,10),function(){s._trigger("stop",t)!==!1&&s._clear()})}else this._trigger("stop",t)!==!1&&this._clear();return!1},_mouseUp:function(t){return e("div.ui-draggable-iframeFix").each(function(){this.parentNode.removeChild(this)}),e.ui.ddmanager&&e.ui.ddmanager.dragStop(this,t),e.ui.mouse.prototype._mouseUp.call(this,t)},cancel:function(){return this.helper.is(".ui-draggable-dragging")?this._mouseUp({}):this._clear(),this},_getHandle:function(t){var n=!this.options.handle||!e(this.options.handle,this.element).length?!0:!1;return e(this.options.handle,this.element).find("*").andSelf().each(function(){this==t.target&&(n=!0)}),n},_createHelper:function(t){var n=this.options,r=e.isFunction(n.helper)?e(n.helper.apply(this.element[0],[t])):n.helper=="clone"?this.element.clone().removeAttr("id"):this.element;return r.parents("body").length||r.appendTo(n.appendTo=="parent"?this.element[0].parentNode:n.appendTo),r[0]!=this.element[0]&&!/(fixed|absolute)/.test(r.css("position"))&&r.css("position","absolute"),r},_adjustOffsetFromHelper:function(t){typeof t=="string"&&(t=t.split(" ")),e.isArray(t)&&(t={left:+t[0],top:+t[1]||0}),"left"in t&&(this.offset.click.left=t.left+this.margins.left),"right"in t&&(this.offset.click.left=this.helperProportions.width-t.right+this.margins.left),"top"in t&&(this.offset.click.top=t.top+this.margins.top),"bottom"in t&&(this.offset.click.top=this.helperProportions.height-t.bottom+this.margins.top)},_getParentOffset:function(){this.offsetParent=this.helper.offsetParent();var t=this.offsetParent.offset();this.cssPosition=="absolute"&&this.scrollParent[0]!=document&&e.contains(this.scrollParent[0],this.offsetParent[0])&&(t.left+=this.scrollParent.scrollLeft(),t.top+=this.scrollParent.scrollTop());if(this.offsetParent[0]==document.body||this.offsetParent[0].tagName&&this.offsetParent[0].tagName.toLowerCase()=="html"&&e.ui.ie)t={top:0,left:0};return{top:t.top+(parseInt(this.offsetParent.css("borderTopWidth"),10)||0),left:t.left+(parseInt(this.offsetParent.css("borderLeftWidth"),10)||0)}},_getRelativeOffset:function(){if(this.cssPosition=="relative"){var e=this.element.position();return{top:e.top-(parseInt(this.helper.css("top"),10)||0)+this.scrollParent.scrollTop(),left:e.left-(parseInt(this.helper.css("left"),10)||0)+this.scrollParent.scrollLeft()}}return{top:0,left:0}},_cacheMargins:function(){this.margins={left:parseInt(this.element.css("marginLeft"),10)||0,top:parseInt(this.element.css("marginTop"),10)||0,right:parseInt(this.element.css("marginRight"),10)||0,bottom:parseInt(this.element.css("marginBottom"),10)||0}},_cacheHelperProportions:function(){this.helperProportions={width:this.helper.outerWidth(),height:this.helper.outerHeight()}},_setContainment:function(){var t=this.options;t.containment=="parent"&&(t.containment=this.helper[0].parentNode);if(t.containment=="document"||t.containment=="window")this.containment=[t.containment=="document"?0:e(window).scrollLeft()-this.offset.relative.left-this.offset.parent.left,t.containment=="document"?0:e(window).scrollTop()-this.offset.relative.top-this.offset.parent.top,(t.containment=="document"?0:e(window).scrollLeft())+e(t.containment=="document"?document:window).width()-this.helperProportions.width-this.margins.left,(t.containment=="document"?0:e(window).scrollTop())+(e(t.containment=="document"?document:window).height()||document.body.parentNode.scrollHeight)-this.helperProportions.height-this.margins.top];if(!/^(document|window|parent)$/.test(t.containment)&&t.containment.constructor!=Array){var n=e(t.containment),r=n[0];if(!r)return;var i=n.offset(),s=e(r).css("overflow")!="hidden";this.containment=[(parseInt(e(r).css("borderLeftWidth"),10)||0)+(parseInt(e(r).css("paddingLeft"),10)||0),(parseInt(e(r).css("borderTopWidth"),10)||0)+(parseInt(e(r).css("paddingTop"),10)||0),(s?Math.max(r.scrollWidth,r.offsetWidth):r.offsetWidth)-(parseInt(e(r).css("borderLeftWidth"),10)||0)-(parseInt(e(r).css("paddingRight"),10)||0)-this.helperProportions.width-this.margins.left-this.margins.right,(s?Math.max(r.scrollHeight,r.offsetHeight):r.offsetHeight)-(parseInt(e(r).css("borderTopWidth"),10)||0)-(parseInt(e(r).css("paddingBottom"),10)||0)-this.helperProportions.height-this.margins.top-this.margins.bottom],this.relative_container=n}else t.containment.constructor==Array&&(this.containment=t.containment)},_convertPositionTo:function(t,n){n||(n=this.position);var r=t=="absolute"?1:-1,i=this.options,s=this.cssPosition!="absolute"||this.scrollParent[0]!=document&&!!e.contains(this.scrollParent[0],this.offsetParent[0])?this.scrollParent:this.offsetParent,o=/(html|body)/i.test(s[0].tagName);return{top:n.top+this.offset.relative.top*r+this.offset.parent.top*r-(this.cssPosition=="fixed"?-this.scrollParent.scrollTop():o?0:s.scrollTop())*r,left:n.left+this.offset.relative.left*r+this.offset.parent.left*r-(this.cssPosition=="fixed"?-this.scrollParent.scrollLeft():o?0:s.scrollLeft())*r}},_generatePosition:function(t){var n=this.options,r=this.cssPosition!="absolute"||this.scrollParent[0]!=document&&!!e.contains(this.scrollParent[0],this.offsetParent[0])?this.scrollParent:this.offsetParent,i=/(html|body)/i.test(r[0].tagName),s=t.pageX,o=t.pageY;if(this.originalPosition){var u;if(this.containment){if(this.relative_container){var a=this.relative_container.offset();u=[this.containment[0]+a.left,this.containment[1]+a.top,this.containment[2]+a.left,this.containment[3]+a.top]}else u=this.containment;t.pageX-this.offset.click.left<u[0]&&(s=u[0]+this.offset.click.left),t.pageY-this.offset.click.top<u[1]&&(o=u[1]+this.offset.click.top),t.pageX-this.offset.click.left>u[2]&&(s=u[2]+this.offset.click.left),t.pageY-this.offset.click.top>u[3]&&(o=u[3]+this.offset.click.top)}if(n.grid){var f=n.grid[1]?this.originalPageY+Math.round((o-this.originalPageY)/n.grid[1])*n.grid[1]:this.originalPageY;o=u?f-this.offset.click.top<u[1]||f-this.offset.click.top>u[3]?f-this.offset.click.top<u[1]?f+n.grid[1]:f-n.grid[1]:f:f;var l=n.grid[0]?this.originalPageX+Math.round((s-this.originalPageX)/n.grid[0])*n.grid[0]:this.originalPageX;s=u?l-this.offset.click.left<u[0]||l-this.offset.click.left>u[2]?l-this.offset.click.left<u[0]?l+n.grid[0]:l-n.grid[0]:l:l}}return{top:o-this.offset.click.top-this.offset.relative.top-this.offset.parent.top+(this.cssPosition=="fixed"?-this.scrollParent.scrollTop():i?0:r.scrollTop()),left:s-this.offset.click.left-this.offset.relative.left-this.offset.parent.left+(this.cssPosition=="fixed"?-this.scrollParent.scrollLeft():i?0:r.scrollLeft())}},_clear:function(){this.helper.removeClass("ui-draggable-dragging"),this.helper[0]!=this.element[0]&&!this.cancelHelperRemoval&&this.helper.remove(),this.helper=null,this.cancelHelperRemoval=!1},_trigger:function(t,n,r){return r=r||this._uiHash(),e.ui.plugin.call(this,t,[n,r]),t=="drag"&&(this.positionAbs=this._convertPositionTo("absolute")),e.Widget.prototype._trigger.call(this,t,n,r)},plugins:{},_uiHash:function(e){return{helper:this.helper,position:this.position,originalPosition:this.originalPosition,offset:this.positionAbs}}}),e.ui.plugin.add("draggable","connectToSortable",{start:function(t,n){var r=e(this).data("draggable"),i=r.options,s=e.extend({},n,{item:r.element});r.sortables=[],e(i.connectToSortable).each(function(){var n=e.data(this,"sortable");n&&!n.options.disabled&&(r.sortables.push({instance:n,shouldRevert:n.options.revert}),n.refreshPositions(),n._trigger("activate",t,s))})},stop:function(t,n){var r=e(this).data("draggable"),i=e.extend({},n,{item:r.element});e.each(r.sortables,function(){this.instance.isOver?(this.instance.isOver=0,r.cancelHelperRemoval=!0,this.instance.cancelHelperRemoval=!1,this.shouldRevert&&(this.instance.options.revert=!0),this.instance._mouseStop(t),this.instance.options.helper=this.instance.options._helper,r.options.helper=="original"&&this.instance.currentItem.css({top:"auto",left:"auto"})):(this.instance.cancelHelperRemoval=!1,this.instance._trigger("deactivate",t,i))})},drag:function(t,n){var r=e(this).data("draggable"),i=this,s=function(t){var n=this.offset.click.top,r=this.offset.click.left,i=this.positionAbs.top,s=this.positionAbs.left,o=t.height,u=t.width,a=t.top,f=t.left;return e.ui.isOver(i+n,s+r,a,f,o,u)};e.each(r.sortables,function(s){var o=!1,u=this;this.instance.positionAbs=r.positionAbs,this.instance.helperProportions=r.helperProportions,this.instance.offset.click=r.offset.click,this.instance._intersectsWith(this.instance.containerCache)&&(o=!0,e.each(r.sortables,function(){return this.instance.positionAbs=r.positionAbs,this.instance.helperProportions=r.helperProportions,this.instance.offset.click=r.offset.click,this!=u&&this.instance._intersectsWith(this.instance.containerCache)&&e.ui.contains(u.instance.element[0],this.instance.element[0])&&(o=!1),o})),o?(this.instance.isOver||(this.instance.isOver=1,this.instance.currentItem=e(i).clone().removeAttr("id").appendTo(this.instance.element).data("sortable-item",!0),this.instance.options._helper=this.instance.options.helper,this.instance.options.helper=function(){return n.helper[0]},t.target=this.instance.currentItem[0],this.instance._mouseCapture(t,!0),this.instance._mouseStart(t,!0,!0),this.instance.offset.click.top=r.offset.click.top,this.instance.offset.click.left=r.offset.click.left,this.instance.offset.parent.left-=r.offset.parent.left-this.instance.offset.parent.left,this.instance.offset.parent.top-=r.offset.parent.top-this.instance.offset.parent.top,r._trigger("toSortable",t),r.dropped=this.instance.element,r.currentItem=r.element,this.instance.fromOutside=r),this.instance.currentItem&&this.instance._mouseDrag(t)):this.instance.isOver&&(this.instance.isOver=0,this.instance.cancelHelperRemoval=!0,this.instance.options.revert=!1,this.instance._trigger("out",t,this.instance._uiHash(this.instance)),this.instance._mouseStop(t,!0),this.instance.options.helper=this.instance.options._helper,this.instance.currentItem.remove(),this.instance.placeholder&&this.instance.placeholder.remove(),r._trigger("fromSortable",t),r.dropped=!1)})}}),e.ui.plugin.add("draggable","cursor",{start:function(t,n){var r=e("body"),i=e(this).data("draggable").options;r.css("cursor")&&(i._cursor=r.css("cursor")),r.css("cursor",i.cursor)},stop:function(t,n){var r=e(this).data("draggable").options;r._cursor&&e("body").css("cursor",r._cursor)}}),e.ui.plugin.add("draggable","opacity",{start:function(t,n){var r=e(n.helper),i=e(this).data("draggable").options;r.css("opacity")&&(i._opacity=r.css("opacity")),r.css("opacity",i.opacity)},stop:function(t,n){var r=e(this).data("draggable").options;r._opacity&&e(n.helper).css("opacity",r._opacity)}}),e.ui.plugin.add("draggable","scroll",{start:function(t,n){var r=e(this).data("draggable");r.scrollParent[0]!=document&&r.scrollParent[0].tagName!="HTML"&&(r.overflowOffset=r.scrollParent.offset())},drag:function(t,n){var r=e(this).data("draggable"),i=r.options,s=!1;if(r.scrollParent[0]!=document&&r.scrollParent[0].tagName!="HTML"){if(!i.axis||i.axis!="x")r.overflowOffset.top+r.scrollParent[0].offsetHeight-t.pageY<i.scrollSensitivity?r.scrollParent[0].scrollTop=s=r.scrollParent[0].scrollTop+i.scrollSpeed:t.pageY-r.overflowOffset.top<i.scrollSensitivity&&(r.scrollParent[0].scrollTop=s=r.scrollParent[0].scrollTop-i.scrollSpeed);if(!i.axis||i.axis!="y")r.overflowOffset.left+r.scrollParent[0].offsetWidth-t.pageX<i.scrollSensitivity?r.scrollParent[0].scrollLeft=s=r.scrollParent[0].scrollLeft+i.scrollSpeed:t.pageX-r.overflowOffset.left<i.scrollSensitivity&&(r.scrollParent[0].scrollLeft=s=r.scrollParent[0].scrollLeft-i.scrollSpeed)}else{if(!i.axis||i.axis!="x")t.pageY-e(document).scrollTop()<i.scrollSensitivity?s=e(document).scrollTop(e(document).scrollTop()-i.scrollSpeed):e(window).height()-(t.pageY-e(document).scrollTop())<i.scrollSensitivity&&(s=e(document).scrollTop(e(document).scrollTop()+i.scrollSpeed));if(!i.axis||i.axis!="y")t.pageX-e(document).scrollLeft()<i.scrollSensitivity?s=e(document).scrollLeft(e(document).scrollLeft()-i.scrollSpeed):e(window).width()-(t.pageX-e(document).scrollLeft())<i.scrollSensitivity&&(s=e(document).scrollLeft(e(document).scrollLeft()+i.scrollSpeed))}s!==!1&&e.ui.ddmanager&&!i.dropBehaviour&&e.ui.ddmanager.prepareOffsets(r,t)}}),e.ui.plugin.add("draggable","snap",{start:function(t,n){var r=e(this).data("draggable"),i=r.options;r.snapElements=[],e(i.snap.constructor!=String?i.snap.items||":data(draggable)":i.snap).each(function(){var t=e(this),n=t.offset();this!=r.element[0]&&r.snapElements.push({item:this,width:t.outerWidth(),height:t.outerHeight(),top:n.top,left:n.left})})},drag:function(t,n){var r=e(this).data("draggable"),i=r.options,s=i.snapTolerance,o=n.offset.left,u=o+r.helperProportions.width,a=n.offset.top,f=a+r.helperProportions.height;for(var l=r.snapElements.length-1;l>=0;l--){var c=r.snapElements[l].left,h=c+r.snapElements[l].width,p=r.snapElements[l].top,d=p+r.snapElements[l].height;if(!(c-s<o&&o<h+s&&p-s<a&&a<d+s||c-s<o&&o<h+s&&p-s<f&&f<d+s||c-s<u&&u<h+s&&p-s<a&&a<d+s||c-s<u&&u<h+s&&p-s<f&&f<d+s)){r.snapElements[l].snapping&&r.options.snap.release&&r.options.snap.release.call(r.element,t,e.extend(r._uiHash(),{snapItem:r.snapElements[l].item})),r.snapElements[l].snapping=!1;continue}if(i.snapMode!="inner"){var v=Math.abs(p-f)<=s,m=Math.abs(d-a)<=s,g=Math.abs(c-u)<=s,y=Math.abs(h-o)<=s;v&&(n.position.top=r._convertPositionTo("relative",{top:p-r.helperProportions.height,left:0}).top-r.margins.top),m&&(n.position.top=r._convertPositionTo("relative",{top:d,left:0}).top-r.margins.top),g&&(n.position.left=r._convertPositionTo("relative",{top:0,left:c-r.helperProportions.width}).left-r.margins.left),y&&(n.position.left=r._convertPositionTo("relative",{top:0,left:h}).left-r.margins.left)}var b=v||m||g||y;if(i.snapMode!="outer"){var v=Math.abs(p-a)<=s,m=Math.abs(d-f)<=s,g=Math.abs(c-o)<=s,y=Math.abs(h-u)<=s;v&&(n.position.top=r._convertPositionTo("relative",{top:p,left:0}).top-r.margins.top),m&&(n.position.top=r._convertPositionTo("relative",{top:d-r.helperProportions.height,left:0}).top-r.margins.top),g&&(n.position.left=r._convertPositionTo("relative",{top:0,left:c}).left-r.margins.left),y&&(n.position.left=r._convertPositionTo("relative",{top:0,left:h-r.helperProportions.width}).left-r.margins.left)}!r.snapElements[l].snapping&&(v||m||g||y||b)&&r.options.snap.snap&&r.options.snap.snap.call(r.element,t,e.extend(r._uiHash(),{snapItem:r.snapElements[l].item})),r.snapElements[l].snapping=v||m||g||y||b}}}),e.ui.plugin.add("draggable","stack",{start:function(t,n){var r=e(this).data("draggable").options,i=e.makeArray(e(r.stack)).sort(function(t,n){return(parseInt(e(t).css("zIndex"),10)||0)-(parseInt(e(n).css("zIndex"),10)||0)});if(!i.length)return;var s=parseInt(i[0].style.zIndex)||0;e(i).each(function(e){this.style.zIndex=s+e}),this[0].style.zIndex=s+i.length}}),e.ui.plugin.add("draggable","zIndex",{start:function(t,n){var r=e(n.helper),i=e(this).data("draggable").options;r.css("zIndex")&&(i._zIndex=r.css("zIndex")),r.css("zIndex",i.zIndex)},stop:function(t,n){var r=e(this).data("draggable").options;r._zIndex&&e(n.helper).css("zIndex",r._zIndex)}})})(jQuery);(function(e,t){e.widget("ui.droppable",{version:"1.9.1",widgetEventPrefix:"drop",options:{accept:"*",activeClass:!1,addClasses:!0,greedy:!1,hoverClass:!1,scope:"default",tolerance:"intersect"},_create:function(){var t=this.options,n=t.accept;this.isover=0,this.isout=1,this.accept=e.isFunction(n)?n:function(e){return e.is(n)},this.proportions={width:this.element[0].offsetWidth,height:this.element[0].offsetHeight},e.ui.ddmanager.droppables[t.scope]=e.ui.ddmanager.droppables[t.scope]||[],e.ui.ddmanager.droppables[t.scope].push(this),t.addClasses&&this.element.addClass("ui-droppable")},_destroy:function(){var t=e.ui.ddmanager.droppables[this.options.scope];for(var n=0;n<t.length;n++)t[n]==this&&t.splice(n,1);this.element.removeClass("ui-droppable ui-droppable-disabled")},_setOption:function(t,n){t=="accept"&&(this.accept=e.isFunction(n)?n:function(e){return e.is(n)}),e.Widget.prototype._setOption.apply(this,arguments)},_activate:function(t){var n=e.ui.ddmanager.current;this.options.activeClass&&this.element.addClass(this.options.activeClass),n&&this._trigger("activate",t,this.ui(n))},_deactivate:function(t){var n=e.ui.ddmanager.current;this.options.activeClass&&this.element.removeClass(this.options.activeClass),n&&this._trigger("deactivate",t,this.ui(n))},_over:function(t){var n=e.ui.ddmanager.current;if(!n||(n.currentItem||n.element)[0]==this.element[0])return;this.accept.call(this.element[0],n.currentItem||n.element)&&(this.options.hoverClass&&this.element.addClass(this.options.hoverClass),this._trigger("over",t,this.ui(n)))},_out:function(t){var n=e.ui.ddmanager.current;if(!n||(n.currentItem||n.element)[0]==this.element[0])return;this.accept.call(this.element[0],n.currentItem||n.element)&&(this.options.hoverClass&&this.element.removeClass(this.options.hoverClass),this._trigger("out",t,this.ui(n)))},_drop:function(t,n){var r=n||e.ui.ddmanager.current;if(!r||(r.currentItem||r.element)[0]==this.element[0])return!1;var i=!1;return this.element.find(":data(droppable)").not(".ui-draggable-dragging").each(function(){var t=e.data(this,"droppable");if(t.options.greedy&&!t.options.disabled&&t.options.scope==r.options.scope&&t.accept.call(t.element[0],r.currentItem||r.element)&&e.ui.intersect(r,e.extend(t,{offset:t.element.offset()}),t.options.tolerance))return i=!0,!1}),i?!1:this.accept.call(this.element[0],r.currentItem||r.element)?(this.options.activeClass&&this.element.removeClass(this.options.activeClass),this.options.hoverClass&&this.element.removeClass(this.options.hoverClass),this._trigger("drop",t,this.ui(r)),this.element):!1},ui:function(e){return{draggable:e.currentItem||e.element,helper:e.helper,position:e.position,offset:e.positionAbs}}}),e.ui.intersect=function(t,n,r){if(!n.offset)return!1;var i=(t.positionAbs||t.position.absolute).left,s=i+t.helperProportions.width,o=(t.positionAbs||t.position.absolute).top,u=o+t.helperProportions.height,a=n.offset.left,f=a+n.proportions.width,l=n.offset.top,c=l+n.proportions.height;switch(r){case"fit":return a<=i&&s<=f&&l<=o&&u<=c;case"intersect":return a<i+t.helperProportions.width/2&&s-t.helperProportions.width/2<f&&l<o+t.helperProportions.height/2&&u-t.helperProportions.height/2<c;case"pointer":var h=(t.positionAbs||t.position.absolute).left+(t.clickOffset||t.offset.click).left,p=(t.positionAbs||t.position.absolute).top+(t.clickOffset||t.offset.click).top,d=e.ui.isOver(p,h,l,a,n.proportions.height,n.proportions.width);return d;case"touch":return(o>=l&&o<=c||u>=l&&u<=c||o<l&&u>c)&&(i>=a&&i<=f||s>=a&&s<=f||i<a&&s>f);default:return!1}},e.ui.ddmanager={current:null,droppables:{"default":[]},prepareOffsets:function(t,n){var r=e.ui.ddmanager.droppables[t.options.scope]||[],i=n?n.type:null,s=(t.currentItem||t.element).find(":data(droppable)").andSelf();e:for(var o=0;o<r.length;o++){if(r[o].options.disabled||t&&!r[o].accept.call(r[o].element[0],t.currentItem||t.element))continue;for(var u=0;u<s.length;u++)if(s[u]==r[o].element[0]){r[o].proportions.height=0;continue e}r[o].visible=r[o].element.css("display")!="none";if(!r[o].visible)continue;i=="mousedown"&&r[o]._activate.call(r[o],n),r[o].offset=r[o].element.offset(),r[o].proportions={width:r[o].element[0].offsetWidth,height:r[o].element[0].offsetHeight}}},drop:function(t,n){var r=!1;return e.each(e.ui.ddmanager.droppables[t.options.scope]||[],function(){if(!this.options)return;!this.options.disabled&&this.visible&&e.ui.intersect(t,this,this.options.tolerance)&&(r=this._drop.call(this,n)||r),!this.options.disabled&&this.visible&&this.accept.call(this.element[0],t.currentItem||t.element)&&(this.isout=1,this.isover=0,this._deactivate.call(this,n))}),r},dragStart:function(t,n){t.element.parentsUntil("body").bind("scroll.droppable",function(){t.options.refreshPositions||e.ui.ddmanager.prepareOffsets(t,n)})},drag:function(t,n){t.options.refreshPositions&&e.ui.ddmanager.prepareOffsets(t,n),e.each(e.ui.ddmanager.droppables[t.options.scope]||[],function(){if(this.options.disabled||this.greedyChild||!this.visible)return;var r=e.ui.intersect(t,this,this.options.tolerance),i=!r&&this.isover==1?"isout":r&&this.isover==0?"isover":null;if(!i)return;var s;if(this.options.greedy){var o=this.options.scope,u=this.element.parents(":data(droppable)").filter(function(){return e.data(this,"droppable").options.scope===o});u.length&&(s=e.data(u[0],"droppable"),s.greedyChild=i=="isover"?1:0)}s&&i=="isover"&&(s.isover=0,s.isout=1,s._out.call(s,n)),this[i]=1,this[i=="isout"?"isover":"isout"]=0,this[i=="isover"?"_over":"_out"].call(this,n),s&&i=="isout"&&(s.isout=0,s.isover=1,s._over.call(s,n))})},dragStop:function(t,n){t.element.parentsUntil("body").unbind("scroll.droppable"),t.options.refreshPositions||e.ui.ddmanager.prepareOffsets(t,n)}}})(jQuery);(function(e,t){e.widget("ui.resizable",e.ui.mouse,{version:"1.9.1",widgetEventPrefix:"resize",options:{alsoResize:!1,animate:!1,animateDuration:"slow",animateEasing:"swing",aspectRatio:!1,autoHide:!1,containment:!1,ghost:!1,grid:!1,handles:"e,s,se",helper:!1,maxHeight:null,maxWidth:null,minHeight:10,minWidth:10,zIndex:1e3},_create:function(){var t=this,n=this.options;this.element.addClass("ui-resizable"),e.extend(this,{_aspectRatio:!!n.aspectRatio,aspectRatio:n.aspectRatio,originalElement:this.element,_proportionallyResizeElements:[],_helper:n.helper||n.ghost||n.animate?n.helper||"ui-resizable-helper":null}),this.element[0].nodeName.match(/canvas|textarea|input|select|button|img/i)&&(this.element.wrap(e('<div class="ui-wrapper" style="overflow: hidden;"></div>').css({position:this.element.css("position"),width:this.element.outerWidth(),height:this.element.outerHeight(),top:this.element.css("top"),left:this.element.css("left")})),this.element=this.element.parent().data("resizable",this.element.data("resizable")),this.elementIsWrapper=!0,this.element.css({marginLeft:this.originalElement.css("marginLeft"),marginTop:this.originalElement.css("marginTop"),marginRight:this.originalElement.css("marginRight"),marginBottom:this.originalElement.css("marginBottom")}),this.originalElement.css({marginLeft:0,marginTop:0,marginRight:0,marginBottom:0}),this.originalResizeStyle=this.originalElement.css("resize"),this.originalElement.css("resize","none"),this._proportionallyResizeElements.push(this.originalElement.css({position:"static",zoom:1,display:"block"})),this.originalElement.css({margin:this.originalElement.css("margin")}),this._proportionallyResize()),this.handles=n.handles||(e(".ui-resizable-handle",this.element).length?{n:".ui-resizable-n",e:".ui-resizable-e",s:".ui-resizable-s",w:".ui-resizable-w",se:".ui-resizable-se",sw:".ui-resizable-sw",ne:".ui-resizable-ne",nw:".ui-resizable-nw"}:"e,s,se");if(this.handles.constructor==String){this.handles=="all"&&(this.handles="n,e,s,w,se,sw,ne,nw");var r=this.handles.split(",");this.handles={};for(var i=0;i<r.length;i++){var s=e.trim(r[i]),o="ui-resizable-"+s,u=e('<div class="ui-resizable-handle '+o+'"></div>');u.css({zIndex:n.zIndex}),"se"==s&&u.addClass("ui-icon ui-icon-gripsmall-diagonal-se"),this.handles[s]=".ui-resizable-"+s,this.element.append(u)}}this._renderAxis=function(t){t=t||this.element;for(var n in this.handles){this.handles[n].constructor==String&&(this.handles[n]=e(this.handles[n],this.element).show());if(this.elementIsWrapper&&this.originalElement[0].nodeName.match(/textarea|input|select|button/i)){var r=e(this.handles[n],this.element),i=0;i=/sw|ne|nw|se|n|s/.test(n)?r.outerHeight():r.outerWidth();var s=["padding",/ne|nw|n/.test(n)?"Top":/se|sw|s/.test(n)?"Bottom":/^e$/.test(n)?"Right":"Left"].join("");t.css(s,i),this._proportionallyResize()}if(!e(this.handles[n]).length)continue}},this._renderAxis(this.element),this._handles=e(".ui-resizable-handle",this.element).disableSelection(),this._handles.mouseover(function(){if(!t.resizing){if(this.className)var e=this.className.match(/ui-resizable-(se|sw|ne|nw|n|e|s|w)/i);t.axis=e&&e[1]?e[1]:"se"}}),n.autoHide&&(this._handles.hide(),e(this.element).addClass("ui-resizable-autohide").mouseenter(function(){if(n.disabled)return;e(this).removeClass("ui-resizable-autohide"),t._handles.show()}).mouseleave(function(){if(n.disabled)return;t.resizing||(e(this).addClass("ui-resizable-autohide"),t._handles.hide())})),this._mouseInit()},_destroy:function(){this._mouseDestroy();var t=function(t){e(t).removeClass("ui-resizable ui-resizable-disabled ui-resizable-resizing").removeData("resizable").removeData("ui-resizable").unbind(".resizable").find(".ui-resizable-handle").remove()};if(this.elementIsWrapper){t(this.element);var n=this.element;this.originalElement.css({position:n.css("position"),width:n.outerWidth(),height:n.outerHeight(),top:n.css("top"),left:n.css("left")}).insertAfter(n),n.remove()}return this.originalElement.css("resize",this.originalResizeStyle),t(this.originalElement),this},_mouseCapture:function(t){var n=!1;for(var r in this.handles)e(this.handles[r])[0]==t.target&&(n=!0);return!this.options.disabled&&n},_mouseStart:function(t){var r=this.options,i=this.element.position(),s=this.element;this.resizing=!0,this.documentScroll={top:e(document).scrollTop(),left:e(document).scrollLeft()},(s.is(".ui-draggable")||/absolute/.test(s.css("position")))&&s.css({position:"absolute",top:i.top,left:i.left}),this._renderProxy();var o=n(this.helper.css("left")),u=n(this.helper.css("top"));r.containment&&(o+=e(r.containment).scrollLeft()||0,u+=e(r.containment).scrollTop()||0),this.offset=this.helper.offset(),this.position={left:o,top:u},this.size=this._helper?{width:s.outerWidth(),height:s.outerHeight()}:{width:s.width(),height:s.height()},this.originalSize=this._helper?{width:s.outerWidth(),height:s.outerHeight()}:{width:s.width(),height:s.height()},this.originalPosition={left:o,top:u},this.sizeDiff={width:s.outerWidth()-s.width(),height:s.outerHeight()-s.height()},this.originalMousePosition={left:t.pageX,top:t.pageY},this.aspectRatio=typeof r.aspectRatio=="number"?r.aspectRatio:this.originalSize.width/this.originalSize.height||1;var a=e(".ui-resizable-"+this.axis).css("cursor");return e("body").css("cursor",a=="auto"?this.axis+"-resize":a),s.addClass("ui-resizable-resizing"),this._propagate("start",t),!0},_mouseDrag:function(e){var t=this.helper,n=this.options,r={},i=this,s=this.originalMousePosition,o=this.axis,u=e.pageX-s.left||0,a=e.pageY-s.top||0,f=this._change[o];if(!f)return!1;var l=f.apply(this,[e,u,a]);this._updateVirtualBoundaries(e.shiftKey);if(this._aspectRatio||e.shiftKey)l=this._updateRatio(l,e);return l=this._respectSize(l,e),this._propagate("resize",e),t.css({top:this.position.top+"px",left:this.position.left+"px",width:this.size.width+"px",height:this.size.height+"px"}),!this._helper&&this._proportionallyResizeElements.length&&this._proportionallyResize(),this._updateCache(l),this._trigger("resize",e,this.ui()),!1},_mouseStop:function(t){this.resizing=!1;var n=this.options,r=this;if(this._helper){var i=this._proportionallyResizeElements,s=i.length&&/textarea/i.test(i[0].nodeName),o=s&&e.ui.hasScroll(i[0],"left")?0:r.sizeDiff.height,u=s?0:r.sizeDiff.width,a={width:r.helper.width()-u,height:r.helper.height()-o},f=parseInt(r.element.css("left"),10)+(r.position.left-r.originalPosition.left)||null,l=parseInt(r.element.css("top"),10)+(r.position.top-r.originalPosition.top)||null;n.animate||this.element.css(e.extend(a,{top:l,left:f})),r.helper.height(r.size.height),r.helper.width(r.size.width),this._helper&&!n.animate&&this._proportionallyResize()}return e("body").css("cursor","auto"),this.element.removeClass("ui-resizable-resizing"),this._propagate("stop",t),this._helper&&this.helper.remove(),!1},_updateVirtualBoundaries:function(e){var t=this.options,n,i,s,o,u;u={minWidth:r(t.minWidth)?t.minWidth:0,maxWidth:r(t.maxWidth)?t.maxWidth:Infinity,minHeight:r(t.minHeight)?t.minHeight:0,maxHeight:r(t.maxHeight)?t.maxHeight:Infinity};if(this._aspectRatio||e)n=u.minHeight*this.aspectRatio,s=u.minWidth/this.aspectRatio,i=u.maxHeight*this.aspectRatio,o=u.maxWidth/this.aspectRatio,n>u.minWidth&&(u.minWidth=n),s>u.minHeight&&(u.minHeight=s),i<u.maxWidth&&(u.maxWidth=i),o<u.maxHeight&&(u.maxHeight=o);this._vBoundaries=u},_updateCache:function(e){var t=this.options;this.offset=this.helper.offset(),r(e.left)&&(this.position.left=e.left),r(e.top)&&(this.position.top=e.top),r(e.height)&&(this.size.height=e.height),r(e.width)&&(this.size.width=e.width)},_updateRatio:function(e,t){var n=this.options,i=this.position,s=this.size,o=this.axis;return r(e.height)?e.width=e.height*this.aspectRatio:r(e.width)&&(e.height=e.width/this.aspectRatio),o=="sw"&&(e.left=i.left+(s.width-e.width),e.top=null),o=="nw"&&(e.top=i.top+(s.height-e.height),e.left=i.left+(s.width-e.width)),e},_respectSize:function(e,t){var n=this.helper,i=this._vBoundaries,s=this._aspectRatio||t.shiftKey,o=this.axis,u=r(e.width)&&i.maxWidth&&i.maxWidth<e.width,a=r(e.height)&&i.maxHeight&&i.maxHeight<e.height,f=r(e.width)&&i.minWidth&&i.minWidth>e.width,l=r(e.height)&&i.minHeight&&i.minHeight>e.height;f&&(e.width=i.minWidth),l&&(e.height=i.minHeight),u&&(e.width=i.maxWidth),a&&(e.height=i.maxHeight);var c=this.originalPosition.left+this.originalSize.width,h=this.position.top+this.size.height,p=/sw|nw|w/.test(o),d=/nw|ne|n/.test(o);f&&p&&(e.left=c-i.minWidth),u&&p&&(e.left=c-i.maxWidth),l&&d&&(e.top=h-i.minHeight),a&&d&&(e.top=h-i.maxHeight);var v=!e.width&&!e.height;return v&&!e.left&&e.top?e.top=null:v&&!e.top&&e.left&&(e.left=null),e},_proportionallyResize:function(){var t=this.options;if(!this._proportionallyResizeElements.length)return;var n=this.helper||this.element;for(var r=0;r<this._proportionallyResizeElements.length;r++){var i=this._proportionallyResizeElements[r];if(!this.borderDif){var s=[i.css("borderTopWidth"),i.css("borderRightWidth"),i.css("borderBottomWidth"),i.css("borderLeftWidth")],o=[i.css("paddingTop"),i.css("paddingRight"),i.css("paddingBottom"),i.css("paddingLeft")];this.borderDif=e.map(s,function(e,t){var n=parseInt(e,10)||0,r=parseInt(o[t],10)||0;return n+r})}i.css({height:n.height()-this.borderDif[0]-this.borderDif[2]||0,width:n.width()-this.borderDif[1]-this.borderDif[3]||0})}},_renderProxy:function(){var t=this.element,n=this.options;this.elementOffset=t.offset();if(this._helper){this.helper=this.helper||e('<div style="overflow:hidden;"></div>');var r=e.ui.ie6?1:0,i=e.ui.ie6?2:-1;this.helper.addClass(this._helper).css({width:this.element.outerWidth()+i,height:this.element.outerHeight()+i,position:"absolute",left:this.elementOffset.left-r+"px",top:this.elementOffset.top-r+"px",zIndex:++n.zIndex}),this.helper.appendTo("body").disableSelection()}else this.helper=this.element},_change:{e:function(e,t,n){return{width:this.originalSize.width+t}},w:function(e,t,n){var r=this.options,i=this.originalSize,s=this.originalPosition;return{left:s.left+t,width:i.width-t}},n:function(e,t,n){var r=this.options,i=this.originalSize,s=this.originalPosition;return{top:s.top+n,height:i.height-n}},s:function(e,t,n){return{height:this.originalSize.height+n}},se:function(t,n,r){return e.extend(this._change.s.apply(this,arguments),this._change.e.apply(this,[t,n,r]))},sw:function(t,n,r){return e.extend(this._change.s.apply(this,arguments),this._change.w.apply(this,[t,n,r]))},ne:function(t,n,r){return e.extend(this._change.n.apply(this,arguments),this._change.e.apply(this,[t,n,r]))},nw:function(t,n,r){return e.extend(this._change.n.apply(this,arguments),this._change.w.apply(this,[t,n,r]))}},_propagate:function(t,n){e.ui.plugin.call(this,t,[n,this.ui()]),t!="resize"&&this._trigger(t,n,this.ui())},plugins:{},ui:function(){return{originalElement:this.originalElement,element:this.element,helper:this.helper,position:this.position,size:this.size,originalSize:this.originalSize,originalPosition:this.originalPosition}}}),e.ui.plugin.add("resizable","alsoResize",{start:function(t,n){var r=e(this).data("resizable"),i=r.options,s=function(t){e(t).each(function(){var t=e(this);t.data("resizable-alsoresize",{width:parseInt(t.width(),10),height:parseInt(t.height(),10),left:parseInt(t.css("left"),10),top:parseInt(t.css("top"),10)})})};typeof i.alsoResize=="object"&&!i.alsoResize.parentNode?i.alsoResize.length?(i.alsoResize=i.alsoResize[0],s(i.alsoResize)):e.each(i.alsoResize,function(e){s(e)}):s(i.alsoResize)},resize:function(t,n){var r=e(this).data("resizable"),i=r.options,s=r.originalSize,o=r.originalPosition,u={height:r.size.height-s.height||0,width:r.size.width-s.width||0,top:r.position.top-o.top||0,left:r.position.left-o.left||0},a=function(t,r){e(t).each(function(){var t=e(this),i=e(this).data("resizable-alsoresize"),s={},o=r&&r.length?r:t.parents(n.originalElement[0]).length?["width","height"]:["width","height","top","left"];e.each(o,function(e,t){var n=(i[t]||0)+(u[t]||0);n&&n>=0&&(s[t]=n||null)}),t.css(s)})};typeof i.alsoResize=="object"&&!i.alsoResize.nodeType?e.each(i.alsoResize,function(e,t){a(e,t)}):a(i.alsoResize)},stop:function(t,n){e(this).removeData("resizable-alsoresize")}}),e.ui.plugin.add("resizable","animate",{stop:function(t,n){var r=e(this).data("resizable"),i=r.options,s=r._proportionallyResizeElements,o=s.length&&/textarea/i.test(s[0].nodeName),u=o&&e.ui.hasScroll(s[0],"left")?0:r.sizeDiff.height,a=o?0:r.sizeDiff.width,f={width:r.size.width-a,height:r.size.height-u},l=parseInt(r.element.css("left"),10)+(r.position.left-r.originalPosition.left)||null,c=parseInt(r.element.css("top"),10)+(r.position.top-r.originalPosition.top)||null;r.element.animate(e.extend(f,c&&l?{top:c,left:l}:{}),{duration:i.animateDuration,easing:i.animateEasing,step:function(){var n={width:parseInt(r.element.css("width"),10),height:parseInt(r.element.css("height"),10),top:parseInt(r.element.css("top"),10),left:parseInt(r.element.css("left"),10)};s&&s.length&&e(s[0]).css({width:n.width,height:n.height}),r._updateCache(n),r._propagate("resize",t)}})}}),e.ui.plugin.add("resizable","containment",{start:function(t,r){var i=e(this).data("resizable"),s=i.options,o=i.element,u=s.containment,a=u instanceof e?u.get(0):/parent/.test(u)?o.parent().get(0):u;if(!a)return;i.containerElement=e(a);if(/document/.test(u)||u==document)i.containerOffset={left:0,top:0},i.containerPosition={left:0,top:0},i.parentData={element:e(document),left:0,top:0,width:e(document).width(),height:e(document).height()||document.body.parentNode.scrollHeight};else{var f=e(a),l=[];e(["Top","Right","Left","Bottom"]).each(function(e,t){l[e]=n(f.css("padding"+t))}),i.containerOffset=f.offset(),i.containerPosition=f.position(),i.containerSize={height:f.innerHeight()-l[3],width:f.innerWidth()-l[1]};var c=i.containerOffset,h=i.containerSize.height,p=i.containerSize.width,d=e.ui.hasScroll(a,"left")?a.scrollWidth:p,v=e.ui.hasScroll(a)?a.scrollHeight:h;i.parentData={element:a,left:c.left,top:c.top,width:d,height:v}}},resize:function(t,n){var r=e(this).data("resizable"),i=r.options,s=r.containerSize,o=r.containerOffset,u=r.size,a=r.position,f=r._aspectRatio||t.shiftKey,l={top:0,left:0},c=r.containerElement;c[0]!=document&&/static/.test(c.css("position"))&&(l=o),a.left<(r._helper?o.left:0)&&(r.size.width=r.size.width+(r._helper?r.position.left-o.left:r.position.left-l.left),f&&(r.size.height=r.size.width/r.aspectRatio),r.position.left=i.helper?o.left:0),a.top<(r._helper?o.top:0)&&(r.size.height=r.size.height+(r._helper?r.position.top-o.top:r.position.top),f&&(r.size.width=r.size.height*r.aspectRatio),r.position.top=r._helper?o.top:0),r.offset.left=r.parentData.left+r.position.left,r.offset.top=r.parentData.top+r.position.top;var h=Math.abs((r._helper?r.offset.left-l.left:r.offset.left-l.left)+r.sizeDiff.width),p=Math.abs((r._helper?r.offset.top-l.top:r.offset.top-o.top)+r.sizeDiff.height),d=r.containerElement.get(0)==r.element.parent().get(0),v=/relative|absolute/.test(r.containerElement.css("position"));d&&v&&(h-=r.parentData.left),h+r.size.width>=r.parentData.width&&(r.size.width=r.parentData.width-h,f&&(r.size.height=r.size.width/r.aspectRatio)),p+r.size.height>=r.parentData.height&&(r.size.height=r.parentData.height-p,f&&(r.size.width=r.size.height*r.aspectRatio))},stop:function(t,n){var r=e(this).data("resizable"),i=r.options,s=r.position,o=r.containerOffset,u=r.containerPosition,a=r.containerElement,f=e(r.helper),l=f.offset(),c=f.outerWidth()-r.sizeDiff.width,h=f.outerHeight()-r.sizeDiff.height;r._helper&&!i.animate&&/relative/.test(a.css("position"))&&e(this).css({left:l.left-u.left-o.left,width:c,height:h}),r._helper&&!i.animate&&/static/.test(a.css("position"))&&e(this).css({left:l.left-u.left-o.left,width:c,height:h})}}),e.ui.plugin.add("resizable","ghost",{start:function(t,n){var r=e(this).data("resizable"),i=r.options,s=r.size;r.ghost=r.originalElement.clone(),r.ghost.css({opacity:.25,display:"block",position:"relative",height:s.height,width:s.width,margin:0,left:0,top:0}).addClass("ui-resizable-ghost").addClass(typeof i.ghost=="string"?i.ghost:""),r.ghost.appendTo(r.helper)},resize:function(t,n){var r=e(this).data("resizable"),i=r.options;r.ghost&&r.ghost.css({position:"relative",height:r.size.height,width:r.size.width})},stop:function(t,n){var r=e(this).data("resizable"),i=r.options;r.ghost&&r.helper&&r.helper.get(0).removeChild(r.ghost.get(0))}}),e.ui.plugin.add("resizable","grid",{resize:function(t,n){var r=e(this).data("resizable"),i=r.options,s=r.size,o=r.originalSize,u=r.originalPosition,a=r.axis,f=i._aspectRatio||t.shiftKey;i.grid=typeof i.grid=="number"?[i.grid,i.grid]:i.grid;var l=Math.round((s.width-o.width)/(i.grid[0]||1))*(i.grid[0]||1),c=Math.round((s.height-o.height)/(i.grid[1]||1))*(i.grid[1]||1);/^(se|s|e)$/.test(a)?(r.size.width=o.width+l,r.size.height=o.height+c):/^(ne)$/.test(a)?(r.size.width=o.width+l,r.size.height=o.height+c,r.position.top=u.top-c):/^(sw)$/.test(a)?(r.size.width=o.width+l,r.size.height=o.height+c,r.position.left=u.left-l):(r.size.width=o.width+l,r.size.height=o.height+c,r.position.top=u.top-c,r.position.left=u.left-l)}});var n=function(e){return parseInt(e,10)||0},r=function(e){return!isNaN(parseInt(e,10))}})(jQuery);(function(e,t){e.widget("ui.selectable",e.ui.mouse,{version:"1.9.1",options:{appendTo:"body",autoRefresh:!0,distance:0,filter:"*",tolerance:"touch"},_create:function(){var t=this;this.element.addClass("ui-selectable"),this.dragged=!1;var n;this.refresh=function(){n=e(t.options.filter,t.element[0]),n.addClass("ui-selectee"),n.each(function(){var t=e(this),n=t.offset();e.data(this,"selectable-item",{element:this,$element:t,left:n.left,top:n.top,right:n.left+t.outerWidth(),bottom:n.top+t.outerHeight(),startselected:!1,selected:t.hasClass("ui-selected"),selecting:t.hasClass("ui-selecting"),unselecting:t.hasClass("ui-unselecting")})})},this.refresh(),this.selectees=n.addClass("ui-selectee"),this._mouseInit(),this.helper=e("<div class='ui-selectable-helper'></div>")},_destroy:function(){this.selectees.removeClass("ui-selectee").removeData("selectable-item"),this.element.removeClass("ui-selectable ui-selectable-disabled"),this._mouseDestroy()},_mouseStart:function(t){var n=this;this.opos=[t.pageX,t.pageY];if(this.options.disabled)return;var r=this.options;this.selectees=e(r.filter,this.element[0]),this._trigger("start",t),e(r.appendTo).append(this.helper),this.helper.css({left:t.clientX,top:t.clientY,width:0,height:0}),r.autoRefresh&&this.refresh(),this.selectees.filter(".ui-selected").each(function(){var r=e.data(this,"selectable-item");r.startselected=!0,!t.metaKey&&!t.ctrlKey&&(r.$element.removeClass("ui-selected"),r.selected=!1,r.$element.addClass("ui-unselecting"),r.unselecting=!0,n._trigger("unselecting",t,{unselecting:r.element}))}),e(t.target).parents().andSelf().each(function(){var r=e.data(this,"selectable-item");if(r){var i=!t.metaKey&&!t.ctrlKey||!r.$element.hasClass("ui-selected");return r.$element.removeClass(i?"ui-unselecting":"ui-selected").addClass(i?"ui-selecting":"ui-unselecting"),r.unselecting=!i,r.selecting=i,r.selected=i,i?n._trigger("selecting",t,{selecting:r.element}):n._trigger("unselecting",t,{unselecting:r.element}),!1}})},_mouseDrag:function(t){var n=this;this.dragged=!0;if(this.options.disabled)return;var r=this.options,i=this.opos[0],s=this.opos[1],o=t.pageX,u=t.pageY;if(i>o){var a=o;o=i,i=a}if(s>u){var a=u;u=s,s=a}return this.helper.css({left:i,top:s,width:o-i,height:u-s}),this.selectees.each(function(){var a=e.data(this,"selectable-item");if(!a||a.element==n.element[0])return;var f=!1;r.tolerance=="touch"?f=!(a.left>o||a.right<i||a.top>u||a.bottom<s):r.tolerance=="fit"&&(f=a.left>i&&a.right<o&&a.top>s&&a.bottom<u),f?(a.selected&&(a.$element.removeClass("ui-selected"),a.selected=!1),a.unselecting&&(a.$element.removeClass("ui-unselecting"),a.unselecting=!1),a.selecting||(a.$element.addClass("ui-selecting"),a.selecting=!0,n._trigger("selecting",t,{selecting:a.element}))):(a.selecting&&((t.metaKey||t.ctrlKey)&&a.startselected?(a.$element.removeClass("ui-selecting"),a.selecting=!1,a.$element.addClass("ui-selected"),a.selected=!0):(a.$element.removeClass("ui-selecting"),a.selecting=!1,a.startselected&&(a.$element.addClass("ui-unselecting"),a.unselecting=!0),n._trigger("unselecting",t,{unselecting:a.element}))),a.selected&&!t.metaKey&&!t.ctrlKey&&!a.startselected&&(a.$element.removeClass("ui-selected"),a.selected=!1,a.$element.addClass("ui-unselecting"),a.unselecting=!0,n._trigger("unselecting",t,{unselecting:a.element})))}),!1},_mouseStop:function(t){var n=this;this.dragged=!1;var r=this.options;return e(".ui-unselecting",this.element[0]).each(function(){var r=e.data(this,"selectable-item");r.$element.removeClass("ui-unselecting"),r.unselecting=!1,r.startselected=!1,n._trigger("unselected",t,{unselected:r.element})}),e(".ui-selecting",this.element[0]).each(function(){var r=e.data(this,"selectable-item");r.$element.removeClass("ui-selecting").addClass("ui-selected"),r.selecting=!1,r.selected=!0,r.startselected=!0,n._trigger("selected",t,{selected:r.element})}),this._trigger("stop",t),this.helper.remove(),!1}})})(jQuery);(function(e,t){e.widget("ui.sortable",e.ui.mouse,{version:"1.9.1",widgetEventPrefix:"sort",ready:!1,options:{appendTo:"parent",axis:!1,connectWith:!1,containment:!1,cursor:"auto",cursorAt:!1,dropOnEmpty:!0,forcePlaceholderSize:!1,forceHelperSize:!1,grid:!1,handle:!1,helper:"original",items:"> *",opacity:!1,placeholder:!1,revert:!1,scroll:!0,scrollSensitivity:20,scrollSpeed:20,scope:"default",tolerance:"intersect",zIndex:1e3},_create:function(){var e=this.options;this.containerCache={},this.element.addClass("ui-sortable"),this.refresh(),this.floating=this.items.length?e.axis==="x"||/left|right/.test(this.items[0].item.css("float"))||/inline|table-cell/.test(this.items[0].item.css("display")):!1,this.offset=this.element.offset(),this._mouseInit(),this.ready=!0},_destroy:function(){this.element.removeClass("ui-sortable ui-sortable-disabled"),this._mouseDestroy();for(var e=this.items.length-1;e>=0;e--)this.items[e].item.removeData(this.widgetName+"-item");return this},_setOption:function(t,n){t==="disabled"?(this.options[t]=n,this.widget().toggleClass("ui-sortable-disabled",!!n)):e.Widget.prototype._setOption.apply(this,arguments)},_mouseCapture:function(t,n){var r=this;if(this.reverting)return!1;if(this.options.disabled||this.options.type=="static")return!1;this._refreshItems(t);var i=null,s=e(t.target).parents().each(function(){if(e.data(this,r.widgetName+"-item")==r)return i=e(this),!1});e.data(t.target,r.widgetName+"-item")==r&&(i=e(t.target));if(!i)return!1;if(this.options.handle&&!n){var o=!1;e(this.options.handle,i).find("*").andSelf().each(function(){this==t.target&&(o=!0)});if(!o)return!1}return this.currentItem=i,this._removeCurrentsFromItems(),!0},_mouseStart:function(t,n,r){var i=this.options;this.currentContainer=this,this.refreshPositions(),this.helper=this._createHelper(t),this._cacheHelperProportions(),this._cacheMargins(),this.scrollParent=this.helper.scrollParent(),this.offset=this.currentItem.offset(),this.offset={top:this.offset.top-this.margins.top,left:this.offset.left-this.margins.left},e.extend(this.offset,{click:{left:t.pageX-this.offset.left,top:t.pageY-this.offset.top},parent:this._getParentOffset(),relative:this._getRelativeOffset()}),this.helper.css("position","absolute"),this.cssPosition=this.helper.css("position"),this.originalPosition=this._generatePosition(t),this.originalPageX=t.pageX,this.originalPageY=t.pageY,i.cursorAt&&this._adjustOffsetFromHelper(i.cursorAt),this.domPosition={prev:this.currentItem.prev()[0],parent:this.currentItem.parent()[0]},this.helper[0]!=this.currentItem[0]&&this.currentItem.hide(),this._createPlaceholder(),i.containment&&this._setContainment(),i.cursor&&(e("body").css("cursor")&&(this._storedCursor=e("body").css("cursor")),e("body").css("cursor",i.cursor)),i.opacity&&(this.helper.css("opacity")&&(this._storedOpacity=this.helper.css("opacity")),this.helper.css("opacity",i.opacity)),i.zIndex&&(this.helper.css("zIndex")&&(this._storedZIndex=this.helper.css("zIndex")),this.helper.css("zIndex",i.zIndex)),this.scrollParent[0]!=document&&this.scrollParent[0].tagName!="HTML"&&(this.overflowOffset=this.scrollParent.offset()),this._trigger("start",t,this._uiHash()),this._preserveHelperProportions||this._cacheHelperProportions();if(!r)for(var s=this.containers.length-1;s>=0;s--)this.containers[s]._trigger("activate",t,this._uiHash(this));return e.ui.ddmanager&&(e.ui.ddmanager.current=this),e.ui.ddmanager&&!i.dropBehaviour&&e.ui.ddmanager.prepareOffsets(this,t),this.dragging=!0,this.helper.addClass("ui-sortable-helper"),this._mouseDrag(t),!0},_mouseDrag:function(t){this.position=this._generatePosition(t),this.positionAbs=this._convertPositionTo("absolute"),this.lastPositionAbs||(this.lastPositionAbs=this.positionAbs);if(this.options.scroll){var n=this.options,r=!1;this.scrollParent[0]!=document&&this.scrollParent[0].tagName!="HTML"?(this.overflowOffset.top+this.scrollParent[0].offsetHeight-t.pageY<n.scrollSensitivity?this.scrollParent[0].scrollTop=r=this.scrollParent[0].scrollTop+n.scrollSpeed:t.pageY-this.overflowOffset.top<n.scrollSensitivity&&(this.scrollParent[0].scrollTop=r=this.scrollParent[0].scrollTop-n.scrollSpeed),this.overflowOffset.left+this.scrollParent[0].offsetWidth-t.pageX<n.scrollSensitivity?this.scrollParent[0].scrollLeft=r=this.scrollParent[0].scrollLeft+n.scrollSpeed:t.pageX-this.overflowOffset.left<n.scrollSensitivity&&(this.scrollParent[0].scrollLeft=r=this.scrollParent[0].scrollLeft-n.scrollSpeed)):(t.pageY-e(document).scrollTop()<n.scrollSensitivity?r=e(document).scrollTop(e(document).scrollTop()-n.scrollSpeed):e(window).height()-(t.pageY-e(document).scrollTop())<n.scrollSensitivity&&(r=e(document).scrollTop(e(document).scrollTop()+n.scrollSpeed)),t.pageX-e(document).scrollLeft()<n.scrollSensitivity?r=e(document).scrollLeft(e(document).scrollLeft()-n.scrollSpeed):e(window).width()-(t.pageX-e(document).scrollLeft())<n.scrollSensitivity&&(r=e(document).scrollLeft(e(document).scrollLeft()+n.scrollSpeed))),r!==!1&&e.ui.ddmanager&&!n.dropBehaviour&&e.ui.ddmanager.prepareOffsets(this,t)}this.positionAbs=this._convertPositionTo("absolute");if(!this.options.axis||this.options.axis!="y")this.helper[0].style.left=this.position.left+"px";if(!this.options.axis||this.options.axis!="x")this.helper[0].style.top=this.position.top+"px";for(var i=this.items.length-1;i>=0;i--){var s=this.items[i],o=s.item[0],u=this._intersectsWithPointer(s);if(!u)continue;if(s.instance!==this.currentContainer)continue;if(o!=this.currentItem[0]&&this.placeholder[u==1?"next":"prev"]()[0]!=o&&!e.contains(this.placeholder[0],o)&&(this.options.type=="semi-dynamic"?!e.contains(this.element[0],o):!0)){this.direction=u==1?"down":"up";if(this.options.tolerance!="pointer"&&!this._intersectsWithSides(s))break;this._rearrange(t,s),this._trigger("change",t,this._uiHash());break}}return this._contactContainers(t),e.ui.ddmanager&&e.ui.ddmanager.drag(this,t),this._trigger("sort",t,this._uiHash()),this.lastPositionAbs=this.positionAbs,!1},_mouseStop:function(t,n){if(!t)return;e.ui.ddmanager&&!this.options.dropBehaviour&&e.ui.ddmanager.drop(this,t);if(this.options.revert){var r=this,i=this.placeholder.offset();this.reverting=!0,e(this.helper).animate({left:i.left-this.offset.parent.left-this.margins.left+(this.offsetParent[0]==document.body?0:this.offsetParent[0].scrollLeft),top:i.top-this.offset.parent.top-this.margins.top+(this.offsetParent[0]==document.body?0:this.offsetParent[0].scrollTop)},parseInt(this.options.revert,10)||500,function(){r._clear(t)})}else this._clear(t,n);return!1},cancel:function(){if(this.dragging){this._mouseUp({target:null}),this.options.helper=="original"?this.currentItem.css(this._storedCSS).removeClass("ui-sortable-helper"):this.currentItem.show();for(var t=this.containers.length-1;t>=0;t--)this.containers[t]._trigger("deactivate",null,this._uiHash(this)),this.containers[t].containerCache.over&&(this.containers[t]._trigger("out",null,this._uiHash(this)),this.containers[t].containerCache.over=0)}return this.placeholder&&(this.placeholder[0].parentNode&&this.placeholder[0].parentNode.removeChild(this.placeholder[0]),this.options.helper!="original"&&this.helper&&this.helper[0].parentNode&&this.helper.remove(),e.extend(this,{helper:null,dragging:!1,reverting:!1,_noFinalSort:null}),this.domPosition.prev?e(this.domPosition.prev).after(this.currentItem):e(this.domPosition.parent).prepend(this.currentItem)),this},serialize:function(t){var n=this._getItemsAsjQuery(t&&t.connected),r=[];return t=t||{},e(n).each(function(){var n=(e(t.item||this).attr(t.attribute||"id")||"").match(t.expression||/(.+)[-=_](.+)/);n&&r.push((t.key||n[1]+"[]")+"="+(t.key&&t.expression?n[1]:n[2]))}),!r.length&&t.key&&r.push(t.key+"="),r.join("&")},toArray:function(t){var n=this._getItemsAsjQuery(t&&t.connected),r=[];return t=t||{},n.each(function(){r.push(e(t.item||this).attr(t.attribute||"id")||"")}),r},_intersectsWith:function(e){var t=this.positionAbs.left,n=t+this.helperProportions.width,r=this.positionAbs.top,i=r+this.helperProportions.height,s=e.left,o=s+e.width,u=e.top,a=u+e.height,f=this.offset.click.top,l=this.offset.click.left,c=r+f>u&&r+f<a&&t+l>s&&t+l<o;return this.options.tolerance=="pointer"||this.options.forcePointerForContainers||this.options.tolerance!="pointer"&&this.helperProportions[this.floating?"width":"height"]>e[this.floating?"width":"height"]?c:s<t+this.helperProportions.width/2&&n-this.helperProportions.width/2<o&&u<r+this.helperProportions.height/2&&i-this.helperProportions.height/2<a},_intersectsWithPointer:function(t){var n=this.options.axis==="x"||e.ui.isOverAxis(this.positionAbs.top+this.offset.click.top,t.top,t.height),r=this.options.axis==="y"||e.ui.isOverAxis(this.positionAbs.left+this.offset.click.left,t.left,t.width),i=n&&r,s=this._getDragVerticalDirection(),o=this._getDragHorizontalDirection();return i?this.floating?o&&o=="right"||s=="down"?2:1:s&&(s=="down"?2:1):!1},_intersectsWithSides:function(t){var n=e.ui.isOverAxis(this.positionAbs.top+this.offset.click.top,t.top+t.height/2,t.height),r=e.ui.isOverAxis(this.positionAbs.left+this.offset.click.left,t.left+t.width/2,t.width),i=this._getDragVerticalDirection(),s=this._getDragHorizontalDirection();return this.floating&&s?s=="right"&&r||s=="left"&&!r:i&&(i=="down"&&n||i=="up"&&!n)},_getDragVerticalDirection:function(){var e=this.positionAbs.top-this.lastPositionAbs.top;return e!=0&&(e>0?"down":"up")},_getDragHorizontalDirection:function(){var e=this.positionAbs.left-this.lastPositionAbs.left;return e!=0&&(e>0?"right":"left")},refresh:function(e){return this._refreshItems(e),this.refreshPositions(),this},_connectWith:function(){var e=this.options;return e.connectWith.constructor==String?[e.connectWith]:e.connectWith},_getItemsAsjQuery:function(t){var n=[],r=[],i=this._connectWith();if(i&&t)for(var s=i.length-1;s>=0;s--){var o=e(i[s]);for(var u=o.length-1;u>=0;u--){var a=e.data(o[u],this.widgetName);a&&a!=this&&!a.options.disabled&&r.push([e.isFunction(a.options.items)?a.options.items.call(a.element):e(a.options.items,a.element).not(".ui-sortable-helper").not(".ui-sortable-placeholder"),a])}}r.push([e.isFunction(this.options.items)?this.options.items.call(this.element,null,{options:this.options,item:this.currentItem}):e(this.options.items,this.element).not(".ui-sortable-helper").not(".ui-sortable-placeholder"),this]);for(var s=r.length-1;s>=0;s--)r[s][0].each(function(){n.push(this)});return e(n)},_removeCurrentsFromItems:function(){var t=this.currentItem.find(":data("+this.widgetName+"-item)");this.items=e.grep(this.items,function(e){for(var n=0;n<t.length;n++)if(t[n]==e.item[0])return!1;return!0})},_refreshItems:function(t){this.items=[],this.containers=[this];var n=this.items,r=[[e.isFunction(this.options.items)?this.options.items.call(this.element[0],t,{item:this.currentItem}):e(this.options.items,this.element),this]],i=this._connectWith();if(i&&this.ready)for(var s=i.length-1;s>=0;s--){var o=e(i[s]);for(var u=o.length-1;u>=0;u--){var a=e.data(o[u],this.widgetName);a&&a!=this&&!a.options.disabled&&(r.push([e.isFunction(a.options.items)?a.options.items.call(a.element[0],t,{item:this.currentItem}):e(a.options.items,a.element),a]),this.containers.push(a))}}for(var s=r.length-1;s>=0;s--){var f=r[s][1],l=r[s][0];for(var u=0,c=l.length;u<c;u++){var h=e(l[u]);h.data(this.widgetName+"-item",f),n.push({item:h,instance:f,width:0,height:0,left:0,top:0})}}},refreshPositions:function(t){this.offsetParent&&this.helper&&(this.offset.parent=this._getParentOffset());for(var n=this.items.length-1;n>=0;n--){var r=this.items[n];if(r.instance!=this.currentContainer&&this.currentContainer&&r.item[0]!=this.currentItem[0])continue;var i=this.options.toleranceElement?e(this.options.toleranceElement,r.item):r.item;t||(r.width=i.outerWidth(),r.height=i.outerHeight());var s=i.offset();r.left=s.left,r.top=s.top}if(this.options.custom&&this.options.custom.refreshContainers)this.options.custom.refreshContainers.call(this);else for(var n=this.containers.length-1;n>=0;n--){var s=this.containers[n].element.offset();this.containers[n].containerCache.left=s.left,this.containers[n].containerCache.top=s.top,this.containers[n].containerCache.width=this.containers[n].element.outerWidth(),this.containers[n].containerCache.height=this.containers[n].element.outerHeight()}return this},_createPlaceholder:function(t){t=t||this;var n=t.options;if(!n.placeholder||n.placeholder.constructor==String){var r=n.placeholder;n.placeholder={element:function(){var n=e(document.createElement(t.currentItem[0].nodeName)).addClass(r||t.currentItem[0].className+" ui-sortable-placeholder").removeClass("ui-sortable-helper")[0];return r||(n.style.visibility="hidden"),n},update:function(e,i){if(r&&!n.forcePlaceholderSize)return;i.height()||i.height(t.currentItem.innerHeight()-parseInt(t.currentItem.css("paddingTop")||0,10)-parseInt(t.currentItem.css("paddingBottom")||0,10)),i.width()||i.width(t.currentItem.innerWidth()-parseInt(t.currentItem.css("paddingLeft")||0,10)-parseInt(t.currentItem.css("paddingRight")||0,10))}}}t.placeholder=e(n.placeholder.element.call(t.element,t.currentItem)),t.currentItem.after(t.placeholder),n.placeholder.update(t,t.placeholder)},_contactContainers:function(t){var n=null,r=null;for(var i=this.containers.length-1;i>=0;i--){if(e.contains(this.currentItem[0],this.containers[i].element[0]))continue;if(this._intersectsWith(this.containers[i].containerCache)){if(n&&e.contains(this.containers[i].element[0],n.element[0]))continue;n=this.containers[i],r=i}else this.containers[i].containerCache.over&&(this.containers[i]._trigger("out",t,this._uiHash(this)),this.containers[i].containerCache.over=0)}if(!n)return;if(this.containers.length===1)this.containers[r]._trigger("over",t,this._uiHash(this)),this.containers[r].containerCache.over=1;else{var s=1e4,o=null,u=this.containers[r].floating?"left":"top",a=this.containers[r].floating?"width":"height",f=this.positionAbs[u]+this.offset.click[u];for(var l=this.items.length-1;l>=0;l--){if(!e.contains(this.containers[r].element[0],this.items[l].item[0]))continue;if(this.items[l].item[0]==this.currentItem[0])continue;var c=this.items[l].item.offset()[u],h=!1;Math.abs(c-f)>Math.abs(c+this.items[l][a]-f)&&(h=!0,c+=this.items[l][a]),Math.abs(c-f)<s&&(s=Math.abs(c-f),o=this.items[l],this.direction=h?"up":"down")}if(!o&&!this.options.dropOnEmpty)return;this.currentContainer=this.containers[r],o?this._rearrange(t,o,null,!0):this._rearrange(t,null,this.containers[r].element,!0),this._trigger("change",t,this._uiHash()),this.containers[r]._trigger("change",t,this._uiHash(this)),this.options.placeholder.update(this.currentContainer,this.placeholder),this.containers[r]._trigger("over",t,this._uiHash(this)),this.containers[r].containerCache.over=1}},_createHelper:function(t){var n=this.options,r=e.isFunction(n.helper)?e(n.helper.apply(this.element[0],[t,this.currentItem])):n.helper=="clone"?this.currentItem.clone():this.currentItem;return r.parents("body").length||e(n.appendTo!="parent"?n.appendTo:this.currentItem[0].parentNode)[0].appendChild(r[0]),r[0]==this.currentItem[0]&&(this._storedCSS={width:this.currentItem[0].style.width,height:this.currentItem[0].style.height,position:this.currentItem.css("position"),top:this.currentItem.css("top"),left:this.currentItem.css("left")}),(r[0].style.width==""||n.forceHelperSize)&&r.width(this.currentItem.width()),(r[0].style.height==""||n.forceHelperSize)&&r.height(this.currentItem.height()),r},_adjustOffsetFromHelper:function(t){typeof t=="string"&&(t=t.split(" ")),e.isArray(t)&&(t={left:+t[0],top:+t[1]||0}),"left"in t&&(this.offset.click.left=t.left+this.margins.left),"right"in t&&(this.offset.click.left=this.helperProportions.width-t.right+this.margins.left),"top"in t&&(this.offset.click.top=t.top+this.margins.top),"bottom"in t&&(this.offset.click.top=this.helperProportions.height-t.bottom+this.margins.top)},_getParentOffset:function(){this.offsetParent=this.helper.offsetParent();var t=this.offsetParent.offset();this.cssPosition=="absolute"&&this.scrollParent[0]!=document&&e.contains(this.scrollParent[0],this.offsetParent[0])&&(t.left+=this.scrollParent.scrollLeft(),t.top+=this.scrollParent.scrollTop());if(this.offsetParent[0]==document.body||this.offsetParent[0].tagName&&this.offsetParent[0].tagName.toLowerCase()=="html"&&e.ui.ie)t={top:0,left:0};return{top:t.top+(parseInt(this.offsetParent.css("borderTopWidth"),10)||0),left:t.left+(parseInt(this.offsetParent.css("borderLeftWidth"),10)||0)}},_getRelativeOffset:function(){if(this.cssPosition=="relative"){var e=this.currentItem.position();return{top:e.top-(parseInt(this.helper.css("top"),10)||0)+this.scrollParent.scrollTop(),left:e.left-(parseInt(this.helper.css("left"),10)||0)+this.scrollParent.scrollLeft()}}return{top:0,left:0}},_cacheMargins:function(){this.margins={left:parseInt(this.currentItem.css("marginLeft"),10)||0,top:parseInt(this.currentItem.css("marginTop"),10)||0}},_cacheHelperProportions:function(){this.helperProportions={width:this.helper.outerWidth(),height:this.helper.outerHeight()}},_setContainment:function(){var t=this.options;t.containment=="parent"&&(t.containment=this.helper[0].parentNode);if(t.containment=="document"||t.containment=="window")this.containment=[0-this.offset.relative.left-this.offset.parent.left,0-this.offset.relative.top-this.offset.parent.top,e(t.containment=="document"?document:window).width()-this.helperProportions.width-this.margins.left,(e(t.containment=="document"?document:window).height()||document.body.parentNode.scrollHeight)-this.helperProportions.height-this.margins.top];if(!/^(document|window|parent)$/.test(t.containment)){var n=e(t.containment)[0],r=e(t.containment).offset(),i=e(n).css("overflow")!="hidden";this.containment=[r.left+(parseInt(e(n).css("borderLeftWidth"),10)||0)+(parseInt(e(n).css("paddingLeft"),10)||0)-this.margins.left,r.top+(parseInt(e(n).css("borderTopWidth"),10)||0)+(parseInt(e(n).css("paddingTop"),10)||0)-this.margins.top,r.left+(i?Math.max(n.scrollWidth,n.offsetWidth):n.offsetWidth)-(parseInt(e(n).css("borderLeftWidth"),10)||0)-(parseInt(e(n).css("paddingRight"),10)||0)-this.helperProportions.width-this.margins.left,r.top+(i?Math.max(n.scrollHeight,n.offsetHeight):n.offsetHeight)-(parseInt(e(n).css("borderTopWidth"),10)||0)-(parseInt(e(n).css("paddingBottom"),10)||0)-this.helperProportions.height-this.margins.top]}},_convertPositionTo:function(t,n){n||(n=this.position);var r=t=="absolute"?1:-1,i=this.options,s=this.cssPosition!="absolute"||this.scrollParent[0]!=document&&!!e.contains(this.scrollParent[0],this.offsetParent[0])?this.scrollParent:this.offsetParent,o=/(html|body)/i.test(s[0].tagName);return{top:n.top+this.offset.relative.top*r+this.offset.parent.top*r-(this.cssPosition=="fixed"?-this.scrollParent.scrollTop():o?0:s.scrollTop())*r,left:n.left+this.offset.relative.left*r+this.offset.parent.left*r-(this.cssPosition=="fixed"?-this.scrollParent.scrollLeft():o?0:s.scrollLeft())*r}},_generatePosition:function(t){var n=this.options,r=this.cssPosition!="absolute"||this.scrollParent[0]!=document&&!!e.contains(this.scrollParent[0],this.offsetParent[0])?this.scrollParent:this.offsetParent,i=/(html|body)/i.test(r[0].tagName);this.cssPosition=="relative"&&(this.scrollParent[0]==document||this.scrollParent[0]==this.offsetParent[0])&&(this.offset.relative=this._getRelativeOffset());var s=t.pageX,o=t.pageY;if(this.originalPosition){this.containment&&(t.pageX-this.offset.click.left<this.containment[0]&&(s=this.containment[0]+this.offset.click.left),t.pageY-this.offset.click.top<this.containment[1]&&(o=this.containment[1]+this.offset.click.top),t.pageX-this.offset.click.left>this.containment[2]&&(s=this.containment[2]+this.offset.click.left),t.pageY-this.offset.click.top>this.containment[3]&&(o=this.containment[3]+this.offset.click.top));if(n.grid){var u=this.originalPageY+Math.round((o-this.originalPageY)/n.grid[1])*n.grid[1];o=this.containment?u-this.offset.click.top<this.containment[1]||u-this.offset.click.top>this.containment[3]?u-this.offset.click.top<this.containment[1]?u+n.grid[1]:u-n.grid[1]:u:u;var a=this.originalPageX+Math.round((s-this.originalPageX)/n.grid[0])*n.grid[0];s=this.containment?a-this.offset.click.left<this.containment[0]||a-this.offset.click.left>this.containment[2]?a-this.offset.click.left<this.containment[0]?a+n.grid[0]:a-n.grid[0]:a:a}}return{top:o-this.offset.click.top-this.offset.relative.top-this.offset.parent.top+(this.cssPosition=="fixed"?-this.scrollParent.scrollTop():i?0:r.scrollTop()),left:s-this.offset.click.left-this.offset.relative.left-this.offset.parent.left+(this.cssPosition=="fixed"?-this.scrollParent.scrollLeft():i?0:r.scrollLeft())}},_rearrange:function(e,t,n,r){n?n[0].appendChild(this.placeholder[0]):t.item[0].parentNode.insertBefore(this.placeholder[0],this.direction=="down"?t.item[0]:t.item[0].nextSibling),this.counter=this.counter?++this.counter:1;var i=this.counter;this._delay(function(){i==this.counter&&this.refreshPositions(!r)})},_clear:function(t,n){this.reverting=!1;var r=[];!this._noFinalSort&&this.currentItem.parent().length&&this.placeholder.before(this.currentItem),this._noFinalSort=null;if(this.helper[0]==this.currentItem[0]){for(var i in this._storedCSS)if(this._storedCSS[i]=="auto"||this._storedCSS[i]=="static")this._storedCSS[i]="";this.currentItem.css(this._storedCSS).removeClass("ui-sortable-helper")}else this.currentItem.show();this.fromOutside&&!n&&r.push(function(e){this._trigger("receive",e,this._uiHash(this.fromOutside))}),(this.fromOutside||this.domPosition.prev!=this.currentItem.prev().not(".ui-sortable-helper")[0]||this.domPosition.parent!=this.currentItem.parent()[0])&&!n&&r.push(function(e){this._trigger("update",e,this._uiHash())}),this!==this.currentContainer&&(n||(r.push(function(e){this._trigger("remove",e,this._uiHash())}),r.push(function(e){return function(t){e._trigger("receive",t,this._uiHash(this))}}.call(this,this.currentContainer)),r.push(function(e){return function(t){e._trigger("update",t,this._uiHash(this))}}.call(this,this.currentContainer))));for(var i=this.containers.length-1;i>=0;i--)n||r.push(function(e){return function(t){e._trigger("deactivate",t,this._uiHash(this))}}.call(this,this.containers[i])),this.containers[i].containerCache.over&&(r.push(function(e){return function(t){e._trigger("out",t,this._uiHash(this))}}.call(this,this.containers[i])),this.containers[i].containerCache.over=0);this._storedCursor&&e("body").css("cursor",this._storedCursor),this._storedOpacity&&this.helper.css("opacity",this._storedOpacity),this._storedZIndex&&this.helper.css("zIndex",this._storedZIndex=="auto"?"":this._storedZIndex),this.dragging=!1;if(this.cancelHelperRemoval){if(!n){this._trigger("beforeStop",t,this._uiHash());for(var i=0;i<r.length;i++)r[i].call(this,t);this._trigger("stop",t,this._uiHash())}return this.fromOutside=!1,!1}n||this._trigger("beforeStop",t,this._uiHash()),this.placeholder[0].parentNode.removeChild(this.placeholder[0]),this.helper[0]!=this.currentItem[0]&&this.helper.remove(),this.helper=null;if(!n){for(var i=0;i<r.length;i++)r[i].call(this,t);this._trigger("stop",t,this._uiHash())}return this.fromOutside=!1,!0},_trigger:function(){e.Widget.prototype._trigger.apply(this,arguments)===!1&&this.cancel()},_uiHash:function(t){var n=t||this;return{helper:n.helper,placeholder:n.placeholder||e([]),position:n.position,originalPosition:n.originalPosition,offset:n.positionAbs,item:n.currentItem,sender:t?t.element:null}}})})(jQuery);(function(e,t){var n=5;e.widget("ui.slider",e.ui.mouse,{version:"1.9.1",widgetEventPrefix:"slide",options:{animate:!1,distance:0,max:100,min:0,orientation:"horizontal",range:!1,step:1,value:0,values:null},_create:function(){var t,r,i=this.options,s=this.element.find(".ui-slider-handle").addClass("ui-state-default ui-corner-all"),o="<a class='ui-slider-handle ui-state-default ui-corner-all' href='#'></a>",u=[];this._keySliding=!1,this._mouseSliding=!1,this._animateOff=!0,this._handleIndex=null,this._detectOrientation(),this._mouseInit(),this.element.addClass("ui-slider ui-slider-"+this.orientation+" ui-widget"+" ui-widget-content"+" ui-corner-all"+(i.disabled?" ui-slider-disabled ui-disabled":"")),this.range=e([]),i.range&&(i.range===!0&&(i.values||(i.values=[this._valueMin(),this._valueMin()]),i.values.length&&i.values.length!==2&&(i.values=[i.values[0],i.values[0]])),this.range=e("<div></div>").appendTo(this.element).addClass("ui-slider-range ui-widget-header"+(i.range==="min"||i.range==="max"?" ui-slider-range-"+i.range:""))),r=i.values&&i.values.length||1;for(t=s.length;t<r;t++)u.push(o);this.handles=s.add(e(u.join("")).appendTo(this.element)),this.handle=this.handles.eq(0),this.handles.add(this.range).filter("a").click(function(e){e.preventDefault()}).mouseenter(function(){i.disabled||e(this).addClass("ui-state-hover")}).mouseleave(function(){e(this).removeClass("ui-state-hover")}).focus(function(){i.disabled?e(this).blur():(e(".ui-slider .ui-state-focus").removeClass("ui-state-focus"),e(this).addClass("ui-state-focus"))}).blur(function(){e(this).removeClass("ui-state-focus")}),this.handles.each(function(t){e(this).data("ui-slider-handle-index",t)}),this._on(this.handles,{keydown:function(t){var r,i,s,o,u=e(t.target).data("ui-slider-handle-index");switch(t.keyCode){case e.ui.keyCode.HOME:case e.ui.keyCode.END:case e.ui.keyCode.PAGE_UP:case e.ui.keyCode.PAGE_DOWN:case e.ui.keyCode.UP:case e.ui.keyCode.RIGHT:case e.ui.keyCode.DOWN:case e.ui.keyCode.LEFT:t.preventDefault();if(!this._keySliding){this._keySliding=!0,e(t.target).addClass("ui-state-active"),r=this._start(t,u);if(r===!1)return}}o=this.options.step,this.options.values&&this.options.values.length?i=s=this.values(u):i=s=this.value();switch(t.keyCode){case e.ui.keyCode.HOME:s=this._valueMin();break;case e.ui.keyCode.END:s=this._valueMax();break;case e.ui.keyCode.PAGE_UP:s=this._trimAlignValue(i+(this._valueMax()-this._valueMin())/n);break;case e.ui.keyCode.PAGE_DOWN:s=this._trimAlignValue(i-(this._valueMax()-this._valueMin())/n);break;case e.ui.keyCode.UP:case e.ui.keyCode.RIGHT:if(i===this._valueMax())return;s=this._trimAlignValue(i+o);break;case e.ui.keyCode.DOWN:case e.ui.keyCode.LEFT:if(i===this._valueMin())return;s=this._trimAlignValue(i-o)}this._slide(t,u,s)},keyup:function(t){var n=e(t.target).data("ui-slider-handle-index");this._keySliding&&(this._keySliding=!1,this._stop(t,n),this._change(t,n),e(t.target).removeClass("ui-state-active"))}}),this._refreshValue(),this._animateOff=!1},_destroy:function(){this.handles.remove(),this.range.remove(),this.element.removeClass("ui-slider ui-slider-horizontal ui-slider-vertical ui-slider-disabled ui-widget ui-widget-content ui-corner-all"),this._mouseDestroy()},_mouseCapture:function(t){var n,r,i,s,o,u,a,f,l=this,c=this.options;return c.disabled?!1:(this.elementSize={width:this.element.outerWidth(),height:this.element.outerHeight()},this.elementOffset=this.element.offset(),n={x:t.pageX,y:t.pageY},r=this._normValueFromMouse(n),i=this._valueMax()-this._valueMin()+1,this.handles.each(function(t){var n=Math.abs(r-l.values(t));i>n&&(i=n,s=e(this),o=t)}),c.range===!0&&this.values(1)===c.min&&(o+=1,s=e(this.handles[o])),u=this._start(t,o),u===!1?!1:(this._mouseSliding=!0,this._handleIndex=o,s.addClass("ui-state-active").focus(),a=s.offset(),f=!e(t.target).parents().andSelf().is(".ui-slider-handle"),this._clickOffset=f?{left:0,top:0}:{left:t.pageX-a.left-s.width()/2,top:t.pageY-a.top-s.height()/2-(parseInt(s.css("borderTopWidth"),10)||0)-(parseInt(s.css("borderBottomWidth"),10)||0)+(parseInt(s.css("marginTop"),10)||0)},this.handles.hasClass("ui-state-hover")||this._slide(t,o,r),this._animateOff=!0,!0))},_mouseStart:function(){return!0},_mouseDrag:function(e){var t={x:e.pageX,y:e.pageY},n=this._normValueFromMouse(t);return this._slide(e,this._handleIndex,n),!1},_mouseStop:function(e){return this.handles.removeClass("ui-state-active"),this._mouseSliding=!1,this._stop(e,this._handleIndex),this._change(e,this._handleIndex),this._handleIndex=null,this._clickOffset=null,this._animateOff=!1,!1},_detectOrientation:function(){this.orientation=this.options.orientation==="vertical"?"vertical":"horizontal"},_normValueFromMouse:function(e){var t,n,r,i,s;return this.orientation==="horizontal"?(t=this.elementSize.width,n=e.x-this.elementOffset.left-(this._clickOffset?this._clickOffset.left:0)):(t=this.elementSize.height,n=e.y-this.elementOffset.top-(this._clickOffset?this._clickOffset.top:0)),r=n/t,r>1&&(r=1),r<0&&(r=0),this.orientation==="vertical"&&(r=1-r),i=this._valueMax()-this._valueMin(),s=this._valueMin()+r*i,this._trimAlignValue(s)},_start:function(e,t){var n={handle:this.handles[t],value:this.value()};return this.options.values&&this.options.values.length&&(n.value=this.values(t),n.values=this.values()),this._trigger("start",e,n)},_slide:function(e,t,n){var r,i,s;this.options.values&&this.options.values.length?(r=this.values(t?0:1),this.options.values.length===2&&this.options.range===!0&&(t===0&&n>r||t===1&&n<r)&&(n=r),n!==this.values(t)&&(i=this.values(),i[t]=n,s=this._trigger("slide",e,{handle:this.handles[t],value:n,values:i}),r=this.values(t?0:1),s!==!1&&this.values(t,n,!0))):n!==this.value()&&(s=this._trigger("slide",e,{handle:this.handles[t],value:n}),s!==!1&&this.value(n))},_stop:function(e,t){var n={handle:this.handles[t],value:this.value()};this.options.values&&this.options.values.length&&(n.value=this.values(t),n.values=this.values()),this._trigger("stop",e,n)},_change:function(e,t){if(!this._keySliding&&!this._mouseSliding){var n={handle:this.handles[t],value:this.value()};this.options.values&&this.options.values.length&&(n.value=this.values(t),n.values=this.values()),this._trigger("change",e,n)}},value:function(e){if(arguments.length){this.options.value=this._trimAlignValue(e),this._refreshValue(),this._change(null,0);return}return this._value()},values:function(t,n){var r,i,s;if(arguments.length>1){this.options.values[t]=this._trimAlignValue(n),this._refreshValue(),this._change(null,t);return}if(!arguments.length)return this._values();if(!e.isArray(arguments[0]))return this.options.values&&this.options.values.length?this._values(t):this.value();r=this.options.values,i=arguments[0];for(s=0;s<r.length;s+=1)r[s]=this._trimAlignValue(i[s]),this._change(null,s);this._refreshValue()},_setOption:function(t,n){var r,i=0;e.isArray(this.options.values)&&(i=this.options.values.length),e.Widget.prototype._setOption.apply(this,arguments);switch(t){case"disabled":n?(this.handles.filter(".ui-state-focus").blur(),this.handles.removeClass("ui-state-hover"),this.handles.prop("disabled",!0),this.element.addClass("ui-disabled")):(this.handles.prop("disabled",!1),this.element.removeClass("ui-disabled"));break;case"orientation":this._detectOrientation(),this.element.removeClass("ui-slider-horizontal ui-slider-vertical").addClass("ui-slider-"+this.orientation),this._refreshValue();break;case"value":this._animateOff=!0,this._refreshValue(),this._change(null,0),this._animateOff=!1;break;case"values":this._animateOff=!0,this._refreshValue();for(r=0;r<i;r+=1)this._change(null,r);this._animateOff=!1;break;case"min":case"max":this._animateOff=!0,this._refreshValue(),this._animateOff=!1}},_value:function(){var e=this.options.value;return e=this._trimAlignValue(e),e},_values:function(e){var t,n,r;if(arguments.length)return t=this.options.values[e],t=this._trimAlignValue(t),t;n=this.options.values.slice();for(r=0;r<n.length;r+=1)n[r]=this._trimAlignValue(n[r]);return n},_trimAlignValue:function(e){if(e<=this._valueMin())return this._valueMin();if(e>=this._valueMax())return this._valueMax();var t=this.options.step>0?this.options.step:1,n=(e-this._valueMin())%t,r=e-n;return Math.abs(n)*2>=t&&(r+=n>0?t:-t),parseFloat(r.toFixed(5))},_valueMin:function(){return this.options.min},_valueMax:function(){return this.options.max},_refreshValue:function(){var t,n,r,i,s,o=this.options.range,u=this.options,a=this,f=this._animateOff?!1:u.animate,l={};this.options.values&&this.options.values.length?this.handles.each(function(r){n=(a.values(r)-a._valueMin())/(a._valueMax()-a._valueMin())*100,l[a.orientation==="horizontal"?"left":"bottom"]=n+"%",e(this).stop(1,1)[f?"animate":"css"](l,u.animate),a.options.range===!0&&(a.orientation==="horizontal"?(r===0&&a.range.stop(1,1)[f?"animate":"css"]({left:n+"%"},u.animate),r===1&&a.range[f?"animate":"css"]({width:n-t+"%"},{queue:!1,duration:u.animate})):(r===0&&a.range.stop(1,1)[f?"animate":"css"]({bottom:n+"%"},u.animate),r===1&&a.range[f?"animate":"css"]({height:n-t+"%"},{queue:!1,duration:u.animate}))),t=n}):(r=this.value(),i=this._valueMin(),s=this._valueMax(),n=s!==i?(r-i)/(s-i)*100:0,l[this.orientation==="horizontal"?"left":"bottom"]=n+"%",this.handle.stop(1,1)[f?"animate":"css"](l,u.animate),o==="min"&&this.orientation==="horizontal"&&this.range.stop(1,1)[f?"animate":"css"]({width:n+"%"},u.animate),o==="max"&&this.orientation==="horizontal"&&this.range[f?"animate":"css"]({width:100-n+"%"},{queue:!1,duration:u.animate}),o==="min"&&this.orientation==="vertical"&&this.range.stop(1,1)[f?"animate":"css"]({height:n+"%"},u.animate),o==="max"&&this.orientation==="vertical"&&this.range[f?"animate":"css"]({height:100-n+"%"},{queue:!1,duration:u.animate}))}})})(jQuery);(function(e){function n(t,n){var r=(t.attr("aria-describedby")||"").split(/\s+/);r.push(n),t.data("ui-tooltip-id",n).attr("aria-describedby",e.trim(r.join(" ")))}function r(t){var n=t.data("ui-tooltip-id"),r=(t.attr("aria-describedby")||"").split(/\s+/),i=e.inArray(n,r);i!==-1&&r.splice(i,1),t.removeData("ui-tooltip-id"),r=e.trim(r.join(" ")),r?t.attr("aria-describedby",r):t.removeAttr("aria-describedby")}var t=0;e.widget("ui.tooltip",{version:"1.9.1",options:{content:function(){return e(this).attr("title")},hide:!0,items:"[title]:not([disabled])",position:{my:"left top+15",at:"left bottom",collision:"flipfit flipfit"},show:!0,tooltipClass:null,track:!1,close:null,open:null},_create:function(){this._on({mouseover:"open",focusin:"open"}),this.tooltips={},this.parents={},this.options.disabled&&this._disable()},_setOption:function(t,n){var r=this;if(t==="disabled"){this[n?"_disable":"_enable"](),this.options[t]=n;return}this._super(t,n),t==="content"&&e.each(this.tooltips,function(e,t){r._updateContent(t)})},_disable:function(){var t=this;e.each(this.tooltips,function(n,r){var i=e.Event("blur");i.target=i.currentTarget=r[0],t.close(i,!0)}),this.element.find(this.options.items).andSelf().each(function(){var t=e(this);t.is("[title]")&&t.data("ui-tooltip-title",t.attr("title")).attr("title","")})},_enable:function(){this.element.find(this.options.items).andSelf().each(function(){var t=e(this);t.data("ui-tooltip-title")&&t.attr("title",t.data("ui-tooltip-title"))})},open:function(t){var n=this,r=e(t?t.target:this.element).closest(this.options.items);if(!r.length)return;if(this.options.track&&r.data("ui-tooltip-id")){this._find(r).position(e.extend({of:r},this.options.position)),this._off(this.document,"mousemove");return}r.attr("title")&&r.data("ui-tooltip-title",r.attr("title")),r.data("tooltip-open",!0),t&&t.type==="mouseover"&&r.parents().each(function(){var t;e(this).data("tooltip-open")&&(t=e.Event("blur"),t.target=t.currentTarget=this,n.close(t,!0)),this.title&&(e(this).uniqueId(),n.parents[this.id]={element:this,title:this.title},this.title="")}),this._updateContent(r,t)},_updateContent:function(e,t){var n,r=this.options.content,i=this;if(typeof r=="string")return this._open(t,e,r);n=r.call(e[0],function(n){if(!e.data("tooltip-open"))return;i._delay(function(){this._open(t,e,n)})}),n&&this._open(t,e,n)},_open:function(t,r,i){function f(e){a.of=e;if(s.is(":hidden"))return;s.position(a)}var s,o,u,a=e.extend({},this.options.position);if(!i)return;s=this._find(r);if(s.length){s.find(".ui-tooltip-content").html(i);return}r.is("[title]")&&(t&&t.type==="mouseover"?r.attr("title",""):r.removeAttr("title")),s=this._tooltip(r),n(r,s.attr("id")),s.find(".ui-tooltip-content").html(i),this.options.track&&t&&/^mouse/.test(t.originalEvent.type)?(this._on(this.document,{mousemove:f}),f(t)):s.position(e.extend({of:r},this.options.position)),s.hide(),this._show(s,this.options.show),this.options.show&&this.options.show.delay&&(u=setInterval(function(){s.is(":visible")&&(f(a.of),clearInterval(u))},e.fx.interval)),this._trigger("open",t,{tooltip:s}),o={keyup:function(t){if(t.keyCode===e.ui.keyCode.ESCAPE){var n=e.Event(t);n.currentTarget=r[0],this.close(n,!0)}},remove:function(){this._removeTooltip(s)}};if(!t||t.type==="mouseover")o.mouseleave="close";if(!t||t.type==="focusin")o.focusout="close";this._on(r,o)},close:function(t){var n=this,i=e(t?t.currentTarget:this.element),s=this._find(i);if(this.closing)return;i.data("ui-tooltip-title")&&i.attr("title",i.data("ui-tooltip-title")),r(i),s.stop(!0),this._hide(s,this.options.hide,function(){n._removeTooltip(e(this))}),i.removeData("tooltip-open"),this._off(i,"mouseleave focusout keyup"),i[0]!==this.element[0]&&this._off(i,"remove"),this._off(this.document,"mousemove"),t&&t.type==="mouseleave"&&e.each(this.parents,function(e,t){t.element.title=t.title,delete n.parents[e]}),this.closing=!0,this._trigger("close",t,{tooltip:s}),this.closing=!1},_tooltip:function(n){var r="ui-tooltip-"+t++,i=e("<div>").attr({id:r,role:"tooltip"}).addClass("ui-tooltip ui-widget ui-corner-all ui-widget-content "+(this.options.tooltipClass||""));return e("<div>").addClass("ui-tooltip-content").appendTo(i),i.appendTo(this.document[0].body),e.fn.bgiframe&&i.bgiframe(),this.tooltips[r]=n,i},_find:function(t){var n=t.data("ui-tooltip-id");return n?e("#"+n):e()},_removeTooltip:function(e){e.remove(),delete this.tooltips[e.attr("id")]},_destroy:function(){var t=this;e.each(this.tooltips,function(n,r){var i=e.Event("blur");i.target=i.currentTarget=r[0],t.close(i,!0),e("#"+n).remove(),r.data("ui-tooltip-title")&&(r.attr("title",r.data("ui-tooltip-title")),r.removeData("ui-tooltip-title"))})}})})(jQuery);
define("bundles/framework/bundle/oskariui/jquery-ui-1.9.1.custom.min", function(){});

jQuery.base64=(function($){var _PADCHAR="=",_ALPHA="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",_VERSION="1.0";function _getbyte64(s,i){var idx=_ALPHA.indexOf(s.charAt(i));if(idx===-1){throw"Cannot decode base64"}return idx}function _decode(s){var pads=0,i,b10,imax=s.length,x=[];s=String(s);if(imax===0){return s}if(imax%4!==0){throw"Cannot decode base64"}if(s.charAt(imax-1)===_PADCHAR){pads=1;if(s.charAt(imax-2)===_PADCHAR){pads=2}imax-=4}for(i=0;i<imax;i+=4){b10=(_getbyte64(s,i)<<18)|(_getbyte64(s,i+1)<<12)|(_getbyte64(s,i+2)<<6)|_getbyte64(s,i+3);x.push(String.fromCharCode(b10>>16,(b10>>8)&255,b10&255))}switch(pads){case 1:b10=(_getbyte64(s,i)<<18)|(_getbyte64(s,i+1)<<12)|(_getbyte64(s,i+2)<<6);x.push(String.fromCharCode(b10>>16,(b10>>8)&255));break;case 2:b10=(_getbyte64(s,i)<<18)|(_getbyte64(s,i+1)<<12);x.push(String.fromCharCode(b10>>16));break}return x.join("")}function _getbyte(s,i){var x=s.charCodeAt(i);if(x>255){throw"INVALID_CHARACTER_ERR: DOM Exception 5"}return x}function _encode(s){if(arguments.length!==1){throw"SyntaxError: exactly one argument required"}s=String(s);var i,b10,x=[],imax=s.length-s.length%3;if(s.length===0){return s}for(i=0;i<imax;i+=3){b10=(_getbyte(s,i)<<16)|(_getbyte(s,i+1)<<8)|_getbyte(s,i+2);x.push(_ALPHA.charAt(b10>>18));x.push(_ALPHA.charAt((b10>>12)&63));x.push(_ALPHA.charAt((b10>>6)&63));x.push(_ALPHA.charAt(b10&63))}switch(s.length-imax){case 1:b10=_getbyte(s,i)<<16;x.push(_ALPHA.charAt(b10>>18)+_ALPHA.charAt((b10>>12)&63)+_PADCHAR+_PADCHAR);break;case 2:b10=(_getbyte(s,i)<<16)|(_getbyte(s,i+1)<<8);x.push(_ALPHA.charAt(b10>>18)+_ALPHA.charAt((b10>>12)&63)+_ALPHA.charAt((b10>>6)&63)+_PADCHAR);break}return x.join("")}return{decode:_decode,encode:_encode,VERSION:_VERSION}}(jQuery));
define("libraries/jquery/plugins/jquery.base64.min", function(){});

requirejs.s.contexts._.nextTick = function(f){f()}; require(['css'], function(css) { css.addBuffer('resources/framework/bundle/oskariui/css/jquery-ui-1.9.1.custom.css'); }); requirejs.s.contexts._.nextTick = requirejs.nextTick;
requirejs.s.contexts._.nextTick = function(f){f()}; require(['css'], function(css) { css.addBuffer('resources/framework/bundle/oskariui/bootstrap-grid.css'); }); requirejs.s.contexts._.nextTick = requirejs.nextTick;
/**
 * @class Oskari.framework.bundle.oskariui.DomManager
 *

 */
Oskari.clazz.define('Oskari.framework.bundle.oskariui.DomManager',
/**
 * @method create called automatically on construction
 * @static
 * @param {jQuery} jquery impl
 */
function(dollar, partsMap) {
	this.$ = dollar;
	this.partsMap = partsMap || {};
	this.layout = null;
	this.layouts = [];
}, {
	getEl : function(selector) {
		return this.$(selector);
	},
	getElForPart : function(part) {
		return this.$(this.partsMap[part]);
	},
	setElForPart : function(part, el) {
		this.partsMap[part] = this.$(el);
	},
	setElParts : function(partsMap) {
		this.partsMap = partsMap;
	},
	getElParts : function() {
		return this.partsMap;
	},
	pushLayout : function(l) {
		
		if( this.layout ) {
			this.layout.removeLayout(this);
		}		
		this.layout = l;
		this.layouts.push(l);
		l.applyLayout(this);
	},
	popLayout : function() {
		var l = this.layouts.pop();
		if( l ) {
			l.removeLayout(this);
		}
		if(this.layouts.length == 0) {
			this.layout = null;
			return;
		}
		var l = this.layouts[this.layouts.length - 1];
		this.layout = l;
		l.applyLayout(this);
	},
	getLayout : function() {
		return this.layout;
	}
}, {
	/**
	 * @property {String[]} protocol array of superclasses as {String}
	 * @static
	 */
	'protocol' : ['Oskari.dom.DomManager']
});

define("bundles/framework/bundle/oskariui/DomManager", function(){});

/**
 * @class Oskari.framework.bundle.oskariui.Layout
 *
 *
 */
Oskari.clazz.define('Oskari.framework.bundle.oskariui.Layout',
/**
 * @static constructor function
 */
function() {

}, {

	/**
	 * @method applyLayout
	 * applies this layout with given DomManager
	 */
	applyLayout : function(domManager) {

	},
	/**
	 * @method removeLayout
	 */
	removeLayout : function(domManager) {

	}
}, {
	"protocol" : ["Oskari.dom.Layout"]
});

define("bundles/framework/bundle/oskariui/Layout", function(){});

define('bundles/framework/bundle/oskariui/module',["oskari","jquery","./jquery-ui-1.9.1.custom.min","libraries/jquery/plugins/jquery.base64.min","css!resources/framework/bundle/oskariui/css/jquery-ui-1.9.1.custom","css!resources/framework/bundle/oskariui/bootstrap-grid","./DomManager","./Layout"], function(Oskari,jQuery) {
    return Oskari.bundleCls("oskariui").category({create: function () {


		return this;

	},update: function (manager, bundle, bi, info) {

	},start: function () {
		/* We'll add our own Dom Manager */
		var partsMap = this.conf.partsMap || {};
		var domMgr = Oskari.clazz.create('Oskari.framework.bundle.oskariui.DomManager', jQuery, partsMap);
		Oskari.setDomManager(domMgr);

	},stop: function () {

	}})
});
/**
 * @class Oskari.mapframework.bundle.mapfull.MapFullBundleInstance
 * 
 * Initializes Oskari core and starts a map window application. Much of the map related properties
 * and initial state are read from bundle configuration/state. 
 * 
 * See bundle documentation at http://www.oskari.org/trac/wiki/DocumentationBundleMapfull
 */
Oskari.clazz.define("Oskari.ol3.bundle.mapfull.MapFullBundleInstance", 
/**
 * @method create called automatically on construction
 * @static
 */
function() {
	this.map = null;
	this.core = null;
	this.sandbox = null;
	this.mapmodule = null;
	this.state = undefined;
    /**
     * @property {String} mapDivId
     * ID of the DOM element the map will be rendered to 
     * Configurable through conf.mapElement
     */
	this.mapDivId = "mapdiv";
    this.contentMapDivId = 'contentMap';
}, {
	/**
	 * @method getMapModule
	 * Returns reference to the map module
	 * @return {Oskari.mapframework.ui.module.common.MapModule}
	 */
	getMapModule : function() {
		return this.mapmodule;
	},
    /**
     * @method getSandbox
     * Returns reference to Oskari sandbox
     * @return {Oskari.mapframework.sandbox.Sandbox}
     */
	getSandbox : function() {
		return this.sandbox;
	},

	/**
	 * @method _createUi
	 * Creates the map module and rendes it to DOM element that has the id 
	 * specified by #mapDivId. Sets the size of the element if specified in 
	 * config or if isn't specified, sets the height of the element to window height
	 * and starts listening to window resizing.
	 * Initializes and registers map module plugins if specified in bundles config. 
	 * @private
	 */
	_createUi : function() {
        var me = this;

        var module = Oskari.clazz.create('Oskari.ol3.ui.module.common.MapModule', "Main", this.conf.imageLocation, this.conf.mapOptions);

        this.mapmodule = module;
        var map = this.sandbox.register(module);
        // set map size
        // call portlet with ?p_p_id=Portti2Map_WAR_portti2mapportlet&p_p_lifecycle=0&p_p_state=exclusive&p_p_mode=view&published=true
        // -> uses published.jsp
        if(this.conf.size) {
            jQuery('#' + this.mapDivId).width(this.conf.size.width);
            jQuery('#' + this.mapDivId).height(this.conf.size.height);
        } 
        else {
            // react to window resize with timer so app stays responsive
            function adjustMapSize() {
                // do not resize map if resizeEnabled is false
                if(me.resizeEnabled == null || me.resizeEnabled) {
                    var contentMap  = jQuery('#' + me.contentMapDivId);
                    var mapDiv      = jQuery('#' + me.mapDivId);

                    mapDiv.height(jQuery(window).height());                        
                    contentMap.height(jQuery(window).height());

                    if(contentMap.find('.oskariui-menutoolbar').length > 0) {
                        mapDiv.height(jQuery(window).height() - contentMap.find('.oskariui-menutoolbar').height());
                    }
                   module.updateSize();
                }
            };
        
            var resizeTimer;
            jQuery(window).resize(function() {
                clearTimeout(resizeTimer);
                resizeTimer = setTimeout(adjustMapSize, 100);
            });
            adjustMapSize();
        }
        
		
        module.start(this.sandbox);

		/*map.render(this.mapDivId);*/
        // startup plugins
        if(this.conf.plugins) {
            var plugins = this.conf.plugins;
            for(var i = 0; i < plugins.length; i++) {
                plugins[i].instance = Oskari.clazz.create(plugins[i].id, plugins[i].config);
                module.registerPlugin(plugins[i].instance);
                module.startPlugin(plugins[i].instance);
            }
        }
		
        this.map = map;
	},
    /**
     * @method start
     * Implements BundleInstance protocol start method.
     * Initializes Oskari core and Oskari.mapframework.service.MapLayerService.
     * Creates the map view and moves it to location and zoom
     * level specified by #state.
     * 
     * Also defines Proj4js.defs for "EPSG:3067" and "EPSG:4326".
     */
	"start" : function() {

        Proj4js.defs = {
          "EPSG:3067" : "+proj=utm +zone=35 +ellps=GRS80 +units=m +no_defs",
          "EPSG:4326" : "+title=WGS 84 +proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs"
        };
		var me = this;
		var conf = me.conf;

        if (me.conf.projectionDefs) {
            Proj4js.defs = me.conf.projectionDefs;
        }
		
		var userInterfaceLanguage = Oskari.getLang();

		var core = Oskari.clazz.create('Oskari.mapframework.core.Core');
		this.core = core;
		var sandbox = core.getSandbox();
		this.sandbox = sandbox;

		var sandboxName = ( conf ? conf.sandbox : null ) || 'sandbox';
		Oskari.setSandbox(sandboxName,sandbox);

		// take map div ID from config if available
		if(conf) {
		    if(conf.mapElement) this.mapDivId = conf.mapElement;
            if(conf.mapContainer) this.contentMapDivId = conf.mapContainer;
		}
		
        // Init user
        sandbox.setUser(conf.user);
        sandbox.setAjaxUrl(conf.globalMapAjaxUrl);
        
		// create services
		var services = this._createServices(conf);
			
		// create enhancements
		var enhancements = [];
		enhancements.push(Oskari.clazz.create('Oskari.mapframework.enhancement.mapfull.StartMapWithLinkEnhancement'));
        
		core.init(services, enhancements);

        // need to create ui before parsing layers because layerplugins register modelbuilders
        this._createUi();

		// setup initial maplayers
    	var mapLayerService = sandbox.getService('Oskari.mapframework.service.MapLayerService');
	    var initialLayers = conf.layers;
	    if(initialLayers) {
	        for(var i = 0; i < initialLayers.length; i++) {
				var mapLayer = mapLayerService.createMapLayer(initialLayers[i]);
	            mapLayerService.addLayer(mapLayer, true);
			}
	    }
        
		sandbox.registerAsStateful(this.mediator.bundleId, this);
		
		var skipLocation = false;
		if(this.mapmodule.isPluginActivated('GeoLocationPlugin')) {
		    // get plugin
		    var plugin = this.mapmodule.getPluginInstance('GeoLocationPlugin');
		    skipLocation = plugin.hasSetLocation();
		}
		
		
		
        this.setState(this.state, skipLocation);

        // create request handlers
        me.mapResizeEnabledRequestHandler = Oskari.clazz.create('Oskari.mapframework.bundle.mapfull.request.MapResizeEnabledRequestHandler', me);
        me.mapWindowFullScreenRequestHandler = Oskari.clazz.create('Oskari.mapframework.bundle.mapfull.request.MapWindowFullScreenRequestHandler', me);

        // register request handlers
        sandbox.addRequestHandler('MapFull.MapResizeEnabledRequest', me.mapResizeEnabledRequestHandler);
        sandbox.addRequestHandler('MapFull.MapWindowFullScreenRequest', me.mapWindowFullScreenRequestHandler);

	},
    /**
     * @method _teardownState
     * Tears down previous state so we can set a new one.
     * @private
     * @param {Oskari.mapframework.module.Module} module 
     *      any registered module so we can just send out requests
     */
    _teardownState : function(module) {
        var selectedLayers = this.sandbox.findAllSelectedMapLayers();
        // remove all current layers
        var rbRemove = this.sandbox.getRequestBuilder('RemoveMapLayerRequest');
        for(var i = 0; i < selectedLayers.length; i++) {
            this.sandbox.request(module.getName(), rbRemove(selectedLayers[i].getId()));
        }
    },
	
	/**
	 * @method _createServices
	 * Setup services for this application. 
	 * Mainly Oskari.mapframework.service.MapLayerService, but also hacks in WMTS support
	 * and if conf.disableDevelopmentMode == 'true' -> disables debug messaging and 
	 * initializes Oskari.mapframework.service.UsageSnifferService to provide 
	 * feedback to server about map usage.

	 * @param {Object} conf
	 * 		JSON configuration for the application
	 * @private
	 */
	_createServices : function(conf) {
		var me = this;
		/* create services that are available in this application */
		var services = [];
		
		var mapLayerService = Oskari.clazz.create('Oskari.mapframework.service.MapLayerService',
                conf.globalMapAjaxUrl + 'action_route=GetMapLayers&lang='+Oskari.getLang() , this.core.getSandbox());
        services.push(mapLayerService);

		/* TMP */        
		mapLayerService.registerLayerModel('wmtslayer', 'Oskari.mapframework.wmts.domain.WmtsLayer')

		var layerModelBuilder = Oskari.clazz.create('Oskari.mapframework.wmts.service.WmtsLayerModelBuilder');

		mapLayerService.registerLayerModelBuilder('wmtslayer', layerModelBuilder);

        
		// DisableDevelopmentModeEnhancement
		if (conf.disableDevelopmentMode == 'true') {
	        core.disableDebug();
	    }
		return services;
	},
	
    /**
     * @method update
     * implements BundleInstance protocol update method - does nothing atm
     */
	"update" : function() {

	},
    /**
     * @method stop
     * implements BundleInstance protocol stop method
     */
	"stop" : function() {
	    this.sandbox.unregisterStateful(this.mediator.bundleId);
		alert('Stopped!');
	},
	
    /**
     * @method setState
     * Sets the map state to one specified in the parameter. State is bundle specific, check the
     * bundle documentation for details.
     * @param {Object} state bundle state as JSON
     * @param {Boolean} ignoreLocation true to NOT set map location based on state
     */
    setState : function(state, ignoreLocation) {
        var mapmodule = this.sandbox.findRegisteredModuleInstance('MainMapModule');
        this._teardownState(mapmodule);
        
        // setting state
        if(state.selectedLayers) {
            var rbAdd = this.sandbox.getRequestBuilder('AddMapLayerRequest');
            var rbOpacity = this.sandbox.getRequestBuilder('ChangeMapLayerOpacityRequest');
            var visibilityRequestBuilder = this.sandbox.getRequestBuilder('MapModulePlugin.MapLayerVisibilityRequest');
            var styleReqBuilder = this.sandbox.getRequestBuilder('ChangeMapLayerStyleRequest');
            var len = state.selectedLayers.length;
            for(var i = 0; i < len; ++i ) {
                var layer = state.selectedLayers[i];
                this.sandbox.request(mapmodule.getName(), rbAdd(layer.id, true));
                this.sandbox.request(mapmodule.getName(), visibilityRequestBuilder(layer.id, layer.hidden !== true));
                if(layer.style) {
                    this.sandbox.request(mapmodule.getName(), styleReqBuilder(layer.id, layer.style));
                }
                if(layer.opacity) {
                    this.sandbox.request(mapmodule.getName(), rbOpacity(layer.id, layer.opacity));
                }
            }
        }


        if(state.east && ignoreLocation !== true) {
            this.sandbox.getMap().moveTo( 
                state.east,
                state.north,
                state.zoom);
        }

        this.sandbox.syncMapState(true);
    },
	/**
	 * @method getState
	 * Returns bundle state as JSON. State is bundle specific, check the
     * bundle documentation for details.
	 * @return {Object} 
	 */
	getState : function() {
        // get applications current state
        var map = this.sandbox.getMap();
        var selectedLayers = this.sandbox.findAllSelectedMapLayers();
        var zoom = map.getZoom();
        var lat = map.getX();
        var lon = map.getY();

        var state = {
            north : lon,
            east : lat,
            zoom : map.getZoom(),
            srs : map.getSrsName(),
            selectedLayers : []
        };
        
        for(var i = 0; i < selectedLayers.length; i++) {
            var layer = selectedLayers[i];
            var layerJson = {
                id : layer.getId(),
                opacity : layer.getOpacity()
            };
            if(!layer.isVisible()) {
                layerJson.hidden = true;
            }
            // check if we have a style selected and doesn't have THE magic string
            if(layer.getCurrentStyle && 
                layer.getCurrentStyle() && 
                layer.getCurrentStyle().getName() &&
                layer.getCurrentStyle().getName() != "!default!") {
                layerJson.style = layer.getCurrentStyle().getName();
            }
            state.selectedLayers.push(layerJson);
        }
		
		return state;
	},

    /**
    * @method toggleFullScreen
    * Toggles normal/full screen view of the map window.
    */
    toggleFullScreen: function() {
        jQuery('#' + this.contentMapDivId).toggleClass('oskari-map-window-fullscreen');
        this.mapmodule.updateSize();
    }
}, {
    /**
     * @property {String[]} protocol
     * @static 
     */
	"protocol" : ["Oskari.bundle.BundleInstance", 'Oskari.userinterface.Stateful']
});

define("bundles/ol3/bundle/mapfull/instance", function(){});

/**
 * @class Oskari.mapframework.enhancement.mapfull.StartMapWithLinkEnhancement
 * This sets map domain object values accoding to (optional) querystring parameters.
 * Note that this not set the actual map implementation state, only the domain object.
 */
Oskari.clazz.define('Oskari.mapframework.enhancement.mapfull.StartMapWithLinkEnhancement', 

/**
 * @method create called automatically on construction
 * @static
 */
function() {
}, {
    /**
     * @method enhance
     * Oskari.mapframework.enhancement.Enhancement protocol/interface method ran on core init 
     * @param {Oskari.mapframework.core.Core} core
     */
    enhance : function(core) {
        core.printDebug("Checking if map is started with link...");

        var coord = core.getRequestParameter('coord');
        var zoomLevel = core.getRequestParameter('zoomLevel');

        var mapLayers = core.getRequestParameter('mapLayers');
        var markerVisible = core.getRequestParameter('showMarker');
        var markerVisibleOption2 = core.getRequestParameter('isCenterMarker');

        var keepLayersOrder = core.getRequestParameter('keepLayersOrder');

        if (keepLayersOrder === null) {
            keepLayersOrder = true;
        }
        function checkBoolean(bln) {
            return bln === true || bln === 'true';
        }
        core.getMap().setMarkerVisible(checkBoolean(markerVisible) || checkBoolean(markerVisibleOption2));

        if (coord === null || zoomLevel === null) {
            // not a link
            return;
        }

        var splittedCoord;

        /*
         * Coordinates can be splitted either with new "_" or
         * old "%20"
         */
        if (coord.indexOf("_") >= 0) {
            splittedCoord = coord.split("_");
        } else {
            splittedCoord = coord.split("%20");
        }

        var longitude = splittedCoord[0];
        var latitude = splittedCoord[1];
        if (longitude === null || latitude === null) {
            core.printDebug("Could not parse link location. Skipping.");
            return;
        }
        core.printDebug("This is startup by link, moving map...");
        core.getMap().moveTo(longitude, latitude, zoomLevel);
    }
}, {
    /**
     * @property {String[]} protocol
     * @static 
     */
    'protocol' : ['Oskari.mapframework.enhancement.Enhancement']
});
define("bundles/framework/bundle/mapfull/enhancement/start-map-with-link-enhancement", function(){});

/**
 * @class Oskari.mapframework.bundle.mapfull.request.MapResizeEnabledRequest
 * Request enabling window resize
 * 
 * Requests are build and sent through Oskari.mapframework.sandbox.Sandbox.
 * Oskari.mapframework.request.Request superclass documents how to send one.
 */
Oskari.clazz.define('Oskari.mapframework.bundle.mapfull.request.MapResizeEnabledRequest',
/**
 * @method create called automatically on construction
 * @static
 *
 * @param {Boolean}
 *            resizeEnabled boolean if window resizing is enabled
 */
function(resizeEnabled) {
    this._creator = null;
    this._resizeEnabled = resizeEnabled;

}, {
    /** @static @property __name request name */
    __name : "MapFull.MapResizeEnabledRequest",
    /**
     * @method getName
     * @return {String} request name
     */
    getName : function() {
        return this.__name;
    },
    /**
     * @method getPublishMode
     * @return {Boolean} boolean if window resizing is enabled
     */
    getResizeEnabled : function() {
        return this._resizeEnabled;
    }
}, {
    /**
     * @property {String[]} protocol array of superclasses as {String}
     * @static
     */
    'protocol' : ['Oskari.mapframework.request.Request']
});
define("bundles/framework/bundle/mapfull/request/MapResizeEnabledRequest", function(){});

/**
 * @class 'Oskari.mapframework.bundle.mapfull.request.MapResizeEnabledRequestHandler
 * Tells the mapfull whether resize is enabled.
 */
Oskari.clazz.define('Oskari.mapframework.bundle.mapfull.request.MapResizeEnabledRequestHandler', 
/**
 * @method create called automatically on construction
 * @static
 * @param {Oskari.mapframework.sandbox.Sandbox} sandbox
 *          reference to application sandbox
 */
function(mapfull) {
    this.mapfull = mapfull;
}, {
    /**
     * @method handleRequest 
     * Shows/hides the maplayer specified in the request in OpenLayers implementation.
     * @param {Oskari.mapframework.core.Core} core
     *      reference to the application core (reference sandbox core.getSandbox())
     * @param {Oskari.mapframework.bundle.mapmodule.request.MapLayerVisibilityRequest} request
     *      request to handle
     */
    handleRequest : function(core, request) {
        this.mapfull.resizeEnabled = request.getResizeEnabled();

   }
}, {
    /**
     * @property {String[]} protocol array of superclasses as {String}
     * @static
     */
    protocol : ['Oskari.mapframework.core.RequestHandler']
});

define("bundles/framework/bundle/mapfull/request/MapResizeEnabledRequestHandler", function(){});

/**
 * @class Oskari.mapframework.bundle.mapfull.request.MapWindowFullScreenRequest
 * Request enabling map window full screen mode or the normal view.
 * 
 * Requests are build and sent through Oskari.mapframework.sandbox.Sandbox.
 * Oskari.mapframework.request.Request superclass documents how to send one.
 */
Oskari.clazz.define('Oskari.mapframework.bundle.mapfull.request.MapWindowFullScreenRequest',
/**
 * @method create called automatically on construction
 * @static
 */
function() {
    this._creator = null;

}, {
    /** @static @property __name request name */
    __name : "MapFull.MapWindowFullScreenRequest",
    /**
     * @method getName
     * @return {String} request name
     */
    getName : function() {
        return this.__name;
    },
}, {
    /**
     * @property {String[]} protocol array of superclasses as {String}
     * @static
     */
    'protocol' : ['Oskari.mapframework.request.Request']
});
define("bundles/framework/bundle/mapfull/request/MapWindowFullScreenRequest", function(){});

/**
 * @class 'Oskari.mapframework.bundle.mapfull.request.MapWindowFullScreenRequestHandler
 * Tells the mapfull to toggle between normal and full screen mode.
 */
Oskari.clazz.define('Oskari.mapframework.bundle.mapfull.request.MapWindowFullScreenRequestHandler', 
/**
 * @method create called automatically on construction
 * @static
 * @param {Oskari.mapframework.bundle.mapfull.MapFullBundleInstance} mapfull
 *          reference to mapfull bundle instance.
 */
function(mapfull) {
    this.mapfull = mapfull;
}, {
    /**
     * @method handleRequest 
     * Toggles between the normal and the full screen mode of the map window.
     * @param {Oskari.mapframework.core.Core} core
     *      reference to the application core (reference sandbox core.getSandbox())
     * @param {Oskari.mapframework.bundle.mapmodule.request.MapLayerVisibilityRequest} request
     *      request to handle
     */
    handleRequest : function(core, request) {
        this.mapfull.toggleFullScreen();
   }
}, {
    /**
     * @property {String[]} protocol array of superclasses as {String}
     * @static
     */
    protocol : ['Oskari.mapframework.core.RequestHandler']
});

define("bundles/framework/bundle/mapfull/request/MapWindowFullScreenRequestHandler", function(){});

requirejs.s.contexts._.nextTick = function(f){f()}; require(['css'], function(css) { css.addBuffer('resources/framework/bundle/mapfull/css/style.css'); }); requirejs.s.contexts._.nextTick = requirejs.nextTick;
define('bundles/ol3/bundle/mapfull/module',[
	"oskari",
	"jquery",
	"bundles/framework/bundle/oskariui/module",
	"./instance",
	"../../../framework/bundle/mapfull/enhancement/start-map-with-link-enhancement",
	"../../../framework/bundle/mapfull/request/MapResizeEnabledRequest",
	"../../../framework/bundle/mapfull/request/MapResizeEnabledRequestHandler",
	"../../../framework/bundle/mapfull/request/MapWindowFullScreenRequest",
	"../../../framework/bundle/mapfull/request/MapWindowFullScreenRequestHandler",
	"css!resources/framework/bundle/mapfull/css/style.css"
], function(Oskari, jQuery) {
	Oskari.bundleCls('oskariui');
	
	return Oskari.bundleCls("mapfull").category({
		create: function() {
			return Oskari.clazz.create("Oskari.ol3.bundle.mapfull.MapFullBundleInstance");
		},
		update: function(manager, bundle, bi, info) {

		}
	})
});
/**
 * @class Oskari.mapframework.core.Core
 * 
 * This is the Oskari core. Bundles can register modules and services here for other bundles to reference.
 * Requests and events are forwarded through the core to handlers.
 * TODO: Move handlers (and events as well as requests) to handler bundles with
 * registrable handlers
 */
Oskari.clazz.define('Oskari.mapframework.core.Core',

/**
 * @method create called automatically on construction
 * @static
 */
function() {

    // Currently selected layers, array of MapLayer objects
    this._selectedLayers = new Array();

    // Currently Highlighted maplayers
    this._mapLayersHighlighted = new Array();

    // map domain object
    this._map = null;

    // Sandbox that handles communication
    this._sandbox = Oskari.clazz.create('Oskari.mapframework.sandbox.Sandbox', this);
    
    // bw comp support - this should be removed 
    if( !Oskari.$("sandbox" ) ) {
    	Oskari.$("sandbox", this._sandbox);
    }

    // array of services available
    this._services = [];
    this._servicesByQName = {};

    // Are we currently printing debug (as of 2012-09-24 debug by default false)
    this._debug = false;

    // is Ctrl key down
    this._ctrlKeyDown = false;

    // Allow multiple highlight layers
    this._allowMultipleHighlightLayers = false;

    this._availableRequestsByName = {};
    this._availableEventsByName = {};
    
    /**
     * @property externalHandlerCls
     * External Request handlers that bundles have registered are stored here
     * NOTE: only one request handler can be registered/request
     * NOTE: was static but moved to instance to enable multi sandbox configurations
     */
    this.externalHandlerCls = {

    };
},
{

    /**
     * @method init
     * Inits Oskari core so bundles can reference components/services through sandbox
     *
     * @param {Oskari.mapframework.service.Service[]} services
     *            array of services that are available
     * @param {Oskari.mapframework.enhancement.Enhancement[]} enhancements
     *            array of enhancements that should be executed before starting map
     */
    init : function(services, enhancements) {
        this.printDebug("Initializing core...");

        var sandbox = this._sandbox;

        // Store variables for later use
        this._services = services;
        // Register services
        if (services) {
            for (var s = 0; s < services.length; s++) {
                this.registerService(services[s]);
            }
        }

        // build up domain
        this.printDebug("Sandbox ready, building up domain...");
        this._map = Oskari.clazz.create('Oskari.mapframework.domain.Map');

        // run all enhancements
        this.enhancements = enhancements;
        this._doEnhancements(this.enhancements);

        this.printDebug("Modules started. Core ready.");
    },

    /**
     * @method dispatch
     * Dispatches given event to sandbox
     *
     * @param {Oskari.mapframework.event.Event}
     *            event - event to dispatch
     */
    dispatch : function(event) {
        this._sandbox.notifyAll(event);
    },

    /**
     * @property defaultRequestHandlers
     * @static
     * Default Request handlers
     * Core still handles some Requests sent by bundles. 
     * TODO: Request handling should be moved to apropriate bundles.
     * NOTE: only one request handler can be registered/request
     */
    defaultRequestHandlers : {
        'AddMapLayerRequest' : function(request) {
            this._handleAddMapLayerRequest(request);
            return true;
        },
        'RemoveMapLayerRequest' : function(request) {
            this._handleRemoveMapLayerRequest(request);
            return true;
        },
        'ShowMapLayerInfoRequest' : function(request) {
            this._handleShowMapLayerInfoRequest(request);
            return true;
        },
        'RearrangeSelectedMapLayerRequest' : function(request) {
            this._handleRearrangeSelectedMapLayerRequest(request);
            return true;
        },
        'ChangeMapLayerOpacityRequest' : function(request) {
            this._handleChangeMapLayerOpacityRequest(request);
            return true;
        },
        'ChangeMapLayerStyleRequest' : function(request) {
            this._handleChangeMapLayerStyleRequest(request);
            return true;
        },
        'HighlightMapLayerRequest' : function(request) {
            this._handleHighlightMapLayerRequest(request);
            return true;
        },
        'HighlightWFSFeatureRequest' : function(request) {
            this.handleHighlightWFSFeatureRequest(request);
            return true;
        },
        'HideMapMarkerRequest' : function(request) {
            this._handleHideMapMarkerRequest(request);
            return true;
        },
        'DimMapLayerRequest' : function(request) {
            this._handleDimMapLayerRequest(request.getMapLayerId());
            return true;
        },
        'CtrlKeyDownRequest' : function(request) {
            this._handleCtrlKeyDownRequest();
            return true;
        },
        'CtrlKeyUpRequest' : function(request) {
            this._handleCtrlKeyUpRequest();
            return true;
        },
        '__default' : function(request) {

            this.printWarn("!!!");
            this.printWarn("  There is no handler for");
            this.printWarn("  '" + request.getName() + "'");
            return false;
        }
    },

    /**
     * @method processRequest
     * Forwards requests to corresponding request handlers. 
     * @param {Oskari.mapframework.request.Request} request to forward
     * @return {Boolean} Returns true, if request was handled, false otherwise
     */
    processRequest : function(request) {

        var requestName = request.getName();
        var handlerFunc = this.defaultRequestHandlers[requestName];
        if (handlerFunc) {
            rv = handlerFunc.apply(this, [request]);
        } else {
            var handlerClsInstance = this.externalHandlerCls[requestName];
            if (handlerClsInstance) {
                 // protocol: Oskari.mapframework.core.RequestHandler.handleRequest(core)
                rv = handlerClsInstance.handleRequest(this, request);
            } else {
                handlerFunc = this.defaultRequestHandlers['__default'];
                rv = handlerFunc.apply(this, [request]);
            }

        }
        delete request;

        return rv;
    },

    

    /**
     * @method addRequestHandler
     * Registers a request handler for requests with the given name 
     * NOTE: only one request handler can be registered/request
     * @param {String} requestName - name of the request
     * @param {Oskari.mapframework.core.RequestHandler} handlerClsInstance request handler
     */
    addRequestHandler : function(requestName, handlerClsInstance) {
        this.externalHandlerCls[requestName] = handlerClsInstance;
    },

    /**
     * @method removeRequestHandler
     * Unregisters a request handler for requests with the given name 
     * NOTE: only one request handler can be registered/request
     * @param {String} requestName - name of the request
     * @param {Oskari.mapframework.core.RequestHandler} handlerClsInstance request handler
     */
    removeRequestHandler : function(requestName, handlerInstance) {
        if (this.externalHandlerCls[requestName] === handlerInstance)
            this.externalHandlerCls[requestName] = null;
    },

    /**
     * @method _getQNameForRequest
     * Maps the request name to the corresponding request class name
     * @param {String} name - name of the request
     * @return {String} request class name matching the given request name
     * @private
     */
    _getQNameForRequest : function(name) {
        var qname = this._availableRequestsByName[name];
        if (!qname) {
            this.printDebug("#!#!# ! Updating request metadata...");
            var allRequests = Oskari.clazz.protocol('Oskari.mapframework.request.Request');
            for (p in allRequests) {
                var pdefsp = allRequests[p];
                var reqname = pdefsp._class.prototype.getName();
                this._availableRequestsByName[reqname] = p;
            }
            this.printDebug("#!#!# ! Finished Updating request metadata...");
            qname = this._availableRequestsByName[name];
        }

        return qname;
    },

    /**
     * @method getRequestBuilder
     * Gets a builder method for the request by request name
     * @param {String} name - name of the request
     * @return {Function} builder method for given request name or undefined if not found
     */
    getRequestBuilder : function(requestName) {
        var qname = this._getQNameForRequest(requestName);
        if (!qname) {
            return undefined;
        }
        return Oskari.clazz.builder(qname);
    },

    /**
     * @method _getQNameForEvent
     * Maps the event name to the corresponding event class name
     * @param {String} name - name of the event
     * @return {String} event class name matching the given event name
     * @private
     */
    _getQNameForEvent : function(name) {
        var qname = this._availableEventsByName[name];
        if (!qname) {
            this.printDebug("#!#!# ! Updating event metadata...");

            var allRequests = Oskari.clazz.protocol('Oskari.mapframework.event.Event');

            for (p in allRequests) {
                var pdefsp = allRequests[p];
                var reqname = pdefsp._class.prototype.getName();
                this._availableEventsByName[reqname] = p;
            }
            this.printDebug("#!#!# ! Finished Updating event metadata...");
            qname = this._availableEventsByName[name];
        }

        return qname;
    },

    /**
     * @method getEventBuilder
     * Gets a builder method for the event by event name
     * @param {String} eventName - name of the event
     * @return {Function} builder method for given event name or undefined if not found
     */
    getEventBuilder : function(eventName) {
        var qname = this._getQNameForEvent(eventName);
        if (!qname) {
            return undefined;
        }
        return Oskari.clazz.builder(qname);
    },

    /**
     * @method disableDebug
     * Disables debug logging
     */
    disableDebug : function() {
        this._debug = false;
    },
    
     /**
     * @method enableDebug
     * Enables debug logging
     */
    enableDebug : function() {
        this._debug = true;
    },

    /**
     * @method printDebug
     * Prints given text to browser console
     *
     * @param {String} text message
     */
    printDebug : function(text) {
        if (this._debug && window.console != null) {
            if (window.console.debug != null) {
                console.debug(text);
            } else if (window.console.log != null) {
                console.log(text);
            }
        }
    },

    /**
     * Prints given warn text to browser console
     *
     * @param {String} text
     */
    printWarn : function(text) {
        if (window.console != null) {
            console.warn(text);
        }
    },

    /**
     * @method registerService
     * Registers given service to Oskari so bundles can get reference to it from sandbox
     *
     * @param {Oskari.mapframework.service.Service}
     *            service service to register
     */
    registerService : function(service) {
        this._servicesByQName[service.getQName()] = service;
        //this.registerFrameworkComponentToRuntimeEnvironment(service, service.getName());
    },

    /**
     * @method getService
     * Returns a registered service with given name
     *
     * @param {String} name
     * @return {Oskari.mapframework.service.Service}
     *            service or undefined if not found
     */
    getService : function(type) {
        return this._servicesByQName[type];
    },

    /**
     * @method getMap
     * Returns map domain object
     *
     * @return {Oskari.mapframework.domain.Map}
     */
    getMap : function() {
        return this._map;
    },

    /**
     * @method getSandbox
     * Returns reference to sandbox
     *
     * @return {Oskari.mapframework.sandbox.Sandbox}
     */
    getSandbox : function() {
        return this._sandbox;
    },

    /**
     * @method getRequestParameter
     * Returns a request parameter from query string
     * http://javablog.info/2008/04/17/url-request-parameters-using-javascript/
     * @param {String} name - parameter name
     * @return {String} value for the parameter or null if not found
     */
    getRequestParameter : function(name) {
        name = name.replace(/[\[]/, "\\\[").replace(/[\]]/, "\\\]");
        var regexS = "[\\?&]" + name + "=([^&#]*)";
        var regex = new RegExp(regexS);
        var results = regex.exec(window.location.href);
        if (results == null) {
            return null;
        } else {
            return results[1];
        }
    },

    /**
     * @method getObjectName
     * Returns Oskari event/request name from the event/request object
     * @param {Oskari.mapframework.request.Request/Oskari.mapframework.event.Event} obj
     * @return {String} name
     */
    getObjectName : function(obj) {
        return obj["__name"];
    },
    /**
     * @method getObjectCreator
     * Returns Oskari event/request creator from the event/request object
     * @param {Oskari.mapframework.request.Request/Oskari.mapframework.event.Event} obj
     * @return {String} creator
     */
    getObjectCreator : function(obj) {
        return obj["_creator"];
    },
    /**
     * @method setObjectCreator
     * Sets a creator to Oskari event/request object
     * @param {Oskari.mapframework.request.Request/Oskari.mapframework.event.Event} obj
     * @param {String} creator
     */
    setObjectCreator : function(obj, creator) {
        obj["_creator"] = creator;
    },
    /**
     * @method copyObjectCreatorToFrom
     * Copies creator from objFrom to objTo
     * @param {Oskari.mapframework.request.Request/Oskari.mapframework.event.Event} objTo
     * @param {Oskari.mapframework.request.Request/Oskari.mapframework.event.Event} objFrom
     */
    copyObjectCreatorToFrom : function(objTo, objFrom) {
        objTo["_creator"] = objFrom["_creator"];
    }
});

define("bundles/oskari/base/core/core", function(){});

/**
 * @class Oskari.mapframework.core.Core.enhancementMethods
 *
 * This category class adds enhancement methods to Oskari core as they were in
 * the class itself.
 */
Oskari.clazz.category(
'Oskari.mapframework.core.Core', 'enhancement-methods',
{
    /**
     * @method _doEnhancements
     * Runs all given enhancements (calls enhance method)
     *
     * @param {Oskari.mapframework.enhancement.Enhancement[]} enhancements array of enhancements to run
     * @private
     */
    _doEnhancements : function(enhancements) {
        for (var i = 0; i < enhancements.length; i++) {
            enhancements[i].enhance(this);
        }
    }
}); 
define("bundles/oskari/base/core/core-enhancement-methods", function(){});

/**
 * @class Oskari.mapframework.core.Core.keyListenerMethods
 *
 * This category class adds key listener methods to Oskari core as they were in
 * the class itself.
 */
Oskari.clazz.category('Oskari.mapframework.core.Core', 'feature-key-listener-methods', {
    
    /**
     * @method handleCtrlKeyDownRequest
     * Sets flag to show that CTRL key is pressed down
     * @private
     */
    _handleCtrlKeyDownRequest : function() {
        this._ctrlKeyDown = true;
    },
    /**
     * @method handleCtrlKeyUpRequest
     * Sets flag to show that CTRL key is released
     * @private
     */
    _handleCtrlKeyUpRequest : function() {
        this._ctrlKeyDown = false;
    },
    /**
     * @method isCtrlKeyDown
     * Returns true if CTRL key is down
     * @return {Boolean} true if CTRL key is down
     */
    isCtrlKeyDown : function() {
        return this._ctrlKeyDown;
    }
});

define("bundles/oskari/base/core/core-key-listener-methods", function(){});

/**
 * @class Oskari.mapframework.core.Core.mapLayerMethods
 *
 * This category class adds map layers related methods to Oskari core as they were in
 * the class itself.
 */
Oskari.clazz.category('Oskari.mapframework.core.Core', 'map-layer-methods', {

    /**
     * @method isLayerAlreadySelected
     * Checks if the layer matching the id is added to map
     *
     * @param {String} id of the layer to check
     * @return {Boolean} true if the layer is added to map
     */
    isLayerAlreadySelected : function(id) {
        var mapLayerService = this.getService('Oskari.mapframework.service.MapLayerService');
        var layer = mapLayerService.findMapLayer(id, this._selectedLayers);
        //var layer = this.findMapLayer(id, this._selectedLayers);
        return (layer != null);
    },

    /**
     * @method findMapLayerFromSelectedMapLayers
     * Returns the layer domain object matching the id if it is added to map
     *
     * @param {String} id of the layer to get
     * @return {Oskari.mapframework.domain.WmsLayer/Oskari.mapframework.domain.WfsLayer/Oskari.mapframework.domain.VectorLayer/Object} 
     *  layer domain object if found matching id or null if not found
     */
    findMapLayerFromSelectedMapLayers : function(id) {
        var mapLayerService = this.getService('Oskari.mapframework.service.MapLayerService');
        var layer = mapLayerService.findMapLayer(id, this._selectedLayers);
        return layer;
    },
    /**
     * @method isMapLayerAlreadyHighlighted
     * Checks if the layer matching the id is "highlighted". Highlighted wfslayer responds to map
     * clicks by highlighting a clicked feature.
     *
     * @param {String} id of the layer to check
     * @return {Boolean} true if the layer is highlighted
     */
    isMapLayerAlreadyHighlighted : function(id) {
        var mapLayerService = this.getService('Oskari.mapframework.service.MapLayerService');
        var layer = mapLayerService.findMapLayer(id, this._mapLayersHighlighted);
        if (layer == null) {
            this.printDebug("[core-map-layer-methods] " + id + " is not yet highlighted.");
        }
        return (layer != null);
    },
    /**
     * @method findMapLayerFromAllAvailable
     * Finds map layer from all available. Uses Oskari.mapframework.service.MapLayerService.
     *
     * @param {String} id of the layer to get
     * @return {Oskari.mapframework.domain.WmsLayer/Oskari.mapframework.domain.WfsLayer/Oskari.mapframework.domain.VectorLayer/Object} 
     *  layer domain object if found matching id or null if not found
     */
    findMapLayerFromAllAvailable : function(id) {

        var mapLayerService = this.getService('Oskari.mapframework.service.MapLayerService');
        var layer = mapLayerService.findMapLayer(id);
        if (layer == null) {
            this.printDebug("Cannot find map layer with id '" + id + "' from all available. " + 
                "Check that current user has VIEW permissions to that layer.");
        }
        return layer;
    },
    /**
     * @method getAllSelectedLayers
     * Returns all currently selected map layers
     * @return {Oskari.mapframework.domain.WmsLayer[]/Oskari.mapframework.domain.WfsLayer[]/Oskari.mapframework.domain.VectorLayer[]/Mixed}
     */
    getAllSelectedLayers : function() {
        return this._selectedLayers;
    },
    /**
     * @method getAllHighlightedMapLayers
     * Returns all currently highlighted map layers
     * @return {Oskari.mapframework.domain.WmsLayer[]/Oskari.mapframework.domain.WfsLayer[]/Oskari.mapframework.domain.VectorLayer[]/Mixed}
     */
    getAllHighlightedMapLayers : function() {
        return this._mapLayersHighlighted;
    },
    /**
     * @method allowMultipleHighlightLayers
     * Allow multiple layers to be highlighted at once
     *
     * @param {Boolean} allow - true to allow, false to restrict to one highlight at a time
     */
    allowMultipleHighlightLayers : function(allow) {
        this._allowMultipleHighlightLayers = allow;
    },
    /**
     * @method handleAddMapLayerRequest
     * Handles AddMapLayerRequests, adds the map layer to selected layers and sends out
     * an AfterMapLayerAddEvent to signal that a map layer has been selected.
     *
     * @param {Oskari.mapframework.request.common.AddMapLayerRequest} request
     * @private
     */
    _handleAddMapLayerRequest : function(request) {

        var id = request.getMapLayerId();
        var keepLayersOrder = request.getKeepLayersOrder();
        var isBaseMap = request.isBasemap();

        this.printDebug("Trying to add map layer with id '" + id + "' AS " + ( isBaseMap ? " BASE " : " NORMAL " ));
        if (this.isLayerAlreadySelected(id)) {
            this.printDebug("Attempt to select already selected layer '" + id + "'");
            return;
        }

        var mapLayer = this.findMapLayerFromAllAvailable(id);
        if (!mapLayer) {
            // not found, ignore
            this.printDebug("Attempt to select layer that is not available '" + id + "'");
            return;
        }

        if (isBaseMap == true) {
            mapLayer.setType("BASE_LAYER");
        }

        // if we need keep layers order, i.e. when map is accessed by link
        if (keepLayersOrder != null && keepLayersOrder) {
            this._selectedLayers.push(mapLayer);
        }
        // else we not need keep layers order (basemaps come
        // first in array, other maps come last)
        else {
            if (mapLayer.isBaseLayer() || isBaseMap == true) {
                var oldSelectedLayers = this._selectedLayers;
                var newSelectedLayers = new Array();
                newSelectedLayers.push(mapLayer);
                for (var i = 0; i < oldSelectedLayers.length; i++) {
                    newSelectedLayers.push(oldSelectedLayers[i]);
                }
                delete this._selectedLayers;
                this._selectedLayers = newSelectedLayers;
            } else {
                this._selectedLayers.push(mapLayer);
            }
        }

        var event = this.getEventBuilder('AfterMapLayerAddEvent')(mapLayer, keepLayersOrder, isBaseMap);
        this.copyObjectCreatorToFrom(event, request);
        this.dispatch(event);
    },
    /**
     * @method _handleRemoveMapLayerRequest
     * Handles RemoveMapLayerRequests, removes the map layer from selected layers and sends out
     * an AfterMapLayerRemoveEvent to signal that a map layer has been removed from selected.
     *
     * @param {Oskari.mapframework.request.common.RemoveMapLayerRequest} request
     * @private
     */
    _handleRemoveMapLayerRequest : function(request) {
        var id = request.getMapLayerId();
        this.printDebug("Trying to remove map layer with id '" + id + "'");
        if (!this.isLayerAlreadySelected(id)) {
            this.printDebug("Attempt to remove layer '" + id + "' that is not selected.");
            return;
        }

        var mapLayer = this.findMapLayerFromAllAvailable(id);
        var index = -1;
        for (var n = 0; n < this._selectedLayers.length; n++) {
            if (this._selectedLayers[n] === mapLayer) {
                index = n;
                break;
            }
        }
        this._selectedLayers.splice(index, 1);

        if (this.isMapLayerAlreadyHighlighted(id)) {
            // remove it from highlighted list
            this.printDebug("Maplayer is also highlighted, removing it from highlight list.");
            this._handleDimMapLayerRequest(id);
        }

        // finally notify sandbox
        var event = this.getEventBuilder('AfterMapLayerRemoveEvent')(mapLayer);
        this.copyObjectCreatorToFrom(event, request);
        this.dispatch(event);
    },
    
    
    /**
     * @method _handleShowMapLayerInfoRequest
     * Handles ShowMapLayerInfoRequest, sends out an AfterShowMapLayerInfoEvent
     *
     * @param {Oskari.mapframework.request.common.ShowMapLayerInfoRequest} request
     * @private
     */
    _handleShowMapLayerInfoRequest : function(request) {
        var mapLayer = this.findMapLayerFromAllAvailable(request.getMapLayerId());
        var event = this.getEventBuilder('AfterShowMapLayerInfoEvent')(mapLayer);
        this.copyObjectCreatorToFrom(event, request);
        this.dispatch(event);
    },
    /**
     * @method _handleShowMapLayerInfoRequest
     * Handles ShowMapLayerInfoRequest, sorts selected layers array so
     * that layer with given id is positioned into given index
     * and all the rest are pushed one step further. Sends out an AfterRearrangeSelectedMapLayerEvent
     *
     * @param {Oskari.mapframework.request.common.RearrangeSelectedMapLayerRequest} request
     * @private
     */
    _handleRearrangeSelectedMapLayerRequest : function(request) {
        var requestToPosition = request.getToPosition();
        var requestMapLayerId = request.getMapLayerId();
        var modifiedLayer = null;
        var oldPosition = 0;
        if (requestMapLayerId != null && requestToPosition != null) {
            modifiedLayer = this.findMapLayerFromSelectedMapLayers(requestMapLayerId);

            var newSelectedLayers = new Array();
            var itemsAdded = 0;
            var lastHandledIndex = 0;

            // loop through layers so that we have enough elements before new position
            for (var i = 0; itemsAdded < requestToPosition; i++) {
                lastHandledIndex++;

                var layer = this._selectedLayers[i];

                if (layer.getId() == requestMapLayerId) {
                    oldPosition = i;
                    continue;
                }

                newSelectedLayers.push(layer);
                itemsAdded++;
            }

            // now we got start of the array ready. Next add modified one.
            newSelectedLayers.push(modifiedLayer);

            // Finally add rest to array
            for (var i = lastHandledIndex; i < this._selectedLayers.length; i++) {
                var layer = this._selectedLayers[i];

                if (layer.getId() == requestMapLayerId) {
                    oldPosition = i;
                    continue;
                }
                newSelectedLayers.push(layer);
            }

            // clear carbage
            delete this._selectedLayers;
            this._selectedLayers = newSelectedLayers;
        }

        // notify listeners
        var event = this.getEventBuilder('AfterRearrangeSelectedMapLayerEvent')(modifiedLayer, oldPosition, requestToPosition);
        this.copyObjectCreatorToFrom(event, request);
        this.dispatch(event);
    },
    
    /**
     * @method _handleChangeMapLayerOpacityRequest
     * Handles ChangeMapLayerOpacityRequest, sends out an AfterChangeMapLayerOpacityEvent
     *
     * @param {Oskari.mapframework.request.common.ChangeMapLayerOpacityRequest} request
     * @private
     */
    _handleChangeMapLayerOpacityRequest : function(request) {
        var layer = this.findMapLayerFromSelectedMapLayers(request.getMapLayerId());
        if (!layer) {
            return;
        }
        layer.setOpacity(request.getOpacity());

        var event = this.getEventBuilder('AfterChangeMapLayerOpacityEvent')(layer);
        this.copyObjectCreatorToFrom(event, request);
        this.dispatch(event);
    },
    /**
     * @method _handleChangeMapLayerStyleRequest
     * Handles ChangeMapLayerStyleRequest, sends out an AfterChangeMapLayerStyleEvent
     *
     * @param {Oskari.mapframework.request.common.ChangeMapLayerStyleRequest} request
     * @private
     */
    _handleChangeMapLayerStyleRequest : function(request) {
        var layer = this.findMapLayerFromSelectedMapLayers(request.getMapLayerId());
        if (!layer) {
            return;
        }
        // Check for magic string
        if (request.getStyle() != "!default!") {
            layer.selectStyle(request.getStyle());
            var event = this.getEventBuilder('AfterChangeMapLayerStyleEvent')(layer);
            this.copyObjectCreatorToFrom(event, request);
            this.dispatch(event);
        }
    },
    /**
     * @method _removeHighLightedMapLayer
     * Removes layer with given id from highlighted layers. 
     * If id is not given -> removes all layers from highlighted layers
     * @param {String} id of the layer to remove or leave undefined to remove all
     * @private
     */
    _removeHighLightedMapLayer : function(id) {
        var highlightedMapLayers = this.getAllHighlightedMapLayers();
        for (var i = 0; i < highlightedMapLayers.length; i++) {
            var mapLayer = highlightedMapLayers[i];
            if (!id || mapLayer.getId() == id) {
                highlightedMapLayers.splice(i);
                // Notify that dim has occured
                var event = this.getEventBuilder('AfterDimMapLayerEvent')(mapLayer);
                this.dispatch(event);
                return;
            }
        }
    },
    /**
     * @method _handleHighlightMapLayerRequest
     * Handles HighlightMapLayerRequest, sends out an AfterHighlightMapLayerEvent.
     * Highlighted wfslayer responds to map clicks by highlighting a clicked feature.
     *
     * @param {Oskari.mapframework.request.common.HighlightMapLayerRequest} request
     * @private
     */
    _handleHighlightMapLayerRequest : function(request) {
        var creator = this.getObjectCreator(request);

        var id = request.getMapLayerId();
        this.printDebug("[core-map-layer-methods] Trying to highlight map " + "layer with id '" + id + "'");
        if (this.isMapLayerAlreadyHighlighted(id)) {
            this.printWarn("[core-map-layer-methods] Attempt to highlight " + "already highlighted wms feature info " + "map layer '" + id + "'");
            return;
        }

        if (this._allowMultipleHighlightLayers == true) {
            this._removeHighLightedMapLayer(id);
        } else {
            this._removeHighLightedMapLayer();
        }

        var mapLayer = this.findMapLayerFromSelectedMapLayers(id);
        if (!mapLayer) {
            return;
        }
        this._mapLayersHighlighted.push(mapLayer);
        this.printDebug("[core-map-layer-methods] Adding " + mapLayer + " (" + mapLayer.getId() + ") to highlighted list.");

        // finally notify sandbox
        var event = this.getEventBuilder('AfterHighlightMapLayerEvent')(mapLayer);
        this.copyObjectCreatorToFrom(event, request);
        this.dispatch(event);
    },
    /**
     * @method _handleDimMapLayerRequest
     * Handles DimMapLayerRequest, sends out an AfterDimMapLayerEvent.
     * Highlighted wfslayer responds to map clicks by highlighting a clicked feature. 
     * This removes the layer from highlighted list
     *
     * @param {Oskari.mapframework.request.common.DimMapLayerRequest} request
     * @private
     */
    _handleDimMapLayerRequest : function(layerId) {

        if (this._allowMultipleHighlightLayers == true) {
            this._removeHighLightedMapLayer(layerId);
        } else {
            this._removeHighLightedMapLayer();
        }

        var mapLayer = this.findMapLayerFromAllAvailable(layerId);
        if (!mapLayer) {
            return;
        }

        var event = this.getEventBuilder('AfterDimMapLayerEvent')(mapLayer);
        this.dispatch(event);
    }
});

define("bundles/oskari/base/core/core-map-layer-methods", function(){});

/**
 * @class Oskari.mapframework.core.Core.mapMethods
 *
 * This category class adds map related methods to Oskari core as they were in
 * the class itself.
 */
Oskari.clazz.category('Oskari.mapframework.core.Core', 'map-methods', {

    /**
     * @method _handleHideMapMarkerRequest
     * Sends out a AfterHideMapMarkerEvent to hide the marker
     * TODO: this should be refactored so that markers plugin keeps track of markers and 
     * handles the HideMapMarkerRequest directly!
     * @deprecated
     * @param {Oskari.mapframework.request.common.HideMapMarkerRequest} request
     * @private 
     */
    _handleHideMapMarkerRequest : function(request) {
        /* Set marker state to domain */
        this._map.setMarkerVisible(false);

        var event = this.getEventBuilder(
        'AfterHideMapMarkerEvent')();
        this.copyObjectCreatorToFrom(event, request);
        this.dispatch(event);
    }
});

define("bundles/oskari/base/core/core-map-methods", function(){});

define('bundles/oskari/base/core/module',["oskari", 
			"./core",	
			"./core-enhancement-methods",
			"./core-key-listener-methods",
			"./core-map-layer-methods",
			"./core-map-methods"

],function(Oskari) {
		Oskari.bundleCls('core-base');
		Oskari.bundleCls('core-map');
});

/**
 * @class Oskari.mapframework.event.Event
 *
 * Superclass for all Oskari events.
 * Consider this as an abstract class and only use it by extending.
 * 
 * Events are used to tell the rest of the application that something happened.
 * They can be sent and listened to freely. If you want to tell another part of 
 * the application to do something, use an implementation of
 * Oskari.mapframework.request.Request instead.
 * 
 * Code snippet example to creating and sending out an event:
 * <pre>
 * // get a builder method for the requested event type.
 * var eventBuilder = sandbox.getEventBuilder('FeaturesAvailableEvent');
 * // create the event with the builder method
 * var event = eventBuilder(...event init params...);
 * // send the request to the application
 * sandbox.notifyAll(event);
 * </pre>
 * 
 * Code for listening to events in Oskari.mapframework.module.Module implementations:
 * <pre>
 *  // module init
 *  init: function(sandbox) {
 *       // register for listening events in module init
 *       for(var p in this.eventHandlers ) {
 *           sandbox.registerForEventByName(this, p);
 *       } 	
 *  },
 *  // declare eventhandlers for the module
 *  eventHandlers : {
 *       'FeaturesAvailableEvent' : function(event) {
 *           alert('I got a ' + event.getName());
 *   	}
 *  },
 *  // interface method to handle any events if they have handlers in this module
 *  onEvent : function(event) {
 *       var handler = this.eventHandlers[event.getName()];
 *       if(!handler) {
 *           return;
 *       }
 *       return handler.apply(this, [event]);
 *  }
 * </pre>
 */
Oskari.clazz.define('Oskari.mapframework.event.Event',

/**
 * @method create called automatically on construction
 * @static
 *
 * Always extend this class, never use as is.
 */
function() {
    throw "mapframework.event.Event should not be used";
    /** @property{String} _name event name */
    this._name = null;
    /** @property{String} _creator name for the functionality/bundle/module triggering the
     * event */
    this._creator = null;
}, {
    /**
     * @method getName
     * Interface method for all events, should return event name
     * @return {String} event name
     * @throws always override this
     */
    getName : function() {
        throw "Running default implementation of Event.getName(). implement your own!";
    },
    /**
     * @method setCreator
     * @param {String} creator name for the functionality/bundle/module triggering
     * the event
     */
    setCreator : function(creator) {
        this._creator = creator;
    },
    /**
     * @method getCreator
     * @return {String} name for the functionality/bundle/module triggering the
     * event
     */
    getCreator : function() {
        return this._creator;
    }
});

define("bundles/oskari/base/event/event", function(){});

/**
 * @class Oskari.mapframework.event.common.FeaturesAvailableEvent
 *
 * Used to add/replace features on a
 * Oskari.mapframework.domain.VectorLayer
 * See Oskari.mapframework.mapmodule.VectorLayerPlugin
 */
Oskari.clazz.define('Oskari.mapframework.event.common.FeaturesAvailableEvent',

/**
 * @method create called automatically on construction
 * @static
 *
 * @param {Oskari.mapframework.domain.VectorLayer}
 *            mapLayer highlighted/selected maplayer
 * @param {Mixed}
 *            features featuredata in #getMimeType format
 * @param {String}
 *            mimeType see
 * #Oskari.mapframework.mapmodule.VectorLayerPlugin.registerVectorFormats()
 * @param {String}
 *            projCode srs projection code
 * @param {String}
 *            op operation to perform
 */
function(mapLayer, features, mimeType, projCode, op) {
    this._creator = null;
    this._features = features;
    this._op = op;
    this._mapLayer = mapLayer;
    this._mimeType = mimeType;
    this._projCode = projCode;
}, {
    /** @static @property __name event name */
    __name : "FeaturesAvailableEvent",
    /**
     * @method getName
     * @return {String} event name
     */
    getName : function() {
        return this.__name;
    },
    /**
     * @method getFeatures
     * @return {Mixed} featuredata in #getMimeType format
     */
    getFeatures : function() {
        return this._features;
    },
    /**
     * @method getOp
     * @return {String} operation to perform
     */
    getOp : function() {
        return this._op;
    },
    /**
     * @method getMapLayer
     * @return {Oskari.mapframework.domain.VectorLayer}
     * selected maplayer
     */
    getMapLayer : function() {
        return this._mapLayer;
    },
    /**
     * @method getMimeType
     * @return {String} see
     * Oskari.mapframework.mapmodule.VectorLayerPlugin.registerVectorFormats()
     */
    getMimeType : function() {
        return this._mimeType;
    },
    /**
     * @method getProjCode
     * @return {String} srs projection code
     */
    getProjCode : function() {
        return this._projCode;
    }
}, {
    /**
     * @property {String[]} protocol array of superclasses as {String}
     * @static
     */
    'protocol' : ['Oskari.mapframework.event.Event']
});

/* Inheritance */;
define("bundles/oskari/base/event/common/features-available-event", function(){});

/**
 * @class Oskari.mapframework.event.common.AfterMapLayerAddEvent
 *
 * Notifies application bundles that a map layer has been added to selected
 * layers.
 * Triggers on Oskari.mapframework.request.common.AddMapLayerRequest
 * Opposite of Oskari.mapframework.event.common.AfterMapLayerRemoveEvent
 */
Oskari.clazz.define('Oskari.mapframework.event.common.AfterMapLayerAddEvent',

/**
 * @method create called automatically on construction
 * @static
 *
 * @param
 * {Oskari.mapframework.domain.WmsLayer/Oskari.mapframework.domain.WfsLayer/Oskari.mapframework.domain.VectorLayer}
 *            mapLayer added map layer (matching one in MapLayerService)
 * @param {Boolean}
 *            keepLayersOrder should order of layers be reserved (optional,
 * defaults to false)
 * @param {Boolean}
 *            isBasemap (optional, defaults to false) 
 */
function(mapLayer, keepLayersOrder, isBasemap) {
    this._creator = null;
    this._mapLayer = mapLayer;
    this._keepLayersOrder = keepLayersOrder;

    if(isBasemap) {
        this._isBasemap = isBasemap;
    } else {
        this._isBasemap = false;
    }
}, {
    /** @static @property __name event name */
    __name : "AfterMapLayerAddEvent",

    /**
     * @method getName
     * @return {String} event name
     */
    getName : function() {
        return this.__name;
    },
    /**
     * @method getMapLayer
     * @return
     * {Oskari.mapframework.domain.WmsLayer/Oskari.mapframework.domain.WfsLayer/Oskari.mapframework.domain.VectorLayer}
     *            added map layer (matching one in MapLayerService)
     */
    getMapLayer : function() {
        return this._mapLayer;
    },
    /**
     * @method getKeepLayersOrder
     * @return {Boolean} boolean true if we should keep the layer order
     */
    getKeepLayersOrder : function() {
        return this._keepLayersOrder;
    },
    /**
     * @method isBasemap
     * @return {Boolean} boolean true if this is a basemap
     */
    isBasemap : function() {
        return this._isBasemap;
    }
}, {
    /**
     * @property {String[]} protocol array of superclasses as {String}
     * @static
     */
    'protocol' : ['Oskari.mapframework.event.Event']
});

/* Inheritance */;
define("bundles/oskari/base/event/common/after-map-layer-add-event", function(){});

/**
 * @class Oskari.mapframework.event.common.AfterMapLayerRemoveEvent
 *
 * Notifies application bundles that a map layer has been removed from selected
 * layers.
 * Triggers on Oskari.mapframework.request.common.RemoveMapLayerRequest
 * Opposite of Oskari.mapframework.event.common.AfterMapLayerAddEvent
 */
Oskari.clazz.define('Oskari.mapframework.event.common.AfterMapLayerRemoveEvent',

/**
 * @method create called automatically on construction
 * @static
 *
 * @param
 * {Oskari.mapframework.domain.WmsLayer/Oskari.mapframework.domain.WfsLayer/Oskari.mapframework.domain.VectorLayer}
 *            mapLayer removed map layer (matching one in MapLayerService)
 */
function(mapLayer) {
    this._creator = null;
    this._mapLayer = mapLayer;
}, {
    /** @static @property __name event name */
    __name : "AfterMapLayerRemoveEvent",
    /**
     * @method getName
     * @return {String} event name
     */
    getName : function() {
        return this.__name;
    },
    /**
     * @method getMapLayer
     * @return
     * {Oskari.mapframework.domain.WmsLayer/Oskari.mapframework.domain.WfsLayer/Oskari.mapframework.domain.VectorLayer}
     *            added map layer (matching one in MapLayerService)
     */
    getMapLayer : function() {
        return this._mapLayer;
    }
}, {
    /**
     * @property {String[]} protocol array of superclasses as {String}
     * @static
     */
    'protocol' : ['Oskari.mapframework.event.Event']
});

/* Inheritance */;
define("bundles/oskari/base/event/common/after-map-layer-remove-event", function(){});

/**
 * @class Oskari.mapframework.event.common.AfterMapMoveEvent
 *
 * Notifies application bundles that a map has moved.
 * See Oskari.mapframework.request.common.MapMoveRequest
 */
Oskari.clazz.define('Oskari.mapframework.event.common.AfterMapMoveEvent',

/**
 * @method create called automatically on construction
 * @static
 *
 * @param {Number} centerX
 *            longitude
 * @param {Number} centerY
 *            latitude
 * @param {Number} zoom
 *            map zoomlevel (0-12)
 * @param {Boolean} marker
 *            this should be removed, always sent as false
 * @param {Number} scale
 *            map scale
 */
function(centerX, centerY, zoom, marker, scale) {
    this._creator = null;

    this._centerX = centerX;
    this._centerY = centerY;
    this._zoom = zoom;
    this._marker = marker;
    this._scale = scale;
}, {
    /** @static @property __name event name */
    __name : "AfterMapMoveEvent",
    /**
     * @method getName
     * @return {String} event name
     */
    getName : function() {
        return this.__name;
    },
    /**
     * @method getCreator
     * @return {String} identifier for the event sender
     */
    getCreator : function() {
        return this._creator;
    },
    /**
     * @method getCenterX
     * @return {Number} longitude
     */
    getCenterX : function() {
        return this._centerX;
    },
    /**
     * @method getCenterY
     * @return {Number} latitude
     */
    getCenterY : function() {
        return this._centerY;
    },
    /**
     * @method getZoom
     * @return {Number} zoomlevel (0-12)
     */
    getZoom : function() {
        return this._zoom;
    },
    /**
     * @method getMarker
     * @return {Boolean} this should be removed, always set to false
     * @deprecated use Oskari.mapframework.sandbox.Sandbox.getMap() ->
     * Oskari.mapframework.domain.Map.isMarkerVisible()
     */
    getMarker : function() {
        return this._marker;
    },
    /**
     * @method getScale
     * @return {Number} map scale
     */
    getScale : function() {
        return this._scale;
    }
}, {
    /**
     * @property {String[]} protocol array of superclasses as {String}
     * @static
     */
    'protocol' : ['Oskari.mapframework.event.Event']
});

/* Inheritance */;
define("bundles/oskari/base/event/common/after-map-move-event", function(){});

/**
 * @class Oskari.mapframework.event.common.MapMoveStartEvent
 *
 * Notifies application bundles that a map has began moving (is being dragged).
 * Oskari.mapframework.event.common.AfterMapMoveEvent is sent when dragging is
 * finished.
 */
Oskari.clazz.define('Oskari.mapframework.event.common.MapMoveStartEvent',
/**
 * @method create called automatically on construction
 * @static
 *
 * @param {Number} x
 *            longitude on drag start
 * @param {Number} y
 *            latitude on drag start
 */
function(x, y) {
    this._creator = null;
    this._x = x;

    this._y = y;

}, {

    /** @static @property __name event name */
    __name : "MapMoveStartEvent",
    /**
     * @method getName
     * @return {String} event name
     */
    getName : function() {
        return this.__name;
    },
    /**
     * @method getX
     * @return {Number} longitude on drag start
     */
    getX : function() {
        return this._x;
    },
    /**
     * @method getY
     * @return {Number} latitude on drag start
     */
    getY : function() {
        return this._y;
    }
}, {
    /**
     * @property {String[]} protocol array of superclasses as {String}
     * @static
     */
    'protocol' : ['Oskari.mapframework.event.Event']
});

/* Inheritance */;
define("bundles/oskari/base/event/common/after-map-move-start-event", function(){});

/**
 * @class Oskari.mapframework.event.common.AfterShowMapLayerInfoEvent
 * 
 * Triggers on Oskari.mapframework.request.common.ShowMapLayerInfoRequest.
 * Populates the layer reference matching the id in request.
 * FIXME: propably unnecessary step, this could be completed with using only the
 * request
 */
Oskari.clazz.define('Oskari.mapframework.event.common.AfterShowMapLayerInfoEvent',
/**
 * @method create called automatically on construction
 * @static
 *
 * @param
 * {Oskari.mapframework.domain.WmsLayer/Oskari.mapframework.domain.WfsLayer/Oskari.mapframework.domain.VectorLayer}
 *            mapLayer highlighted/selected maplayer
 */
function(mapLayer) {
    this._creator = null;
    this._mapLayer = mapLayer;
}, {
    /** @static @property __name event name */
    __name : "AfterShowMapLayerInfoEvent",
    /**
     * @method getName
     * @return {String} event name
     */
    getName : function() {
        return this.__name;
    },
    /**
     * @method getMapLayer
     * @return
     * {Oskari.mapframework.domain.WmsLayer/Oskari.mapframework.domain.WfsLayer/Oskari.mapframework.domain.VectorLayer}
     * selected maplayer
     */
    getMapLayer : function() {
        return this._mapLayer;
    }
}, {
    /**
     * @property {String[]} protocol array of superclasses as {String}
     * @static
     */
    'protocol' : ['Oskari.mapframework.event.Event']
});

/* Inheritance */;
define("bundles/oskari/base/event/common/after-show-map-layer-info-event", function(){});

/**
 * @class Oskari.mapframework.event.common.AfterHideMapMarkerEvent
 *
 * Triggers on Oskari.mapframework.request.common.HideMapMarkerRequest
 * FIXME: propably an unnecessary step that could be handled with the request
 * directly
 */
Oskari.clazz.define('Oskari.mapframework.event.common.AfterHideMapMarkerEvent',
/**
 * @method create called automatically on construction
 * @static
 */
function() {
}, {
    /** @static @property __name event name */
    __name : "AfterHideMapMarkerEvent",
    /**
     * @method getName
     * @return {String} event name
     */
    getName : function() {
        return this.__name;
    }
}, {
    /**
     * @property {String[]} protocol array of superclasses as {String}
     * @static
     */
    'protocol' : ['Oskari.mapframework.event.Event']
});
define("bundles/oskari/base/event/common/after-hide-map-marker-event", function(){});

/**
 * @class Oskari.mapframework.event.common.MouseHoverEvent
 *
 * Notification about mouse hovering over the map
 */
Oskari.clazz.define('Oskari.mapframework.event.common.MouseHoverEvent',

/**
 * @method create called automatically on construction
 * @static
 *
 * @param {Number}
 *            lon longitude on mouse location
 * @param {Number}
 *            lat latitude on mouse location
 */
function(lon, lat,isPaused) {
    this._creator = null;

    this._lon = lon;

    this._lat = lat;
    
    this._paused = isPaused;

}, {
    /** @static @property __name event name */
    __name : "MouseHoverEvent",
    /**
     * @method getName
     * @return {String} event name
     */
    getName : function() {
        return this.__name;
    },
    /**
     * @method getLon
     * @return {Number} longitude on mouse location
     */
    getLon : function() {
        return this._lon;
    },
    /**
     * @method getLon
     * @return {Number} latitude on mouse location
     */
    getLat : function() {
        return this._lat;
    },
    /**
     * @method set
     * 
     * Update mouse location on event
     * 
     * @param {Number}
     *            lon longitude on mouse location
     * @param {Number}
     *            lat latitude on mouse location
     */
    set : function(lon, lat,isPaused,pageX,pageY,isPaused) {

        this._lon = lon;
        this._lat = lat;
        this._paused = isPaused;
        this._pageX = pageX;
        this._pageY = pageY;
        this._paused = isPaused;
    },
    
    isPaused : function() {
    	return this._paused;
    },
    
    getPageX: function() {
    	return this._pageX;
    },
    getPageY: function() {
    	return this._pageY;
    }
}, {
    /**
     * @property {String[]} protocol array of superclasses as {String}
     * @static
     */
    'protocol' : ['Oskari.mapframework.event.Event']
});

/* Inheritance */;
define("bundles/oskari/base/event/common/mouse-hover-event", function(){});

/**
 * @class Oskari.mapframework.event.common.MapLayerEvent
 *
 * Notifies application bundles that a map layers data(e.g. name) has changed or
 * that a layer has been added to/removed from Oskari.mapframework.service.MapLayerService
 */
Oskari.clazz.define('Oskari.mapframework.event.common.MapLayerEvent',
/**
 * @method create called automatically on construction
 * @static
 *
 * @param {String}
 *            layerId id for the changed layer (data available in
 * Oskari.mapframework.service.MapLayerService)
 * @param {String}
 *            operation one of #operations
 */
function(layerId, operation) {
    this._creator = null;
    this._layerId = layerId;
    if(!this.operations[operation]) {
        throw "Unknown operation '" + operation + "'";
    }
    this._operation = operation;
}, {
    /** @static @property __name event name */
    __name : "MapLayerEvent",
    /**
     * @method getName
     * @return {String} event name
     */
    getName : function() {
        return this.__name;
    },
    /**
     * @method getLayerId
     * @return {String}  id for the changed layer (data available in
     * Oskari.mapframework.service.MapLayerService)
     */
    getLayerId : function() {
        return this._layerId;
    },
    /**
     * @method getOperation
     * @return {String} one of #operations
     */
    getOperation : function() {
        return this._operation;
    },
    /**
     * @property {Object} operations identifiers to tell what has happened
     * @static
     */
    operations : {
        /** @static @property {String} operations.add layer has been added */
        'add' : 'add',
        /** @static @property {String} operations.remove layer has been removed
         */
        'remove' : 'remove',
        /** @static @property {String} operations.sticky layer switch off state is changed
         * (e.g. name) */
        'sticky' : 'sticky',
         /** @static @property {String} operations.update layer has been updated
         * (e.g. name) */
        'update' : 'update'
    }
}, {
    /**
     * @property {String[]} protocol array of superclasses as {String}
     * @static
     */
    'protocol' : ['Oskari.mapframework.event.Event']
});

/* Inheritance */;
define("bundles/oskari/base/event/common/MapLayerEvent", function(){});

/**
 * @class Oskari.mapframework.event.common.AfterRearrangeSelectedMapLayerEvent
 * 
 * Used to notify that maplayer order has been changed in Oskari core.
 */
Oskari.clazz.define('Oskari.mapframework.event.common.AfterRearrangeSelectedMapLayerEvent', 

/**
 * @method create called automatically on construction
 * @static
 *
 * @param
 * {Oskari.mapframework.domain.WmsLayer/Oskari.mapframework.domain.WfsLayer/Oskari.mapframework.domain.VectorLayer}
 *            movedMapLayer moved map layer (matching one in MapLayerService)
 * @param {Number} fromPosition
 *            previous position
 * @param {Number} toPosition
 *            new position
 */
function(movedMapLayer, fromPosition, toPosition) {
    this._creator = null;
    this._movedMapLayer = movedMapLayer;
    this._fromPosition = fromPosition;
    this._toPosition = toPosition;
}, {
    /** @static @property __name event name */
    __name : "AfterRearrangeSelectedMapLayerEvent",
    /**
     * @method getName
     * @return {String} event name
     */
    getName : function() {
        return this.__name;
    },
    /**
     * @method getMovedMapLayer
     * @return
     * {Oskari.mapframework.domain.WmsLayer/Oskari.mapframework.domain.WfsLayer/Oskari.mapframework.domain.VectorLayer}
     *            moved map layer (matching one in MapLayerService)
     */
    getMovedMapLayer : function() {
        return this._movedMapLayer;
    },
    /**
     * @method getFromPosition
     * @return  {Number} previous position
     */
    getFromPosition : function() {
        return this._fromPosition;
    },
    /**
     * @method getToPosition
     * @return  {Number} new position
     */
    getToPosition : function() {
        return this._toPosition;
    }
}, {
    /**
     * @property {String[]} protocol array of superclasses as {String}
     * @static
     */
    'protocol' : ['Oskari.mapframework.event.Event']
});

/* Inheritance */;
define("bundles/oskari/base/event/common/after-rearrange-selected-map-layer-event", function(){});

/**
 * @class Oskari.mapframework.event.common.AfterChangeMapLayerOpacityEvent
 *
 * Triggers when a
 * Oskari.mapframework.request.common.ChangeMapLayerOpacityRequest is received.
 * The event includes the maplayer with the modified opacity.
 */
Oskari.clazz.define('Oskari.mapframework.event.common.AfterChangeMapLayerOpacityEvent',

/**
 * @method create called automatically on construction
 * @static
 *
 * @param
 * {Oskari.mapframework.domain.WmsLayer/Oskari.mapframework.domain.WfsLayer/Oskari.mapframework.domain.VectorLayer}
 *            mapLayer 
 */
function(mapLayer) {
    this._mapLayer = mapLayer;
}, {
    /** @static @property __name event name */
    __name : "AfterChangeMapLayerOpacityEvent",
    /**
     * @method getName
     * @return {String} event name
     */
    getName : function() {
        return this.__name;
    },
    /**
     * @method getMapLayer
     * @return
     * {Oskari.mapframework.domain.WmsLayer/Oskari.mapframework.domain.WfsLayer/Oskari.mapframework.domain.VectorLayer}
     * changed maplayer
     */
    getMapLayer : function() {
        return this._mapLayer;
    }
}, {
    /**
     * @property {String[]} protocol array of superclasses as {String}
     * @static
     */
    'protocol' : ['Oskari.mapframework.event.Event']
});
define("bundles/oskari/base/event/common/after-change-map-layer-opacity-event", function(){});

/**
 * @class Oskari.mapframework.event.common.AfterChangeMapLayerStyleEvent
 *
 * Triggers when a
 * Oskari.mapframework.request.common.ChangeMapLayerStyleRequest is received.
 * The event includes the maplayer with the modified style.
 */
Oskari.clazz.define('Oskari.mapframework.event.common.AfterChangeMapLayerStyleEvent', 
/**
 * @method create called automatically on construction
 * @static
 *
 * @param
 * {Oskari.mapframework.domain.WmsLayer/Oskari.mapframework.domain.WfsLayer/Oskari.mapframework.domain.VectorLayer}
 *            mapLayer 
 */
function(mapLayer) {
    this._mapLayer = mapLayer;
}, {
    /** @static @property __name event name */
    __name : "AfterChangeMapLayerStyleEvent",
    /**
     * @method getName
     * @return {String} event name
     */
    getName : function() {
        return this.__name;
    },

    /**
     * @method getMapLayer
     * @return
     * {Oskari.mapframework.domain.WmsLayer/Oskari.mapframework.domain.WfsLayer/Oskari.mapframework.domain.VectorLayer}
     * changed maplayer
     */
    getMapLayer : function() {
        return this._mapLayer;
    }
}, {
    /**
     * @property {String[]} protocol array of superclasses as {String}
     * @static
     */
    'protocol' : ['Oskari.mapframework.event.Event']
});

define("bundles/oskari/base/event/common/after-change-map-layer-style-event", function(){});

/**
 * @class Oskari.mapframework.event.common.AfterHighlightMapLayerEvent
 *
 * Triggers when a given map layer has been requested to be
 * "highlighted" on map. This means f.ex. a WMS layer GetFeatureInfo clicks needs
 * to be enabled, WFS layers featuretype grid should be shown and selection clicks
 * on map enabled.
 * Opposite of Oskari.mapframework.event.common.AfterDimMapLayerEvent
 */
Oskari.clazz.define('Oskari.mapframework.event.common.AfterHighlightMapLayerEvent',

/**
 * @method create called automatically on construction
 * @static
 *
 * @param
 * {Oskari.mapframework.domain.WmsLayer/Oskari.mapframework.domain.WfsLayer/Oskari.mapframework.domain.VectorLayer}
 *            mapLayer highlighted/selected maplayer
 */
function(mapLayer) {
    this._creator = null;
    this._mapLayer = mapLayer;
}, {
    /** @static @property __name event name */
    __name : "AfterHighlightMapLayerEvent",
    /**
     * @method getName
     * @return {String} event name
     */
    getName : function() {
        return this.__name;
    },
    /**
     * @method getMapLayer
     * @return
     * {Oskari.mapframework.domain.WmsLayer/Oskari.mapframework.domain.WfsLayer/Oskari.mapframework.domain.VectorLayer}
     * highlighted/selected maplayer
     */
    getMapLayer : function() {
        return this._mapLayer;
    }
}, {
    /**
     * @property {String[]} protocol array of superclasses as {String}
     * @static
     */
    'protocol' : ['Oskari.mapframework.event.Event']
});

/* Inheritance */;
define("bundles/oskari/base/event/common/after-highlight-map-layer-event", function(){});

/**
 * @class Oskari.mapframework.event.common.AfterDimMapLayerEvent
 *
 * Triggers when a given "highlighted" map layer has been requested to be
 * "dimmed" on map. This means f.ex. a WMS layer GetFeatureInfo clicks needs to
 * be disabled, WFS layers featuretype grid should be hidden and selection clicks
 * on map disabled.
 * Opposite of Oskari.mapframework.event.common.AfterHighlightMapLayerEvent
 */
Oskari.clazz.define('Oskari.mapframework.event.common.AfterDimMapLayerEvent',

/**
 * @method create called automatically on construction
 * @static
 *
 * @param
 * {Oskari.mapframework.domain.WmsLayer/Oskari.mapframework.domain.WfsLayer/Oskari.mapframework.domain.VectorLayer}
 *            mapLayer dimmed maplayer
 */
function(mapLayer) {
    this._creator = null;
    this._mapLayer = mapLayer;
}, {
    /** @static @property __name event name */
    __name : "AfterDimMapLayerEvent",
    /**
     * @method getName
     * @return {String} event name
     */
    getName : function() {
        return this.__name;
    },
    /**
     * @method getMapLayer
     * @return
     * {Oskari.mapframework.domain.WmsLayer/Oskari.mapframework.domain.WfsLayer/Oskari.mapframework.domain.VectorLayer}
     * dimmed maplayer
     */
    getMapLayer : function() {
        return this._mapLayer;
    }
}, {
    /**
     * @property {String[]} protocol array of superclasses as {String}
     * @static
     */
    'protocol' : ['Oskari.mapframework.event.Event']
});

/* Inheritance */;
define("bundles/oskari/base/event/common/after-dim-map-layer-event", function(){});

define('bundles/oskari/base/event/module',["oskari", 
			"./event",
			"./common/features-available-event",
			"./common/after-map-layer-add-event",
			"./common/after-map-layer-remove-event",
			"./common/after-map-move-event",
			"./common/after-map-move-start-event",
			"./common/after-show-map-layer-info-event",
			"./common/after-hide-map-marker-event",
			"./common/mouse-hover-event",
			"./common/MapLayerEvent",
			"./common/after-rearrange-selected-map-layer-event",
			"./common/after-change-map-layer-opacity-event",
			"./common/after-change-map-layer-style-event",
			"./common/after-highlight-map-layer-event",
			"./common/after-dim-map-layer-event"],
	function(Oskari) {

		Oskari.bundleCls('event-base');
		Oskari.bundleCls('event-map');
		Oskari.bundleCls('event-map-layer');
	});
/**
 * @class Oskari.mapframework.domain.AbstractLayer
 *
 * Superclass for layer objects copy pasted from wmslayer. Need to check
 * if something should be moved back to wmslayer. Nothing else currently uses this.
 */
Oskari.clazz.define('Oskari.mapframework.domain.AbstractLayer',

/**
 * @method create called automatically on construction
 * @static
 */

function(params, options) {
	/* Internal id for this map layer */
	this._id = null;

	/* Name of this layer */
	this._name = null;

	/* Description for layer */
	this._description = null;

	/* either NORMAL_LAYER, GROUP_LAYER or BASE_LAYER */
	this._type = null;

	/* either WMS, WMTS, WFS or VECTOR */
	this._layerType = "";

	/* optional params */
	this._params = params || {};

	/* optional options */
	this._options = options || {};

	/* modules can "tag" the layers with this for easier reference */
	this._metaType = null;

	/* Max scale for layer */
	this._maxScale = null;

	/* Min scale for layer */
	this._minScale = null;

	/* is layer visible */
	this._visible = null;

	/* opacity from 0 to 100 */
	this._opacity = null;

	/* visible layer switch off enable/disable */
	this._isSticky = null;

	this._inspireName = null;
	this._organizationName = null;
	this._dataUrl = null;
	this._orderNumber = null;

	/*
	 * Array of sublayers. Notice that only type BASE_LAYER can
	 * have sublayers.
	 */
	this._subLayers = [];

	/* Array of styles that this layer supports */
	this._styles = [];

	/* Currently selected style */
	this._currentStyle = null;

	/* Legend image location */
	this._legendImage = null;

	/* is it possible to ask for feature info */
	this._featureInfoEnabled = null;

	/* is this layer queryable (GetFeatureInfo) boolean */
	this._queryable = null;

	this._queryFormat = null;

	// f.ex. permissions.publish
	this._permissions = {};

	// if given, tells where the layer has content
	// array of Openlayers.Geometry[] objects if already processed from _geometryWKT
	this._geometry = [];
	// wellknown text for polygon geometry
	this._geometryWKT = null;

    // Tools array for layer specific functions 
	this._tools = [];
	
	/* link to metadata service */
	this._metadataIdentifier = null;

	this._backendStatus = null;
}, {
	/**
	 * @method setId
	 * @param {String} id
	 *          unique identifier for map layer used to reference the layer internally
	 * (e.g. MapLayerService)
	 */
	setId : function(id) {
		this._id = id;
	},
	/**
	 * @method getId
	 * @return {String}
	 *          unique identifier for map layer used to reference the layer internally
	 * (e.g. MapLayerService)
	 */
	getId : function() {
		return this._id;
	},
	/**
	 * @method setQueryFormat
	 * @param {String} queryFormat
	 *          f.ex. 'text/html'
	 */
	setQueryFormat : function(queryFormat) {
		this._queryFormat = queryFormat;
	},
	/**
	 * @method getQueryFormat
	 * f.ex. 'text/html'
	 * @return {String}
	 */
	getQueryFormat : function() {
		return this._queryFormat;
	},
	/**
	 * @method setName
	 * @param {String} name
	 *          name for the maplayer that is shown in UI
	 */
	setName : function(name) {
		this._name = name;
	},
	/**
	 * @method getName
	 * @return {String} maplayer UI name
	 */
	getName : function() {
		return this._name;
	},
	/**
	 * @method setType
	 * @param {String} type
	 *          layer type (e.g. NORMAL, BASE, GROUP)
	 *
	 * Not as type WMS or Vector but base or normal layer.
	 * See #setAsBaseLayer(), #setAsGroupLayer() and #setAsNormalLayer()
	 */
	setType : function(type) {
		this._type = type;
	},
	/**
	 * @method getType
	 * @return {String} maplayer type (BASE/NORMAL)
	 */
	getType : function() {
		return this._type;
	},
	/**
	 * @method setDataUrl
	 * @param {String} param
	 *          URL string used to show more info about the layer
	 */
	setDataUrl : function(param) {
		this._dataUrl = param;
	},
	/**
	 * @method getDataUrl
	 * @return {String} URL string used to show more info about the layer
	 */
	getDataUrl : function() {
		return this._dataUrl;
	},
	/**
	 * @method setOrganizationName
	 * @param {String} param
	 *          organization name under which the layer is listed in UI
	 */
	setOrganizationName : function(param) {
		this._organizationName = param;
	},
	/**
	 * @method getOrganizationName
	 * @return {String} organization name under which the layer is listed in UI
	 */
	getOrganizationName : function() {
		return this._organizationName;
	},
	/**
	 * @method setInspireName
	 * @param {String} param
	 *          inspire theme name under which the layer is listed in UI
	 */
	setInspireName : function(param) {
		this._inspireName = param;
	},
	/**
	 * @method getInspireName
	 * @return {String} inspire theme name under which the layer is listed in UI
	 */
	getInspireName : function() {
		return this._inspireName;
	},
	/**
	 * @method setFeatureInfoEnabled
	 * @return {Boolean} featureInfoEnabled true to enable feature info functionality
	 */
	setFeatureInfoEnabled : function(featureInfoEnabled) {
		this._featureInfoEnabled = featureInfoEnabled;
	},
	/**
	 * @method isFeatureInfoEnabled
	 * @return {Boolean} true if feature info functionality should be enabled
	 */
	isFeatureInfoEnabled : function() {
		if (this._featureInfoEnabled === true) {
			return true;
		}
		return false;
	},
	/**
	 * @method setDescription
	 * @param {String} description
	 *          map layer description text
	 */
	setDescription : function(description) {
		this._description = description;
	},
	/**
	 * @method getDescription
	 * @return {String} map layer description text
	 */
	getDescription : function() {
		return this._description;
	},
	/**
	 * @method addSubLayer
	 * @param {Oskari.mapframework.domain.WmsLayer} map layer
	 *          actual sub map layer that is used for a given scale range (only for
	 * base & group layers)
	 *
	 * If layer has sublayers, it is basically a "metalayer" for maplayer ui
	 * purposes and actual map images to show are done with sublayers
	 */
	addSubLayer : function(layer) {
		this._subLayers.push(layer);
	},
	/**
	 * @method getSubLayers
	 * @return {Oskari.mapframework.domain.WmsLayer[]} array of sub map layers
	 *
	 * If layer has sublayers, it is basically a "metalayer" for maplayer ui
	 * purposes and actual map images to show are done with sublayers
	 */
	getSubLayers : function() {
		return this._subLayers;
	},
	/**
	 * @method setMaxScale
	 * @param {Number} maxScale
	 *          largest scale when the layer is shown (otherwise not shown in map and
	 * "greyed out"/disabled in ui)
	 */
	setMaxScale : function(maxScale) {
		this._maxScale = maxScale;
	},
	/**
	 * @method getMaxScale
	 * @return {Number}
	 *          largest scale when the layer is shown (otherwise not shown in map and
	 * "greyed out"/disabled in ui)
	 */
	getMaxScale : function() {
		return this._maxScale;
	},
	/**
	 * @method setMinScale
	 * @param {Number} minScale
	 *          smallest scale when the layer is shown (otherwise not shown in map and
	 * "greyed out"/disabled in ui)
	 */
	setMinScale : function(minScale) {
		this._minScale = minScale;
	},
	/**
	 * @method getMinScale
	 * @return {Number}
	 *          smallest scale when the layer is shown (otherwise not shown in map and
	 * "greyed out"/disabled in ui)
	 */
	getMinScale : function() {
		return this._minScale;
	},
	/**
	 * @method setOrderNumber
	 * @param {Number} orderNumber
	 */
	setOrderNumber : function(orderNumber) {
		this._orderNumber = orderNumber;
	},
	/**
	 * @method getOrderNumber
	 * @return {Number} orderNumber
	 */
	getOrderNumber : function() {
		return this._orderNumber;
	},
	/**
	 * @method isVisible
	 * @return {Boolean} true if this is should be shown
	 */
	isVisible : function() {
		return this._visible === true;
	},
	/**
	 * @method setVisible
	 * @param {Boolean} visible true if this is should be shown
	 */
	setVisible : function(visible) {
		this._visible = visible;
	},
	/**
	 * @method setOpacity
	 * @param {Number} opacity
	 *          0-100 in percents
	 */
	setOpacity : function(opacity) {
		this._opacity = opacity;
	},
	/**
	 * @method getOpacity
	 * @return {Number} opacity
	 *          0-100 in percents
	 */
	getOpacity : function() {
		return this._opacity;
	},
	/**
	 * @method setGeometryWKT
	 * Set geometry as wellknown text
	 * @param {String} value
	 *          WKT geometry
	 */
	setGeometryWKT : function(value) {
		this._geometryWKT = value;
	},
	/**
	 * @method getGeometryWKT
	 * Get geometry as wellknown text
	 * @return {String} WKT geometry
	 */
	getGeometryWKT : function() {
		return this._geometryWKT;
	},
	/**
	 * @method setGeometry
	 * @param {OpenLayers.Geometry.Geometry[]} value
	 *          array of WKT geometries or actual OpenLayer geometries
	 */
	setGeometry : function(value) {
		this._geometry = value;
	},
	/**
	 * @method getGeometry
	 * @return {OpenLayers.Geometry.Geometry[]}
	 *          array of WKT geometries or actual OpenLayer geometries
	 */
	getGeometry : function() {
		return this._geometry;
	},
	/**
	 * @method addPermission
	 * @param {String} action
	 *          action key that we want to add permission setting for
	 * @param {String} permission
	 *          actual permission setting for action
	 */
	addPermission : function(action, permission) {
		this._permissions[action] = permission;
	},
	/**
	 * @method removePermission
	 * @param {String} action
	 *          action key from which permission setting should be removed
	 */
	removePermission : function(action) {
		this._permissions[action] = null;
		delete this._permissions[action];
	},
	/**
	 * @method getPermission
	 * @param {String} action
	 *          action key for which permission we want
	 * @return {String} permission setting for given action
	 */
	getPermission : function(action) {
		return this._permissions[action];
	},
	/**
	 * @method getMetadataIdentifier
	 * Gets the identifier (uuid style) for getting layers metadata
	 * @return {String}
	 */
	getMetadataIdentifier : function() {
		return this._metadataIdentifier;
	},
	/**
	 * @method setMetadataIdentifier
	 * Sets the identifier (uuid style) for getting layers metadata
	 * @param {String} metadataid
	 */
	setMetadataIdentifier : function(metadataid) {
		this._metadataIdentifier = metadataid;
	},
	/**
	 * @method getBackendStatus
	 * Status text for layer operatibility (f.ex. 'DOWN')
	 * @return {String}
	 */
	getBackendStatus : function() {
		return this._backendStatus;
	},
	/**
	 * @method setBackendStatus
	 * Status text for layer operatibility (f.ex. 'DOWN')
	 * @param {String} backendStatus
	 */
	setBackendStatus : function(backendStatus) {
		this._backendStatus = backendStatus;
	},
	/**
	 * @method setMetaType
	 * @param {String} type used to group layers by f.ex. functionality.
	 * Layers can be fetched based on metatype f.ex. 'myplaces'
	 */
	setMetaType : function(type) {
		this._metaType = type;
	},
	/**
	 * @method getMetaType
	 * @return {String} type used to group layers by f.ex. functionality.
	 * Layers can be fetched based on metatype f.ex. 'myplaces'
	 */
	getMetaType : function() {
		return this._metaType;
	},
	/**
	 * @method addStyle
	 * @param {Oskari.mapframework.domain.Style} style
	 * adds style to layer
	 */
	addStyle : function(style) {
		this._styles.push(style);
	},
	/**
	 * @method getStyles
	 * @return {Oskari.mapframework.domain.Style[]}
	 * Gets layer styles
	 */
	getStyles : function() {
		return this._styles;
	},
	/**
	 * @method selectStyle
	 * @param {String} styleName
	 * Selects a #Oskari.mapframework.domain.Style with given name as #getCurrentStyle.
	 * If style is not found, assigns an empty #Oskari.mapframework.domain.Style to #getCurrentStyle
	 */
	selectStyle : function(styleName) {
		var style = null;
		// Layer have styles
		if (this._styles.length > 0) {
			// There is default style defined
			if (styleName !== "") {
				for (var i = 0; i < this._styles.length; i++) {
					style = this._styles[i];
					if (style.getName() == styleName) {
						this._currentStyle = style;
						if (style.getLegend() != "") {
							this._legendImage = style.getLegend();
						}
						return;
					}
				}
			}
			// There is not default style defined
			else {
				//var style =
				// Oskari.clazz.create('Oskari.mapframework.domain.Style');
				// Layer have more than one style, set first
				// founded style to default
				// Because of layer style error this if clause
				// must compare at there is more than one style.
				if (this._styles.length > 1) {
					this._currentStyle = this._styles[0];
				}
				// Layer have not styles, add empty style to
				// default
				else {
					style = Oskari.clazz.create('Oskari.mapframework.domain.Style');
					style.setName("");
					style.setTitle("");
					style.setLegend("");
					this._currentStyle = style;
				}

				return;
			}
		}
		// Layer have not styles
		else {
			style = Oskari.clazz.create('Oskari.mapframework.domain.Style');
			style.setName("");
			style.setTitle("");
			style.setLegend("");
			this._currentStyle = style;
			return;
		}
	},
	/**
	 * @method getCurrentStyle
	 * @return {Oskari.mapframework.domain.Style} current style
	 */
	getCurrentStyle : function() {
		return this._currentStyle;
	},
	/**
	 * @method getTools
	 * @return {Oskari.mapframework.domain.Tool[]}
	 * Get layer tools
	 */
	getTools : function() {
		return this._tools;
	},
	/**
	 * @method setTools
	 * @params {Oskari.mapframework.domain.Tool[]}
	 * Set layer tools
	 */
	setTools : function(tools) {
		this._tools = tools;
	},
	/**
	 * @method addTool
	 * @params {Oskari.mapframework.domain.Tool}
	 * adds layer tool to tools
	 */
	addTool : function(tool) {
		this._tools.push(tool);
	},
	
	/**
	 * @method getTool
	 * @return {Oskari.mapframework.domain.Tool}
	 * adds layer tool to tools
	 */
	getTool : function(toolName) {
		
		var tool = null;
		// Layer have tools
		if (this._tools.length > 0 ) {
			// 
			if (toolName !== "") {
				for (var i = 0; i < this._tools.length; i++) {
					tool = this._tools[i];
					if (tool.getName() == toolName) {
						return tool;
					}
				}
			}
		}
		return tool;
	},  
	/**
	 * @method setLegendImage
	 * @return {String} legendImage URL to a legend image
	 */
	setLegendImage : function(legendImage) {
		this._legendImage = legendImage;
	},
	/**
	 * @method getLegendImage
	 * @return {String} URL to a legend image
	 */
	getLegendImage : function() {
		return this._legendImage;
	},
	/**
	 * @method getLegendImage
	 * @return {Boolean} true if layer has a legendimage or its styles have legend images
	 */
	hasLegendImage : function() {

		if (this._legendImage) {
			return true;
		} else {
			for (var i = 0; i < this._styles.length; ++i) {
				if (this._styles[i].getLegend()) {
					return true;
				}
			}
		}
		return false;
	},
	/**
	 * @method setSticky
	 * True if layer switch off is disable
	 * @param {Boolean} isSticky
	 */
	setSticky : function(isSticky) {
		this._isSticky = isSticky;
	},
	/**
	 * @method isSticky
	 * True if layer switch off is disable
	 */
	isSticky : function() {
		return this._isSticky;
	},
	/**
	 * @method setQueryable
	 * True if we should call GFI on the layer
	 * @param {Boolean} queryable
	 */
	setQueryable : function(queryable) {
		this._queryable = queryable;
	},
	/**
	 * @method getQueryable
	 * True if we should call GFI on the layer
	 * @param {Boolean} queryable
	 */
	getQueryable : function() {
		return this._queryable;
	},
	/**
	 * @method setAsBaseLayer
	 * sets layer type to BASE_LAYER
	 */
	setAsBaseLayer : function() {
		this._type = "BASE_LAYER";
	},
	/**
	 * @method setAsNormalLayer
	 * sets layer type to NORMAL_LAYER
	 */
	setAsNormalLayer : function() {
		this._type = "NORMAL_LAYER";
	},
	/**
	 * @method setAsGroupLayer
	 * Sets layer type to GROUP_LAYER
	 */
	setAsGroupLayer : function() {
		this._type = "GROUP_LAYER";
	},
	/**
	 * @method isGroupLayer
	 * @return {Boolean} true if this is a group layer (=has sublayers)
	 */
	isGroupLayer : function() {
		return this._type === "GROUP_LAYER";
	},
	/**
	 * @method isBaseLayer
	 * @return {Boolean} true if this is a base layer (=has sublayers)
	 */
	isBaseLayer : function() {
		return this._type === "BASE_LAYER";
	},
	/**
	 * @method isInScale
	 * @param {Number} scale scale to compare to
	 * @return {Boolean} true if given scale is between this layers min/max scales. Always return true for base-layers.
	 */
	isInScale : function(scale) {
		var _return = this.isBaseLayer();
		if (!scale) {
			var sandbox = Oskari.$().sandbox;
			scale = sandbox.getMap().getScale();
		}

		// Check layer scales only normal layers
		if (!this.isBaseLayer()) {
			if ((scale > this.getMaxScale() || !this.getMaxScale()) && (scale < this.getMinScale()) || !this.getMinScale()) {
				_return = true;
			}
		}
		return _return;
	},
	/**
	 * @method getLayerType
	 * @return {String} layer type in lower case
	 */
	getLayerType : function() {
		return this._layerType.toLowerCase();
	},
	/**
	 * @method isLayerOfType
	 * @param {String} flavour layer type to check against. A bit misleading since setType is base/group/normal, this is used to check if the layer is a WMS layer.
	 * @return {Boolean} true if flavour is the specified layer type
	 */
	isLayerOfType : function(flavour) {
		return flavour && flavour.toLowerCase() === this.getLayerType();
	},
	/**
	 * @method getIconClassname
	 * @return {String} layer icon classname used in the CSS style.
	 */
	getIconClassname : function() {
		if (this.isBaseLayer()) {
			return 'layer-base';
		} else if (this.isGroupLayer()) {
			return 'layer-group';
		} else {
			return 'layer-' + this.getLayerType();
		}
	},
	/**
	 * @method getParams
	 * @return {Object} optional layer parameters for OpenLayers, empty object if no parameters were passed in construction
	 */
	getParams : function() {
		return this._params;
	},
	/**
	 * @method getOptions
	 * @return {Object} optional layer options for OpenLayers, empty object if no options were passed in construction
	 */
	getOptions : function() {
		return this._options;
	}
}); 
define("bundles/oskari/base/domain/AbstractLayer", function(){});

/**
 * @class Oskari.mapframework.domain.WmsLayer
 *
 * MapLayer of type WMS
 */
Oskari.clazz.define('Oskari.mapframework.domain.WmsLayer', 

/**
 * @method create called automatically on construction
 * @static
 */
function() {

    /* Name of wms layer */
    this._wmsLayerName = null;

    /* Array of wms urls for this layer */
    this._wmsUrls = [];

    /* Layer Type */
    this._layerType = "WMS";
}, {
    /**
     * @method addWmsUrl
     * @param {String} wmsUrl
     * Apppends the url to layer array of wms image urls
     */
    addWmsUrl : function(wmsUrl) {
        this._wmsUrls.push(wmsUrl);
    },
    /**
     * @method getWmsUrls
     * @return {String[]} 
     * Gets array of layer wms image urls
     */
    getWmsUrls : function() {
        return this._wmsUrls;
    },
    /**
     * @method setWmsName
     * @param {String} wmsName used to identify service f.ex. in GetFeatureInfo queries.
     */
    setWmsName : function(wmsName) {
        this._wmsName = wmsName;
    },
    /**
     * @method getWmsName
     * @return {String} wmsName used to identify service f.ex. in GetFeatureInfo queries.
     */
    getWmsName : function() {
        return this._wmsName;
    }
}, {
    "extend" : ["Oskari.mapframework.domain.AbstractLayer"]
});

define("bundles/oskari/base/domain/wmslayer", function(){});

/**
 * @class Oskari.mapframework.domain.VectorLayer
 *
 * MapLayer of type Vector
 */
Oskari.clazz.define('Oskari.mapframework.domain.VectorLayer',

/**
 * @method create called automatically on construction
 * @static
 */

function() { /* style definition for this layer */
    this._sldspec = null;

    /* Layer Type */
    this._layerType = "VECTOR";
}, {

    /**
     * @method setStyledLayerDescriptor
     * @param {Object} sld
     *
     * TODO: check type for param
     */
    setStyledLayerDescriptor: function(sld) {
        this._sldspec = sld;
    },
    /**
     * @method getStyledLayerDescriptor
     * @return {Object} sld
     *
     * TODO: check type for return value
     */
    getStyledLayerDescriptor: function() {
        return this._sldspec;
    }
}, {
    "extend": ["Oskari.mapframework.domain.AbstractLayer"]
});
define("bundles/oskari/base/domain/vectorlayer", function(){});

/**
 * @class Oskari.mapframework.domain.Map
 *
 * Represents the values of the map implementation (openlayers)
 * Map module updates this domain object before sending out MapMoveEvents using
 * the set methods.
 * Set methods dont control the map in anyway so this is not the
 * way to control the map. This is only to get map values without openlayers
 * dependency.
 */
Oskari.clazz.define('Oskari.mapframework.domain.Map',

/** 
 * @method create called automatically on construction
 * @static
 */
function() {

    // @property {Number} _centerX map longitude (float)
    this._centerX = null;

    // @property {Number} _centerY map latitude (float)
    this._centerY = null;

    // @property {Number} _zoom map zoom level (0-12)
    this._zoom = null;

    // @property {Number} _scale map scale (float)
    this._scale = null;

    // @property {OpenLayers.Bounds} _bbox map bounding box
    this._bbox = null;

    // @property {Boolean} true if marker is being shown
    this._markerVisible = null;

    // @property {Number} width map window width
    this.width = null;

    // @property {Number} height  map window height
    this.height = null;

    // @property {Number} resolution current map resolution (float)
    this.resolution = null;
    
    // @property {OpenLayers.Bounds} current map extent { left: NaN, top: NaN, right: NaN, bottom: NaN }
    this.extent = null;
    
    // @property {OpenLayers.Bounds} maximumExtent configured for the map { left: NaN, top: NaN, right: NaN, bottom: NaN }
    this.maxExtent = null;

    // @property {Boolean} _isMoving true when map is being dragged 
    this._isMoving = false;

    // @property {String} _projectionCode SRS projection code, defaults to 'EPSG:3067'
    this._projectionCode = "EPSG:3067";
}, {
    /**
     * @method moveTo
     * Sets new center and zoomlevel for map domain (NOTE: DOESN'T ACTUALLY MOVE
     * THE MAP)
     *
     * @param {Number}
     *            x
     * @param {Number}
     *            y
     * @param {Number}
     *            zoom map zoomlevel
     */
    moveTo : function(x, y, zoom) {
        this._centerX = Math.floor(x);
        this._centerY = Math.floor(y);
        this._zoom = zoom;
    },
    /**
     * @method setMoving
     * Sets true if map is moving currently
     *
     * @param {Boolean}
     *            movingBln true if map is being moved currently
     */
    setMoving : function(movingBln) {
        this._isMoving = movingBln;
    },
    /**
     * @method isMoving
     * True if map is moving currently (is being dragged)
     *
     * @return {Boolean}
     *            true if map is being moved currently
     */
    isMoving : function() {
        return this._isMoving;
    },
    /**
     * @method getX
     * Map center coordinate - longitude
     *
     * @return {Number}
     *            map center x
     */
    getX : function() {
        return this._centerX;
    },
    /**
     * @method getY
     * Map center coordinate - latitude
     *
     * @return {Number}
     *            map center y
     */
    getY : function() {
        return this._centerY;
    },
    /**
     * @method getZoom
     * Map center zoom level (0-12)
     *
     * @return {Number}
     *            map zoom level
     */
    getZoom : function() {
        return this._zoom;
    },
    /**
     * @method setScale
     * Scale in map implementation (openlayers)
     *
     * @param {Number} scale
     *            map scale(float)
     */
    setScale : function(scale) {
        this._scale = scale;
    },
    /**
     * @method getScale
     * Scale in map implementation (openlayers)
     *
     * @return {Number}
     *            map scale (float)
     */
    getScale : function() {
        return this._scale;
    },
    /**
     * @method setBbox
     * Bounding box in map implementation (openlayers)
     *
     * @param {OpenLayers.Bounds} bbox
     *            bounding box
     */
    setBbox : function(bbox) {
        this._bbox = bbox;
    },
    /**
     * @method getBbox
     * Bounding box in map implementation (openlayers)
     *
     * @return {OpenLayers.Bounds}
     *            bounding box
     */
    getBbox : function() {
        return this._bbox;
    },
    /**
     * @method setMarkerVisible
     * true if marker is shown on map
     *
     * @param {Boolean} markerVisible
     *            true if marker is shown on map
     */
    setMarkerVisible : function(markerVisible) {
        this._markerVisible = markerVisible;
    },
    /**
     * @method isMarkerVisible
     * true if marker is shown on map
     *
     * @return {Boolean}
     *            true if marker is shown on map
     */
    isMarkerVisible : function() {
        if(this._markerVisible == true) {
            return true;
        }
        return false;
    },
    /**
     * @method setWidth
     * width of map window
     *
     * @param {Number} width
     *            width
     */
    setWidth : function(width) {
        this.width = width;
    },
    /**
     * @method getWidth
     * width of map window
     *
     * @return {Number}
     *            width
     */
    getWidth : function() {
        return this.width;
    },
    /**
     * @method setHeight
     * height of map window
     *
     * @param {Number} height
     *            height
     */
    setHeight : function(height) {
        this.height = height;
    },
    /**
     * @method getHeight
     * height of map window
     *
     * @return {Number}
     *            height
     */
    getHeight : function() {
        return this.height;
    },
    /**
     * @method setResolution
     * resolution in map implementation (openlayers)
     *
     * @param {Number} r
     *            resolution (float)
     */
    setResolution : function(r) {
        this.resolution = r;
    },
    /**
     * @method getResolution
     * resolution in map implementation (openlayers)
     *
     * @return {Number}
     *            resolution (float)
     */
    getResolution : function() {
        return this.resolution;
    },
    /**
     * @method setExtent
     * Extent in map implementation (openlayers)
     *
     * @param {OpenLayers.Bounds} e
     *            extent
     */
    setExtent : function(e) {
        this.extent = e;
        /* e is this kind of oject  { left: l, top: t, right: r, bottom: b }*/;
    },
    /**
     * @method getExtent
     * Extent in map implementation (openlayers)
     *
     * @return {OpenLayers.Bounds}
     *            extent
     */
    getExtent : function() {
        return this.extent;
    },
    /**
     * @method setMaxExtent
     * Max Extent in map implementation (openlayers)
     *
     * @param {OpenLayers.Bounds} me
     *            max extent
     */
    setMaxExtent : function(me) {
        this.maxExtent = me;
        /* me is this kind of oject { left: l, top: t, right: r, bottom: b }*/;
    },
    /**
     * @method getMaxExtent
     * Max Extent in map implementation (openlayers)
     *
     * @return {OpenLayers.Bounds}
     *            max extent
     */
    getMaxExtent : function() {
        return this.maxExtent;
    },
    /**
     * @method setSrsName
     * SRS projection code in map implementation (openlayers)
     *
     * @param {String} projection
     *            _projectionCode SRS projection code
     */
    setSrsName : function(projectionCode) {
        this._projectionCode = projectionCode;
    },
    /**
     * @method getSrsName
     * SRS projection code in map implementation (openlayers)
     *
     * @return {String} 
     *            _projectionCode SRS projection code
     */
    getSrsName : function() {
        return this._projectionCode;
    }
});

define("bundles/oskari/base/domain/map", function(){});

/**
 * @class Oskari.mapframework.domain.Style
 *
 * Map Layer Style
 */
Oskari.clazz.define('Oskari.mapframework.domain.Style',

/**
 * @method create called automatically on construction
 * @static
 */
function() {
    this._name = null;
    this._title = null;
    this._legend = null;
}, {

    /**
     * @method setName
     * Sets name for the style
     *
     * @param {String} name
     *            style name
     */
    setName : function(name) {
        this._name = name
    },
    /**
     * @method getName
     * Gets name for the style
     *
     * @return {String} style name
     */
    getName : function() {
        return this._name;
    },
    /**
     * @method setTitle
     * Sets title for the style
     *
     * @param {String} title
     *            style title
     */
    setTitle : function(title) {
        this._title = title;
    },
    /**
     * @method getTitle
     * Gets title for the style
     *
     * @return {String} style title
     */
    getTitle : function() {
        return this._title;
    },
    /**
     * @method setLegend
     * Sets legendimage URL for the style
     *
     * @param {String} legend
     *            style legend
     */
    setLegend : function(legend) {
        this._legend = legend;
    },
    /**
     * @method getLegend
     * Gets legendimage URL for the style
     *
     * @return {String} style legend
     */
    getLegend : function() {
        return this._legend;
    }
});

define("bundles/oskari/base/domain/style", function(){});

/**
 * @class Oskari.mapframework.domain.Tool
 *
 * Map Layer Tool
 */
Oskari.clazz.define('Oskari.mapframework.domain.Tool',

/**
 * @method create called automatically on construction
 * @static
 */
function() {
    this._name = null;
    this._title = null;
    this._tooltip = null;
    this._iconCls = null;
    this._callback = null;
}, {

    /**
     * @method setName
     * Sets name for the tool
     *
     * @param {String} name
     *            style name
     */
    setName : function(name) {
        this._name = name
    },
    /**
     * @method getName
     * Gets name for the tool
     *
     * @return {String} style name
     */
    getName : function() {
        return this._name;
    },
    /**
     * @method setTitle
     * Sets title for the tool
     *
     * @param {String} title
     *            tool title
     */
    setTitle : function(title) {
        this._title = title;
    },
    /**
     * @method getTitle
     * Gets title for the tool
     *
     * @return {String} tool title
     */
    getTitle : function() {
        return this._title;
    },
    /**
     * @method setTooltip
     * Set tooltip for tool
     *
     * @param {String} tooltip text
     */
    setTooltip : function(tooltip) {
        this._tooltip = tooltip;
    },
    /**
     * @method getTooltip
     * Get tooltip text
     *
     * @return {String} tooltip text
     */
    getTooltip : function() {
        return this._tooltip;
    },
    /**
     * @method setIconCls
     * Set optional icon name (e.g. icon-close)
     *
     * @param {String} icon name
     */
    setIconCls : function(iconCls) {
        this._iconCls = iconCls;
    },
    /**
     * @method getIconCls
     * Get optional icon name
     *
     * @return {String} icon name
     */
    getIconCls : function() {
        return this._iconCls;
    },
    /**
     * @method setCallback
     * Sets callback definition for tool
     *
     * @param {function} callback code
     *            
     */
    setCallback : function(callback) {
        this._callback = callback
    },
    /**
     * @method getCallback
     * Get callback code for tool
     *
     * @return {function} callback definition
     */
    getCallback : function() {
        return this._callback;
    }
});

define("bundles/oskari/base/domain/tool", function(){});

/**
 * @class Oskari.mapframework.domain.User
 *
 * Contains information about a logged in user.
 * If #isLoggedIn returns true, other methods should return info about user. 
 * Otherwise the user isn't logged in and no data is available.
 */
Oskari.clazz.define('Oskari.mapframework.domain.User', 

/**
 * @method create called automatically on construction
 * @static
 * 
 * Initial data on construction with 
 * Oskari.clazz.create('Oskari.mapframework.domain.User', (here))
 * 
 * @param {Object} userData
 *            json data about the user. If undefined -> user not logged in. 
 * 			  Should have atleast name and uuid for a logged in user.
 */
function(userData) {
	
	this._loggedIn = false;
	if(userData) {
		this._firstName = userData.firstName;
		this._lastName = userData.lastName;
		this._nickName = userData.nickName;
		this._loginName = userData.loginName;
		this._uuid = userData.userUUID;
		if(userData.userUUID) {
			this._loggedIn = true;
		}
	}
}, {
    /**
     * @method getName
     * Full name for the user
     *
     * @return {String}
     *            name
     */
	getName : function() {
		return this._firstName + " " + this._lastName;
	},
    /**
     * @method getFirstName
     * First name for the user
     *
     * @return {String}
     *            first name
     */
	getFirstName : function() {
		return this._firstName;
	},
    /**
     * @method getLastName
     * Last name for the user
     *
     * @return {String}
     *            last name
     */
	getLastName : function() {
		return this._lastName;
	},
    /**
     * @method getNickName
     * Nickname for the user
     *
     * @return {String}
     *            nickname
     */
	getNickName : function() {
		return this._nickName;
	},
    /**
     * @method getLoginName
     * Loginname for the user
     *
     * @return {String}
     *            loginName
     */
	getLoginName : function() {
		return this._loginName;
	},
    /**
     * @method getUuid
     * Uuid for the user
     *
     * @return {String}
     *            uuid
     */
	getUuid : function() {
		return this._uuid;
	},
    /**
     * @method isLoggedIn
     * Returns true if user is logged in
     *
     * @return {Boolean}
     */
	isLoggedIn : function() {
		return this._loggedIn;
	}
});
define("bundles/oskari/base/domain/user", function(){});


define('bundles/oskari/base/domain/module',["oskari",
			"./AbstractLayer",
            "./wmslayer",
			"./vectorlayer",
			"./map",
			"./style",
			"./tool",
			"./user"

],function(Oskari) {
			
			
		Oskari.bundleCls('domain');
		



});

 
            
            
		
  
/**
 * @class Oskari.mapframework.request.Request
 *
 * Superclass for all Oskari requests.
 * Consider this as an abstract class and only use it by extending.
 * 
 * Requests are used to tell another part of the application to do something.
 * They can only be sent from registered Oskari.mapframework.module.Module 
 * implementations (see Oskari.mapframework.sandbox.Sandbox.register()). 
 * If you want to tell the rest of the application that something happened, 
 * use an implementation of Oskari.mapframework.event.Event instead.
 * 
 * Code snippet example to creating and sending out a request:
 * <pre>
 * // get a builder method for the requested request type.
 * var requestBuilder = sandbox.getRequestBuilder('MapMoveRequest');
 * // create the request with the builder method
 * var request = requestBuilder(longitude, latitude);
 * // send the request to the application
 * sandbox.request('MyModule', request);
 * </pre>
 * 
 * In the above sandbox is reference to Oskari.mapframework.sandbox.Sandbox.
 * 
 * Requests are listened to with classes implementing the 
 * Oskari.mapframework.core.RequestHandler protocol. 
 * There can only be one RequestHandler for a given request. 
 * Also if the core is handling a request 
 * (Oskari.mapframework.core.Core.defaultRequestHandlers) the handler 
 * cannot be overridden at the moment.
 */
Oskari.clazz.define('Oskari.mapframework.request.Request',

/**
 * @method create called automatically on construction
 * @static
 *
 * Always extend this class, never use as is.
 */
function() {
    /** @property _creator name for the functionality/bundle/module sending the
     * request */
    this._creator = null;
    throw "mapframework.request.Request should not be used";
}, {
    /**
     * @method getName
     * Interface method for all request, should return request name
     * @return {String} request name
     * @throws always override this
     */
    getName : function() {
        throw "Running default implementation of Request.getName(). implement your own!";
    },
    /**
     * @method setCreator
     * @param {String} creator name for the functionality/bundle/module sending
     * the request
     */
    setCreator : function(creator) {
        this._creator = creator;
    },
    /**
     * @method getCreator
     * @return {String} name for the functionality/bundle/module sending the
     * request
     */
    getCreator : function() {
        return this._creator;
    }
});

define("bundles/oskari/base/request/request", function(){});

/**
 * @class Oskari.mapframework.request.common.AddMapLayerRequest
 *
 * Requests for given map layer to be added on map. Opposite of 
 * Oskari.mapframework.request.common.RemoveMapLayerRequest
 * 
 * Requests are build and sent through Oskari.mapframework.sandbox.Sandbox.
 * Oskari.mapframework.request.Request superclass documents how to send one.
 */
Oskari.clazz.define('Oskari.mapframework.request.common.AddMapLayerRequest',
/**
 * @method create called automatically on construction
 * @static
 *
 * @param {String}
 *            mapLayerId id of the map layer (matching one in Oskari.mapframework.service.MapLayerService)
 * @param {Boolean}
 *            keepLayersOrder should order of layers be reserved (optional,
 * defaults to false)
 * @param {Boolean}
 *            isBasemap (optional, defaults to false)
 * @param {Boolean}
 *            isExternal (optional, not used in paikkatietoikkuna)
 */
function(mapLayerId, keepLayersOrder, isBasemap, isExternal) {

    this._creator = null;
    this._mapLayerId = mapLayerId;
    this._keepLayersOrder = (keepLayersOrder == true);
    this._isExternal = (isExternal == true);
    this._isBasemap = (isBasemap == true);
}, {
    /** @static @property __name request name */
    __name : "AddMapLayerRequest",

    /**
     * @method getName
     * @return {String} request name
     */
    getName : function() {
        return this.__name;
    },
    /**
     * @method getMapLayerId
     * @return {String} id for map layer used in Oskari.mapframework.service.MapLayerService
     */
    getMapLayerId : function() {
        return this._mapLayerId;
    },
    /**
     * @method getKeepLayersOrder
     * @return {Boolean} boolean true if we should keep the layer order
     */
    getKeepLayersOrder : function() {
        return this._keepLayersOrder;
    },
    /**
     * @method isBasemap
     * @return {Boolean} boolean true if this is a basemap
     */
    isBasemap : function() {
        return this._isBasemap;
    },
    /**
     * @method isExternal
     * @return {Boolean} true if this is an externally added layer (not found in
     * MapLayerService?)
     */
    isExternal : function() {
        return this._isExternal;
    }
}, {
    /**
     * @property {String[]} protocol array of superclasses as {String}
     * @static
     */
    'protocol' : ['Oskari.mapframework.request.Request']
});
define("bundles/oskari/base/request/common/add-map-layer-request", function(){});

/**
 * @class Oskari.mapframework.request.common.RemoveMapLayerRequest
 *
 * Requests for given map layer to be removed on map. Triggers a 
 * Oskari.mapframework.event.common.AfterMapLayerRemoveEvent.
 * Opposite of Oskari.mapframework.request.common.AddMapLayerRequest
 * 
 * Requests are build and sent through Oskari.mapframework.sandbox.Sandbox.
 * Oskari.mapframework.request.Request superclass documents how to send one.
 */
Oskari.clazz.define('Oskari.mapframework.request.common.RemoveMapLayerRequest', 
/**
 * @method create called automatically on construction
 * @static
 *
 * @param {String}
 *            mapLayerId id of the map layer (matching one in Oskari.mapframework.service.MapLayerService)
 */
function(mapLayerId) {
    this._creator = null;
    this._mapLayerId = mapLayerId;
}, {
    /** @static @property __name request name */
    __name : "RemoveMapLayerRequest",
    /**
     * @method getName
     * @return {String} request name
     */
    getName : function() {
        return this.__name;
    },
    /**
     * @method getMapLayerId
     * @return {String} id for map layer used in Oskari.mapframework.service.MapLayerService
     */
    getMapLayerId : function() {
        return this._mapLayerId;
    }
}, {
    /**
     * @property {String[]} protocol array of superclasses as {String}
     * @static
     */
    'protocol' : ['Oskari.mapframework.request.Request']
});
define("bundles/oskari/base/request/common/remove-map-layer-request", function(){});

/**
 * @class Oskari.mapframework.request.common.MapMoveRequest
 *
 * Requests for the map to move to given location and zoom level/bounds. 
 * Map sends out Oskari.mapframework.event.common.AfterMapMoveEvent after it has 
 * processed the request and the map has been moved. 
 * 
 * Requests are build and sent through Oskari.mapframework.sandbox.Sandbox.
 * Oskari.mapframework.request.Request superclass documents how to send one.
 */
Oskari.clazz.define('Oskari.mapframework.request.common.MapMoveRequest',
/**
 * @method create called automatically on construction
 * @static
 *
 * @param {Number} centerX
 *            longitude
 * @param {Number} centerY
 *            latitude
 * @param {Number/OpenLayers.Bounds} zoom (optional)
 *            zoomlevel (0-12) or OpenLayers.Bounds to zoom to. If not given the map zoom level stays as it was.
 * @param {Boolean} marker
 *            true if map should add a marker to this location (optional, defaults to false)
 */
function(centerX, centerY, zoom, marker, srsName) {
    this._creator = null;

    this._centerX = centerX;

    this._centerY = centerY;

    this._zoom = zoom;

    this._marker = marker;

    this._projectionCode = srsName;

}, {
    /** @static @property {String} __name request name */
    __name : "MapMoveRequest",

    /**
     * @method getName
     * @return {String} request name
     */
    getName : function() {
        return this.__name;
    },
    /**
     * @method getCenterX
     * @return {Number} longitude
     */
    getCenterX : function() {
        return this._centerX;
    },
    /**
     * @method getCenterY
     * @return {Number} latitude
     */
    getCenterY : function() {
        return this._centerY;
    },
    /**
     * @method getZoom
     * @return {Number/OpenLayers.Bounds} zoomlevel (0-12) or OpenLayers.Bounds
     * to zoom to
     */
    getZoom : function() {
        return this._zoom;
    },
    /**
     * @method getMarker
     * @return {Boolean} true if map should add a marker to this location
     */
    getMarker : function() {
        return this._marker;
    },
    /**
     * @method getSrsName
     * @return {String} _projectionCode SRS projection code, defaults to 'EPSG:3067'
     */
    getSrsName : function() {
        return this._projectionCode;
    }
}, {
    /**
     * @property {String[]} protocol array of superclasses as {String}
     * @static
     */
    'protocol' : ['Oskari.mapframework.request.Request']
});
define("bundles/oskari/base/request/common/map-move-request", function(){});

/**
 * @class Oskari.mapframework.request.common.ShowMapLayerInfoRequest
 *
 * Requests for additional information for the given map layer to be shown in the UI.
 * (In practice the legend image for the requested layer is shown by 
 * Oskari.mapframework.ui.module.searchservice.MetadataModule).
 * Triggers a Oskari.mapframework.event.common.AfterShowMapLayerInfoEvent
 * 
 * TODO: the request could be handled directly without the event
 * 
 * Requests are build and sent through Oskari.mapframework.sandbox.Sandbox.
 * Oskari.mapframework.request.Request superclass documents how to send one.
 */
Oskari.clazz.define('Oskari.mapframework.request.common.ShowMapLayerInfoRequest', 

/**
 * @method create called automatically on construction
 * @static
 *
 * @param {String}
 *            mapLayerId id of the map layer (matching one in Oskari.mapframework.service.MapLayerService)
 */
function(mapLayerId) {
    this._creator = null;
    this._mapLayerId = mapLayerId;
}, {
    /** @static @property __name request name */
    __name : "ShowMapLayerInfoRequest",
    /**
     * @method getName
     * @return {String} request name
     */
    getName : function() {
        return this.__name;
    },
    /**
     * @method getMapLayerId
     * @return {String} id for map layer used in Oskari.mapframework.service.MapLayerService
     */
    getMapLayerId : function() {
        return this._mapLayerId;
    }
}, {
    /**
     * @property {String[]} protocol array of superclasses as {String}
     * @static
     */
    'protocol' : ['Oskari.mapframework.request.Request']
});
define("bundles/oskari/base/request/common/show-map-layer-info-request", function(){});

/**
 * @class Oskari.mapframework.request.common.HideMapMarkerRequest
 *
 * Request for any markers shown on map to be hidden
 */
Oskari.clazz.define('Oskari.mapframework.request.common.HideMapMarkerRequest',
/**
 * @method create called automatically on construction
 * @static
 */
function() {
    this._creator = null;
}, {
    /** @static @property __name request name */
    __name : "HideMapMarkerRequest",
    /**
     * @method getName
     * @return {String} event name
     */
    getName : function() {
        return this.__name;
    }
}, {
    /**
     * @property {String[]} protocol array of superclasses as {String}
     * @static
     */
    'protocol' : ['Oskari.mapframework.request.Request']
});
define("bundles/oskari/base/request/common/hide-map-marker-request", function(){});

/**
 * @class Oskari.mapframework.request.common.CtrlKeyDownRequest
 *
 * Requests for core to handle ctrl button key press.
 * Opposite of Oskari.mapframework.request.common.CtrlKeyUpRequest
 * 
 * Requests are build and sent through Oskari.mapframework.sandbox.Sandbox.
 * Oskari.mapframework.request.Request superclass documents how to send one.
 */
Oskari.clazz.define('Oskari.mapframework.request.common.CtrlKeyDownRequest',
/**
 * @method create called automatically on construction
 * @static
 */
function() {
}, {
    /** @static @property __name request name */
    __name : "CtrlKeyDownRequest",
    /**
     * @method getName
     * @return {String} request name
     */
    getName : function() {
        return this.__name;
    }
}, {
    /**
     * @property {String[]} protocol array of superclasses as {String}
     * @static
     */
    'protocol' : ['Oskari.mapframework.request.Request']
});
define("bundles/oskari/base/request/common/ctrl-key-down-request", function(){});

/**
 * @class Oskari.mapframework.request.common.CtrlKeyUpRequest
 *
 * Requests for core to handle ctrl button key release
 * Opposite of Oskari.mapframework.request.common.CtrlKeyDownRequest
 * 
 * Requests are build and sent through Oskari.mapframework.sandbox.Sandbox.
 * Oskari.mapframework.request.Request superclass documents how to send one.
 */
Oskari.clazz.define('Oskari.mapframework.request.common.CtrlKeyUpRequest',
/**
 * @method create called automatically on construction
 * @static
 */
function() {
}, {
    /** @static @property __name request name */
    __name : "CtrlKeyUpRequest",
    /**
     * @method getName
     * @return {String} request name
     */
    getName : function() {
        return this.__name;
    }
}, {
    /**
     * @property {String[]} protocol array of superclasses as {String}
     * @static
     */
    'protocol' : ['Oskari.mapframework.request.Request']
});
define("bundles/oskari/base/request/common/ctrl-key-up-request", function(){});

/**
 * @class Oskari.mapframework.request.common.RearrangeSelectedMapLayerRequest
 *
 * Requests that the given maplayer is moved to a new position in the selected maplayers stack.
 * 
 * Requests are build and sent through Oskari.mapframework.sandbox.Sandbox.
 * Oskari.mapframework.request.Request superclass documents how to send one.
 */
Oskari.clazz.define('Oskari.mapframework.request.common.RearrangeSelectedMapLayerRequest', 

/**
 * @method create called automatically on construction
 * @static
 *
 * @param {String}
 *            mapLayerId id of map layer used in
 * Oskari.mapframework.service.MapLayerService
 * @param {Number} toPosition
 *            new position index for the layer
 */
function(mapLayerId, toPosition) {
    this._mapLayerId = mapLayerId;
    this._toPosition = toPosition;
}, {
    /** @static @property __name request name */
    __name : "RearrangeSelectedMapLayerRequest",
    /**
     * @method getName
     * @return {String} request name
     */
    getName : function() {
        return this.__name;
    },

    /**
     * @method getMapLayerId
     * id for map layer used in
     * Oskari.mapframework.service.MapLayerService
     * @return {String} 
     */
    getMapLayerId : function() {
        return this._mapLayerId;
    },

    /**
     * @method getToPosition
     * New position index for the layer
     * @return {Number}
     */
    getToPosition : function() {
        return this._toPosition;
    }
}, {
    /**
     * @property {String[]} protocol array of superclasses as {String}
     * @static
     */
    'protocol' : ['Oskari.mapframework.request.Request']
}); 
define("bundles/oskari/base/request/common/rearrange-selected-map-layer-request", function(){});

/**
 * @class Oskari.mapframework.request.common.ChangeMapLayerOpacityRequest
 * Requests opacity change for maplayer with given id
 * 
 * Requests are build and sent through Oskari.mapframework.sandbox.Sandbox.
 * Oskari.mapframework.request.Request superclass documents how to send one.
 */
Oskari.clazz.define('Oskari.mapframework.request.common.ChangeMapLayerOpacityRequest',

/**
 * @method create called automatically on construction
 * @static
 *
 * @param {String}
 *            mapLayerId id for maplayer to be modified (Oskari.mapframework.service.MapLayerService)
 * @param {Number}
 *            opacity (0-100)
 */
function(mapLayerId, opacity) {
    this._creator = null;
    this._mapLayerId = mapLayerId;

    this._opacity = opacity;

}, {
    /** @static @property __name request name */
    __name : "ChangeMapLayerOpacityRequest",
    /**
     * @method getName
     * @return {String} request name
     */
    getName : function() {
        return this.__name;
    },
    /**
     * @method getOpacity
     * @return {Number} from 0 to 100 (0 = invisible)
     */
    getOpacity : function() {
        return this._opacity;
    },
    /**
     * @method getMapLayerId
     * @return {String} id for map layer used in Oskari.mapframework.service.MapLayerService
     */
    getMapLayerId : function() {
        return this._mapLayerId;
    }
}, {
    /**
     * @property {String[]} protocol array of superclasses as {String}
     * @static
     */
    'protocol' : ['Oskari.mapframework.request.Request']
});
define("bundles/oskari/base/request/common/change-map-layer-opacity-request", function(){});

/**
 * @class Oskari.mapframework.request.common.ChangeMapLayerStyleRequest
 *
 * Changes style map layer with given id
 * 
 * Requests are build and sent through Oskari.mapframework.sandbox.Sandbox.
 * Oskari.mapframework.request.Request superclass documents how to send one.
 */
Oskari.clazz.define('Oskari.mapframework.request.common.ChangeMapLayerStyleRequest',
/**
 * @method create called automatically on construction
 * @static
 *
 * @param {String}
 *            mapLayerId id of map layer used in
 * Oskari.mapframework.service.MapLayerService
 * @param {String}
 *            style name of the new style that should be selected from map layer
 */
function(mapLayerId, style) {
    this._creator = null;
    this._mapLayerId = mapLayerId;

    this._style = style;
}, {
    /** @static @property __name request name */
    __name : "ChangeMapLayerStyleRequest",
    /**
     * @method getName
     * @return {String} request name
     */
    getName : function() {
        return this.__name;
    },
    /**
     * @method getStyle
     * @return {String} requested style name
     */
    getStyle : function() {
        return this._style;
    },
    /**
     * @method getMapLayerId
     * @return {String} id for map layer used in
     * Oskari.mapframework.service.MapLayerService
     */
    getMapLayerId : function() {
        return this._mapLayerId;
    }
}, {
    /**
     * @property {String[]} protocol array of superclasses as {String}
     * @static
     */
    'protocol' : ['Oskari.mapframework.request.Request']
});
define("bundles/oskari/base/request/common/change-map-layer-style-request", function(){});

/**
 * @class Oskari.mapframework.request.common.HighlightMapLayerRequest
 *
 * Requests for given map layer to be "highlighted" on map.
 * This means f.ex. a WMS layer to enable GetFeatureInfo clicks,
 * WFS layers to show featuretype grid and enable selection clicks on map
 * Opposite of Oskari.mapframework.request.common.DimMapLayerRequest
 * 
 * Requests are build and sent through Oskari.mapframework.sandbox.Sandbox.
 * Oskari.mapframework.request.Request superclass documents how to send one.
 */
Oskari.clazz.define('Oskari.mapframework.request.common.HighlightMapLayerRequest', 
/**
 * @method create called automatically on construction
 * @static
 *
 * @param {String}
 *            mapLayerId id of the map layer (matching one in Oskari.mapframework.service.MapLayerService)
 */
function(mapLayerId) {
    this._creator = null;
    this._mapLayerId = mapLayerId;
}, {
    /** @static @property __name request name */
    __name : "HighlightMapLayerRequest",
    /**
     * @method getName
     * @return {String} request name
     */
    getName : function() {
        return this.__name;
    },
    /**
     * @method getMapLayerId
     * @return {String} id for map layer used in Oskari.mapframework.service.MapLayerService
     */
    getMapLayerId : function() {
        return this._mapLayerId;
    }
}, {
    /**
     * @property {String[]} protocol array of superclasses as {String}
     * @static
     */
    'protocol' : ['Oskari.mapframework.request.Request']
});
define("bundles/oskari/base/request/common/highlight-map-layer-request", function(){});

/**
 * @class Oskari.mapframework.request.common.DimMapLayerRequest
 *
 * Requests for given "highlighted" map layer to be "dimmed" on map.
 * This means f.ex. a WMS layer to disable GetFeatureInfo clicks,
 * WFS layers to hide featuretype grid and disable selection clicks on map
 * Opposite of Oskari.mapframework.request.common.HighlightMapLayerRequest
 * 
 * Requests are build and sent through Oskari.mapframework.sandbox.Sandbox.
 * Oskari.mapframework.request.Request superclass documents how to send one.
 */
Oskari.clazz.define('Oskari.mapframework.request.common.DimMapLayerRequest', 

/**
 * @method create called automatically on construction
 * @static
 *
 * @param {String}
 *            mapLayerId id of the map layer (matching one in Oskari.mapframework.service.MapLayerService)
 */
function(mapLayerId) {
    this._creator = null;
    this._mapLayerId = mapLayerId;
}, {
    /** @static @property __name request name */
    __name : "DimMapLayerRequest",
    /**
     * @method getName
     * @return {String} request name
     */
    getName : function() {
        return this.__name;
    },
    /**
     * @method getMapLayerId
     * @return {String} id for map layer used in Oskari.mapframework.service.MapLayerService
     */
    getMapLayerId : function() {
        return this._mapLayerId;
    }
}, {
    /**
     * @property {String[]} protocol array of superclasses as {String}
     * @static
     */
    'protocol' : ['Oskari.mapframework.request.Request']
});
define("bundles/oskari/base/request/common/dim-map-layer-request", function(){});

define('bundles/oskari/base/request/module',["oskari", 
			"./request",
			"./common/add-map-layer-request",
			"./common/remove-map-layer-request",
			"./common/map-move-request",
			"./common/show-map-layer-info-request",
			"./common/hide-map-marker-request",
			"./common/ctrl-key-down-request",
			"./common/ctrl-key-up-request",
			"./common/rearrange-selected-map-layer-request",
			"./common/change-map-layer-opacity-request",
			"./common/change-map-layer-style-request",
			"./common/highlight-map-layer-request",
			"./common/dim-map-layer-request"],function(Oskari) {
				
				Oskari.bundleCls('request-base');
				Oskari.bundleCls('request-map');
				Oskari.bundleCls('request-map-layer');
				
				
			});

/**
 * @class Oskari.mapframework.sandbox.Sandbox
 * 
 * Sandbox is the component providing bundles ways to get information about the status of the system 
 * and communicate to other bundles using requests and events. Sandbox is created at the same time as
 * Oskari.mapframework.core.Core. Module init/start/stop methods get reference to sandbox through 
 * the Oskari Module protocol.
 */
Oskari.clazz.define('Oskari.mapframework.sandbox.Sandbox', 

/**
 * @method create called automatically on construction
 * @static
 * 
 * @param {Oskari.mapframework.core.Core} core
 */
function(core) {

    this._core = core;

    /*
     * All registered listeners in map key: event name value:
     * array of modules who are interested in this type of event
     */
    this._listeners = new Array();

    /* array of all registered modules */
    this._modules = new Array();
    this._modulesByName = {};
    this._statefuls = {};

	/* as of 2012-09-24 debug by default false */
    this.debugRequests = false;
    this.debugEvents = false;
    this.requestEventLog = [];
    this.requestEventStack = [];

    // TODO: move to some conf?
	/* as of 2012-09-24 debug by default false */
    this.gatherDebugRequests = false;
    this.maxGatheredRequestsAndEvents = 4096;
    this.requestAndEventGather = [];
    this._eventLoopGuard = 0;

    this._user = null;
    this._ajaxUrl = null;
}, {
	
	/**
	 * @method disableDebug
	 * Disables debug messaging and sequence diagram gathering
	 * if( core is set ) also core debug will be disabled
	 */
    disableDebug : function() {
        this.debugRequests = false;
        this.debugEvents = false;
        this.gatherDebugRequests = false;
        if( this._core ) {
        	this._core.disableDebug();
        }
    },
    
    /** 
     * @method enableDebug
     * Enables debug messaging and sequence diagram gathering (by default not enabled)
     * if( core is set ) also core debug will be enabled
     */
    enableDebug : function() {
        this.debugRequests = true;
        this.debugEvents = true;
        this.gatherDebugRequests = true;
        if( this._core ) {
        	this._core.enableDebug();
        }

    },

    /**
     * @method printDebug
     * Utility method for printing debug messages to browser console
     * @param {String} text - message to print
     */
    printDebug : function(text) {
        this._core.printDebug(text);
    },

    /**
     * @method printWarn
     * Utility method for printing warn messages to browser console
     * @param {String} text
     */
    printWarn : function(text) {
        /* forward warning to core */
        this._core.printWarn(text);
    },
    /**
     * @method setUser
     * 
     * Creates Oskari.mapframework.domain.User from the given data as current
     * user
     * @param {Object} userData
     *     JSON presentation of user
     */
    setUser : function(userData) {
        this._user = Oskari.clazz.create('Oskari.mapframework.domain.User', userData);
    },
    /**
     * @method getUser
     * Returns current user. See #setUser
     * 
     * @return {Oskari.mapframework.domain.User} user
     */
    getUser : function() {
        if (!this._user) {
            // init user
            this.setUser();
        }
        return this._user;
    },

    /**
     * @method setAjaxUrl
     * Sets a global Url that is used to communicate with the server
     * @param {String} pUrl
     */
    setAjaxUrl : function(pUrl) {
        this._ajaxUrl = pUrl;
    },
    /**
     * @method getAjaxUrl
     * Returns global ajax url for the application. See #setAjaxUrl
     * @return {String}
     */
    getAjaxUrl : function() {
        return this._ajaxUrl;
    },


    /**
     * @method registerService
     * Registers given service to Oskari system
     *
     * @param {Oskari.mapframework.service.Service}
     *            service service to register
     */
    registerService : function(service) {
        this._core.registerService(service);
    },
    /**
     * Method for asking a registered service
     *
     * @param {String}
     *            serviceQName that identifies the service in the core
     * @return {Oskari.mapframework.service.Service}
     */
    getService : function(type) {
        return this._core.getService(type);
    },
    /**
     * @method registerAsStateful
     * Registers given bundle instance to sandbox as stateful
     *
     * @param {String}
     *            pBundleId bundle instance id to which the state will be mapped
     * to
     * @param {Oskari.bundle.BundleInstance}
     *            pInstance reference to actual bundle instance
     */
    registerAsStateful : function(pBundleId, pInstance) {
        this._statefuls[pBundleId] = pInstance;
    },
    /**
     * @method unregisterStateful
     * Unregisters given bundle instance from stateful bundles in sandbox
     *
     * @param {String}
     *            pBundleId bundle instance id which to unregister
     */
    unregisterStateful : function(pBundleId) {
        this._statefuls[pBundleId] = null;
        delete this._statefuls[pBundleId];
    },
    /**
     * @method getStatefulComponents
     * Returns an object that has references to stateful components (see
     * #registerAsStateful).
     * The objects propertynames match the instance id and property value is
     * reference to the stateful component.
     * @return {Object}
     */
    getStatefulComponents : function() {
        return this._statefuls;
    },

    /**
     * @method register
     * Registers given module to sandbox and calls the modules init() method
     *
     * @param {Oskari.mapframework.module.Module}
     *            module
     */
    register : function(module) {
        this._modules.push(module);
        this._modulesByName[module.getName()] = module;
        return module.init(this);
    },

    /**
     * @method unregister
     * Unregisters given module from sandbox
     *
     * @param {Oskari.mapframework.module.Module}
     *            module
     */
    unregister : function(module) {
        var me = this,
            remainingModules = [],
            m;
        for (m = 0; m < me._modules.length; m++) {
            if (module === me._modules[m]) {
                continue;
            }
            remainingModules.push(me._modules[m]);
        }
        me._modules = remainingModules;
        me._modulesByName[module.getName()] = undefined;
        delete me._modulesByName[module.getName()];
    },

    /**
     * @method registerForEventByName
     * Registers given module to listen to given event
     *
     * @param {Oskari.mapframework.module.Module} module
     * @param {String} eventName
     */
    registerForEventByName : function(module, eventName) {

        this._core.printDebug("#*#*#* Sandbox is registering module '" + module.getName() + "' to event '" + eventName + "'");
        var oldListeners = this._listeners[eventName];
        if (oldListeners == null) {
            oldListeners = new Array();
            this._listeners[eventName] = oldListeners;
        }

        oldListeners.push(module);
        this._core.printDebug("There are currently " + oldListeners.length + " listeners for event '" + eventName + "'");
    },

    /**
     * @method unregisterFromEventByName
     * Unregisters given module from listening to given event
     *
     * @param {Oskari.mapframework.module.Module} module
     * @param {String} eventName
     */
    unregisterFromEventByName : function(module, eventName) {
        this._core.printDebug("Sandbox is unregistering module '" + module.getName() + "' from event '" + eventName + "'");
        var oldListeners = this._listeners[eventName],
            deleteIndex = -1,
            d;
        if (oldListeners == null) {
            // no listeners
            this._core.printDebug("Module does not listen to that event, skipping.");
            return;
        }

        for (d = 0; d < oldListeners.length; d++) {
            if (oldListeners[d] == module) {
                deleteIndex = d;
                break;
            }
        }
        if (deleteIndex > -1) {
            oldListeners.splice(deleteIndex, 1);
            this._core.printDebug("Module unregistered successfully from event");
        } else {
            this._core.printDebug("Module does not listen to that event, skipping.");
        }
    },

    /**
     * @method getRequestBuilder
     *
     * Access to request builder that creates requests by name
     * rather than by class name
     * @param {String} name request name that we are creating
     * @return {Function} builder function for given request
     */
    getRequestBuilder : function(name) {
        return this._core.getRequestBuilder(name);
    },

    /**
     * @method getEventBuilder
     *
     * Access to event builder that creates events by name
     * 
     * @param {String} name request name that we are creating
     * @return {Function} builder function for given event
     */
    getEventBuilder : function(name) {
        return this._core.getEventBuilder(name);
    },

    /**
     * @method request
     * Registered modules can request work to be done using this method
     *
     * @param {Oskari.mapframework.module.Module/String} creator
     *            that created request. This can be either actual
     *            module or the name of the module. Both are
     *            accepted.
     * @param {Oskari.mapframework.request.Request} request
     *            request to be performed
     */
    request : function(creator, request) {
        var creatorName = null,
            creatorComponent,
            rv = null;
        if (creator.getName != null) {
            creatorName = creator.getName();
        } else {
            creatorName = creator;
        }
        creatorComponent = this.findRegisteredModuleInstance(creatorName);

        if (creatorComponent == null) {
            throw "Attempt to create request with unknown component '" + creator + "' as creator";
        }

        this._core.setObjectCreator(request, creatorName);

        this.printDebug("Module '" + creatorName + "' is requesting for '" + this.getObjectName(request) + "'...");

        if (this.gatherDebugRequests) {
            this._pushRequestAndEventGather(creatorName + "->Sandbox: ", this.getObjectName(request));
        }

        this._debugPushRequest(creatorName, request);
        rv = this._core.processRequest(request);
        this._debugPopRequest();

        return rv;
    },

	/**
	 * @method requestByName
	 * Registered modules can request work to be done using this method.
	 *
	 * This is a utility to work with request names instead of constructing
	 * request objects 
	 * 
	 * @param {Oskari.mapframework.module.Module/String} creator
     *            that created request. This can be either actual
     *            module or the name of the module. Both are
     *            accepted.
     * @param {String} requestName (this is NOT the request class name)
     * @param {Array} requestArgs (optional)
     * @return {Boolean} Returns true, if request was handled, false otherwise
	 */
    requestByName : function(creator, requestName, requestArgs) {

        this.printDebug("#!#!#! --------------> requestByName " + requestName);
        var requestBuilder = this.getRequestBuilder(requestName);
        var request = requestBuilder.apply(this, requestArgs||[]);
        return this.request(creator, request);
    },

	/**
	 * @property postMasterComponent
	 * @static
	 * Used as request/event sender if creator cannot be determined
	 */
	postMasterComponent : "postmaster",
	
    /**
     * @method postRequestByName
     * 
     * This posts a request for processing. As the method doesn't require 
     * a registered bundle to be the sender of the request
     * #postMasterComponent property will be used as creator
     * 
     * NOTE! This is asynchronous - by design.
	 *
     * This attempts to loose some stack frames as well as provide
     * some yield time for the browser. 
     * 
     * @param {String} requestName (this is NOT the request class name)
     * @param {Array} requestArgs (optional)
     */
    postRequestByName : function(requestName, requestArgs) {
        var me = this,
            requestBuilder = me.getRequestBuilder(requestName);
        if(!requestBuilder) {
            return;
        }
        window.setTimeout(function() {
            
            var request = requestBuilder.apply(me, requestArgs||[]),
                creatorComponent = this.postMasterComponent,
                rv = null;
            me._core.setObjectCreator(request, creatorComponent);

            if (me.gatherDebugRequests) {
                me._pushRequestAndEventGather(creatorComponent + "->Sandbox: ", me.getObjectName(request));
            }

			if (this.debugRequests) {
	            me._debugPushRequest(creatorComponent, request);
	        }
	        
            rv = me._core.processRequest(request);
            
            if (this.debugRequests) {
            	me._debugPopRequest();
            }

        }, 0);

    },

    /**
     * @method _findModulesInterestedIn
     * Internal method for finding modules that are interested
     * in given event
     * @private 
     * @param {Oskari.mapframework.event.Event} event
     * @return {Oskari.mapframework.module.Module[]} modules listening to the event
     */
    _findModulesInterestedIn : function(event) {
        var eventName = event.getName(),
            currentListeners = this._listeners[eventName];
        if(!currentListeners) {
            return [];
        }
        return currentListeners;
    },

    /**
     * @method notifyAll
     * Finds out registered modules that are interested in given event and
     * notifies them
     *
     * @param {Oskari.mapframework.event.Event} event - event to send
     * @param {Boolean} retainEvent true to not send event but only print debug which modules are listening, usually left undefined (optional)
     */
    notifyAll : function(event, retainEvent) {

        var eventName;
        if (!retainEvent) {

            eventName = event.getName();
            this._core.printDebug("Sandbox received notifyall for event '" + eventName + "'");
        }

        var modules = this._findModulesInterestedIn(event);
        if (!retainEvent) {
            this._core.printDebug("Found " + modules.length + " interested modules");
        }
        for (var i = 0; i < modules.length; i++) {
            var module = modules[i];
            if (!retainEvent) {
                this._core.printDebug("Notifying module '" + module.getName() + "'.");

                if (this.gatherDebugRequests) {
                    this._pushRequestAndEventGather("Sandbox->" + module.getName() + ":", eventName);
                }
            }

            this._debugPushEvent(this.getObjectCreator(event), module, event);
            module.onEvent(event);
            this._debugPopEvent();
        }

        // finally clean event memory
        if (!retainEvent) {
            delete event;
        }
    },

    /**
     * @method findRegisteredModuleInstance
     * Returns module with given name if it is registered to sandbox
     *
     * @param {String} name for the module
     * @return {Oskari.mapframework.module.Module} registered module or null if not found
     */
    findRegisteredModuleInstance : function(name) {
        return this._modulesByName[name];
    },

    /**
     * @method getRequestParameter
     * Returns a request parameter from query string
     * http://javablog.info/2008/04/17/url-request-parameters-using-javascript/
     * @param {String} name - parameter name
     * @return {String} value for the parameter or null if not found
     */
    getRequestParameter : function(name) {
        return this._core.getRequestParameter(name);
    },


    /**
     * @method getBrowserWindowSize
     * Returns an object with properties width and height as the window size in pixels
     * @return {Object} object with properties width and height as the window size in pixels
     */
    getBrowserWindowSize : function() {
        // FIXME get rid of jQuery.browser and make this code sane... height isn't used for anything?
        if (jQuery.browser.opera && window.innerHeight != null) {
            var height = window.innerHeight;
        }
        var width = jQuery(window).width();

        var size = {};
        size.height = jQuery(window).height();
        size.width = width;

        this.printDebug("Got browser window size is: width: " + size.width + " px, height:" + size.height + " px.");

        return size;
    },

    /**
     * @method getObjectName
     * Returns Oskari event/request name from the event/request object
     * @param {Oskari.mapframework.request.Request/Oskari.mapframework.event.Event} obj
     * @return {String} name
     */
    getObjectName : function(obj) {
        return this._core.getObjectName(obj);
    },
    /**
     * @method getObjectCreator
     * Returns Oskari event/request creator from the event/request object
     * @param {Oskari.mapframework.request.Request/Oskari.mapframework.event.Event} obj
     * @return {String} creator
     */
    getObjectCreator : function(obj) {
        return this._core.getObjectCreator(obj);
    },
    /**
     * @method setObjectCreator
     * Sets a creator to Oskari event/request object
     * @param {Oskari.mapframework.request.Request/Oskari.mapframework.event.Event} obj
     * @param {String} creator
     */
    setObjectCreator : function(obj, creator) {
        return this._core.setObjectCreator(obj, creator);
    },
    /**
     * @method copyObjectCreatorToFrom
     * Copies creator from objFrom to objTo
     * @param {Oskari.mapframework.request.Request/Oskari.mapframework.event.Event} objTo
     * @param {Oskari.mapframework.request.Request/Oskari.mapframework.event.Event} objFrom
     */
    copyObjectCreatorToFrom : function(objTo, objFrom) {
        return this._core.copyObjectCreatorToFrom(objTo, objFrom);
    },

    /**
     * @method addRequestHandler
     * Registers a request handler for requests with the given name 
     * NOTE: only one request handler can be registered/request
     * @param {String} requestName - name of the request
     * @param {Oskari.mapframework.core.RequestHandler} handlerClsInstance request handler
     */
    addRequestHandler : function(requestName, handlerClsInstance) {
        return this._core.addRequestHandler(requestName, handlerClsInstance);
    },

    /**
     * @method removeRequestHandler
     * Unregisters a request handler for requests with the given name 
     * NOTE: only one request handler can be registered/request
     * @param {String} requestName - name of the request
     * @param {Oskari.mapframework.core.RequestHandler} handlerClsInstance request handler
     */
    removeRequestHandler : function(requestName, handlerInstance) {
        return this._core.removeRequestHandler(requestName, handlerInstance);
    },
    
    /**
     * @method _debugPushRequest
     * @private
     * Adds request to list so we can show a debugging diagram with
     * popUpSeqDiagram() method
     * 
     * @param {String} creator name for the component sending the request
     * @param {Oskari.mapframework.request.Request} req - request that was sent
     */
    _debugPushRequest : function(creator, req) {
        if (!this.debugRequests) {
            return;
        }
        var reqLog = {
            from : creator,
            reqName : req.getName()
        };
        this.requestEventStack.push(reqLog);
        this.requestEventLog.push(reqLog);
        if (this.requestEventLog.length > 64) {
            this.requestEventLog.shift();
        }
    },
    /**
     * @method _debugPopRequest
     * @private
     * Pops the request from the debugging stack
     */
    _debugPopRequest : function() {
        if (!this.debugRequests) {
            return;
        }
        this.requestEventStack.pop();
    },

    /**
     * @method _debugPushEvent
     * @private
     * Adds event to list so we can show a debugging diagram with
     * popUpSeqDiagram() method
     * 
     * @param {String} creator - name for the component sending the event
     * @param {Oskari.mapframework.module.Module} target - module that is receiving the event
     * @param {Oskari.mapframework.event.Event} evt - event that was sent
     */
    _debugPushEvent : function(creator, target, evt) {
        if (!this.debugEvents) {
            return;
        }
        this._eventLoopGuard++;

        if (this._eventLoopGuard > 64) {
            throw "Events Looped?";
        }

        var evtLog = {
            from : creator,
            to : target.getName(),
            evtName : evt.getName()
        };
        this.requestEventStack.push(evtLog);
        this.requestEventLog.push(evtLog);
        if (this.requestEventLog.length > 64) {
            this.requestEventLog.shift();
        }
    },
    
    /**
     * @method _debugPopRequest
     * @private
     * Pops the event from the debugging stack
     */
    _debugPopEvent : function() {
        if (!this.debugEvents) {
            return;
        }
        this._eventLoopGuard--;
        this.requestEventStack.pop();
    },

    /**
     * @method _pushRequestAndEventGather
     * @private
     * Adds request/event to list so we can show a debugging diagram with
     * popUpSeqDiagram() method
     * 
     * @param {String} name for the component sending the request
     * @param {Oskari.mapframework.request.Request/Oskari.mapframework.event.Event} req - request that was sent
     */
    _pushRequestAndEventGather : function(name, request) {
        var module = {};
        module.name = name;
        module.request = request;
        this.requestAndEventGather.push(module);
        if (this.requestAndEventGather.length > this.maxGatheredRequestsAndEvents) {
            this.requestAndEventGather.shift();
        }
    },
    /**
     * @method popUpSeqDiagram
     * Opens a new window containing a sequence diagram of requests and events that has been sent 
     * for debugging purposes. Uses request/event creator to be set so to get usable diagram, requests
     * should be sent from registered modules (instead of postRequestByName()). 
     * 
     * Use #enableDebug() to enable data gathering.
     * 
     * Uses www.websequencediagrams.com to create the diagram.
     */
    popUpSeqDiagram : function() {
        var seq_html = '<html><head></head><body><div class="wsd" wsd_style="modern-blue"><pre>',
            seq_commands = '',
            openedWindow;
        for (x in this.requestAndEventGather) {
            seq_commands += this.requestAndEventGather[x].name + this.requestAndEventGather[x].request + "\n";
        }
        if (seq_commands != '') {
            seq_html += seq_commands + '</pre></div><script type="text/javascript" src="http://www.websequencediagrams.com/service.js"></script></body></html>';
            openedWindow = window.open();
            openedWindow.document.write(seq_html);
            this.requestAndEventGather = [];
        } else {
            alert('No requests in queue');
        }
    },
    /**
     * @method getLocalizedProperty
     * @param property Property
     */
    getLocalizedProperty : function (property) {
        var ret;
        if (property === null || typeof property === 'undefined') {
            return null;
        }
        if (typeof property === 'object') {
            // property value is an object, so it's prolly localized
            ret = property[Oskari.getLang()];
            if (ret === null) {
                // TODO (needs supportedLocales)
                // try default lang
                // try any lang?
            }
            return ret;
        }
        // property is not localized
        return property;
    }
});

define("bundles/oskari/base/sandbox/sandbox", function(){});

/**
 * @class Oskari.mapframework.sandbox.Sandbox.keyListenerMethods
 *
 * This category class adds key listener methods to Oskari sandbox as they were in
 * the class itself.
 */
Oskari.clazz.category('Oskari.mapframework.sandbox.Sandbox', 'key-listener-methods', {
    
    /**
     * @method isCtrlKeyDown
     * Returns true if CTRL key is down
     * @return {Boolean} true if CTRL key is down
     */
    isCtrlKeyDown : function() {
        return this._core.isCtrlKeyDown();
    }
}); 
define("bundles/oskari/base/sandbox/sandbox-key-listener-methods", function(){});

/**
 * @class Oskari.mapframework.sandbox.Sandbox.mapLayerMethods
 *
 * This category class adds map layers related methods to Oskari sandbox as they
 * were in the class itself.
 */
Oskari.clazz.category('Oskari.mapframework.sandbox.Sandbox', 'map-layer-methods', {
    
    /**
     * @method findMapLayerFromAllAvailable
     * Finds map layer from all available. Uses Oskari.mapframework.service.MapLayerService.
     *
     * @param {String} id of the layer to get
     * @return {Oskari.mapframework.domain.WmsLayer/Oskari.mapframework.domain.WfsLayer/Oskari.mapframework.domain.VectorLayer/Object} 
     *  layer domain object if found matching id or null if not found
     */
    findMapLayerFromAllAvailable : function(id) {
        var layer = this._core.findMapLayerFromAllAvailable(id);
        return layer;
    },

    /**
     * @method findAllSelectedMapLayers
     * Returns all currently selected map layers
     * @return {Oskari.mapframework.domain.WmsLayer[]/Oskari.mapframework.domain.WfsLayer[]/Oskari.mapframework.domain.VectorLayer[]/Mixed}
     */
    findAllSelectedMapLayers : function() {
        var layersList = this._core.getAllSelectedLayers();
        // copy the array so changing it wont change the core data
        return layersList.slice(0);
    },

    /**
     * @method findMapLayerFromSelectedMapLayers
     * Returns the layer domain object matching the id if it is added to map
     *
     * @param {String} id of the layer to get
     * @return {Oskari.mapframework.domain.WmsLayer/Oskari.mapframework.domain.WfsLayer/Oskari.mapframework.domain.VectorLayer/Object} 
     *  layer domain object if found matching id or null if not found
     */
    findMapLayerFromSelectedMapLayers : function(layerId) {
        var layer = this._core.findMapLayerFromSelectedMapLayers(layerId);
        return layer;
    },

    /**
     * @method isLayerAlreadySelected
     * Checks if the layer matching the id is added to map
     *
     * @param {String} id of the layer to check
     * @return {Boolean} true if the layer is added to map
     */
    isLayerAlreadySelected : function(id) {
        return this._core.isLayerAlreadySelected(id);
    },

    /**
     * @method findAllHighlightedLayers
     * Returns all currently highlighted map layers
     * @return {Oskari.mapframework.domain.WmsLayer[]/Oskari.mapframework.domain.WfsLayer[]/Oskari.mapframework.domain.VectorLayer[]/Mixed}
     */
    findAllHighlightedLayers : function() {
        var layer = this._core.getAllHighlightedMapLayers();
        return layer;
    },

    /**
     * @method isMapLayerHighLighted
     * Checks if the layer matching the id is highlighted on the map
     *
     * @param {String} id of the layer to check
     * @return {Boolean} true if the layer is highlighted
     */
    isMapLayerHighLighted : function(id) {
        var highlighted = this.findAllHighlightedLayers();
        for (var i = 0; i < highlighted.length; i++) {
            if (highlighted[i].getId() == id) {
                return true;
            }
        }
        return false;
    },

    /**
     * @method allowMultipleHighlightLayers
     * Allow multiple layers to be highlighted at once
     *
     * @param {Boolean} allow - true to allow, false to restrict to one highlight at a time
     */
    allowMultipleHighlightLayers : function(allow) {
        this._core.allowMultipleHighlightLayers(allow);
    }
});

define("bundles/oskari/base/sandbox/sandbox-map-layer-methods", function(){});

/**
 * @class Oskari.mapframework.sandbox.Sandbox.mapMethods
 *
 * This category class adds map related methods to Oskari sandbox as they were in
 * the class itself.
 */
Oskari.clazz.category('Oskari.mapframework.sandbox.Sandbox', 'map-methods', {
    
    /**
     * @method getMap
     * Returns map domain object
     *
     * @return {Oskari.mapframework.domain.Map}
     */
    getMap : function() {
        return this._core.getMap();
    },

    /** 
     * 
     * @method syncMapState
     * Convenience method to send out a map move request with the values on
     * {Oskari.mapframework.domain.Map} domain object (see #getMap()).
     *
     * @param {Boolean} blnInitialMove (optional)
     * 			If true, will clear the map history after moving. Defaults to false.
     * @param {Oskari.mapframework.ui.module.common.MapModule} mapModule
     * (optional)
     * 			Refreshes the map state so that the added layers are shown correctly
     */
    syncMapState : function(blnInitialMove, mapModule) {
        var mapDomain = this._core.getMap();
        var zoom = mapDomain.getZoom();
        var marker = mapDomain.isMarkerVisible();
        if (blnInitialMove === true && zoom == 12) {
            // workaround, openlayers needs to be nudged a bit to actually draw
            // the map images if we enter at zoomlevel 12
            // so if zoom == 12 -> send a dummy request to get openlayers working
            // correctly
            // TODO: find out why OL needs this
            this._core.processRequest(this._core.getRequestBuilder('MapMoveRequest')(mapDomain.getX(), mapDomain.getY(), 0, false));
        }

        this._core.processRequest(this._core.getRequestBuilder('MapMoveRequest')(mapDomain.getX(), mapDomain.getY(), zoom, marker));
        if (blnInitialMove === true) {
            // clear history
            this._core.processRequest(this._core.getRequestBuilder('ClearHistoryRequest')());
        }
    },

    /**
     * @method generateMapLinkParameters
     * Generates query string for an URL that has the maps state with coordinates, zoom and selected map layers
     * 
     * Options syntax/supported fields:  {
     *     marker : <boolean, default false>,
     *     forceCache : <boolean, default true>,
     *     noSavedState : <boolean, default true>
     * } 
     * 
     * @param {Object} options - overrides default parameter values (optional) 
     * @return {String}
     */
    generateMapLinkParameters : function(options) {
        var mapFullComponent = this.getStatefulComponents()['mapfull'];
        if (!mapFullComponent) {
            return;
        }
        var state = mapFullComponent.getState();
        var link = 'zoomLevel=' + state['zoom'] + '&coord=' + state['east'] + '_' + state['north'] + '&mapLayers=';

        var layers = '';

        for (var i = 0; i < state['selectedLayers'].length; i++) {
            if (!state['selectedLayers'][i].hidden) {
                if (layers != '') {
                    layers += ',';
                }
                layers += state['selectedLayers'][i].id + '+' + state['selectedLayers'][i].opacity
                if (state['selectedLayers'][i].style) {
                    layers += '+' + state['selectedLayers'][i].style;
                } else {
                    layers += '+';
                }
            }
        }
        link += layers;
        if(options) {
            if(options.marker == true) {
                link += '&showMarker=true';
            }
            else {
                link += '&showMarker=false';
            }
            if(options.forceCache == false) {
                link += '&forceCache=false';
            }
            else {
                link += '&forceCache=true';
            }
            if(options.noSavedState == false) {
                link += '&noSavedState=false';
            }
            else {
                link += '&noSavedState=true';
            }
        }
        else {
            link += '&showMarker=false&forceCache=true&noSavedState=true';
        }
        return link;
    }
});

define("bundles/oskari/base/sandbox/sandbox-map-methods", function(){});

/**
 * @class Oskari.mapframework.sandbox.Sandbox.abstractionMethods
 *
 * This category class adds abstraction methods to Oskari sandbox as they were in
 * the class itself.
 */
Oskari.clazz.category('Oskari.mapframework.sandbox.Sandbox', 'abstraction-methods',
{
    /**
     * @method domSelector
     * Abstraction method for DOM selector f.ex. jQuery
     * @param {Object} argument for the concrete domSelector f. ex. jQuery
     * @return {Object} concrete domSelector return value
     */
    domSelector : function(arg) {
        return jQuery(arg);
    },
    /**
     * @method ajax
     * 
     * Abstraction method for ajax calls f.ex. jQuery.ajax
     * Makes an ajax request to url with given callbacks.
     * Detects available framework and uses it to make the call.
     * TODO: complete and data params not implemented
     * @deprecated implementation will propably change
     * 
     * @param {String} url
     *      URL to call
     * @param {Function} success
     *      callback for succesful action
     * @param {Function} failure
     *      callback for failed action
     * @param {Object} data (optional)
     *      data to post
     * @param {Function} complete - NOTE! NOT IMPLEMENTED YET
     *      callback on action completed (optional)
     */
    ajax : function(url, success, failure, data, complete) {
        // default to jQuery
        if (jQuery && jQuery.ajax) {
            // if data != null -> type = POST
            var type = "GET";
            if (data) {
                type = "POST";
            }

            jQuery.ajax({
                type : type,
                url : url,
                beforeSend : function(x) {
                    if (x && x.overrideMimeType) {
                        x.overrideMimeType("application/j-son;charset=UTF-8");
                    }
                },
                data : data,
                success : success,
                error : failure
            });

        }
        // TODO: fallback to Openlayers?
        else {
            failure();
        }
    },
	
	/**
	 * @method getDefer
	 * Abstraction method for getting a defer object from Q 
	 * or undefined Q is not available.
	 * @return {Object} Q defer or undefined if Q is not available
	 */
	getDefer : function() {
		// Use Q if available
		if (window.Q && window.Q.defer) {
			return window.Q.defer();
		} else {
			return undefined;
		}
	}
});

define("bundles/oskari/base/sandbox/sandbox-abstraction-methods", function(){});

define('bundles/oskari/base/sandbox/module',["oskari",
			"./sandbox",
			"./sandbox-key-listener-methods",
			"./sandbox-map-layer-methods",
			"./sandbox-map-methods",
		"./sandbox-abstraction-methods"], function(Oskari) {
			
			Oskari.bundleCls('sandbox-base');
			Oskari.bundleCls('sandbox-map');
			
		});

/**
 * @class Oskari.mapframework.service.Service
 * Superclass for all Oskari services.
 * Consider this as an abstract class and only use it by extending.
 */
Oskari.clazz.define('Oskari.mapframework.service.Service', 
/**
 * @method create called automatically on construction
 * @static
 *
 * Always extend this class, never use as is.
 */
function() {
    throw "mapframework.service.Service should not be used";
}, {
    /**
     * @method getName
     * @return {String}
     */
    getName : function() {
        throw "Running default implementation of Service.getName(). implement your own!";
    }
});

define("bundles/oskari/base/service/service", function(){});

/**
 * @class Oskari.mapframework.service.MapLayerService
 *
 * Handles everything MapLayer related.
 * Sends out Oskari.mapframework.event.common.MapLayerEvent
 * to notify application components when data is changed.
 */
Oskari.clazz.define('Oskari.mapframework.service.MapLayerService', 

/**
 * @method create called automatically on construction
 * @static
 * 
 * @param {String}
 *            mapLayerUrl ajax URL for map layer operations (not used atm)
 * @param {Oskari.mapframework.sandbox.Sandbox} sandbox
 *          reference to application sandbox
 */
function(mapLayerUrl, sandbox) {

    this._mapLayerUrl = mapLayerUrl;
    this._sandbox = sandbox;
    this._allLayersAjaxLoaded = false;
    this._loadedLayersList = new Array();
    // used to detect duplicate ids since looping through the list is slow
    this._reservedLayerIds = {};
    // used to keep sticky layer ids
    this._stickyLayerIds = [];

    /**
     * @property typeMapping 
     * Mapping from map-layer json "type" parameter to a class in Oskari
     * - registering these to instance instead of clazz
     */
    this.typeMapping = {
        wmslayer : 'Oskari.mapframework.domain.WmsLayer',
        vectorlayer : 'Oskari.mapframework.domain.VectorLayer'
    },

    /**
     * @property modelBuilderMapping 
     * Mapping of types to classes implementing
     *   'Oskari.mapframework.service.MapLayerServiceModelBuilder'
     * - registering these to instance instead of clazz
     */
    this.modelBuilderMapping = {

    };

}, {
    /** @static @property __qname fully qualified name for service */
    __qname : "Oskari.mapframework.service.MapLayerService",
    /**
     * @method getQName
     * @return {String} fully qualified name for service
     */
    getQName : function() {
        return this.__qname;
    },
    /** @static @property __name service name */
    __name : "MapLayerService",
    /**
     * @method getName
     * @return {String} service name
     */
    getName : function() {
        return this.__name;
    },
    /**
     * @method addLayer
     * Adds the layer to them Oskari system so it can be added to the map etc.
     * @param {Oskari.mapframework.domain.WmsLayer/Oskari.mapframework.domain.WfsLayer/Oskari.mapframework.domain.VectorLayer/Object} layerModel
     *            parsed layer model to be added (must be of type declared in #typeMapping)
     * @param {Boolean} suppressEvent (optional)
     *            true to not send event (should only be used on initial load to avoid unnecessary events)
     * @throws error if layer with the same id already exists
     */
    addLayer : function(layerModel, suppressEvent) {

        // throws exception if the id is reserved to existing maplayer
        // we need to check again here
        this.checkForDuplicateId(layerModel.getId(), layerModel.getName());
        
        this._reservedLayerIds[layerModel.getId()] = true;
        // everything ok, lets add the layer
        this._loadedLayersList.push(layerModel);

        if(suppressEvent !== true) {
            // notify components of added layer if not suppressed
            var event = this._sandbox.getEventBuilder('MapLayerEvent')(layerModel.getId(), 'add');
            this._sandbox.notifyAll(event);
        }
    },
    /**
     * @method removeLayer
     * Removes the layer from internal layerlist and
     * sends out a MapLayerEvent if it was found & removed
     * @param {String} layerId
     *            id for the layer to be removed
     * @param {Boolean} suppressEvent (optional)
     *            true to not send event (should only be used on test cases to avoid unnecessary events)
     */
    removeLayer : function(layerId, suppressEvent) {
        var layer = null;
        for(var i = 0; i < this._loadedLayersList.length; i++) {
            if(this._loadedLayersList[i].getId() == layerId) {
                layer = this._loadedLayersList[i];
                this._loadedLayersList.splice(i, 1);
                break;
            }
        }
        if(layer && suppressEvent !== true) {
            // notify components of layer removal
            var event = this._sandbox.getEventBuilder('MapLayerEvent')(layer.getId(), 'remove');
            this._sandbox.notifyAll(event);
        }
        this._reservedLayerIds[layerId] = false;
        // TODO: notify if layer not found?
    },
    /**
     * @method updateLayer
     * Updates layer in internal layerlist and
     * sends out a MapLayerEvent if it was found & modified
     *
     * @param {String} layerId
     *            id for the layer to be updated
     * @param {Object} newLayerConf
     *            json conf for the layer. NOTE! Only updates name for now
     */
    updateLayer : function(layerId, newLayerConf) {
        var layer = this.findMapLayer(layerId);
        if(layer) {
            layer.setName(newLayerConf.name);

            // notify components of layer update
            var event = this._sandbox.getEventBuilder('MapLayerEvent')(layer.getId(), 'update');
            this._sandbox.notifyAll(event);
        }
        // TODO: notify if layer not found?
    },
     /**
     * @method makeLayerSticky
     * Set layer visibility swicth off disable
     *
     * @param {String} layerId
     *            id for the layer to be set
     * @param {boolean} if true, set layer swicth off disable
     *            
     */
    makeLayerSticky : function(layerId, isSticky) {
        var layer = this.findMapLayer(layerId);
        // Get id for postprocess after map layer load
        this._stickyLayerIds.push(layerId);
        if(layer) {
            layer.setSticky(isSticky);
            // notify components of layer update
            var event = this._sandbox.getEventBuilder('MapLayerEvent')(layer.getId(), 'sticky');
            this._sandbox.notifyAll(event);
        }
        // TODO: notify if layer not found?
    },
    /**
     * @method loadAllLayersAjax
     * Loads layers JSON using the ajax URL given on #create() 
     * and parses it to internal layer objects by calling #createMapLayer() and #addLayer()
     * @param {Function} callbackSuccess method to be called when layers have been loaded succesfully
     * @param {Function} callbackFailure method to be called when something went wrong
     */
    loadAllLayersAjax : function(callbackSuccess, callbackFailure) {
        var me = this;
        jQuery.ajax({
            type : "GET",
            dataType: 'json',
            beforeSend: function(x) {
              if(x && x.overrideMimeType) {
               x.overrideMimeType("application/j-son;charset=UTF-8");
              }
             },
            url : this._mapLayerUrl,
            success : function(pResp) {
                me._loadAllLayersAjaxCallBack(pResp, callbackSuccess);
            },
            error : function(jqXHR, textStatus) {
                if(callbackFailure && jqXHR.status != 0) {
                    callbackFailure();
                }
            }
        }); 
    },
    /**
     * @method _loadAllLayersAjaxCallBack
     * Internal callback method for ajax loading in #loadAllLayersAjax()
     * @param {Object} pResp ajax response in JSON format
     * @param {Function} callbackSuccess method to be called when layers have been loaded succesfully
     * @private
     */
    _loadAllLayersAjaxCallBack : function(pResp, callbackSuccess) {
        var allLayers = pResp.layers;
        for(var i = 0; i < allLayers.length; i++) {
            
            var mapLayer = this.createMapLayer(allLayers[i]);
            if( !mapLayer ) {
            	continue;
            }	
            if(allLayers[i].admin != null) {
                mapLayer.admin = allLayers[i].admin;                
            }
            if(this._reservedLayerIds[mapLayer.getId()] !== true) {
                this.addLayer(mapLayer, true);
            }
        }
        // notify components of added layer if not suppressed
        this._allLayersAjaxLoaded = true;
        var event = this._sandbox.getEventBuilder('MapLayerEvent')(null, 'add');
        this._sandbox.notifyAll(event);
        this._resetStickyLayers();
        if(callbackSuccess) {
            callbackSuccess();
        }
    },
    
    /**
     * @method isAllLayersLoaded
     * @return {Boolean}
     */
    isAllLayersLoaded : function() {
        return this._allLayersAjaxLoaded ;
    },
    
    /**
     * @method getAllLayers
     * Returns an array of layers added to the service for example via #addLayer()
     * @return {Mixed[]/Oskari.mapframework.domain.WmsLayer[]/Oskari.mapframework.domain.WfsLayer[]/Oskari.mapframework.domain.VectorLayer[]/Object[]} 
     */
    getAllLayers : function() {
        return this._loadedLayersList;
    },
    /**
     * @method getAllLayersByMetaType
     * Returns an array of layers added to the service that have the given metatype (layer.getMetaType() === type).
     * 
     * @param {String} type
     *            metatype to filter the layers with
     * @return {Mixed[]/Oskari.mapframework.domain.WmsLayer[]/Oskari.mapframework.domain.WfsLayer[]/Oskari.mapframework.domain.VectorLayer[]/Object[]}
     */
    getAllLayersByMetaType : function(type) {
        var list = [];
        for(var i = 0; i < this._loadedLayersList.length; ++i) {
            var layer = this._loadedLayersList[i];
            if(layer.getMetaType && layer.getMetaType() === type) {
                list.push(layer);
            }
        }
        return list;
    },
    /**
     * @method registerLayerModel
     *      Register an external layer model type (to be used by extension bundles).
     * Adds a new type to #typeMapping
     * 
     * @param {String} type
     *            Mapping from map-layer json "type" parameter to a class as in #typeMapping 
     * @param {String} modelName
     *            layer model name (like 'Oskari.mapframework.domain.WmsLayer')
     */
    registerLayerModel : function(type, modelName) {
        this.typeMapping[type] = modelName;
    },
    /**
     * @method unregisterLayerModel
     *      Unregister an external layer model type (to be used by well behaving extension bundles).
     * Removes type from #typeMapping
     * 
     * @param {String} type
     *            Mapping from map-layer json "type" parameter to a class as in #typeMapping 
     */
    unregisterLayerModel : function(type) {
        this.typeMapping[type] = undefined;
    },

    /**
     * @method registerLayerModelBuilder
     *      Register a handler for an external layer model type (to be used by extension bundles).
     * Adds a new type to #modelBuilderMapping
     * 
     * @param {String} type
     *            Mapping from map-layer json "type" parameter to a class as in #typeMapping 
     * @param {Oskari.mapframework.service.MapLayerServiceModelBuilder} specHandlerClsInstance
     *            layer model handler instance
     */
    registerLayerModelBuilder : function(type, specHandlerClsInstance) {
        this._sandbox.printDebug("[MapLayerService] registering handler for type " + type);
        this.modelBuilderMapping[type] = specHandlerClsInstance;
    },
    /**
     * @method unregisterLayerModel
     *      Unregister handler for an external layer model type (to be used by well behaving extension bundles).
     * Removes handler from #modelBuilderMapping
     * 
     * @param {String} type
     *            Mapping from map-layer json "type" parameter to a class as in #typeMapping 
     */
    unregisterLayerModelBuilder : function(type) {
        this.modelBuilderMapping[type] = undefined;
    },
    /**
     * @method createMapLayer
     * 
     * Parses the given JSON Object to a MapLayer Object. The JSON must have unique id attribute 
     * and type attribute that matches a type in #typeMapping. TypeMappings can be added by bundles,
     * but they also need to register a handler for the new type with #registerLayerModelBuilder().
     * 
     * @param {Object} mapLayerJson JSON presentation of a maplayer
     * @return {Oskari.mapframework.domain.WmsLayer/Oskari.mapframework.domain.WfsLayer/Oskari.mapframework.domain.VectorLayer/Object} layerModel
     *            parsed layer model that can be added with #addLayer() (must be of type declared in #typeMapping)
     * @throws Error if json layer type is not declared in #typeMapping
     */
    createMapLayer : function(mapLayerJson) {

        var mapLayer = null;
        if(mapLayerJson.type == 'base') {
            // base map layer, create base map and its sublayers
            mapLayer = this._createGroupMapLayer(mapLayerJson, true);
        } else if(mapLayerJson.type == 'groupMap') {
            mapLayer = this._createGroupMapLayer(mapLayerJson, false);
        } else {
            // create map layer
            mapLayer = this._createActualMapLayer(mapLayerJson);
        }
        return mapLayer;
    },
    /**
     * @method _createGroupMapLayer
     * @private
     * 
     * Parses the given JSON Object to a Oskari.mapframework.domain.WmsLayer with sublayers. 
     * Called internally from #createMapLayer(). 
     * Sublayers are parsed as normal maplayers with #_createActualMapLayer(). 
     * 
     * @param {Object} mapLayerJson JSON presentation of a maplayer with sublayers
     * @param {Boolean} isBase true for baselayer (positioned in bottom on UI), false for a group layer (like base layer but is positioned like normal layers in UI)
     * @return {Oskari.mapframework.domain.WmsLayer} layerModel
     *            parsed layer model that can be added with #addLayer(). Only supports WMS layers for now.
     */
    _createGroupMapLayer : function(baseMapJson, isBase) {

        var baseLayer = Oskari.clazz.create('Oskari.mapframework.domain.WmsLayer');
        if(isBase) {
            baseLayer.setAsBaseLayer();
        } else {
            baseLayer.setAsGroupLayer();
        }

        baseLayer.setVisible(true);

        baseLayer.setId(baseMapJson.id);
        baseLayer.setName(baseMapJson.name);

        baseLayer.setMaxScale(baseMapJson.maxScale);
        baseLayer.setMinScale(baseMapJson.minScale);
        
        baseLayer.setDataUrl(baseMapJson.dataUrl);
        baseLayer.setMetadataIdentifier(baseMapJson.dataUrl_uuid);
        if( !baseLayer.getMetadataIdentifier() && baseLayer.getDataUrl() ) {
                var tempPartsForMetadata = baseLayer.getDataUrl().split("uuid=");
                if( tempPartsForMetadata.length == 2 ) {
                    baseLayer.setMetadataIdentifier(tempPartsForMetadata[1]);
                }
            }
        
        if(baseMapJson.orgName) {
            baseLayer.setOrganizationName(baseMapJson.orgName);
        }
        else {
            baseLayer.setOrganizationName("");
        }
        
        if(baseMapJson.inspire) {
            baseLayer.setInspireName(baseMapJson.inspire);
        }
        else {
            baseLayer.setInspireName("");
        }
        baseLayer.setLegendImage(baseMapJson.legendImage);
        baseLayer.setDescription(baseMapJson.info);

        baseLayer.setQueryable(false);
        
        if(baseMapJson.permissions) {
            for(var perm in baseMapJson.permissions) {
                baseLayer.addPermission(perm, baseMapJson.permissions[perm]);   
            }
        }

        for(var i = 0; i < baseMapJson.subLayer.length; i++) {
            // Notice that we are adding layers to baselayers sublayers array
            var subLayer = this._createActualMapLayer(baseMapJson.subLayer[i]);
            
            baseLayer.getSubLayers().push(subLayer);
        }
        
        // Opacity
        if(baseMapJson.opacity != null) {
            baseLayer.setOpacity(baseMapJson.opacity);
        } else if(baseLayer.getSubLayers().length > 0) {
            var subLayerOpacity = baseLayer.getSubLayers()[0].getOpacity();
            if(subLayerOpacity != null) {
                baseLayer.setOpacity(subLayerOpacity);
            }
            else {
                baseLayer.setOpacity(100);
            }
        } else {
            baseLayer.setOpacity(100);
        }


        return baseLayer;
    },
    /**
     * @method _createActualMapLayer
     * @private
     * 
     * Parses the given JSON Object to a MapLayer Object. 
     * Called internally from #createMapLayer() and #_createGroupMapLayer(). 
     * 
     * @param {Object} mapLayerJson JSON presentation of a single maplayer
     * @return {Oskari.mapframework.domain.WmsLayer/Oskari.mapframework.domain.WfsLayer/Oskari.mapframework.domain.VectorLayer/Object} layerModel
     *            parsed layer model that can be added with #addLayer()
     */
    _createActualMapLayer : function(mapLayerJson) {
        var layer = null;
        var mapLayerId = mapLayerJson.id;

        if(mapLayerJson != null) {
            if(!this.typeMapping[mapLayerJson.type]) {
                //throw "Unknown layer type '" + mapLayerJson.type + "'";
                return null;
            }
            layer = Oskari.clazz.create(this.typeMapping[mapLayerJson.type], mapLayerJson.params, mapLayerJson.options);

            //these may be implemented as jsonHandler
            if(mapLayerJson.type == 'wmslayer') {
                this._populateWmsMapLayerAdditionalData(layer, mapLayerJson);
            } else if(mapLayerJson.type == 'vectorlayer') {
                layer.setStyledLayerDescriptor(mapLayerJson.styledLayerDescriptor);
            }

            if(mapLayerJson.metaType && layer.setMetaType) {
                layer.setMetaType(mapLayerJson.metaType);
            }

            // set common map layer data
            layer.setAsNormalLayer();
            layer.setId(mapLayerId);
            layer.setName(mapLayerJson.name);
            
            if(mapLayerJson.opacity != null) {
                layer.setOpacity(mapLayerJson.opacity);
            }
            else {
                layer.setOpacity(100);
            }
            layer.setMaxScale(mapLayerJson.maxScale);
            layer.setMinScale(mapLayerJson.minScale);
            layer.setDescription(mapLayerJson.subtitle);
            layer.setQueryable(mapLayerJson.isQueryable === "true" || 
                    mapLayerJson.isQueryable === true);
            
            // metadata 
            layer.setDataUrl(mapLayerJson.dataUrl);             
            layer.setMetadataIdentifier(mapLayerJson.dataUrl_uuid);
            if( !layer.getMetadataIdentifier() && layer.getDataUrl() ) {
                var tempPartsForMetadata = layer.getDataUrl().split("uuid=");
                if( tempPartsForMetadata.length == 2 ) {
                    layer.setMetadataIdentifier(tempPartsForMetadata[1]);
                }
            }
            
            // backendstatus 
            if(mapLayerJson.backendStatus && layer.setBackendStatus) {
                layer.setBackendStatus(mapLayerJson.backendStatus);
            }
                        
            // for grouping: organisation and inspire 
            if(mapLayerJson.orgName) {
                layer.setOrganizationName(mapLayerJson.orgName);
            }
            else {
                layer.setOrganizationName("");
            }
            
            if(mapLayerJson.inspire) {
                layer.setInspireName(mapLayerJson.inspire);
            }
            else {
                layer.setInspireName("");
            }
            layer.setVisible(true);
            
            // extent  
            if(mapLayerJson.geom && layer.setGeometryWKT) {
                layer.setGeometryWKT(mapLayerJson.geom);
            }
            
            // permissions
            if(mapLayerJson.permissions) {
                for(var perm in mapLayerJson.permissions) {
                    layer.addPermission(perm, mapLayerJson.permissions[perm]);  
                }
            }

            var builder = this.modelBuilderMapping[mapLayerJson.type];
            if(builder) {
                builder.parseLayerData(layer, mapLayerJson, this);
            }

        } else {
            // sandbox.printDebug
            /*
             * console.log("[LayersService] " + "Trying to create mapLayer
             * without " + "backing JSON data - id: " +mapLayerId);
             */
        }

        return layer;
    },
    /**
     * @method _populateWmsMapLayerAdditionalData
     * 
     * Parses WMS specific data from JSON to a Oskari.mapframework.domain.WmsLayer Object
     * 
     * @private 
     * @param {Oskari.mapframework.domain.WmsLayer} layer
     * @param {Object} jsonLayer JSON presentation for a WMS layer
     * @return {Oskari.mapframework.domain.WmsLayer} returns the same layer object with populated values for convenience
     */
    _populateWmsMapLayerAdditionalData : function(layer, jsonLayer) {
        layer.setWmsName(jsonLayer.wmsName);
        if(jsonLayer.wmsUrl) {
            var wmsUrls = jsonLayer.wmsUrl.split(",");
            for(var i = 0; i < wmsUrls.length; i++) {
                layer.addWmsUrl(wmsUrls[i]);
            }
        }
        // default to enabled, only check if it is disabled
        layer.setFeatureInfoEnabled(jsonLayer.gfi !== 'disabled');
        return this._populateStyles(layer, jsonLayer);
    },
    /**
     * @method _populateStyles
     * 
     * Parses styles attribute from JSON and adds them as a 
     * Oskari.mapframework.domain.Style to the layer Object.
     * If no styles attribute is present, adds an empty 
     * dummy style and sets that as current style.
     * 
     * @private 
     * @param {Oskari.mapframework.domain.WmsLayer/Oskari.mapframework.domain.WfsLayer/Oskari.mapframework.domain.VectorLayer/Object} layerModel
     * @param {Object} jsonLayer JSON presentation for the maplayer
     * @return {Oskari.mapframework.domain.WmsLayer/Oskari.mapframework.domain.WfsLayer/Oskari.mapframework.domain.VectorLayer/Object} returns the same layer object with populated styles for convenience
     */
    _populateStyles : function(layer, jsonLayer) {

        var styleBuilder = Oskari.clazz.builder('Oskari.mapframework.domain.Style');

        if(jsonLayer.styles) {
            // has styles
            for(var i = 0; i < jsonLayer.styles.length; i++) {

                var styleJson = jsonLayer.styles;
                // TODO: can be removed if impl now returns
                // an array always so loop works properly
                var blnMultipleStyles = !(isNaN(i));
                if(blnMultipleStyles) {
                    styleJson = jsonLayer.styles[i];
                }

                var style = styleBuilder();
                style.setName(styleJson.name);
                style.setTitle(styleJson.title);
                style.setLegend(styleJson.legend);
                layer.addStyle(style);

                // only add the style once if not an array
                if(!blnMultipleStyles) {
                    break;
                }
            }

            // set the default style
            layer.selectStyle(jsonLayer.style);
        }

        // Create empty style that works as default if none available
        if(layer.getStyles().length == 0) {

            var style = styleBuilder();
            style.setName("");
            style.setTitle("");
            style.setLegend("");
            layer.addStyle(style);
            layer.selectStyle("");
        }

        layer.setLegendImage(jsonLayer.legendImage);
        
        if(jsonLayer.formats && jsonLayer.formats.value) {
            layer.setQueryFormat(jsonLayer.formats.value);
        }

        return layer;
    },
    /**
     * @method checkForDuplicateId
     * Checks that the layer we are trying to create will actually have unique
     * id inside domain. This is a must if we want our core domain logic to
     * work.
     *
     * @param {String}
     *            id we want to check against already added layers
     * @param {String}
     *            name (optional) only used for error message
     * @throws Error if layer with the given id was found
     */
    checkForDuplicateId : function(id, name) {
        
        if(this._reservedLayerIds[id] === true) {
            var foundLayer = this.findMapLayer(id);
            throw "Trying to add map layer with id '" + id + " (" + name + ")' but that id is already reserved for '" + foundLayer.getName() + "'";
        }
    },
     /**
     * @method _resetStickyLayers
     * Reset sticky layers 
     *
   
     */
    _resetStickyLayers : function() {
        
      	for (var i in this._stickyLayerIds) {
				var layerId = this._stickyLayerIds[i];
        	    this.makeLayerSticky(layerId,true);
			}
    },
    /**
     * @method findMapLayer
     * Tries to find maplayer with given id from given map layer array. Uses
     * recursion to loop through all layers and its sublayers
     *
     * @param {String}
     *            id layer id we want to find
     * @param {Array}
     *            layerList (optional) array of maplayer objects, defaults to all layers
     * @return {Oskari.mapframework.domain.WmsLayer/Oskari.mapframework.domain.WfsLayer/Oskari.mapframework.domain.VectorLayer/Object} 
     *  layerModel if found matching id or null if not found
     */
    findMapLayer : function(id, layerList) {
        if(!layerList) {
            layerList = this._loadedLayersList;
        }
        for(var i = 0; i < layerList.length; i++) {
            var layer = layerList[i];
            if(layer.getId() == id) {
                return layer;
            }

        }
        // didnt find layer from base level, try sublayers
        for(var i = 0; i < layerList.length; i++) {
            var layer = layerList[i];
            // recurse to sublayers
            var subLayers = layer.getSubLayers();
            var subLayer = this.findMapLayer(id, subLayers);
            if(subLayer != null) {
                return subLayer;
            }
        }

        return null;
    }
}, {
    /**
     * @property {String[]} protocol array of superclasses as {String}
     * @static
     */
    'protocol' : ['Oskari.mapframework.service.Service']
});
define("bundles/oskari/base/service/map-layer-service", function(){});

define('bundles/oskari/base/service/module',["oskari",
			"./service",
			"./map-layer-service"], function(Oskari) {
			
			Oskari.bundleCls('service-base');
			Oskari.bundleCls('service-map');
			
		});

define('bundles/oskari/base/module',["oskari",
"./core/module",
"./event/module",
"./domain/module",
"./request/module",
"./sandbox/module",
"./service/module"
],function(Oskari) {
});
/**
 * @class Oskari.mapping.mapmodule.AbstractMapModule
 *
 * Provides map functionality/Wraps actual map implementation (Openlayers).
 * Currently hardcoded at 13 zoomlevels (0-12) and SRS projection code 'EPSG:3067'.
 * There are plans to make these more configurable in the future.
 *
 * See http://www.oskari.org/trac/wiki/DocumentationBundleMapmodule
 */
Oskari.AbstractFunc = function() {
    var name = arguments[0];
    return function() {
        throw "AbstractFuncCalled: " + name;
    }
};
Oskari.NoOpFunc = function() {
};

Oskari.clazz.define('Oskari.mapping.mapmodule.AbstractMapModule',
/**
 * @method create called automatically on construction
 * @static
 *
 * @param {String} id
 *      Unigue ID for this map
 * @param {String} imageUrl
 *      base url for marker etc images
 * @param {Array} map options, example data:
 *  {
 *      resolutions : [2000, 1000, 500, 200, 100, 50, 20, 10, 4, 2, 1, 0.5, 0.25],
 *      maxExtent : {
 *          left : 0,
 *          bottom : 10000000,
 *          right : 10000000,
 *          top : 0
 *      },
 srsName : "EPSG:3067"
 *  }
 */
function(id, imageUrl, options) {

    this._id = id;
    this._imageUrl = imageUrl;
    this._options = options;

    this._controls = {};
    this._layerPlugins = {};

    /** @static @property {String} _projectionCode SRS projection code, defaults
     * to 'EPSG:3067' */
    this._projection = null;
    this._projectionCode = options.srsName;
    this._supportedFormats = {};

    this._map = null;

    // _mapScales are calculated based on resolutions on init
    this._mapScales = [];
    this._mapResolutions = options.resolutions;
    // arr
    this._maxExtent = options.maxExtent;
    // props: left,bottom,right, top
    this._extent = [this._maxExtent.left, this._maxExtent.bottom, this._maxExtent.right, this._maxExtent.top];
    // arr

    this._sandbox = null;
    this._stealth = false;

    this._pluginInstances = {};

    // mapcontrols assumes this to be present before init or start
    this._localization = null;

    /* array of { id: <id>, name: <name>, layer: layer, impl: layerImpl } */
    this.layerDefs = [];
    this.layerDefsById = {};
}, {
    /**
     * @method getImageUrl
     * Returns a base url for plugins to show. Can be set in constructor and
     * defaults to "/Oskari/resources" if not set.
     * @return {String}
     */
    getImageUrl : function() {
        if (!this._imageUrl) {
            // default if not set
            return "/Oskari/resources";
        }
        return this._imageUrl;
    },
    /**
     * @method getControls
     * Returns map controls - storage for controls by id. See getMapControl for getting single control.
     * @return {Object} contains control names as keys and control
     *      objects as values
     */
    getControls : function() {
        return this._controls;
    },
    /**
     * @method getMapControl
     * Returns a single map control that matches the given id/name.
     *  See getControls for getting all controls.
     * @param {String} id name of the map control
     * @return {OpenLayers.Control} control matching the id or undefined if not found
     */
    getMapControl : function(id) {
        return this._controls[id];
    },
    /**
     * @method addMapControl
     * Adds a control to the map and saves a reference so the control
     * can be accessed with getControls/getMapControl.
     * @param {String} id control id/name
     * @param {OpenLayers.Control} ctl
     */
    addMapControl : function(id, ctl) {
        this._controls[id] = ctl;
        this._addMapControlImpl(ctl);
    },
    /**
     * @method removeMapControl
     * Removes a control from the map matching the given id/name and
     * also removes it from references gotten by getControls()
     * @param {String} id control id/name
     */
    removeMapControl : function(id) {
        this._removeMapControlImpl(ctl);
        delete this._controls[id] ;        
    },
    /**
     * @method setLayerPlugin
     * Adds a plugin to the map that is responsible for rendering maplayers on the map. Other types of
     * plugins doesn't need to be registered like this.
     * Saves a reference so the plugin so it can be accessed with getLayerPlugins/getLayerPlugin.
     *
     * The plugin handling rendering a layer is responsible for calling this method and registering
     * itself as a layersplugin.
     *
     * @param {String} id plugin id/name
     * @param {Oskari.mapframework.ui.module.common.mapmodule.Plugin} plug
     */
    setLayerPlugin : function(id, plug) {
        this._layerPlugins[id] = plug;
    },
    /**
     * @method getLayerPlugin
     * Returns a single map layer plugin that matches the given id
     * See getLayerPlugins for getting all plugins.
     * See setLayerPlugin for more about layerplugins.
     * @return {Oskari.mapframework.ui.module.common.mapmodule.Plugin} plugin matching the id or undefined if not found
     */
    getLayerPlugin : function(id) {
        return this._layerPlugins[id];
    },
    /**
     * @method getControls
     * Returns plugins that have been registered as layer plugins. See setLayerPlugin for more about layerplugins.
     * See getLayerPlugin for getting single plugin.
     * @return {Object} contains plugin ids keys and plugin objects as values
     */
    getLayerPlugins : function() {
        return this._layerPlugins;
    },
    /**
     * @method clearNavigationHistory
     * Clears the internal OpenLayers.Control.NavigationHistory
     * history.
     */
    clearNavigationHistory : function() {

    },

    /**
     * @method getName
     * @return {String} the name for the component
     */
    getName : function() {
        return this._id + "MapModule";
    },
    /**
     * @method getSandbox
     * Returns reference to Oskari sandbox
     * @return {Oskari.mapframework.sandbox.Sandbox}
     */
    getSandbox : function() {
        return this._sandbox;
    },
    /**
     * @method getLocalization
     * Returns JSON presentation of bundles localization data for current
     * language.
     * If key-parameter is not given, returns the whole localization data.
     *
     * @param {String} key (optional) if given, returns the value for key
     * @param {Boolean} force (optional) true to force reload for localization data
     * @return {String/Object} returns single localization string or
     *      JSON object for complete data depending on localization
     *      structure and if parameter key is given
     */
    getLocalization : function(key, force) {
        if (!this._localization || force === true) {
            this._localization = Oskari.getLocalization('MapModule');
        }
        if (key) {
            return this._localization[key];
        }
        return this._localization;
    },

    /**
     * @method init
     * Implements Module protocol init method. Creates the OpenLayers Map.
     * @param {Oskari.mapframework.sandbox.Sandbox} sandbox
     * @return {OpenLayers.Map}
     */
    init : function(sandbox) {

        sandbox.printDebug("Initializing oskari map module...#############################################");

        this._sandbox = sandbox;

        // setting options
        if (this._options) {
            if (this._options.resolutions) {
                this._mapResolutions = this._options.resolutions;
            }
            if (this._options.srsName) {
                this._projectionCode = this._options.srsName;
                // set srsName to Oskari.mapframework.domain.Map
                if (this._sandbox) {
                    this._sandbox.getMap().setSrsName(this._projectionCode);
                }
            }
        }

        // register events & requesthandlers
        // TODO: should these be in start-method?
        for (p in this.eventHandlers ) {
            sandbox.registerForEventByName(this, p);
        }

        this.requestHandlers = {
            mapLayerUpdateHandler : Oskari.clazz.create('Oskari.mapframework.bundle.mapmodule.request.MapLayerUpdateRequestHandler', sandbox, this),
            mapMoveRequestHandler : Oskari.clazz.create('Oskari.mapping.bundle.mapmodule.request.MapMoveRequestHandler', sandbox, this)
        };
        sandbox.addRequestHandler('MapModulePlugin.MapLayerUpdateRequest', this.requestHandlers.mapLayerUpdateHandler);
        sandbox.addRequestHandler('MapMoveRequest', this.requestHandlers.mapMoveRequestHandler);
        sandbox.addRequestHandler('ClearHistoryRequest', this.requestHandlers.clearHistoryHandler);

        this._createMap();
        // changed to resolutions based map zoom levels
        // -> calculate scales array for backward compatibility
        for (var i = 0; i < this._mapResolutions.length; ++i) {
            var calculatedScale = OpenLayers.Util.getScaleFromResolution(this._mapResolutions[i], 'm');
            calculatedScale = calculatedScale * 10000;
            calculatedScale = Math.round(calculatedScale);
            calculatedScale = calculatedScale / 10000;
            this._mapScales.push(calculatedScale);
        }

        return this._map;
    },

    /**
     * @method getPluginInstances
     * Returns object containing plugins that have been registered to the map.
     * @return {Object} contains plugin ids as keys and plugin objects as values
     */
    getPluginInstances : function() {
        return this._pluginInstances;
    },
    /**
     * @method getPluginInstance
     * Returns plugin with given name if it registered on the map
     * @param {String} pluginName name of the plugin to get
     * @return {Oskari.mapframework.ui.module.common.mapmodule.Plugin}
     */
    getPluginInstance : function(pluginName) {
        return this._pluginInstances[this.getName() + pluginName];
    },
    /**
     * @method isPluginActivated
     * Checks if a plugin matching the given name is registered to the map
     * @param {String} pluginName name of the plugin to check
     * @return {Boolean} true if a plugin with given name is registered to the map
     */
    isPluginActivated : function(pluginName) {
        var plugin = this._pluginInstances[this.getName() + pluginName];
        if (plugin) {
            return true;
        }
        return false;
    },
    /**
     * @method registerPlugin
     * Registers the given plugin to this map module. Sets the mapmodule reference to the plugin and
     * calls plugins register method. Saves a reference to the plugin that can be fetched through
     * getPluginInstances().
     * @param {Oskari.mapframework.ui.module.common.mapmodule.Plugin} plugin
     */
    registerPlugin : function(plugin) {
        var sandbox = this._sandbox;
        plugin.setMapModule(this);
        var pluginName = plugin.getName();
        sandbox.printDebug('[' + this.getName() + ']' + ' Registering ' + pluginName);
        plugin.register();
        this._pluginInstances[pluginName] = plugin;
    },
    /**
     * @method unregisterPlugin
     * Unregisters the given plugin from this map module. Sets the mapmodule reference on the plugin
     * to <null> and calls plugins unregister method. Removes the reference to the plugin from
     * getPluginInstances().
     * @param {Oskari.mapframework.ui.module.common.mapmodule.Plugin} plugin
     */
    unregisterPlugin : function(plugin) {
        var sandbox = this._sandbox;
        var pluginName = plugin.getName();
        sandbox.printDebug('[' + this.getName() + ']' + ' Unregistering ' + pluginName);
        plugin.unregister();
        this._pluginInstances[pluginName] = undefined;
        plugin.setMapModule(null);
        delete this._pluginInstances[pluginName];
    },
    /**
     * @method startPlugin
     * Starts the given plugin by calling its startPlugin() method.
     * @param {Oskari.mapframework.ui.module.common.mapmodule.Plugin} plugin
     */
    startPlugin : function(plugin) {
        var sandbox = this._sandbox;
        var pluginName = plugin.getName();

        sandbox.printDebug('[' + this.getName() + ']' + ' Starting ' + pluginName);
        plugin.startPlugin(sandbox);
    },
    /**
     * @method stopPlugin
     * Stops the given plugin by calling its stopPlugin() method.
     * @param {Oskari.mapframework.ui.module.common.mapmodule.Plugin} plugin
     */
    stopPlugin : function(plugin) {
        var sandbox = this._sandbox;
        var pluginName = plugin.getName();

        sandbox.printDebug('[' + this.getName() + ']' + ' Starting ' + pluginName);
        plugin.stopPlugin(sandbox);
    },
    /**
     * @method startPlugin
     * Starts all registered plugins (see getPluginInstances() and registerPlugin()) by
     * calling its startPlugin() method.
     * @param {Oskari.mapframework.sandbox.Sandbox} sandbox
     */
    startPlugins : function(sandbox) {
        for (var pluginName in this._pluginInstances) {
            sandbox.printDebug('[' + this.getName() + ']' + ' Starting ' + pluginName);
            this._pluginInstances[pluginName].startPlugin(sandbox);
        }
    },
    /**
     * @method stopPlugins
     * Stops all registered plugins (see getPluginInstances() and registerPlugin()) by
     * calling its stopPlugin() method.
     * @param {Oskari.mapframework.sandbox.Sandbox} sandbox
     */
    stopPlugins : function(sandbox) {
        for (var pluginName in this._pluginInstances) {
            sandbox.printDebug('[' + this.getName() + ']' + ' Starting ' + pluginName);
            this._pluginInstances[pluginName].stopPlugin(sandbox);
        }
    },
    /**
     * @method getStealth
     * Returns boolean true if map is in "stealth mode". Stealth mode means that the map doesn't send events
     * and doesn't update the map domain object in sandbox
     * @return {Boolean}
     */
    getStealth : function() {
        return this._stealth;
    },
    /**
     * @method setStealth
     * Enables/disables the maps "stealth mode". Stealth mode means that the map doesn't send events
     * and doesn't update the map domain object in sandbox
     * @param {Boolean} bln true to enable stealth mode
     */
    setStealth : function(bln) {
        this._stealth = (bln == true);
    },
    /**
     * @method notifyAll
     * Calls sandbox.notifyAll with the parameters if stealth mode is not enabled
     * @param {Oskari.mapframework.event.Event} event - event to send
     * @param {Boolean} retainEvent true to not send event but only print debug which modules are listening, usually left undefined (optional)
     */
    notifyAll : function(event, retainEvent) {
        // propably not called anymore?
        if (this._stealth) {
            return;
        }

        this._sandbox.notifyAll(event, retainEvent);
    },
    /**
     * @method getMap
     * Returns a reference to the actual OpenLayers implementation
     * @return {OpenLayers.Map}
     */
    getMap : function() {
        return this._map;
    },
    /**
     * @method transformCoordinates
     * Transforms coordinates from given projection to the maps projectino.
     * @param {OpenLayers.LonLat} pLonlat
     * @param {String} srs projection for given lonlat params like "EPSG:4326"
     * @return {OpenLayers.LonLat} transformed coordinates
     */
    transformCoordinates : function(pLonlat, srs) {
        return pLonlat.transform(new OpenLayers.Projection(srs), this.getMap().getProjectionObject());
    },

    /**
     * @method getProjection
     * Returns the SRS projection code for the map.
     * Currently always 'EPSG:3067'
     * @return {String}
     */
    getProjection : function() {
        return this._projectionCode;
    },
    getProjectionObject : function() {
        return this._projection;
    },
    getResolutionArray : function() {
        return this._mapResolutions;
    },
    getExtentArray : function() {
        return this._extent;
    },

    /**
     * @method zoomIn
     * Adjusts the zoom level by one
     */
    zoomIn : function() {
        this.adjustZoomLevel(1);
    },
    /**
     * @method zoomOut
     * Adjusts the zoom level by minus one
     */
    zoomOut : function() {
        this.adjustZoomLevel(-1);
    },
    /**
     * @method zoomTo
     * Sets the zoom level to given value
     * @param {Number} zoomLevel the new zoom level
     */
    zoomTo : function(zoomLevel) {
        this.setZoomLevel(zoomLevel, false);
    },
    /**
     * @method panMapEast
     * Pans the map toward east by 3/4 of the map width
     */
    panMapEast : function() {
        var size = this.getMapSize();
        this.panMapByPixels(0.75 * size.w, 0);
    },
    /**
     * @method panMapWest
     * Pans the map toward west by 3/4 of the map width
     */
    panMapWest : function() {
        var size = this.getMapSize();
        this.panMapByPixels(-0.75 * size.w, 0);
    },
    /**
     * @method panMapNorth
     * Pans the map toward north by 3/4 of the map height
     */
    panMapNorth : function() {
        var size = this.getMapSize();
        this.panMapByPixels(0, -0.75 * size.h);
    },
    /**
     * @method panMapSouth
     * Pans the map toward south by 3/4 of the map height
     */
    panMapSouth : function() {
        var size = this.getMapSize();
        this.panMapByPixels(0, 0.75 * size.h);
    },

    /**
     * @method moveMapByPixels
     * Moves the map by given amount of pixels.
     * @param {Number} pX amount of pixels to move on x axis
     * @param {Number} pY amount of pixels to move on y axis
     * @param {Boolean} suppressStart true to NOT send an event about the map starting to move
     *  (other components wont know that the map has started moving, only use when chaining moves and
     *     wanting to notify at end of the chain for performance reasons or similar) (optional)
     * @param {Boolean} suppressEnd true to NOT send an event about the map move
     *  (other components wont know that the map has moved, only use when chaining moves and
     *     wanting to notify at end of the chain for performance reasons or similar) (optional)
     */
    moveMapByPixels : function(pX, pY, suppressStart, suppressEnd) {
        return this.panMapByPixels(pX, pY, suppressStart, suppressEnd);
    },

    /**
     * @method isValidLonLat
     * Checks that latitude is between 8 200 000 <> 6 250 000 and
     * that longitude is between 0 <> 1 350 000
     * @param {Number} lon longitude to check
     * @param {Number} lat latitude to check
     * @return {Boolean} true if coordinates are in said boundaries
     */
    isValidLonLat : function(lon, lat) {
        var isOk = true;
        if (lat < 6250000 || lat > 8200000) {
            isOk = false;
            return isOk;
        }
        if (lon < 0 || lon > 1350000) {
            isOk = false;
        }
        return isOk;
    },

    /**
     * @method getClosestZoomLevel
     * Calculate closest zoom level given the given boundaries.
     * If map is zoomed too close -> returns the closest zoom level level possible within given bounds
     * If map is zoomed too far out -> returns the furthest zoom level possible within given bounds
     * If the boundaries are within current zoomlevel or undefined, returns the current zoomLevel
     * @param {Number} maxScale maximum scale boundary (optional)
     * @param {Number} minScale minimum scale boundary (optional)
     * @return {Number} zoomLevel (0-12)
     */
    getClosestZoomLevel : function(maxScale, minScale) {
        var zoomLevel = this.getZoomLevel();

        if (!minScale || !maxScale) {
            return zoomLevel;
        }

        var scale = this.getMapScale();

        if (scale < minScale) {
            // zoom out
            //for(var i = this._mapScales.length; i > zoomLevel; i--) {
            for (var i = zoomLevel; i > 0; i--) {
                if (this._mapScales[i] >= minScale) {
                    return i;
                }
            }
        } else if (scale > maxScale) {
            // zoom in
            for (var i = zoomLevel; i < this._mapScales.length; i++) {
                if (this._mapScales[i] <= maxScale) {
                    return i;
                }
            }
        }
        return zoomLevel;
    },
    /**
     * @method start
     * implements BundleInstance protocol start method
     * Starts the plugins registered on the map and adds
     * selected layers on the map if layers were selected before
     * mapmodule was registered to listen to these events.
     * @param {Oskari.mapframework.sandbox.Sandbox} sandbox
     */
    start : function(sandbox) {

        if (this.started) {
            return;
        }

        sandbox.printDebug("Starting " + this.getName());

        this.startPlugins(sandbox);
        this.updateCurrentState();
        this.started = true;
    },
    /**
     * @method stop
     * implements BundleInstance protocol stop method
     * Stops the plugins registered on the map.
     * @param {Oskari.mapframework.sandbox.Sandbox} sandbox
     */
    stop : function(sandbox) {

        if (!this.started) {
            return;
        }

        this.stopPlugins(sandbox);
        this.started = false;
    },

    /**
     * @property eventHandlers
     * @static
     */
    eventHandlers : {
        'SearchClearedEvent' : function(event) {

        }
    },

    /**
     * @method onEvent
     * @param {Oskari.mapframework.event.Event} event a Oskari event object
     * Event is handled forwarded to correct #eventHandlers if found or discarded
     * if not.
     */
    onEvent : function(event) {
        var handler = this.eventHandlers[event.getName()];
        if (!handler) {
            return;
        }

        return handler.apply(this, [event]);
    },
    /**
     * @method getOLMapLayers
     * Returns references to OpenLayers layer objects for requested layer or null if layer is not added to map.
     * Internally calls getOLMapLayers() on all registered layersplugins.
     * @param {String} layerId
     * @return {OpenLayers.Layer[]}
     */
    getOLMapLayers : function(layerId) {
        var me = this;
        var sandbox = me._sandbox;

        var layer = sandbox.findMapLayerFromSelectedMapLayers(layerId);
        if (!layer) {
            // not found
            return null;
        }
        var lps = this.getLayerPlugins();
        // let the actual layerplugins find the layer since the name depends on
        // type

        var results = [];

        for (var p in lps) {
            var layersPlugin = lps[p];
            // find the actual openlayers layers (can be many)
            var layerList = layersPlugin.getOLMapLayers(layer);
            if (layerList) {
                // if found -> return list
                // otherwise continue looping
                for (var l = 0; l < layerList.length; l++) {
                    results.push(layerList[l]);
                }
            }
        }
        return results.length > 0 ? results : null;
    },
    /**
     * @method updateCurrentState
     * Setup layers from selected layers
     * This is needed if map layers are added before mapmodule/plugins are started.
     * Should be called only on startup, preferrably not even then
     * (workaround for timing issues).
     * If layers are already in map, this adds them twice and they cannot be
     * removed anymore by removemaplayerrequest (it should be sent twice but ui doesn't
     * offer that).
     */
    updateCurrentState : function() {

        var me = this;
        var sandbox = me._sandbox;

        var layers = sandbox.findAllSelectedMapLayers();
        var lps = this.getLayerPlugins();

        for (p in lps) {
            var layersPlugin = lps[p];

            sandbox.printDebug('preselecting ' + p);
            layersPlugin.preselectLayers(layers);
        }
    },

    /*
     * moved here to make generalization easier
     */
    getLayersByName : function(name) {
        var results = [];
        var layerDefs = this.layerDefs;
        for (var l = 0; l < layerDefs.length; l++) {

            var ldef = layerDefs[l];

            if (ldef.name.indexOf(name) != -1) {
                results.push(ldef.impl);
            }

        }

        return results;
    },

    getLayers : function() {
        return this.layerDefs;
    },

    getLayerDefs : function() {
        return this.layerDefs;
    },

    addLayer : function(layerImpl, layer, name) {
        var ldef = {
            name : name,
            id : layer.getId(),
            impl : layerImpl,
            layer : layer
        };
        this.layerDefs.push(ldef);

        this.layerDefsById[layer.getId()] = ldef;

        this._addLayerImpl(layerImpl);
    },

    removeLayer : function(layerImpl, layer, name) {

        this._removeLayerImpl(layerImpl);
        delete this.layerDefsById[layer.getId()];

        var newDefs = [];
        for (var n = 0; n < this.layerDefs.length; n++) {
            if (this.layerDefs[n].layer.getId() !== layer.getId()) {
                newDefs.push(this.layerDefs[n]);
                continue;
            }
            delete this.layerDefs[n];
        }
        this.layerDefs = newDefs;

    },

    setLayerIndex : function(layerImpl, index) {
        var layerArr = this.getLayerDefs();
        var layerIndex = this.getLayerIndex(layerImpl);
        var newLayerArr = [];
        var prevDef = layerArr[layerIndex];

        var n = 0;
        for ( n = 0; n < layerArr.length; n++) {
            if (n === index && prevDef) {
                newLayerArr.push(prevDef);
                prevDef = null;
            }
            if (!(layerArr[n].impl === layerImpl )) {
                newLayerArr.push(layerArr[n]);
            }
        }
        if (n === index && prevDef) {
            newLayerArr.push(prevDef);
        }

        this.layerDefs = newLayerArr;
        for ( n = 0; n < layerArr.length; n++) {
            this._setLayerImplIndex(layerArr[n].impl, n);
        }

    },

    getLayerIndex : function(layerImpl) {
        var layerArr = this.getLayerDefs();

        for (var n = 0; n < layerArr.length; n++) {
            if (layerArr[n].impl === layerImpl) {
                return n;
            }
        }
        return -1;

    },

    getMapScale : function() {
        var size = this.getMapSize();
        var extent = this.getMapExtent();
        var res = (extent[2] - extent[0] ) / size[0];
        return OpenLayers.Util.getScaleFromResolution(res, 'm');

    },

    getMapSize : function() {
        var mapContainer = jQuery(this._map.getContainer());
        return [mapContainer.width(), mapContainer.height()];
    },
    getMapExtent : function() {
        var bounds = this._map.getBounds();
        var bsw = bounds.getSouthWest();
        var sw = this._map2Crs(bsw.lng, bsw.lat);
        var bne = bounds.getNorthEast();
        var ne = this._map2Crs(bne.lng, bsw.lat);
        return [sw.x, sw.y, ne.x, ne.y];
    },

    /**
     * @method calculateLayerScales
     * Calculate a subset of maps scales array that matches the given boundaries.
     * If boundaries are not defined, returns all possible scales.
     * @param {Number} maxScale maximum scale boundary (optional)
     * @param {Number} minScale minimum scale boundary (optional)
     * @return {Number[]} calculated mapscales that are within given bounds
     */
    calculateLayerMinMaxResolutions : function(maxScale, minScale) {
        var minScaleZoom = undefined;
        var maxScaleZoom = undefined;
        for (var i = 0; i < this._mapScales.length; i++) {
            if ((!minScale || minScale >= this._mapScales[i]) && (!maxScale || maxScale <= this._mapScales[i])) {
                if (minScaleZoom === undefined) {
                    minScaleZoom = i;
                }
                maxScaleZoom = i;
            }
        }
        return {
            min : minScaleZoom,
            max : maxScaleZoom
        };
    },
    /**
     * @method calculateLayerScales
     * Calculate a subset of maps scales array that matches the given boundaries.
     * If boundaries are not defined, returns all possible scales.
     * @param {Number} maxScale maximum scale boundary (optional)
     * @param {Number} minScale minimum scale boundary (optional)
     * @return {Number[]} calculated mapscales that are within given bounds
     */
    calculateLayerScales : function(maxScale, minScale) {
        var layerScales = [];
        for (var i = 0; i < this._mapScales.length; i++) {
            if ((!minScale || minScale >= this._mapScales[i]) && (!maxScale || maxScale <= this._mapScales[i])) {
                layerScales.push(this._mapScales[i]);
            }
        }
        return layerScales;
    },

    /* IMPL specific */

    _crs2Map : Oskari.AbstractFunc("_crs2Map"),
    _map2Crs : Oskari.AbstractFunc("_map2Crs"),

    updateSize : Oskari.AbstractFunc("updateSize"),

    /**
     * @method createMap
     * @private
     * Creates the OpenLayers.Map object
     * @return {OpenLayers.Map}
     */
    _createMap : Oskari.AbstractFunc("_createMap"),

    /**
     * @method moveMapToLanLot
     * Moves the map to the given position.
     * NOTE! Doesn't send an event if zoom level is not changed.
     * Call notifyMoveEnd() afterwards to notify other components about changed state.
     * @param {OpenLayers.LonLat} lonlat coordinates to move the map to
     * @param {Number} zoomAdjust relative change to the zoom level f.ex -1 (optional)
     * @param {Boolean} pIsDragging true if the user is dragging the map to a new location currently (optional)
     */
    moveMapToLanLot : Oskari.AbstractFunc("moveMapToLanLot"),
    /**
     * @method panMapToLonLat
     * Pans the map to the given position.
     * @param {OpenLayers.LonLat} lonlat coordinates to pan the map to
     * @param {Boolean} suppressEnd true to NOT send an event about the map move
     *  (other components wont know that the map has moved, only use when chaining moves and
     *     wanting to notify at end of the chain for performance reasons or similar) (optional)
     */
    panMapToLonLat : Oskari.AbstractFunc("moveMapToLanLot"),
    /**
     * @method zoomToScale
     * Pans the map to the given position.
     * @param {float} scale the new scale
     * @param {Boolean} closest find the zoom level that most closely fits the specified scale.
     *   Note that this may result in a zoom that does not exactly contain the entire extent.  Default is false
     * @param {Boolean} suppressEnd true to NOT send an event about the map move
     *  (other components wont know that the map has moved, only use when chaining moves and
     *     wanting to notify at end of the chain for performance reasons or similar) (optional)
     */
    zoomToScale : Oskari.AbstractFunc("zoomToScale"),
    /**
     * @method centerMap
     * Moves the map to the given position and zoomlevel.
     * @param {OpenLayers.LonLat} lonlat coordinates to move the map to
     * @param {Number} zoomLevel absolute zoomlevel to set the map to
     * @param {Boolean} suppressEnd true to NOT send an event about the map move
     *  (other components wont know that the map has moved, only use when chaining moves and
     *     wanting to notify at end of the chain for performance reasons or similar) (optional)
     */
    centerMap : Oskari.AbstractFunc("centerMap"),
    /**
     * @method panMapByPixels
     * Pans the map by given amount of pixels.
     * @param {Number} pX amount of pixels to pan on x axis
     * @param {Number} pY amount of pixels to pan on y axis
     * @param {Boolean} suppressStart true to NOT send an event about the map starting to move
     *  (other components wont know that the map has started moving, only use when chaining moves and
     *     wanting to notify at end of the chain for performance reasons or similar) (optional)
     * @param {Boolean} suppressEnd true to NOT send an event about the map move
     *  (other components wont know that the map has moved, only use when chaining moves and
     *     wanting to notify at end of the chain for performance reasons or similar) (optional)
     * @param {Boolean} isDrag true if the user is dragging the map to a new location currently (optional)
     */
    panMapByPixels : Oskari.AbstractFunc("panMapByPixels"),

    /**
     * @method centerMapByPixels
     * Moves the map so the given pixel coordinates relative to the viewport is on the center of the view port.
     * @param {Number} pX pixel coordinates on x axis
     * @param {Number} pY pixel coordinates on y axis
     * @param {Boolean} suppressStart true to NOT send an event about the map starting to move
     *  (other components wont know that the map has started moving, only use when chaining moves and
     *     wanting to notify at end of the chain for performance reasons or similar) (optional)
     * @param {Boolean} suppressEnd true to NOT send an event about the map move
     *  (other components wont know that the map has moved, only use when chaining moves and
     *     wanting to notify at end of the chain for performance reasons or similar) (optional)
     */
    centerMapByPixels : Oskari.AbstractFunc("centerMapByPixels"),

    /**
     * @method zoomToExtent
     * Zooms the map to fit given bounds on the viewport
     * @param {OpenLayers.Bounds} bounds BoundingBox that should be visible on the viewport
     * @param {Boolean} suppressStart true to NOT send an event about the map starting to move
     *  (other components wont know that the map has started moving, only use when chaining moves and
     *     wanting to notify at end of the chain for performance reasons or similar) (optional)
     * @param {Boolean} suppressEnd true to NOT send an event about the map move
     *  (other components wont know that the map has moved, only use when chaining moves and
     *     wanting to notify at end of the chain for performance reasons or similar) (optional)
     */
    zoomToExtent : Oskari.AbstractFunc("zoomToExtent"),

    /**
     * @method setZoomLevel
     * Sets the maps zoom level to given absolute number
     * @param {Number} newZoomLevel absolute zoom level (0-12)
     * @param {Boolean} suppressEvent true to NOT send an event about the map move
     *  (other components wont know that the map has moved, only use when chaining moves and
     *     wanting to notify at end of the chain for performance reasons or similar) (optional)
     */
    setZoomLevel : Oskari.AbstractFunc("setZoomLevel"),

    /**
     * @method getZoomLevel
     * gets the maps zoom level to given absolute number
     * @return {Number} newZoomLevel absolute zoom level (0-12)
     */
    getZoomLevel : Oskari.AbstractFunc("getZoomLevel"),

    /**
     * @method _updateDomain
     * @private
     * Updates the sandbox map domain object with the current map properties.
     * Ignores the call if map is in stealth mode.
     */
    _updateDomain : Oskari.AbstractFunc("_updateDomain"),

    _addLayerImpl : Oskari.AbstractFunc("_addLayerImpl(layerImpl)"),

    _setLayerImplIndex : Oskari.AbstractFunc("_setLayerImplIndex(layerImpl,n)"),

    _removeLayerImpl : Oskari.AbstractFunc("_removeLayerImpl(layerImpl)"),

    getMapSize : Oskari.AbstractFunc("getMapSize"),
    getMapExtent : Oskari.AbstractFunc("getMapExtent"),

    _setLayerImplVisible : Oskari.AbstractFunc("_setLayerImplVisible"),

    _setLayerImplOpacity : Oskari.AbstractFunc("_setLayerImplOpacity"),

    adjustZoomLevel : Oskari.AbstractFunc("adjustZoomLevel(amount, suppressEvent)"),

    notifyMoveEnd : function() {
    },

    /**
     * @method calculateLayerResolutions
     * Calculate a subset of maps resolutions array that matches the given boundaries.
     * If boundaries are not defined, returns all possible resolutions.
     * @param {Number} maxScale maximum scale boundary (optional)
     * @param {Number} minScale minimum scale boundary (optional)
     * @return {Number[]} calculated resolutions that are within given bounds
     */
    calculateLayerResolutions : function(maxScale, minScale) {
        var layerResolutions = [];
        for (var i = 0; i < this._mapScales.length; i++) {
            if ((!minScale || minScale >= this._mapScales[i]) && (!maxScale || maxScale <= this._mapScales[i])) {
                // resolutions are in the same order as scales so just use them
                layerResolutions.push(this._options.resolutions[i]);
            }
        }
        return layerResolutions;
    },

    _addMapControlImpl : Oskari.AbstractFunc("_addMapControlImpl(ctl)"),

    _removeMapControlImpl : Oskari.AbstractFunc("_removeMapControlImpl(ctl)")

}, {
    /**
     * @property {String[]} protocol
     * @static
     */
    'protocol' : ['Oskari.mapframework.module.Module']
});

define("bundles/mapping/bundle/mapmodule-plugin/map-module", function(){});

/**
 * @class Oskari.mapframework.bundle.mapmodule.plugin.PanButtons
 * Adds on-screen pan buttons on the map. In the middle of the pan buttons is a state reset button.
 * See http://www.oskari.org/trac/wiki/DocumentationBundleMapModulePluginPanButtons
 */
Oskari.clazz.define('Oskari.mapping.mapmodule.plugin.MapPlugin',

/**
 * @method create called automatically on construction
 * @static
 */
function(config) {
    this.mapModule = null;
    this.pluginName = null;
    this._sandbox = null;
    this._map = null;
    this.__elements = {};
    this.__conf = config || {};
    this._ctl = null;
    this._el = null;

}, {
    /**
     * @method getName
     * @return {String} the name for the component
     */
    getName : function() {
        return this.pluginName;
    },
    /**
     * @method getMapModule
     * @return {Oskari.mapframework.ui.module.common.MapModule} reference
     * to map module
     */
    getMapModule : function() {
        return this.mapModule;
    },
    /**
     * @method hasUI
     * This plugin has an UI so always returns true
     * @return {Boolean} true
     */
    hasUI : function() {
        return true;

    },
    /**
     * @method setMapModule
     * @param {Oskari.mapframework.ui.module.common.MapModule} reference
     * to map module
     */
    setMapModule : function(mapModule) {
        this.mapModule = mapModule;
        if (mapModule) {
            this._map = mapModule.getMap();
            this.pluginName = mapModule.getName() + this.__name;
        }
    },
    /**
     * @method init
     * implements Module protocol init method - declares pan
     * buttons templates
     */
    init : function() {
        var me = this;

    },

    /**
     * @method register
     * mapmodule.Plugin protocol method - does nothing atm
     */
    register : function() {

    },
    /**
     * @method unregister
     * mapmodule.Plugin protocol method - does nothing atm
     */
    unregister : function() {
    },

    /**
     * @method startPlugin
     * mapmodule.Plugin protocol method.
     * Sets sandbox and registers self to sandbox. Constructs the plugin UI and displays it.
     * @param {Oskari.mapframework.sandbox.Sandbox} sandbox
     */
    startPlugin : function(sandbox) {
        this._sandbox = sandbox;
        sandbox.register(this);

        for (p in this.eventHandlers) {
            sandbox.registerForEventByName(this, p);
        }

        this._el = this.createControlEl();
        this._ctl = this.createControlAdapter(this._el);
        this.getMapModule().addMapControl(this.pluginName,this._ctl);
    },

    /**
     * @method stopPlugin
     * mapmodule.Plugin protocol method.
     * Unregisters self from sandbox and removes plugins UI from screen.
     *
     * @param {Oskari.mapframework.sandbox.Sandbox} sandbox
     */
    stopPlugin : function(sandbox) {
        if (this.__elements['panbuttons']) {
            this.__elements['panbuttons'].remove();
            delete this.__elements['panbuttons'];
        }
        this._el.clear();
        this.getMapModule().removeMapControl(this.pluginName,this._ctl);
        this._ctl = undefined;

        sandbox.unregister(this);
    },

    /**
     * @method onEvent
     * Event is handled forwarded to correct #eventHandlers if found or
     * discarded* if not.
     * @param {Oskari.mapframework.event.Event} event a Oskari event object
     */
    onEvent : function(event) {
        return this.eventHandlers[event.getName()].apply(this, [event]);
    },
    /**
     * @method start
     * Module protocol method - does nothing atm
     * @param {Oskari.mapframework.sandbox.Sandbox} sandbox
     */
    start : function(sandbox) {
    },
    /**
     * @method stop
     * Module protocol method - does nothing atm
     * @param {Oskari.mapframework.sandbox.Sandbox} sandbox
     */
    stop : function(sandbox) {
    },

    /* IMPL */

    createControlEl : function() {

    },
    createControlAdapter : function(el) {
        /* this._el.get()[0] */

    }
}, {
    /**
     * @property {String[]} protocol
     * @static
     */
    'protocol' : ["Oskari.mapframework.module.Module", "Oskari.mapframework.ui.module.common.mapmodule.Plugin"]
});

define("bundles/mapping/bundle/mapmodule-plugin/plugin/MapPlugin", function(){});

/**
 * @class Oskari.mapframework.mapmodule.WmsLayerPlugin
 * Provides functionality to draw WMS layers on the map
 */
Oskari.clazz.define('Oskari.mapping.mapmodule.plugin.MapLayerPlugin',

/**
 * @method create called automatically on construction
 * @static
 */
function() {
    this.mapModule = null;
    this.pluginName = null;
    this._sandbox = null;
    this._supportedFormats = {};

    this.tileSize = [256, 256];

}, {
    /**
     * @method getName
     * @return {String} plugin name
     */
    getName : function() {
        return this.pluginName;
    },
    /**
     * @method getMapModule
     * @return {Oskari.mapframework.ui.module.common.MapModule} reference to map
     * module
     */
    getMapModule : function() {
        return this.mapModule;
    },
    /**
     * @method setMapModule
     * @param {Oskari.mapframework.ui.module.common.MapModule} reference to map
     * module
     */
    setMapModule : function(mapModule) {
        this.mapModule = mapModule;
        this.pluginName = mapModule.getName() + this.__name;
    },
    /**
     * @method hasUI
     * This plugin doesn't have an UI that we would want to ever hide so always returns false
     * @return {Boolean}
     */
    hasUI : function() {
        return false;
    },
    /**
     * @method register
     * Interface method for the plugin protocol.
     * Registers self as a layerPlugin to mapmodule with mapmodule.setLayerPlugin()
     */
    register : function() {
        this.getMapModule().setLayerPlugin(this.getLayerTypeIdentifier(), this);
    },
    /**
     * @method unregister
     * Interface method for the plugin protocol
     * Unregisters self from mapmodules layerPlugins
     */
    unregister : function() {
        this.getMapModule().setLayerPlugin(this.getLayerTypeIdentifier(), null);
    },
    /**
     * @method init
     * Interface method for the module protocol.
     *
     * @param {Oskari.mapframework.sandbox.Sandbox} sandbox
     *          reference to application sandbox
     */
    init : function(sandbox) {
    },
    /**
     * @method startPlugin
     * Interface method for the plugin protocol.
     *
     * @param {Oskari.mapframework.sandbox.Sandbox} sandbox
     *          reference to application sandbox
     */
    startPlugin : function(sandbox) {
        this._sandbox = sandbox;

        sandbox.register(this);
        for (p in this.eventHandlers) {
            sandbox.registerForEventByName(this, p);
        }
    },
    /**
     * @method stopPlugin
     * Interface method for the plugin protocol
     *
     * @param {Oskari.mapframework.sandbox.Sandbox} sandbox
     *          reference to application sandbox
     */
    stopPlugin : function(sandbox) {

        for (p in this.eventHandlers) {
            sandbox.unregisterFromEventByName(this, p);
        }

        sandbox.unregister(this);

        this._sandbox = null;
    },
    /**
     * @method start
     * Interface method for the module protocol
     *
     * @param {Oskari.mapframework.sandbox.Sandbox} sandbox
     *          reference to application sandbox
     */
    start : function(sandbox) {
    },
    /**
     * @method stop
     * Interface method for the module protocol
     *
     * @param {Oskari.mapframework.sandbox.Sandbox} sandbox
     *          reference to application sandbox
     */
    stop : function(sandbox) {
    },
    /**
     * @property {Object} eventHandlers
     * @static
     */
    eventHandlers : {
        'AfterMapLayerAddEvent' : function(event) {
            var layer = event.getMapLayer(); 
            if (!layer.isLayerOfType(this.getLayerTypeSelector()))
                return;

            this._afterMapLayerAddEvent(event);
        },
        'AfterMapLayerRemoveEvent' : function(event) {
            var layer = event.getMapLayer();
            if (!layer.isLayerOfType(this.getLayerTypeSelector()))
                return;
            this._afterMapLayerRemoveEvent(event);
        },
        'AfterChangeMapLayerOpacityEvent' : function(event) {
            var layer = event.getMapLayer();
            if (!layer.isLayerOfType(this.getLayerTypeSelector()))
                return;
            this._afterChangeMapLayerOpacityEvent(event);
        },
        'AfterChangeMapLayerStyleEvent' : function(event) {
            var layer = event.getMapLayer();
            if (!layer.isLayerOfType(this.getLayerTypeSelector()))
                return;
            this._afterChangeMapLayerStyleEvent(event);
        }
    },

    /**
     * @method onEvent
     * Event is handled forwarded to correct #eventHandlers if found or discarded
     * if not.
     * @param {Oskari.mapframework.event.Event} event a Oskari event object
     */
    onEvent : function(event) {
        return this.eventHandlers[event.getName()].apply(this, [event]);
    },
    /**
     * @method preselectLayers
     * Adds given layers to map if of type WMS
     * @param {Oskari.mapframework.domain.WmsLayer[]} layers
     */
    preselectLayers : function(layers) {

        var sandbox = this._sandbox;
        for (var i = 0; i < layers.length; i++) {
            var layer = layers[i];
            var layerId = layer.getId();
 
            if (!layer.isLayerOfType(this.getLayerTypeSelector())) {
                continue;
            }

            sandbox.printDebug("preselecting " + layerId);
            this._addMapLayerToMap(layer, true, layer.isBaseLayer());
        }

    },
    /**
     * Handle _afterMapLayerAddEvent
     * @private
     * @param {Oskari.mapframework.event.common.AfterMapLayerAddEvent}
     *            event
     */
    _afterMapLayerAddEvent : function(event) {
        this._addMapLayerToMap(event.getMapLayer(), event.getKeepLayersOrder(), event.isBasemap());
    },
    /**
     * @method _afterMapLayerRemoveEvent
     * Handle AfterMapLayerRemoveEvent
     * @private
     * @param {Oskari.mapframework.event.common.AfterMapLayerRemoveEvent}
     *            event
     */
    _afterMapLayerRemoveEvent : function(event) {
        var layer = event.getMapLayer();

        this._removeMapLayerFromMap(layer);
    },

    /**
     * @method getOLMapLayers
     * Returns references to OpenLayers layer objects for requested layer or null if layer is not added to map.
     * @param {Oskari.mapframework.domain.WmsLayer} layer
     * @return {OpenLayers.Layer[]}
     */
    getOLMapLayers : function(layer) {

        if (!layer.isLayerOfType(this.getLayerTypeSelector())) {
            return null;
        }

        if (layer.isBaseLayer() || layer.isGroupLayer()) {
            var baseLayerId = "";
            if (layer.getSubLayers().length > 0) {
                var olLayers = [];
                for (var i = 0; i < layer.getSubLayers().length; i++) {
                    var tmpLayers = this.mapModule.getLayersByName('basemap_' + layer.getSubLayers()[i].getId());
                    olLayers.push(tmpLayers[0]);
                }
                return olLayers;
            } else {
                return this.mapModule.getLayersByName('layer_' + layer.getId());
            }
        } else {
            return this.mapModule.getLayersByName('layer_' + layer.getId());
        }
        return null;
    },

    /* Inherited classes must implement (at least) following methods */

    /* To Be Overwritten by implementing class - one of WMS, WMTS ....*/
    getLayerTypeSelector : function() {
        return undefined;
    },

    /* To Be Overwritten by implementing class - one of wmslayer, wmtslayer ....*/
    getLayerTypeIdentifier : function() {
        return undefined;
    },
    /**
     * @method _addMapLayerToMap
     * @private
     * Adds a single WMS layer to this map
     * @param {Oskari.mapframework.domain.WmsLayer} layer
     * @param {Boolean} keepLayerOnTop
     * @param {Boolean} isBaseMap
     */
    _addMapLayerToMap : function(layer, keepLayerOnTop, isBaseMap) {

    },

    /**
     * @method _afterMapLayerRemoveEvent
     * Removes the layer from the map
     * @private
     * @param {Oskari.mapframework.domain.WmsLayer} layer
     */
    _removeMapLayerFromMap : function(layer) {

    },

    /**
     * @method _afterChangeMapLayerOpacityEvent
     * Handle AfterChangeMapLayerOpacityEvent
     * @private
     * @param {Oskari.mapframework.event.common.AfterChangeMapLayerOpacityEvent}
     *            event
     */
    _afterChangeMapLayerOpacityEvent : function(event) {

    },
    /**
     * Handle AfterChangeMapLayerStyleEvent
     * @private
     * @param {Oskari.mapframework.event.common.AfterChangeMapLayerStyleEvent}
     *            event
     */
    _afterChangeMapLayerStyleEvent : function(event) {

    },
    
    /** @static @property __name plugin name */
    __name : 'OVERRIDETHIS',
}, {
    /**
     * @property {String[]} protocol array of superclasses as {String}
     * @static
     */
    'protocol' : ["Oskari.mapframework.module.Module", "Oskari.mapframework.ui.module.common.mapmodule.Plugin"]
});

define("bundles/mapping/bundle/mapmodule-plugin/plugin/MapLayerPlugin", function(){});

/**
 * @class Oskari.mapframework.bundle.mapmodule.plugin.PanButtons
 * Adds on-screen pan buttons on the map. In the middle of the pan buttons is a state reset button.
 * See http://www.oskari.org/trac/wiki/DocumentationBundleMapModulePluginPanButtons
 */
Oskari.clazz.define('Oskari.mapping.mapmodule.plugin.PanButtons',

/**
 * @method create called automatically on construction
 * @static
 */
function(config) {
    this.mapModule = null;
    this.pluginName = null;
    this._sandbox = null;
    this._map = null;
    this.__conf = config || {};

}, {
    /**
     * @static
     * @property __name
     */
    __name : 'PanButtons',

    createControlAdapter : function(el) {
        /*var elPanBtn = el.get()[0];
         var ctl = new ol.control.Control({
         element : elPanBtn
         });
         ctl.handleMapPostrender = function() {

         };
         return ctl;*/
    },

    createControlEl : function() {
        var me = this;
        var ppid = (new Date()).getTime() + "";
        var pb = jQuery('<div style="position:absolute" class="panbuttonDiv">' + '<div>' + '  <img class="panbuttonDivImg" usemap="#panbuttons_' + ppid + '">' + '    <map name="panbuttons_' + ppid + '">' +
        // center
        '      <area shape="circle" ' + 'class="panbuttons_center" ' + 'coords="45,45,20" href="#">' +
        // left
        '      <area shape="polygon" ' + 'class="panbuttons_left" ' + 'coords="13,20,25,30,20,45,27,65,13,70,5,45" ' + 'href="#">' +
        // up
        '      <area shape="polygon" ' + 'class="panbuttons_up" ' + 'coords="30,8,45,4,60,8,60,23,45,20,30,23" ' + 'href="#">' +
        //right
        '      <area shape="polygon" ' + 'class="panbuttons_right" ' + 'coords="79,20,67,30,72,45,65,65,79,70,87,45" ' + 'href="#">' +
        // down
        '      <area shape="polygon" ' + 'class="panbuttons_down" ' + 'coords="30,82,45,86,60,82,60,68,45,70,30,68" ' + 'href="#">' + '    </map>' + '  </img>' + '</div>' + '</div>');

        // override default location if configured
        if (me.__conf && me.__conf.location) {
            if (me.__conf.location.top) {
                pb.css('bottom', 'auto');
                pb.css('top', me.__conf.location.top);
            }
            if (me.__conf.location.left) {
                pb.css('right', 'auto');
                pb.css('left', me.__conf.location.left);
            }
            if (me.__conf.location.right) {
                pb.css('left', 'auto');
                pb.css('right', me.__conf.location.right);
            }
            if (me.__conf.location.bottom) {
                pb.css('top', 'auto');
                pb.css('bottom', me.__conf.location.bottom);
            }
        }

        var pbimg = this.getMapModule().getImageUrl() + '/framework/bundle/mapmodule-plugin/plugin/panbuttons/images/';
        var panbuttonDivImg = pb.find('.panbuttonDivImg');
        // update path from config
        panbuttonDivImg.attr('src', pbimg + "empty.png");

        var center = pb.find('.panbuttons_center');

        center.bind('mouseover', function(event) {
            //panbuttonDivImg.attr('src', pbimg + 'root.png');
            panbuttonDivImg.addClass("root");
        });
        center.bind('mouseout', function(event) {
            //panbuttonDivImg.attr('src', pbimg + 'default.png');
            panbuttonDivImg.removeClass("root");
        });
        center.bind('click', function(event) {
            var rn = 'StateHandler.SetStateRequest';
            var mm = me.getMapModule();
            var sb = mm.getSandbox();
            var rb = sb.getRequestBuilder(rn);
            if (rb) {
                sb.request(me, rb());
            }
        });

        var left = pb.find('.panbuttons_left');
        left.bind('mouseover', function(event) {
            //panbuttonDivImg.attr('src', pbimg + 'left.png');
            panbuttonDivImg.addClass("left");
        });
        left.bind('mouseout', function(event) {
            //panbuttonDivImg.attr('src', pbimg + 'default.png');
            panbuttonDivImg.removeClass("left");
        });
        left.bind('click', function(event) {
            me.getMapModule().panMapByPixels(-100, 0, true);
        });

        var right = pb.find('.panbuttons_right');
        right.bind('mouseover', function(event) {
            //panbuttonDivImg.attr('src', pbimg + 'right.png');
            panbuttonDivImg.addClass("right");
        });
        right.bind('mouseout', function(event) {
            //panbuttonDivImg.attr('src', pbimg + 'default.png');
            panbuttonDivImg.removeClass("right");
        });
        right.bind('click', function(event) {
            me.getMapModule().panMapByPixels(100, 0, true);
        });

        var top = pb.find('.panbuttons_up');
        top.bind('mouseover', function(event) {
            //panbuttonDivImg.attr('src', pbimg + 'up.png');
            panbuttonDivImg.addClass("up");
        });
        top.bind('mouseout', function(event) {
            //panbuttonDivImg.attr('src', pbimg + 'default.png');
            panbuttonDivImg.removeClass("up");
        });
        top.bind('click', function(event) {
            me.getMapModule().panMapByPixels(0, -100, true);
        });

        var bottom = pb.find('.panbuttons_down');
        bottom.bind('mouseover', function(event) {
            //panbuttonDivImg.attr('src', pbimg + 'down.png');
            panbuttonDivImg.addClass("down");
        });
        bottom.bind('mouseout', function(event) {
            //panbuttonDivImg.attr('src', pbimg + 'default.png');
            panbuttonDivImg.removeClass("down");
        });
        bottom.bind('click', function(event) {
            me.getMapModule().panMapByPixels(0, 100, true);
        });

        return pb;
    }
}, {
    /**
     * @property {String[]} protocol
     * @static
     */
    'protocol' : ["Oskari.mapframework.module.Module", "Oskari.mapframework.ui.module.common.mapmodule.Plugin"],
    "extend" : ["Oskari.mapping.mapmodule.plugin.MapPlugin"]
});

define("bundles/mapping/bundle/mapmodule-plugin/plugin/panbuttons/PanButtons", function(){});

/**
 * @class Oskari.mapframework.bundle.mapmodule.plugin.LayersPlugin
 *
 * This is a plugin to bring more functionality for the mapmodules map
 * implementation. It provides handling for rearranging layer order and
 * controlling layer visibility. Provides information to other bundles if a layer
 * becomes visible/invisible (out of scale/out of content geometry) and request handlers
 * to move map to location/scale based on layer content. Also optimizes openlayers maplayers
 * visibility setting if it detects that content is not in the viewport.
 */
Oskari.clazz.define('Oskari.mapping.mapmodule.plugin.LayersPlugin',
/**
 * @method create called automatically on construction
 * @static
 */
function() {
    this.mapModule = null;
    this.pluginName = null;
    this._sandbox = null;
    
    this._supportedFormats = {};
    // visibility checks are cpu intensive so only make them when the map has
    // stopped moving
    // after map move stopped -> activate a timer that will
    // do the check after _visibilityPollingInterval milliseconds
    this._visibilityPollingInterval = 1500;
    this._visibilityCheckOrder = 0;
    this._previousTimer = null;
}, {
    /** @static @property __name module name */
    __name : 'LayersPlugin',

    /**
     * @method getName
     * @return {String} module name
     */
    getName : function() {
        return this.pluginName;
    },
    /**
     * @method getMapModule
     * Returns reference to map module this plugin is registered to
     * @return {Oskari.mapframework.ui.module.common.MapModule} 
     */
    getMapModule : function() {
        return this.mapModule;
    },
    /**
     * @method setMapModule
     * @param {Oskari.mapframework.ui.module.common.MapModule} reference to map
     * module
     */
    setMapModule : function(mapModule) {
        this.mapModule = mapModule;
        this.pluginName = mapModule.getName() + this.__name;
    },
    /**
     * @method hasUI
     * This plugin doesn't have an UI so always returns false
     * @return {Boolean}
     */
    hasUI : function() {
        return false;
    },
    /**
     * @method getMap
     * @return {OpenLayers.Map} reference to map implementation
     */
    /**
     * @method register
     * Interface method for the module protocol
     */
    register : function() {
    },
    /**
     * @method unregister
     * Interface method for the module protocol
     */
    unregister : function() {
    },
    /**
     * @method init
     *
     * Interface method for the module protocol. Initializes the request
     * handlers.
     *
     * @param {Oskari.mapframework.sandbox.Sandbox} sandbox
     * 			reference to application sandbox
     */
    init : function(sandbox) {
        this.requestHandlers = {
            layerVisibilityHandler : Oskari.clazz.create('Oskari.mapping.bundle.mapmodule.request.MapLayerVisibilityRequestHandler', sandbox, this),
            layerContentHandler : Oskari.clazz.create('Oskari.mapframework.bundle.mapmodule.request.MapMoveByLayerContentRequestHandler', sandbox, this)
        };
    },
    /**
     * @method startPlugin
     *
     * Interface method for the plugin protocol. Registers requesthandlers and
     * eventlisteners.
     *
     * @param {Oskari.mapframework.sandbox.Sandbox} sandbox
     * 			reference to application sandbox
     */
    startPlugin : function(sandbox) {
        this._sandbox = sandbox;
        
        sandbox.register(this);
        for(p in this.eventHandlers) {
            sandbox.registerForEventByName(this, p);
        }
        sandbox.addRequestHandler('MapModulePlugin.MapLayerVisibilityRequest', this.requestHandlers.layerVisibilityHandler);
        sandbox.addRequestHandler('MapModulePlugin.MapMoveByLayerContentRequest', this.requestHandlers.layerContentHandler);

    },
    /**
     * @method stopPlugin
     *
     * Interface method for the plugin protocol. Unregisters requesthandlers and
     * eventlisteners.
     *
     * @param {Oskari.mapframework.sandbox.Sandbox} sandbox
     * 			reference to application sandbox
     */
    stopPlugin : function(sandbox) {

        sandbox.removeRequestHandler('MapModulePlugin.MapLayerVisibilityRequest', this.requestHandlers.layerVisibilityHandler);
        sandbox.removeRequestHandler('MapModulePlugin.MapMoveByLayerContentRequest', this.requestHandlers.layerContentHandler);
        for(p in this.eventHandlers) {
            sandbox.unregisterFromEventByName(this, p);
        }

        sandbox.unregister(this);

        
        this._sandbox = null;
    },
    /**
     * @method start
     *
     * Interface method for the module protocol
     *
     * @param {Oskari.mapframework.sandbox.Sandbox} sandbox
     * 			reference to application sandbox
     */
    start : function(sandbox) {
    },
    /**
     * @method stop
     *
     * Interface method for the module protocol
     *
     * @param {Oskari.mapframework.sandbox.Sandbox} sandbox
     * 			reference to application sandbox
     */
    stop : function(sandbox) {
    },
    /**
     * @property {Object} eventHandlers
     * @static
     */
    eventHandlers : {
        'AfterRearrangeSelectedMapLayerEvent' : function(event) {
            this._afterRearrangeSelectedMapLayerEvent(event);
        },
        'MapMoveStartEvent' : function() {
            // clear out any previous visibility check when user starts to move
            // map
            // not always sent f.ex. when moving with keyboard so do this in
            // AfterMapMoveEvent also
            this._visibilityCheckOrder++;
            if(this._previousTimer) {
                clearTimeout(this._previousTimer);
                this._previousTimer = null;
            }
        },
        'AfterMapMoveEvent' : function() {
           this._scheduleVisiblityCheck();
        },
        'AfterMapLayerAddEvent' : function(event) {
            // parse geom if available
            this._parseGeometryForLayer(event.getMapLayer());
            this._scheduleVisiblityCheck();
        }
    },
    /**
     * @method _scheduleVisiblityCheck
     * @private
     * Schedules a visibility check on selected layers. After given timeout
     * calls  _checkLayersVisibility()
     */
    _scheduleVisiblityCheck : function() {
    	 var me = this;
        if(this._previousTimer) {
            clearTimeout(this._previousTimer);
        	this._previousTimer = null;
       	}
		this._visibilityCheckOrder++;
        this._previousTimer = setTimeout(function() {
        	me._checkLayersVisibility(me._visibilityCheckOrder);
        }, this._visibilityPollingInterval);
    },

    /**
     * @method onEvent
     * @param {Oskari.mapframework.event.Event} event a Oskari event object
     * Event is handled forwarded to correct #eventHandlers if found or discarded
     * if not.
     */
    onEvent : function(event) {
        return this.eventHandlers[event.getName()].apply(this, [event]);
    },
    /**
     * @method preselectLayers
     * Does nothing, protocol method for mapmodule-plugin
     */
    preselectLayers : function(layers) {
    },
    /**
     * @method _parseGeometryForLayer
     * @private
     * 
     * If layer.getGeometry() is empty, tries to parse layer.getGeometryWKT()
     * and set parsed geometry to the layer
     * 
     * @param
     * {Oskari.mapframework.domain.WmsLayer/Oskari.mapframework.domain.WfsLayer/Oskari.mapframework.domain.VectorLayer}
     *            layer layer for which to parse geometry
     *
     */
    _parseGeometryForLayer : function(layer) {

        // parse geometry if available
        if(layer.getGeometry && layer.getGeometry().length == 0) {
            var layerWKTGeom = layer.getGeometryWKT();
            if(!layerWKTGeom) {
                // no wkt, dont parse
                return;
            }
            // http://dev.openlayers.org/docs/files/OpenLayers/Format/WKT-js.html
            // parse to OpenLayers.Geometry.Geometry[] array ->
            // layer.setGeometry();
            /*var wkt = new OpenLayers.Format.WKT();

            var features = wkt.read(layerWKTGeom);
            if(features) {
                if(features.constructor != Array) {
                    features = [features];
                }
                var geometries = [];
                for(var i = 0; i < features.length; ++i) {
                    geometries.push(features[i].geometry);
                }
                layer.setGeometry(geometries);
            } else {
                // 'Bad WKT';
            }
            */
        }
    },
    /**
     * @method _checkLayersVisibility
     * @private
     * Loops through selected layers and notifies other modules about visibility
     * changes
     * @param {Number} orderNumber checks orderNumber against
     * #_visibilityCheckOrder
     * 		to see if this is the latest check, if not - does nothing
     */
    _checkLayersVisibility : function(orderNumber) {
        if(orderNumber != this._visibilityCheckOrder) {
            return;
        }
        var layers = this._sandbox.findAllSelectedMapLayers();
        for(var i = 0; i < layers.length; ++i) {
            var layer = layers[i];
            if(!layer.isVisible()) {
                // don't go further if not visible
                continue;
            }
            this.notifyLayerVisibilityChanged(layer);
        }
        this._visibilityCheckScheduled = false;
    },
    /**
     * @method _isInScale
     * @private
     * Checks if the maps scale is in the given maplayers scale range
     * @param
     * {Oskari.mapframework.domain.WmsLayer/Oskari.mapframework.domain.WfsLayer/Oskari.mapframework.domain.VectorLayer}
     *            layer layer to check scale against
     * @return {Boolean} true maplayer is visible in current zoomlevel
     */
    _isInScale : function(layer) {
        var scale = this._sandbox.getMap().getScale();
        return layer.isInScale(scale);
    },
    /**
     * @method isInGeometry
     * If the given layer has geometry, checks if it is visible in the maps viewport.
     * If layer doesn't have geometry, returns always true since then we can't
     * determine this.
     * @param
     * {Oskari.mapframework.domain.WmsLayer/Oskari.mapframework.domain.WfsLayer/Oskari.mapframework.domain.VectorLayer}
     *            layer layer to check against
     * @return {Boolean} true if geometry is visible or cant determine if it isnt
     */
    isInGeometry : function(layer) {
        /*var geometries = layer.getGeometry();
        if( !geometries ) {
        	return true;
        }
        if( geometries.length == 0 ) {
        	return true;
        }

        var viewBounds = this.getMap().getExtent();
        for(var i = 0; i < geometries.length; ++i) {
            var bounds = geometries[i].getBounds();
            if( !bounds ) {
            	continue;
            }
            if( bounds.intersectsBounds(viewBounds) ) {
            	return true;
            }
        }
        return false;*/
       return true;
    },
    /**
     * @method notifyLayerVisibilityChanged
     * Notifies bundles about layer visibility changes by sending MapLayerVisibilityChangedEvent.
     * @param
     * {Oskari.mapframework.domain.WmsLayer/Oskari.mapframework.domain.WfsLayer/Oskari.mapframework.domain.VectorLayer}
     *            layer layer to check against
     */
    notifyLayerVisibilityChanged : function(layer) {
        var scaleOk = layer.isVisible();
        var geometryMatch = layer.isVisible();
        // if layer is visible check actual values
        if(layer.isVisible()) {
            scaleOk = this._isInScale(layer);
            geometryMatch = this.isInGeometry(layer);
        }
        // setup openlayers visibility
        // NOTE: DO NOT CHANGE visibility in internal layer object (it will
        // change in UI also)
        // this is for optimization purposes
        var mapModule = this.mapModule;
        if(scaleOk && geometryMatch && layer.isVisible()) {
            // show non-baselayer if in scale, in geometry and layer visible
            var mapLayers = mapModule.getLayersByName('layer_' + layer.getId());
            var mapLayer = mapLayers.length ? mapLayers[0] : null;
/*            if(mapLayer && !mapLayer.getVisible()) {
                mapLayer.setVisible(true);
            }*/
        } else {
            // otherwise hide non-baselayer
            var mapLayers = mapModule.getLayersByName('layer_' + layer.getId());
            var mapLayer = mapLayers.length ? mapLayers[0]: null;
            /*if(mapLayer && mapLayer.getVisible()) {
                mapLayer.setVisible(false);
            }*/
        }
        var event = this._sandbox.getEventBuilder('MapLayerVisibilityChangedEvent')(layer, scaleOk, geometryMatch);
        this._sandbox.notifyAll(event);
    },
    /**
     * @method _afterRearrangeSelectedMapLayerEvent
     * @private
     * Handles AfterRearrangeSelectedMapLayerEvent.
     * Changes the layer order in Openlayers to match the selected layers list in
     * Oskari.
     *
     * @param
     * {Oskari.mapframework.event.common.AfterRearrangeSelectedMapLayerEvent}
     *            event
     */
    _afterRearrangeSelectedMapLayerEvent : function(event) {
        var layers = this._sandbox.findAllSelectedMapLayers();
        var layerIndex = 0;

        var opLayersLength = this.mapModule.getLayers().length;

        var changeLayer = this.mapModule.getLayersByName('Markers');
        if(changeLayer.length > 0) {
            this.mapModule.setLayerIndex(changeLayer[0], opLayersLength);
            opLayersLength--;
        }
        /* 
        // TODO: could this be used here also?
        // get openlayers layer objects from map
        var layers = this.getMapModule().getOLMapLayers(layer.getId());
        for ( var i = 0; i < layers.length; i++) {
            layers[i].setVisibility(layer.isVisible());
            layers[i].display(layer.isVisible());
        }
         */

        for(var i = 0; i < layers.length; i++) {

            if(layers[i].isBaseLayer()||layers[i].isGroupLayer()) {
                for(var bl = 0; bl < layers[i].getSubLayers().length; bl++) {
                    var changeLayer = this.mapModule.getLayersByName('basemap_' + layers[i]
                    .getSubLayers()[bl].getId());
                    this.mapModule.setLayerIndex(changeLayer[0], layerIndex);
                    layerIndex++;
                }
            } else if(layers[i].isLayerOfType('WFS')) {
                var wfsReqExp = new RegExp('wfs_layer_' + layers[i].getId() + '_WFS_LAYER_IMAGE*', 'i');
                var mapLayers = this.mapModule.getLayersByName(wfsReqExp);
                for(var k = 0; k < mapLayers.length; k++) {
                    this.mapModule.setLayerIndex(mapLayers[k], layerIndex);
                    layerIndex++;
                }

                var wfsReqExp = new RegExp('wfs_layer_' + layers[i].getId() + '_HIGHLIGHTED_FEATURE*', 'i');
                var changeLayer = this.mapModule.getLayersByName(wfsReqExp);
                if(changeLayer.length > 0) {
                    this.mapModule.setLayerIndex(changeLayer[0], layerIndex);
                    layerIndex++;
                }

            } else {
                var changeLayer = this.mapModule.getLayersByName('layer_' + layers[i].getId());
                this.mapModule.setLayerIndex(changeLayer[0], layerIndex);
                layerIndex++;
            }
        }
    }
}, {
    /**
     * @property {String[]} protocol array of superclasses as {String}
     * @static
     */
    'protocol' : ["Oskari.mapframework.module.Module", "Oskari.mapframework.ui.module.common.mapmodule.Plugin"]
});

define("bundles/mapping/bundle/mapmodule-plugin/plugin/layers/LayersPlugin", function(){});

/**
 * @class Oskari.mapframework.bundle.mapmodule.request.MapLayerVisibilityRequest
 * Requests visibility change for maplayer with given id
 * 
 * Requests are build and sent through Oskari.mapframework.sandbox.Sandbox.
 * Oskari.mapframework.request.Request superclass documents how to send one.
 */
Oskari.clazz.define('Oskari.mapframework.bundle.mapmodule.request.MapLayerVisibilityRequest',
/**
 * @method create called automatically on construction
 * @static
 *
 * @param {String}
 *            mapLayerId id of map layer used in Oskari.mapframework.service.MapLayerService
 * @param {Boolean}
 *            visible boolean if map layer should be visible or not
 */
function(mapLayerId, visible) {
    this._creator = null;
    this._mapLayerId = mapLayerId;
    this._visible = visible;

}, {
    /** @static @property __name request name */
    __name : "MapModulePlugin.MapLayerVisibilityRequest",
    /**
     * @method getName
     * @return {String} request name
     */
    getName : function() {
        return this.__name;
    },
    /**
     * @method getMapLayerId
     * @return {String} id for map layer used in
     * Oskari.mapframework.service.MapLayerService
     */
    getMapLayerId : function() {
        return this._mapLayerId;
    },
    /**
     * @method getVisible
     * @return {Boolean} boolean if map layer should be visible or not
     */
    getVisible : function() {
        return this._visible;
    }
}, {
    /**
     * @property {String[]} protocol array of superclasses as {String}
     * @static
     */
    'protocol' : ['Oskari.mapframework.request.Request']
});
define("bundles/framework/bundle/mapmodule-plugin/request/MapLayerVisibilityRequest", function(){});

/**
 * @class Oskari.mapframework.bundle.mapmodule.request.MapLayerVisibilityRequestHandler
 * Shows/hides the maplayer specified in the request in OpenLayers implementation.
 */
Oskari.clazz.define('Oskari.mapping.bundle.mapmodule.request.MapLayerVisibilityRequestHandler', 
/**
 * @method create called automatically on construction
 * @static
 * @param {Oskari.mapframework.sandbox.Sandbox} sandbox
 * 			reference to application sandbox
 * @param {Oskari.mapframework.bundle.mapmodule.plugin.LayersPlugin} layersPlugin
 * 			reference to layersplugin
 */
function(sandbox, layersPlugin) {
    this.sandbox = sandbox;
    this.layersPlugin = layersPlugin; 
}, {
	/**
	 * @method handleRequest 
	 * Shows/hides the maplayer specified in the request in OpenLayers implementation.
	 * @param {Oskari.mapframework.core.Core} core
	 * 		reference to the application core (reference sandbox core.getSandbox())
	 * @param {Oskari.mapframework.bundle.mapmodule.request.MapLayerVisibilityRequest} request
	 * 		request to handle
	 */
    handleRequest : function(core, request) {
        var layerId = request.getMapLayerId();
        var layer = this.sandbox.findMapLayerFromSelectedMapLayers(layerId);
        if(!layer || layer.isVisible() == request.getVisible()) {
        	return;
        }
        layer.setVisible(request.getVisible());
        //var map = this.layersPlugin.getMap();
        var module = this.layersPlugin.getMapModule();
        // get openlayers layer objects from map
        var layers = module.getOLMapLayers(layer.getId());
        for ( var i = 0; i < layers.length; i++) {
            module._setLayerImplVisible(layers[i],layer.isVisible());
            
        }
		
		// notify other components
    	this.layersPlugin.notifyLayerVisibilityChanged(layer);
   }
}, {
    /**
     * @property {String[]} protocol array of superclasses as {String}
     * @static
     */
    protocol : ['Oskari.mapframework.core.RequestHandler']
});

define("bundles/mapping/bundle/mapmodule-plugin/request/MapLayerVisibilityRequestHandler", function(){});

/**
 * @class Oskari.mapframework.bundle.mapmodule.request.MapMoveRequestHandler
 * Handles MapMoveRequest requests
 */
Oskari.clazz.define('Oskari.mapping.bundle.mapmodule.request.MapMoveRequestHandler', 

/**
 * @method create called automatically on construction
 * @static
 *
 * @param {Oskari.mapframework.sandbox.Sandbox}
 *            sandbox reference to sandbox
 * @param {Oskari.mapframework.ui.module.common.MapModule}
 *            mapModule reference to mapmodule
 */
function(sandbox, mapModule) {

    this.sandbox = sandbox;
    this.mapModule = mapModule;
}, {
    /**
     * @method handleRequest 
     * Handles the request.
     * If the request SrsName is not defined in Proj4js.defs then a "SrsName not supported!" exception is thrown.
     *
     * @param {Oskari.mapframework.core.Core} core
     *      reference to the application core (reference sandbox core.getSandbox())
     * @param {Oskari.mapframework.request.common.MapMoveRequest} request
     *      request to handle
     */
    handleRequest : function(core, request) {
        var longitude = request.getCenterX();
        var latitude = request.getCenterY();
        var marker = request.getMarker();
        var zoom = request.getZoom();
        var srsName = request.getSrsName();

        var lonlat = new OpenLayers.LonLat(longitude, latitude);

        // transform coordinates to given projection
        if (srsName && (this.mapModule.getProjection() !== srsName)) {
            var isProjectionDefined = Proj4js.defs[srsName];
            if (!isProjectionDefined) {
                throw "SrsName not supported!";
            }
            lonlat = this.mapModule.transformCoordinates(lonlat, srsName);
        }

        this.mapModule.moveMapToLanLot(lonlat, zoom, false);
        // if zoom=0 -> if(zoom) is determined as false...
        if (zoom || zoom === 0) {
            if (zoom.CLASS_NAME === 'OpenLayers.Bounds') {
                this.mapModule.zoomToExtent(zoom);
            } else {
                this.mapModule.zoomTo(zoom);
            }
        }
        this.mapModule._updateDomain();
   
        this.mapModule.notifyMoveEnd();

        this.sandbox.printDebug("[MapMoveRequestHandler] map moved");
    }
}, {
    /**
     * @property {String[]} protocol array of superclasses as {String}
     * @static
     */
    protocol : ['Oskari.mapframework.core.RequestHandler']
});

define("bundles/mapping/bundle/mapmodule-plugin/request/MapMoveRequestHandler", function(){});

/**
 * @class Oskari.mapframework.ui.module.common.MapModule
 *
 * Provides map functionality/Wraps actual map implementation (Openlayers).
 * Currently hardcoded at 13 zoomlevels (0-12) and SRS projection code 'EPSG:3067'.
 * There are plans to make these more configurable in the future.
 *
 * See http://www.oskari.org/trac/wiki/DocumentationBundleMapmodule
 */
Oskari.clazz.define('Oskari.ol3.ui.module.common.MapModule',
/**
 * @method create called automatically on construction
 * @static
 *
 * @param {String} id
 * 		Unigue ID for this map
 * @param {String} imageUrl
 *      base url for marker etc images
 * @param {Array} map options, example data:
 *  {
 *		resolutions : [2000, 1000, 500, 200, 100, 50, 20, 10, 4, 2, 1, 0.5, 0.25],
 *		maxExtent : {
 *			left : 0,
 *			bottom : 10000000,
 *			right : 10000000,
 *			top : 0
 *		},
 srsName : "EPSG:3067"
 *	}
 */
function(id, imageUrl, options) {

}, {
  
  
    /**
     * @method createMap
     * @private
     * Creates the OpenLayers.Map object
     * @return {OpenLayers.Map}
     */
    _createMap : function() {

        var sandbox = this._sandbox;
        // this is done BEFORE enhancement writes the values to map domain
        // object... so we will move the map to correct location
        // by making a MapMoveRequest in application startup

        var maxExtent = this._maxExtent;
        var extent = this._extent;

        var projection = ol.proj.configureProj4jsProjection({
            code : this._projectionCode,
            extent : extent
        });
        ol.proj.addProjection(projection);
        var bprojection = ol.proj.configureProj4jsProjection({
            code : 'urn:ogc:def:crs:EPSG:6.3:3067',
            extent : extent
        });
        ol.proj.addProjection(bprojection);

        if (!ol.proj.get(this._projectionCode))
            throw "NO CRS? " + this._projectionCode;
        /*       	if( !ol.proj.get('urn:ogc:def:crs:EPSG:6.3:3067') )
         throw "NO CRS? + urn EPSG 3067";*/

        var projectionExtent = projection.getExtent();

        this._projection = projection;

        var map = new ol.Map({
            extent : projectionExtent,
            controls : ol.control.defaults({}, [/*new ol.control.ScaleLine({
             units : ol.control.ScaleLineUnits.METRIC
             })*/]),
            layers : [],
            //renderers : ol.RendererHints.createFromQueryData(),
            renderer : ol.RendererHint.CANVAS,
            target : 'mapdiv'

        });

        var zoomslider = new ol.control.ZoomSlider({
            map : map
        });

        map.setView(new ol.View2D({
            projection : projection,
            center : [383341, 6673843],
            zoom : 5
        }));

        var me = this;

        map.on('moveend', function(evt) {
            
            var map = evt.map;
            var extent = map.getView().calculateExtent(map.getSize());
            var center = map.getView().getCenter();

            var sandbox = me._sandbox;
            sandbox.getMap().setMoving(false);
            sandbox.printDebug("sending AFTERMAPMOVE EVENT from map Event handler");

            var lonlat = map.getView().getCenter();
            me._updateDomain();
            var sboxevt = sandbox.getEventBuilder('AfterMapMoveEvent')(lonlat[0], lonlat[1], map.getView().getZoom(), false, me.getMapScale());
            sandbox.notifyAll(sboxevt);

        });

        this._map = map;

        return this._map;
    },
      
    /**
     * @method moveMapToLanLot
     * Moves the map to the given position.
     * NOTE! Doesn't send an event if zoom level is not changed.
     * Call notifyMoveEnd() afterwards to notify other components about changed state.
     * @param {OpenLayers.LonLat} lonlat coordinates to move the map to
     * @param {Number} zoomAdjust relative change to the zoom level f.ex -1 (optional)
     * @param {Boolean} pIsDragging true if the user is dragging the map to a new location currently (optional)
     */
    moveMapToLanLot : function(lonlat, zoomAdjust, pIsDragging) {
        // TODO: openlayers has isValidLonLat(); maybe use it here
        var isDragging = (pIsDragging === true);
        // using panTo BREAKS IE on startup so do not
        // should we spam events on dragmoves?
        this._map.getView().setCenter([lonlat.lon, lonlat.lat]);
        if (zoomAdjust) {
            this.adjustZoomLevel(zoomAdjust, true);
        }        

        this._updateDomain();
    },
    /**
     * @method panMapToLonLat
     * Pans the map to the given position.
     * @param {OpenLayers.LonLat} lonlat coordinates to pan the map to
     * @param {Boolean} suppressEnd true to NOT send an event about the map move
     *  (other components wont know that the map has moved, only use when chaining moves and
     *     wanting to notify at end of the chain for performance reasons or similar) (optional)
     */
    panMapToLonLat : function(lonlat, suppressEnd) {
        this._map.getView().setCenter([lonlat.lon, lonlat.lat]);
        this._updateDomain();
        if (suppressEnd !== true) {
            this.notifyMoveEnd();
        }
    },
    /**
     * @method zoomToScale
     * Pans the map to the given position.
     * @param {float} scale the new scale
     * @param {Boolean} closest find the zoom level that most closely fits the specified scale.
     *   Note that this may result in a zoom that does not exactly contain the entire extent.  Default is false
     * @param {Boolean} suppressEnd true to NOT send an event about the map move
     *  (other components wont know that the map has moved, only use when chaining moves and
     *     wanting to notify at end of the chain for performance reasons or similar) (optional)
     */
    zoomToScale : function(scale, closest, suppressEnd) {
        var isClosest = (closest === true);
        this._map.zoomToScale(scale, isClosest);
        this._updateDomain();
        if (suppressEnd !== true) {
            this.notifyMoveEnd();
        }
    },
    /**
     * @method centerMap
     * Moves the map to the given position and zoomlevel.
     * @param {OpenLayers.LonLat} lonlat coordinates to move the map to
     * @param {Number} zoomLevel absolute zoomlevel to set the map to
     * @param {Boolean} suppressEnd true to NOT send an event about the map move
     *  (other components wont know that the map has moved, only use when chaining moves and
     *     wanting to notify at end of the chain for performance reasons or similar) (optional)
     */
    centerMap : function(lonlat, zoom, suppressEnd) {
        // TODO: openlayers has isValidLonLat(); maybe use it here
        this._map.getView().setCenter([lonlat.lon, lonlat.lat]);
        this._updateDomain();
        if (suppressEnd !== true) {
            this.notifyMoveEnd();
        }
    },
  
   
    /**
     * @method panMapByPixels
     * Pans the map by given amount of pixels.
     * @param {Number} pX amount of pixels to pan on x axis
     * @param {Number} pY amount of pixels to pan on y axis
     * @param {Boolean} suppressStart true to NOT send an event about the map starting to move
     *  (other components wont know that the map has started moving, only use when chaining moves and
     *     wanting to notify at end of the chain for performance reasons or similar) (optional)
     * @param {Boolean} suppressEnd true to NOT send an event about the map move
     *  (other components wont know that the map has moved, only use when chaining moves and
     *     wanting to notify at end of the chain for performance reasons or similar) (optional)
     * @param {Boolean} isDrag true if the user is dragging the map to a new location currently (optional)
     */
    panMapByPixels : function(pX, pY, suppressStart, suppressEnd, isDrag) {
        // usually programmatically for gfi centering
        /*this._map.pan(pX, pY, {
         dragging : ( isDrag ? true : false),
         animate : false
         });*/
        var map = this._map;
        var view = map.getView();

        var res = view.getResolution();
        var cxy = view.getCenter();
        var panTo = [cxy[0] - pX * res, cxy[1] - pY * res];

        (function() {
            var duration = 1000;
            var start = +new Date();
            var pan = ol.animation.pan({
                duration : duration,
                source : view.getCenter(),
                start : start
            });
          
            map.beforeRender(pan);
            view.setCenter(panTo);
        })()

        // view.setCenter(panTo);

        this._updateDomain();
        // send note about map change
        if (suppressStart !== true) {
            this.notifyStartMove();
        }
        if (suppressEnd !== true) {
            this.notifyMoveEnd();
        }
    },
    
    /**
     * @method centerMapByPixels
     * Moves the map so the given pixel coordinates relative to the viewport is on the center of the view port.
     * @param {Number} pX pixel coordinates on x axis
     * @param {Number} pY pixel coordinates on y axis
     * @param {Boolean} suppressStart true to NOT send an event about the map starting to move
     *  (other components wont know that the map has started moving, only use when chaining moves and
     *     wanting to notify at end of the chain for performance reasons or similar) (optional)
     * @param {Boolean} suppressEnd true to NOT send an event about the map move
     *  (other components wont know that the map has moved, only use when chaining moves and
     *     wanting to notify at end of the chain for performance reasons or similar) (optional)
     */
    centerMapByPixels : function(pX, pY, suppressStart, suppressEnd) {
        var newXY = new OpenLayers.Pixel(pX, pY);
        var newCenter = this._map.getLonLatFromViewPortPx(newXY);
        // check that the coordinates are reasonable, otherwise its easy to
        // scrollwheel the map out of view
        if (!this.isValidLonLat(newCenter.lon, newCenter.lat)) {
            // do nothing if not valid
            return;
        }
        this.moveMapToLanLot(newCenter);

        // send note about map change
        if (suppressStart !== true) {
            this.notifyStartMove();
        }
        if (suppressEnd !== true) {
            this.notifyMoveEnd();
        }
    },
   
    /**
     * @method zoomToExtent
     * Zooms the map to fit given bounds on the viewport
     * @param {OpenLayers.Bounds} bounds BoundingBox that should be visible on the viewport
     * @param {Boolean} suppressStart true to NOT send an event about the map starting to move
     *  (other components wont know that the map has started moving, only use when chaining moves and
     *     wanting to notify at end of the chain for performance reasons or similar) (optional)
     * @param {Boolean} suppressEnd true to NOT send an event about the map move
     *  (other components wont know that the map has moved, only use when chaining moves and
     *     wanting to notify at end of the chain for performance reasons or similar) (optional)
     */
    zoomToExtent : function(bounds, suppressStart, suppressEnd) {
        //this._map.zoomToExtent(bounds);
        var bbox = [bounds.left, bounds.bottom, bounds.right, bounds.top];
        this._map.getView().fitExtent(bbox, this._map.getSize());

        this._updateDomain();
        // send note about map change
        if (suppressStart !== true) {
            this.notifyStartMove();
        }
        if (suppressEnd !== true) {
            this.notifyMoveEnd();
        }
    },
    /**
     * @method adjustZoomLevel
     * Adjusts the maps zoom level by given relative number
     * @param {Number} zoomAdjust relative change to the zoom level f.ex -1
     * @param {Boolean} suppressEvent true to NOT send an event about the map move
     *  (other components wont know that the map has moved, only use when chaining moves and
     *     wanting to notify at end of the chain for performance reasons or similar) (optional)
     */
    adjustZoomLevel : function(amount, suppressEvent) {       
        var delta = amount;
        var view = this._map.getView().getView2D();
        var currZoom = view.getZoom();
        view.setZoom(currZoom + delta);

        this._updateDomain();
        if (suppressEvent !== true) {
            // send note about map change
            this.notifyMoveEnd();
        }
    },
    /**
     * @method setZoomLevel
     * Sets the maps zoom level to given absolute number
     * @param {Number} newZoomLevel absolute zoom level (0-12)
     * @param {Boolean} suppressEvent true to NOT send an event about the map move
     *  (other components wont know that the map has moved, only use when chaining moves and
     *     wanting to notify at end of the chain for performance reasons or similar) (optional)
     */
    setZoomLevel : function(newZoomLevel, suppressEvent) {
        if (newZoomLevel == this._map.getView().getZoom()) {
            // do nothing if requested zoom is same as current
            return;
        }
        if (newZoomLevel < 0 || newZoomLevel > this._map.getNumZoomLevels) {
            newZoomLevel = this._map.getView().getZoom();
        }
        this._map.getView().setZoom(newZoomLevel);
        this._updateDomain();
        if (suppressEvent !== true) {
            // send note about map change
            this.notifyMoveEnd();
        }
    },
    
    getZoomLevel : function() {
        return this._map.getView().getZoom();
    },
    /**
     * @method _getNewZoomLevel
     * @private
     * Does a sanity check on a zoomlevel adjustment to see if the adjusted zoomlevel is
     * supported by the map (is between 0-12). Returns the adjusted zoom level if it is valid or
     * current zoom level if the adjusted one is out of bounds.
     * @return {Number} sanitized absolute zoom level
     */
    _getNewZoomLevel : function(adjustment) {
        // TODO: check isNaN?
        var requestedZoomLevel = this._map.getView().getZoom() + adjustment;

        if (requestedZoomLevel >= 0 && requestedZoomLevel <= this._map.getNumZoomLevels()) {
            return requestedZoomLevel;
        }
        // if not in valid bounds, return original
        return this._map.getView().getZoom();
    },
      
    /**
     * @method _updateDomain
     * @private
     * Updates the sandbox map domain object with the current map properties.
     * Ignores the call if map is in stealth mode.
     */
    _updateDomain : function() {

        if (this.getStealth()) {
            // ignore if in "stealth mode"
            return;
        }
        var sandbox = this._sandbox;
        var mapVO = sandbox.getMap();
        var lonlat = this._map.getView().getCenter();
        var zoom = this._map.getView().getZoom();
        mapVO.moveTo(lonlat[0], lonlat[1], zoom);

        mapVO.setScale(this.getMapScale());

        var size = this._map.getSize();
        mapVO.setWidth(size[0]);
        mapVO.setHeight(size[1]);
        mapVO.setResolution(this._map.getView().getResolution());

        var extent = this._map.getView().calculateExtent(this._map.getSize());

        var bbox = new OpenLayers.Bounds(extent[0], extent[1], extent[2], extent[3]);

        mapVO.setExtent(bbox);
        mapVO.setBbox(bbox)

        var maxBbox = this._maxExtent;
        var maxExtentBounds = new OpenLayers.Bounds(maxBbox.left, maxBbox.bottom, maxBbox.right, maxBbox.top);
        mapVO.setMaxExtent(maxExtentBounds);

    },

   
    _addLayerImpl : function(layerImpl) {
        this._map.addLayer(layerImpl);
    },

    _removeLayerImpl : function(layerImpl) {

        this._map.removeLayer(layerImpl);     

    },

    setLayerIndex : function(layerImpl, index) {
        var layerColl = this._map.getLayers();
        var layerIndex = this.getLayerIndex(layerImpl);

        /* find */
        /* remove */
        /* insert at */

        if (index === layerIndex) {
            return
        } else if (index === layerColl.getLength()) {
            /* to top */
            layerColl.removeAt(layerIndex);
            layerColl.insertAt(index, layerImpl);
        } else if (layerIndex < index) {
            /* must adjust change */
            layerColl.removeAt(layerIndex);
            layerColl.insertAt(index - 1, layerImpl);

        } else {
            layerColl.removeAt(layerIndex);
            layerColl.insertAt(index, layerImpl);
        }

    },

    getLayerIndex : function(layerImpl) {
        var layerColl = this._map.getLayers();
        var layerArr = layerColl.getArray();

        for (var n = 0; n < layerArr.length; n++) {
            if (layerArr[n] === layerImpl) {
                return n;
            }
        }
        return -1;

    },

    getMapScale : function() {
        return OpenLayers.Util.getScaleFromResolution(this._map.getView().getResolution(), 'm');

    },
    
    updateSize : function() {
        this._map.updateSize();
    },
    
    _addMapControlImpl : function(ctl) {
        this._map.addControl(ctl);
    },
    
    _removeMapControlImpl : function(ctl) {
        this._map.removeControl(ctl);
        
    }
}, {
    /**
     * @property {String[]} protocol
     * @static
     */
    'protocol' : ['Oskari.mapframework.module.Module'],
    "extend" : ["Oskari.mapping.mapmodule.AbstractMapModule"]
});

define("bundles/ol3/bundle/mapmodule-plugin/ui/module/map-module", function(){});

/**
 * @class Oskari.mapframework.ui.module.common.mapmodule.Plugin
 * 
 * Interface/protocol definition for map plugins
 */
Oskari.clazz.define('Oskari.mapframework.ui.module.common.mapmodule.Plugin',
/**
 * @method create called automatically on construction
 * @static
 *
 * Always extend this class, never use as is.
 */
function() {
    throw "Oskari.mapframework.ui.module.common.mapmodule.Plugin should not be instantiated";
}, {
    /**
     * @method getName
     * Interface method for all plugins, should return plugin name
     * @return {String} plugin name
     * @throws always override this
     */
    getName : function() {
        throw "Implement your own";
    },

    /**
     * @method setMapModule
     * Sets reference to reference to map module
     * @param {Oskari.mapframework.ui.module.common.MapModule} mapModule 
     */
    setMapModule : function(mapModule) {
        throw "Implement your own";
    },

    /**
     * @method register
     * Interface method for the module protocol
     */
    register : function() {
        throw "Implement your own";
    },
    /**
     * @method unregister
     * Interface method for the module protocol
     */
    unregister : function() {
        throw "Implement your own";
    },

    /**
     * @method startPlugin
     *
     * Interface method for the plugin protocol. Should registers requesthandlers and
     * eventlisteners.
     *
     * @param {Oskari.mapframework.sandbox.Sandbox} sandbox
     *          reference to application sandbox
     */
    startPlugin : function(sandbox) {
        throw "Implement your own";
    },
    /**
     * @method stopPlugin
     *
     * Interface method for the plugin protocol. Should unregisters requesthandlers and
     * eventlisteners.
     *
     * @param {Oskari.mapframework.sandbox.Sandbox} sandbox
     *          reference to application sandbox
     */
    stopPlugin : function(sandbox) {
        throw "Implement your own";
    },

    /**
     * @property {Object} eventHandlers
     * Best practices: defining which 
     * events bundle is listening and how bundle reacts to them
     * @static
     */
    eventHandlers : {},

    /**
     * @method onEvent
     * @param {Oskari.mapframework.event.Event} event a Oskari event object
     * Event is handled forwarded to correct #eventHandlers if found or discarded
     * if not.
     */
    onEvent : function(event) {
        return this.eventHandlers[event.getName()].apply(this, [event]);
    }
});

define("bundles/framework/bundle/mapmodule-plugin/plugin/Plugin", function(){});

/**
 * @class Oskari.mapframework.mapmodule.ControlsPlugin
 * 
 * Adds mouse and keyboard controls to the map and adds tools controls 
 * for zoombox and measurement (line/area). Also adds request handling for 
 * ToolSelectionRequest, EnableMapKeyboardMovementRequest, DisableMapKeyboardMovementRequest,
 * EnableMapMouseMovementRequest and DisableMapMouseMovementRequest.
 * Overrides OpenLayers keyboard/mouse controls with PorttiKeyboard and PorttiMouse.
 * 
 * default configuration for mouse as of 2012-12-05:
 * 
 * 
    {
               "id":"Oskari.mapframework.mapmodule.ControlsPlugin",
               "config" : {
               		"mouse" : {
            	   		"useCenterMapInWheelZoom" : false,
 						"useCenterMapInDblClickZoom": false
 					}	
               }
     }
 * 
 */
Oskari.clazz.define('Oskari.ol3.mapmodule.plugin.ControlsPlugin',
/**
 * @method create called automatically on construction
 * @static
 */
function(config) {
    this.mapModule = null;
    this.pluginName = null;
    this._sandbox = null;
    this._map = null;
    this.conf = config||{};
}, {
    /** @static @property __name plugin name */
    __name : 'ControlsPlugin',

    /**
     * @method getName
     * @return {String} plugin name
     */
    getName : function() {
        return this.pluginName;
    },
    /**
     * @method hasUI
     * @return {Boolean} true
     * This plugin has an UI so always returns true
     */
    hasUI : function() {
        return true;
    },
    /**
     * @method getMapModule
     * @return {Oskari.mapframework.ui.module.common.MapModule} reference to map
     * module
     */
    getMapModule : function() {

        return this.mapModule;
    },
    /**
     * @method setMapModule
     * @param {Oskari.mapframework.ui.module.common.MapModule} reference to map
     * module
     */
    setMapModule : function(mapModule) {
        this.mapModule = mapModule;
        if (mapModule) {
            this.pluginName = mapModule.getName() + this.__name;
            this._createMapControls();
        }
    },
    /**
     * @method register
     * Interface method for the module protocol
     */
    register : function() {

    },
    /**
     * @method unregister
     * Interface method for the module protocol
     */
    unregister : function() {

    },
    /**
     * @method init
     *
     * Interface method for the module protocol
     *
     * @param {Oskari.mapframework.sandbox.Sandbox} sandbox
     * 			reference to application sandbox
     */
    init : function(sandbox) {
        var me = this;
        var mapMovementHandler = Oskari.clazz.create('Oskari.mapframework.bundle.mapmodule.request.MapMovementControlsRequestHandler', me.getMapModule());
        this.requestHandlers = {
            'ToolSelectionRequest' : Oskari.clazz.create('Oskari.mapframework.mapmodule.ToolSelectionHandler', sandbox, me),
            'EnableMapKeyboardMovementRequest' : mapMovementHandler,
            'DisableMapKeyboardMovementRequest' : mapMovementHandler,
            'EnableMapMouseMovementRequest' : mapMovementHandler,
            'DisableMapMouseMovementRequest' : mapMovementHandler
        };
    },
    /**
     * @method startPlugin
     *
     * Interface method for the plugin protocol
     *
     * @param {Oskari.mapframework.sandbox.Sandbox} sandbox
     * 			reference to application sandbox
     */
    startPlugin : function(sandbox) {
        this._sandbox = sandbox;
        this._map = this.getMapModule().getMap();

        sandbox.register(this);

        for(var reqName in this.requestHandlers ) {
            sandbox.addRequestHandler(reqName, this.requestHandlers[reqName]);
        }

        for(var p in this.eventHandlers ) {
            sandbox.registerForEventByName(this, p);
        }
        this._addMapControls();
    },
    /**
     * @method stopPlugin
     *
     * Interface method for the plugin protocol
     *
     * @param {Oskari.mapframework.sandbox.Sandbox} sandbox
     * 			reference to application sandbox
     */
    stopPlugin : function(sandbox) {

        for(var reqName in this.requestHandlers ) {
            sandbox.removeRequestHandler(reqName, this.requestHandlers[reqName]);
        }
        
        for(p in this.eventHandlers ) {
            sandbox.unregisterFromEventByName(this, p);
        }

        sandbox.unregister(this);
        this._removeMapControls();

        this._map = null;
        this._sandbox = null;
    },
    /**
     * @method start
     *
     * Interface method for the module protocol
     *
     * @param {Oskari.mapframework.sandbox.Sandbox} sandbox
     * 			reference to application sandbox
     */
    start : function(sandbox) {
    },
    /**
     * @method stop
     *
     * Interface method for the module protocol
     *
     * @param {Oskari.mapframework.sandbox.Sandbox} sandbox
     * 			reference to application sandbox
     */
    stop : function(sandbox) {
    },
    /**
     * @property {Object} eventHandlers
     * @static
     */
    eventHandlers : {
        /**
         * @method Toolbar.ToolSelectedEvent
         * @param {Oskari.mapframework.bundle.toolbar.event.ToolSelectedEvent} event
         */
       'Toolbar.ToolSelectedEvent' : function(event) {
            // changed tool -> cancel any current tool
            if(this.conf.zoomBox !== false) {
                this._zoomBoxTool.deactivate(); 
            }
            if(this.conf.measureControls !== false) {
                this._measureControls.line.deactivate();
                this._measureControls.area.deactivate();
            }
       }
    },
    /**
     * @method onEvent
     * @param {Oskari.mapframework.event.Event} event a Oskari event object
     * Event is handled forwarded to correct #eventHandlers if found or discarded
     * if not.
     */
    onEvent : function(event) {
        return this.eventHandlers[event.getName()].apply(this, [event]);
    },
    /**
     * @method _addMapControls
     * Add necessary controls on the map
     * @private
     */
    _addMapControls : function() {
        var me = this;


    },
    /**
     * @method _removeMapControls
     * Remove added controls from the map
     * @private
     */
    _removeMapControls : function() {
        

    },
    
    /**
     * @method _createMapControls
     * Constructs/initializes necessary controls for the map. After this they can be added to the map
     * with _addMapControls().
     * @private
     */
    _createMapControls : function() {
      
    }
}, {
    /**
     * @property {String[]} protocol array of superclasses as {String}
     * @static
     */
    'protocol' : ["Oskari.mapframework.module.Module", "Oskari.mapframework.ui.module.common.mapmodule.Plugin"]
});

define("bundles/ol3/bundle/mapmodule-plugin/plugin/controls/ControlsPlugin", function(){});

/**
 * @class Oskari.mapframework.bundle.mapmodule.request.DisableMapKeyboardMovementRequest
 *
 * Requests for keyboard control on map to be disabled. This is usually requested
 * so that typing on a textfield doesn't move the map on the background.
 * Opposite of
 * Oskari.mapframework.bundle.mapmodule.request.EnableMapKeyboardMovementRequest
 * 
 * Requests are build and sent through Oskari.mapframework.sandbox.Sandbox.
 * Oskari.mapframework.request.Request superclass documents how to send one.
 */
Oskari.clazz.define('Oskari.mapframework.bundle.mapmodule.request.DisableMapKeyboardMovementRequest',

/**
 * @method create called automatically on construction
 * @static
 */
function() {
    this._creator = null;
}, {
    /** @static @property __name request name */
    __name : "DisableMapKeyboardMovementRequest",
    /**
     * @method getName
     * @return {String} request name
     */
    getName : function() {
        return this.__name;
    }
}, {
    /**
     * @property {String[]} protocol array of superclasses as {String}
     * @static
     */
    'protocol' : ['Oskari.mapframework.request.Request']
});
define("bundles/framework/bundle/mapmodule-plugin/request/DisableMapKeyboardMovementRequest", function(){});

/**
 * @class Oskari.mapframework.bundle.mapmodule.request.DisableMapMouseMovementRequest
 *
 * Requests for mouse control on map to be disabled. 
 * Opposite of
 * Oskari.mapframework.bundle.mapmodule.request.EnableMapMouseMovementRequest
 * 
 * Requests are build and sent through Oskari.mapframework.sandbox.Sandbox.
 * Oskari.mapframework.request.Request superclass documents how to send one.
 */
Oskari.clazz.define('Oskari.mapframework.bundle.mapmodule.request.DisableMapMouseMovementRequest',

/**
 * @method create called automatically on construction
 * @static
 */
function() {
    this._creator = null;
}, {
    /** @static @property __name request name */
    __name : "DisableMapMouseMovementRequest",
    /**
     * @method getName
     * @return {String} request name
     */
    getName : function() {
        return this.__name;
    }
}, {
    /**
     * @property {String[]} protocol array of superclasses as {String}
     * @static
     */
    'protocol' : ['Oskari.mapframework.request.Request']
});
define("bundles/framework/bundle/mapmodule-plugin/request/DisableMapMouseMovementRequest", function(){});

/**
 * @class Oskari.mapframework.bundle.mapmodule.request.EnableMapKeyboardMovementRequest
 *
 * Requests for keyboard control on map to be enabled. This is usually requested
 * after the disable event to reactivate the keyboard controls after leaving a
 * textfield.
 * Opposite of
 * Oskari.mapframework.bundle.mapmodule.request.DisableMapKeyboardMovementRequest
 * 
 * Requests are build and sent through Oskari.mapframework.sandbox.Sandbox.
 * Oskari.mapframework.request.Request superclass documents how to send one.
 */
Oskari.clazz.define('Oskari.mapframework.bundle.mapmodule.request.EnableMapKeyboardMovementRequest',

/**
 * @method create called automatically on construction
 * @static
 */
function() {
    this._creator = null;
}, {
    /** @static @property __name request name */
    __name : "EnableMapKeyboardMovementRequest",
    /**
     * @method getName
     * @return {String} request name
     */
    getName : function() {
        return this.__name;
    }
}, {
    /**
     * @property {String[]} protocol array of superclasses as {String}
     * @static
     */
    'protocol' : ['Oskari.mapframework.request.Request']
});
define("bundles/framework/bundle/mapmodule-plugin/request/EnableMapKeyboardMovementRequest", function(){});

/**
 * @class Oskari.mapframework.bundle.mapmodule.request.EnableMapMouseMovementRequest
 *
 * Requests for mouse control on map to be enabled. 
 * Opposite of
 * Oskari.mapframework.bundle.mapmodule.request.DisableMapMouseMovementRequest
 * 
 * Requests are build and sent through Oskari.mapframework.sandbox.Sandbox.
 * Oskari.mapframework.request.Request superclass documents how to send one.
 */
Oskari.clazz.define('Oskari.mapframework.bundle.mapmodule.request.EnableMapMouseMovementRequest',

/**
 * @method create called automatically on construction
 * @static
 */
function() {
    this._creator = null;
}, {
    /** @static @property __name request name */
    __name : "EnableMapMouseMovementRequest",
    /**
     * @method getName
     * @return {String} request name
     */
    getName : function() {
        return this.__name;
    }
}, {
    /**
     * @property {String[]} protocol array of superclasses as {String}
     * @static
     */
    'protocol' : ['Oskari.mapframework.request.Request']
});
define("bundles/framework/bundle/mapmodule-plugin/request/EnableMapMouseMovementRequest", function(){});

/**
 * @class Oskari.mapframework.bundle.mapmodule.request.MapMovementControlsRequestHandler
 * Handles map movement control requests
 */
Oskari.clazz.define('Oskari.mapframework.bundle.mapmodule.request.MapMovementControlsRequestHandler', 
/**
 * @method create called automatically on construction
 * @static
 * @param {Oskari.mapframework.ui.module.common.MapModule} mapModule
 * 			reference to mapModule
 */
function(mapModule) {
    this.mapModule = mapModule; 
}, {
	/**
	 * @method handleRequest 
	 * Shows/hides the maplayer specified in the request in OpenLayers implementation.
	 * @param {Oskari.mapframework.core.Core} core
	 * 		reference to the application core (reference sandbox core.getSandbox())
	 * @param {Oskari.mapframework.bundle.mapmodule.request.EnableMapMouseMovementRequest/
	 *         Oskari.mapframework.bundle.mapmodule.request.DisableMapMouseMovementRequest/
	 *         Oskari.mapframework.bundle.mapmodule.request.EnableMapKeyboardMovementRequest/
	 *         Oskari.mapframework.bundle.mapmodule.request.DisableMapKeyboardMovementRequest} request
	 * 		request to handle
	 */
    handleRequest : function(core, request) {
        if(request.getName() == 'EnableMapKeyboardMovementRequest') {
            var control = this.mapModule.getMapControl('keyboardControls');
            if(control) {
                control.activate();
            }
        }
        else if(request.getName() == 'DisableMapKeyboardMovementRequest') {
            var control = this.mapModule.getMapControl('keyboardControls');
            if(control) {
                control.deactivate();
            }
        }
        else if(request.getName() == 'EnableMapMouseMovementRequest') {
            var control = this.mapModule.getMapControl('mouseControls');
            if(control) {
                control.activate();
                control.registerMouseEvents();
            }
        }
        else if(request.getName() == 'DisableMapMouseMovementRequest') {
            var control = this.mapModule.getMapControl('mouseControls');
            if(control) {
                control.deactivate();
                control.unregisterMouseEvents();
            }
        }
        // should we notify other bundles with AfterEnableMapKeyboardMovementEvent/AfterDisableMapKeyboardMovementEvent
   }
}, {
    /**
     * @property {String[]} protocol array of superclasses as {String}
     * @static
     */
    protocol : ['Oskari.mapframework.core.RequestHandler']
});

define("bundles/framework/bundle/mapmodule-plugin/request/MapMovementControlsRequestHandler", function(){});

/**
 * @class Oskari.mapframework.request.common.ShowMapMeasurementRequest
 *
 * Requests for the given value to be shown in UI.
 *
 * TODO: This could and propably should be refactored into a common show message
 * request since it could be used to show any message/this is actually not
 * measure tool specific.
 * 
 * Requests are build and sent through Oskari.mapframework.sandbox.Sandbox.
 * Oskari.mapframework.request.Request superclass documents how to send one.
 */

Oskari.clazz.define('Oskari.mapframework.request.common.ShowMapMeasurementRequest', 

/**
 * @method create called automatically on construction
 * @static
 *
 * @param {String}
 *            value message to be shown
 */
function(value,finished,geometry,geometryMimeType) {
    this._creator = null;
    this._value = value;
    this._geometry = geometry;
    this._finished = finished;
    this._geometryMimeType = geometryMimeType;
}, {
    /** @static @property __name request name */
    __name : "ShowMapMeasurementRequest",
    /**
     * @method getName
     * @return {String} request name
     */
    getName : function() {
        return this.__name;
    },
    /**
     * @method getValue
     * @return {String} value
     */
    getValue : function() {
        return this._value;
    },
    
    /**
     * @method getGeometry
     * @return {Object} geometry if one exists
     */
    getGeometry: function() {
    	return this._geometry;
    },
    /**
     * @method getGeometryMimeType
     * @return {String} mime type for geometry if one exists
     */
    getGeometryMimeType: function() {
    	return this._geometryMimeType;
    },
    
    /**
     * @method isFinished
     * @return {Boolean} true/false if measurement has been finished or not 
     */
    isFinished: function() {
    	return this._finished;
    }
}, {
    /**
     * @property {String[]} protocol array of superclasses as {String}
     * @static
     */
    'protocol' : ['Oskari.mapframework.request.Request']
});
define("sources/framework/request/common/show-map-measurement-request", function(){});

/**
 * @class Oskari.mapframework.bundle.mapmodule.request.MapMoveByLayerContentRequest
 * Requests map to move to location/scale where given layer has content
 *
 * Requests are build and sent through Oskari.mapframework.sandbox.Sandbox.
 * Oskari.mapframework.request.Request superclass documents how to send one.
 */
Oskari.clazz.define('Oskari.mapframework.bundle.mapmodule.request.MapMoveByLayerContentRequest',
/**
 * @method create called automatically on construction
 * @static
 *
 * @param {String}
 *            mapLayerId id of map layer used in
 * Oskari.mapframework.service.MapLayerService
 */
function(mapLayerId) {
    this._creator = null;
    this._mapLayerId = mapLayerId;
}, {
    /** @static @property __name request name */
    __name : "MapModulePlugin.MapMoveByLayerContentRequest",
    /**
     * @method getName
     * @return {String} request name
     */
    getName : function() {
        return this.__name;
    },
    /**
     * @method getMapLayerId
     * @return {String} id for map layer used in
     * Oskari.mapframework.service.MapLayerService
     */
    getMapLayerId : function() {
        return this._mapLayerId;
    }
}, {
    /**
     * @property {String[]} protocol array of superclasses as {String}
     * @static
     */
    'protocol' : ['Oskari.mapframework.request.Request']
}); 
define("bundles/framework/bundle/mapmodule-plugin/request/MapMoveByLayerContentRequest", function(){});

/**
 * @class Oskari.mapframework.bundle.mapmodule.request.MapMoveByLayerContentRequestHandler
 * Provides functionality to:
 * - Move the map to zoom level that is in scale with the requested maplayer.
 * - Move the map to given layers geometry if it has one.
 */
Oskari.clazz.define('Oskari.mapframework.bundle.mapmodule.request.MapMoveByLayerContentRequestHandler', 
/**
 * @method create called automatically on construction
 * @static
 * @param {Oskari.mapframework.sandbox.Sandbox} sandbox
 * 			reference to application sandbox
 * @param {Oskari.mapframework.bundle.mapmodule.plugin.LayersPlugin} layersPlugin
 * 			reference to layersplugin
 */
function(sandbox, layersPlugin) {
    this.sandbox = sandbox;
    this.layersPlugin = layersPlugin; 
}, {
	/**
	 * @method handleRequest 
	 * Moves the map to zoom level that is in scale with the requested maplayer.
	 * Also moves the map to given layers geometry if it has one.
	 * @param {Oskari.mapframework.core.Core} core
	 * 		reference to the application core (reference sandbox core.getSandbox())
	 * @param {Oskari.mapframework.bundle.mapmodule.request.MapMoveByLayerContentRequest} request
	 * 		request to handle
	 */
    handleRequest : function(core, request) {
        var layerId = request.getMapLayerId();
        var layer = this.sandbox.findMapLayerFromSelectedMapLayers(layerId);
        if(!layer) {
        	return;
        }

		// set zoom level by layer scales
        var newZoom = this.layersPlugin.getMapModule().getClosestZoomLevel(layer.getMinScale(), layer.getMaxScale());
        // suppress mapmove-event here and send it after we have possibly also moved the map
        this.layersPlugin.getMapModule().setZoomLevel(newZoom, true);
        
        // move map to geometries if available
        // this needs to be done after the zoom since it's comparing to viewport which changes in zoom
        if(layer.getGeometry().length > 0) {
        	var containsGeometry = this.layersPlugin.isInGeometry(layer);
        	// only move if not currently in geometry
        	if(!containsGeometry) {
		    	var center = layer.getGeometry()[0].getCentroid();
		    	this.layersPlugin.getMapModule().moveMapToLanLot(new OpenLayers.LonLat(center.x, center.y));
        	}
	    }
	    // notify components that the map has moved
        this.layersPlugin.getMapModule().notifyMoveEnd();
        // force visibility check immediately bypassing the performance
        // scheduler thats triggered by notifymoveend
        this.layersPlugin._checkLayersVisibility(this.layersPlugin._visibilityCheckOrder);
    }
    
}, {
    /**
     * @property {String[]} protocol array of superclasses as {String}
     * @static
     */
    protocol : ['Oskari.mapframework.core.RequestHandler']
});

define("bundles/framework/bundle/mapmodule-plugin/request/MapMoveByLayerContentRequestHandler", function(){});

/**
 * @class Oskari.mapframework.bundle.mapmodule.event.MapLayerVisibilityChangedEvent
 * 
 * This is used to notify that layers visibility has changed. Either the map has 
 * moved out of the layers scale range or the layers geometry is no longer in the maps viewport.
 * Listeners should also check getMapLayer().getVisible() method that indicates if the map has been hidden by the user.
 */
Oskari.clazz.define(
    'Oskari.mapframework.bundle.mapmodule.event.MapLayerVisibilityChangedEvent',
/**
 * @method create called automatically on construction
 * @static
 *
 * @param
 * {Oskari.mapframework.domain.WmsLayer/Oskari.mapframework.domain.WfsLayer/Oskari.mapframework.domain.VectorLayer}
 *      mapLayer maplayer thats visibility changed
 * 
 * @param {Boolean} inScale
 * 		true if layer is in scale
 * @param {Boolean} geometryMatch
 * 		(optional, defaults to true) true if geometry is in current map bbox
 */
    function(mapLayer, inScale, geometryMatch) {
        this._mapLayer = mapLayer;
        this._inScale = (inScale == true);
        // default to true
        this._geomMatch = (geometryMatch != false);
}, {
    /** @static @property __name event name */
    __name : "MapLayerVisibilityChangedEvent",
    /**
     * @method getName
     * @return {String} the name for the event 
     */
    getName : function() {
        return this.__name;
    },
    /**
     * @method getMapLayer
 	 * @return {Oskari.mapframework.domain.WmsLayer/Oskari.mapframework.domain.WfsLayer/Oskari.mapframework.domain.VectorLayer}
     */
    getMapLayer : function() {
        return this._mapLayer;
    },
    /**
     * @method isInScale
 	 * @return {Boolean} true if layer is in scale
     */
    isInScale : function() {
        return this._inScale;
    },
    /**
     * @method isGeometryMatch
 	 * @return {Boolean} true if in scale/geometry is visible
     */
    isGeometryMatch : function() {
        return this._geomMatch;
    }
}, {
    /**
     * @property {String[]} protocol array of superclasses as {String}
     * @static
     */
    'protocol' : [ 'Oskari.mapframework.event.Event' ]
});

define("bundles/framework/bundle/mapmodule-plugin/event/MapLayerVisibilityChangedEvent", function(){});

/**
 * @class Oskari.mapframework.mapmodule.WmsLayerPlugin
 * Provides functionality to draw WMS layers on the map
 */
Oskari.clazz.define('Oskari.ol3.mapmodule.plugin.WmsLayerPlugin',

/**
 * @method create called automatically on construction
 * @static
 */
function() {

}, {
    /** @static @property __name plugin name */
    __name : 'WmsLayerPlugin',

    /**
     * @method _addMapLayerToMap
     * @private
     * Adds a single WMS layer to this map
     * @param {Oskari.mapframework.domain.WmsLayer} layer
     * @param {Boolean} keepLayerOnTop
     * @param {Boolean} isBaseMap
     */
    _addMapLayerToMap : function(layer, keepLayerOnTop, isBaseMap) {

        var layers = [], layerIdPrefix = 'layer_';
        // insert layer or sublayers into array to handle them identically
        if ((layer.isGroupLayer() || layer.isBaseLayer() || isBaseMap == true) && (layer.getSubLayers().length > 0)) {
            // replace layers with sublayers
            layers = layer.getSubLayers();
            layerIdPrefix = 'basemap_';
        } else {
            // add layer into layers
            layers.push(layer);
        }

        // loop all layers and add these on the map
        for (var i = 0, ilen = layers.length; i < ilen; i++) {
            var _layer = layers[i];
            var layerScales = this.getMapModule().calculateLayerScales(_layer.getMaxScale(), _layer.getMinScale());

            var wms = {
                'URL' : _layer.getWmsUrls()[0],
                'LAYERS' : _layer.getWmsName(),
                'FORMAT' : 'image/png'
            };

            var layerImpl = new ol.layer.Tile({
                source : new ol.source.TileWMS({
                    url : wms.URL,
                    //crossOrigin : 'anonymous',
                    params : {
                        'LAYERS' : wms.LAYERS,
                        'FORMAT' : wms.FORMAT
                    }
                })
            });

            this.mapModule.addLayer(layerImpl, _layer, layerIdPrefix + _layer.getId());

            this._sandbox.printDebug("#!#! CREATED ol.layer.TileLayer for " + _layer.getId());

            if (keepLayerOnTop) {
                this.mapModule.setLayerIndex(layerImpl, this.mapModule.getLayers().length);
            } else {
                this.mapModule.setLayerIndex(layerImpl, 0);
            }
        }

    },

    /**
     * @method _afterMapLayerRemoveEvent
     * Removes the layer from the map
     * @private
     * @param {Oskari.mapframework.domain.WmsLayer} layer
     */
    _removeMapLayerFromMap : function(layer) {

        if (layer.isBaseLayer() || layer.isGroupLayer()) {
            var baseLayerId = "";
            if (layer.getSubLayers().length > 0) {
                for (var i = 0; i < layer.getSubLayers().length; i++) {
                    var subtmp = layer.getSubLayers()[i];
                    var name = 'basemap_' + subtmp.getId();
                    var remLayer = this.mapModule.getLayersByName(name);
                    if (remLayer && remLayer[0]) {
                        this.mapModule.removeLayer(remLayer[0], layer, name);
                    }
                }
            } else {
                var name = 'layer_' + layer.getId();
                var remLayer = this.mapModule.getLayersByName(name)[0];
                this.mapModule.removeLayer(remLayer, layer, name);
            }
        } else {
            var name = 'layer_' + layer.getId();
            var remLayer = this.mapModule.getLayersByName(name);
            /* This should free all memory */
            this.mapModule.removeLayer(remLayer[0], layer, name);
        }
    },

    /**
     * @method _afterChangeMapLayerOpacityEvent
     * Handle AfterChangeMapLayerOpacityEvent
     * @private
     * @param {Oskari.mapframework.event.common.AfterChangeMapLayerOpacityEvent}
     *            event
     */
    _afterChangeMapLayerOpacityEvent : function(event) {
        var layer = event.getMapLayer();
        if (layer.isBaseLayer() || layer.isGroupLayer()) {
            if (layer.getSubLayers().length > 0) {
                for (var bl = 0; bl < layer.getSubLayers().length; bl++) {
                    var mapLayer = this.mapModule.getLayersByName('basemap_' + layer
                    .getSubLayers()[bl].getId());
                    mapLayer[0].setOpacity(layer.getOpacity() / 100);
                }
            } else {
                var mapLayer = this.mapModule.getLayersByName('layer_' + layer.getId());
                if (mapLayer[0] != null) {
                    mapLayer[0].setOpacity(layer.getOpacity() / 100);
                }
            }
        } else {
            this._sandbox.printDebug("Setting Layer Opacity for " + layer.getId() + " to " + layer.getOpacity());
            var mapLayer = this.mapModule.getLayersByName('layer_' + layer.getId());
            if (mapLayer[0] != null) {
                mapLayer[0].setOpacity(layer.getOpacity() / 100);
            }
        }
    },
    /**
     * Handle AfterChangeMapLayerStyleEvent
     * @private
     * @param {Oskari.mapframework.event.common.AfterChangeMapLayerStyleEvent}
     *            event
     */
    _afterChangeMapLayerStyleEvent : function(event) {
        var layer = event.getMapLayer();

        // Change selected layer style to defined style
        if (!layer.isBaseLayer()) {
            var styledLayer = this.mapModule.getLayersByName('layer_' + layer.getId());
            /*if (styledLayer != null) {
             styledLayer[0].mergeNewParams({
             styles : layer.getCurrentStyle().getName()
             });
             }*/
        }
    },

    getLayerTypeIdentifier : function() {
        return 'wmslayer';
    },
    getLayerTypeSelector : function() {
        return 'WMS';
    }
}, {
    /**
     * @property {String[]} protocol array of superclasses as {String}
     * @static
     */
    'protocol' : ["Oskari.mapframework.module.Module", "Oskari.mapframework.ui.module.common.mapmodule.Plugin"],
    "extend" : ["Oskari.mapping.mapmodule.plugin.MapLayerPlugin"]
});

define("bundles/ol3/bundle/mapmodule-plugin/plugin/wmslayer/WmsLayerPlugin", function(){});

/**
 * @class Oskari.mapframework.mapmodule.WmtsLayerPlugin
 * Provides functionality to draw Wmts layers on the map
 */
Oskari.clazz.define('Oskari.ol3.mapmodule.plugin.WmtsLayerPlugin',

/**
 * @method create called automatically on construction
 * @static
 */
function() {
   
}, {
    /** @static @property __name plugin name */
    __name : 'WmtsLayerPlugin',
  
    /**
     * @method _addMapLayerToMap
     * @private
     * Adds a single Wmts layer to this map
     * @param {Oskari.mapframework.domain.WmtsLayer} layer
     * @param {Boolean} keepLayerOnTop
     * @param {Boolean} isBaseMap
     */
    _addMapLayerToMap : function(layer, keepLayerOnTop, isBaseMap) {

        if (!layer.isLayerOfType('WMTS')) {
            return;
        }

        var layers = [], layerIdPrefix = 'layer_';
        // insert layer or sublayers into array to handle them identically
        if ((layer.isGroupLayer() || layer.isBaseLayer() || isBaseMap == true) && (layer.getSubLayers().length > 0)) {
            // replace layers with sublayers
            layers = layer.getSubLayers();
            layerIdPrefix = 'basemap_';
        } else {
            // add layer into layers
            layers.push(layer);
        }

        // loop all layers and add these on the map
        for (var i = 0, ilen = layers.length; i < ilen; i++) {
            var _layer = layers[i];

            var wmtsUrl = _layer.getWmtsUrls()[0][0].url;
            var matrixSet = _layer.getWmtsMatrixSet();
            var matrixSetId = matrixSet.identifier;
            var layerName = _layer.getWmtsName();
            var style = _layer.getCurrentStyle().getName();
            var projection = this.mapModule.getProjectionObject();
            var projectionExtent = projection.getExtent();

            var matrixIds = [];
            var resolutions = [];
            var serverResolutions = [];

            for (var n = 0; n < matrixSet.matrixIds.length; n++) {

                matrixIds.push(matrixSet.matrixIds[n]);
                //.identifier);
                var scaleDenom = matrixSet.matrixIds[n].scaleDenominator;
                var res = scaleDenom / 90.71446714322 * OpenLayers.METERS_PER_INCH;
                resolutions.push(res)
                serverResolutions.push(res);

            }

            var wmtsCaps = _layer.getWmtsCaps();
            var wmtsOpts = ol.source.WMTS.optionsFromCapabilities(wmtsCaps, layerName);

            var layerImpl = new ol.layer.Tile({
                opacity : 1.0,
                source : new ol.source.WMTS(wmtsOpts)
            });

            /*var layer = new ol.layer.TileLayer({
             opacity : 0.9,
             source : new ol.source.WMTS({
             url : wmtsUrl,
             layer : layerName,
             matrixSet : matrixSetId,
             format : 'image/png',
             projection : projection,
             tileGrid : new ol.tilegrid.WMTS({
             origin : ol.extent.getTopLeft(projectionExtent),
             resolutions : serverResolutions,
             matrixIds : matrixIds
             }),
             style : style
             })
             });
             */

            this.mapModule.addLayer(layerImpl, _layer, layerIdPrefix + _layer.getId());

            if (keepLayerOnTop) {
                this.mapModule.setLayerIndex(layerImpl, this.mapModule.getLayers().length);
            } else {
                this.mapModule.setLayerIndex(layerImpl, 0);
            }
        }

    },
    /**
     * @method _afterMapLayerRemoveEvent
     * Removes the layer from the map
     * @private
     * @param {Oskari.mapframework.domain.WmtsLayer} layer
     */
    _removeMapLayerFromMap : function(layer) {

        if (!layer.isLayerOfType('WMTS')) {
            return;
        }

        if (layer.isBaseLayer() || layer.isGroupLayer()) {
            var baseLayerId = "";
            if (layer.getSubLayers().length > 0) {
                for (var i = 0; i < layer.getSubLayers().length; i++) {
                    var subtmp = layer.getSubLayers()[i];
                    var name = 'basemap_' + subtmp.getId();
                    var remLayer = this.mapModule.getLayersByName(name);
                    if (remLayer && remLayer[0] && remLayer[0].destroy) {
                        /*remLayer[0].destroy();*/
                        this.mapModule.removeLayer(remLayer[0], layer, name);
                    }
                }
            } else {
                var name = 'layer_' + layer.getId();
                var remLayer = this.mapModule.getLayersByName(name)[0];
                this.mapModule.removeLayer(remLayer, layer, name);
            }
        } else {
            var name = 'layer_' + layer.getId();
            var remLayer = this.mapModule.getLayersByName(name);
            /* This should free all memory */
            this.mapModule.removeLayer(remLayer[0], layer, name);
        }
    },
  
    /**
     * @method _afterChangeMapLayerOpacityEvent
     * Handle AfterChangeMapLayerOpacityEvent
     * @private
     * @param {Oskari.mapframework.event.common.AfterChangeMapLayerOpacityEvent}
     *            event
     */
    _afterChangeMapLayerOpacityEvent : function(event) {
        var layer = event.getMapLayer();  

        if (layer.isBaseLayer() || layer.isGroupLayer()) {
            if (layer.getSubLayers().length > 0) {
                for (var bl = 0; bl < layer.getSubLayers().length; bl++) {
                    var mapLayer = this.mapModule.getLayersByName('basemap_' + layer
                    .getSubLayers()[bl].getId());
                    mapLayer[0].setOpacity(layer.getOpacity() / 100);
                }
            } else {
                var mapLayer = this.mapModule.getLayersByName('layer_' + layer.getId());
                if (mapLayer[0] != null) {
                    mapLayer[0].setOpacity(layer.getOpacity() / 100);
                }
            }
        } else {
            this._sandbox.printDebug("Setting Layer Opacity for " + layer.getId() + " to " + layer.getOpacity());
            var mapLayer = this.mapModule.getLayersByName('layer_' + layer.getId());
            if (mapLayer[0] != null) {
                mapLayer[0].setOpacity(layer.getOpacity() / 100);
            }
        }
    },
    /**
     * Handle AfterChangeMapLayerStyleEvent
     * @private
     * @param {Oskari.mapframework.event.common.AfterChangeMapLayerStyleEvent}
     *            event
     */
    _afterChangeMapLayerStyleEvent : function(event) {
        var layer = event.getMapLayer();
     
        // Change selected layer style to defined style
        if (!layer.isBaseLayer()) {
            var styledLayer = this.mapModule.getLayersByName('layer_' + layer.getId());
            /*if (styledLayer != null) {
             styledLayer[0].mergeNewParams({
             styles : layer.getCurrentStyle().getName()
             });
             }*/
        }
    },
    
    getLayerTypeIdentifier : function() {
        return 'wmtslayer';
    },
    getLayerTypeSelector : function() {
        return 'WMTS';
    }
}, {
    /**
     * @property {String[]} protocol array of superclasses as {String}
     * @static
     */
    'protocol' : ["Oskari.mapframework.module.Module", "Oskari.mapframework.ui.module.common.mapmodule.Plugin"],
    "extend" : ["Oskari.mapping.mapmodule.plugin.MapLayerPlugin"]
});

define("bundles/ol3/bundle/mapmodule-plugin/plugin/wmtslayer/WmtsLayerPlugin", function(){});

/**
 * @class Oskari.mapframework.wmts.domain.WmtsLayer
 *
 * MapLayer of type WMTS
 */
Oskari.clazz.define('Oskari.mapframework.wmts.domain.WmtsLayer', 
/**
 * @method create called automatically on construction
 * @static
 */
function() {

    //Internal id for this map layer
    this._WmtsName = null;
    this._WmtsMatrixSet = null;
    this._WmtsLayerDef = null;

    // Description for layer
    this._WmtsUrls = [];

    /* Layer Type */
    this._layerType = "WMTS";
}, {
    /**
     * @method setWmtsName
     * @param {String} WmtsName used to identify service f.ex. in GetFeatureInfo queries.
     */
    setWmtsName : function(WmtsName) {
        this._WmtsName = WmtsName;
    },
    /**
     * @method getWmtsName
     * @return {String} wmsName used to identify service f.ex. in GetFeatureInfo queries.
     */
    getWmtsName : function() {
        return this._WmtsName;
    },
    /**
     * @method setWmtsMatrixSet
     * @return {Object} matrixSet
     */
    setWmtsMatrixSet : function(matrixSet) {
        this._WmtsMatrixSet = matrixSet;
    },
    /**
     * @method getWmtsMatrixSet
     * @return {Object}
     */
    getWmtsMatrixSet : function() {
        return this._WmtsMatrixSet;
    },
    /**
     * @method setWmtsLayerDef
     * @return {Object} def
     */
    setWmtsLayerDef : function(def) {
        this._WmtsLayerDef = def;
    },
    /**
     * @method getWmtsLayerDef
     * @return {Object}
     */
    getWmtsLayerDef : function() {
        return this._WmtsLayerDef;
    },
    /**
     * @method setWmtsLayerDef
     * @return {Object} def
     */
    setWmtsCaps : function(caps) {
        this._WmtsCaps = caps;
    },
    /**
     * @method getWmtsLayerDef
     * @return {Object}
     */
    getWmtsCaps : function() {
        return this._WmtsCaps ;
    },
    /**
     * @method addWmtsUrl
     * @param {String} WmtsUrl
     * Apppends the url to layer array of wmts image urls
     */
    addWmtsUrl : function(WmtsUrl) {
        this._WmtsUrls.push(WmtsUrl);
    },
    /**
     * @method getWmtsUrls
     * @return {String[]} 
     * Gets array of layer wmts image urls
     */
    getWmtsUrls : function() {
        return this._WmtsUrls;
    }
}, {
    "extend": ["Oskari.mapframework.domain.AbstractLayer"]
});

define("bundles/ol3/bundle/mapmodule-plugin/plugin/wmtslayer/WmtsLayer", function(){});

/*
 * @class
 */
Oskari.clazz.define('Oskari.mapframework.wmts.service.WmtsLayerModelBuilder', function() {

}, {
    /**
     * parses any additional fields to model
     */
    parseLayerData : function(layer, mapLayerJson, maplayerService) {

        layer.setWmtsName(mapLayerJson.wmsName);
        if (mapLayerJson.wmsUrl) {
            var wmsUrls = mapLayerJson.wmsUrl.split(",");
            for (var i = 0; i < wmsUrls.length; i++) {
                layer.addWmtsUrl(wmsUrls[i]);
            }
        }

        var styleBuilder = Oskari.clazz.builder('Oskari.mapframework.domain.Style');

        var styleSpec;

        for (var i = 0, ii = mapLayerJson.tileLayerData.styles.length; i < ii; ++i) {
            styleSpec = mapLayerJson.tileLayerData.styles[i];
            var style = styleBuilder();
            style.setName(styleSpec.identifier);
            style.setTitle(styleSpec.identifier);

            layer.addStyle(style);
            if (styleSpec.isDefault) {
                layer.selectStyle(styleSpec.identifier);
                break;
            }
        }

        /*
         * layer.setWmtsMatrixSet(mapLayerJson.tileMatrixSetData);
         *
         * layer.setWmtsLayerDef(mapLayerJson.tileLayerData);
         */

        layer.setFeatureInfoEnabled(true);
        layer.setWmtsMatrixSet(mapLayerJson.tileMatrixSetData);
        layer.setWmtsLayerDef(mapLayerJson.tileLayerData);
        layer._data = mapLayerJson;
        layer.setWmtsCaps(mapLayerJson.caps);

    }
});

define("bundles/ol3/bundle/mapmodule-plugin/plugin/wmtslayer/WmtsLayerModelBuilder", function(){});

/**
 * @class Oskari.mapframework.bundle.mapmodule.request.ToolSelectionRequest
 * 
 * Requests a tool to be activated on the map. Currently also used to trigger history navigation.
 */
Oskari.clazz.define('Oskari.mapframework.bundle.mapmodule.request.ToolSelectionRequest', 
/**
 * @method create called automatically on construction
 * @static
 *
 * @param {String}
 *            toolId id for the tool to select
 */
function(toolId) {
    this._toolId = toolId;
}, {
    /** @static @property tools available tools to select */
    tools : {
        navigate : 'map_control_navigate_tool',
        zoom : 'map_control_zoom_tool',
        previous : 'map_control_tool_prev',
        next : 'map_control_tool_prev',
        measure : 'map_control_measure_tool',
        measure_area : 'map_control_measure_area_tool',
        select : 'map_control_select_tool',
        draw_area : 'map_control_draw_area_tool'
    },
    /** @static @property __name request name */
    __name : "ToolSelectionRequest",
    /**
     * @method getName
     * @return {String} request name
     */
    getName : function() {
        return this.__name;
    },
    /**
     * @method getToolId
     * @return {String}
     */
    getToolId : function() {
        return this._toolId;
    },
    /**
     * @method setToolId
     * @param {String} toolId
     */
    setToolId : function(toolId) {
        this._toolId = toolId;
    },
    /**
     * @method getNamespace
     * If the toolId has . this returns the first part of the toolId, otherwise returns empty string
     * @return {String}
     */
    getNamespace : function() {
        if(this._toolId.indexOf('.') == -1) {
            return '';
        }
        // This should basically be the this._name of the sender
        return this._toolId.substring(0, this._toolId.lastIndexOf('.'));
    },
    /**
     * @method getToolName
     * If the toolId has . this returns the last part of the toolId, otherwise returns the toolId as is 
     * @return {String}
     */
    getToolName : function() {
        if(this._toolId.indexOf('.') == -1) {
            return this._toolId;
        }
        return this._toolId.substring(this._toolId.lastIndexOf('.'));
    }
}, {
    /**
     * @property {String[]} protocol array of superclasses as {String}
     * @static
     */
    'protocol' : ['Oskari.mapframework.request.Request']
});

define("bundles/framework/bundle/mapmodule-plugin/request/ToolSelectionRequest", function(){});

/**
 * @class Oskari.mapframework.mapmodule.ToolSelectionHandler
 * Handles ToolSelectionRequest requests
 */
Oskari.clazz.define('Oskari.mapframework.mapmodule.ToolSelectionHandler',

/**
 * @method create called automatically on construction
 * @static
 *
 * @param {Oskari.mapframework.sandbox.Sandbox}
 *            sandbox reference to sandbox
 * @param {Oskari.mapframework.mapmodule.ControlsPlugin}
 *            controlsPlugin reference to controlsPlugin
 */
function(sandbox, controlsPlugin) {

    this.sandbox = sandbox;
    this.controlsPlugin = controlsPlugin;
}, {
    /**
     * @method handleRequest
     * Handles the request
     * @param {Oskari.mapframework.core.Core} core
     *      reference to the application core (reference sandbox
     * core.getSandbox())
     * @param {Oskari.mapframework.bundle.mapmodule.request.ToolSelectionRequest}
     * request
     *      request to handle
     */
    handleRequest : function(core, request) {
        var toolId = request.getToolId();
        var namespace = request.getNamespace();
        var toolName = request.getToolName();
        if (toolName == 'map_control_tool_prev') {
            // custom history (TODO: more testing needed + do this with request
            // instead of findRegisteredModuleInstance)
            var stateHandler = this.sandbox.findRegisteredModuleInstance('StateHandler');
            if (stateHandler) {
                stateHandler.historyMovePrevious();
            }

        } else if (toolName == 'map_control_tool_next') {
            // custom history (TODO: more testing needed + do this with request
            // instead of findRegisteredModuleInstance)
            var stateHandler = this.sandbox.findRegisteredModuleInstance('StateHandler');
            if (stateHandler) {
                stateHandler.historyMoveNext();
            }
        } else if (toolName == 'map_control_select_tool') {
            // clear selected area
            var slp = this.sandbox.findRegisteredModuleInstance('SketchLayerPlugin');
            if (slp) {
                slp.clearBbox();
            }
        } else if (toolName == 'map_control_zoom_tool' && this.controlsPlugin._zoomBoxTool) {
            this.controlsPlugin._zoomBoxTool.activate();
        } else if (toolName == 'map_control_measure_tool' && this.controlsPlugin._measureControls) {
            this.controlsPlugin._measureControls.line.activate();
        } else if (toolName == 'map_control_measure_area_tool' && this.controlsPlugin._measureControls) {
            this.controlsPlugin._measureControls.area.activate();
        }
    }
}, {
    /**
     * @property {String[]} protocol array of superclasses as {String}
     * @static
     */
    protocol : ['Oskari.mapframework.core.RequestHandler']
});

define("bundles/framework/bundle/mapmodule-plugin/plugin/controls/ToolSelectionHandler", function(){});

/**
 * @class Oskari.mapframework.bundle.mapmodule.request.MapLayerUpdateRequest
 *
 * Class for requesting map layer update / refresh
 */
Oskari.clazz.define('Oskari.mapframework.bundle.mapmodule.request.MapLayerUpdateRequest',
/**
 * @method create called automatically on construction
 * @static
 *
 * @param {String}
 *            layerId layerId
 * @param {Boolean}
 *            forced true to force the update (optional)
 * @param {Object}
 *            optParameters additional parameters for WMS layer (optional, used for OpenLayers.Layer.mergeNewParams())
 */
function(layerId, forced, optParameters) {
    this._layerId = layerId;
    this._forced = (forced == true);
    this._parameters = optParameters;
}, {
    /** @static @property __name request name */
    __name : "MapModulePlugin.MapLayerUpdateRequest",
    /**
     * @method getName
     * @return {String} request name
     */
    getName : function() {
        return this.__name;
    },
    /**
     * @method getLayerId
     * @return {String} layerId
     */
    getLayerId : function() {
        return this._layerId;
    },
    /**
     * @method isForced
     * @return {Boolean}
     */
    isForced : function() {
        return this._forced;
    },
    /**
     * @method getParameters
     * additional parameters for WMS layer (optional, used for OpenLayers.Layer.mergeNewParams())
     * @return {Object}
     */
    getParameters : function() {
        return this._parameters;
    },
    /**
     * @method setParameters
     * additional parameters for WMS layer (optional, used for OpenLayers.Layer.mergeNewParams())
     * @param {Object} p
     */
    setParameters : function(p) {
        this._parameters = p;
    }
}, {
    /**
     * @property {String[]} protocol array of superclasses as {String}
     * @static
     */
    'protocol' : ['Oskari.mapframework.request.Request']
}); 
define("bundles/framework/bundle/mapmodule-plugin/request/MapLayerUpdateRequest", function(){});

/**
 * @class Oskari.mapframework.bundle.mapmodule.request.MapLayerUpdateRequestHandler
 * Handles MapModulePlugin.MapLayerUpdateRequest requests
 */
Oskari.clazz.define('Oskari.mapframework.bundle.mapmodule.request.MapLayerUpdateRequestHandler', 
/**
 * @method create called automatically on construction
 * @static
 *
 * @param {Oskari.mapframework.sandbox.Sandbox}
 *            sandbox reference to sandbox
 * @param {Oskari.mapframework.ui.module.common.MapModule}
 *            mapModule reference to mapmodule
 */
function(sandbox, mapModule) {

    this.sandbox = sandbox;
    this.mapModule = mapModule;
}, {
    /**
     * @method handleRequest 
     * Handles the request
     * @param {Oskari.mapframework.core.Core} core
     *      reference to the application core (reference sandbox core.getSandbox())
     * @param {Oskari.mapframework.bundle.mapmodule.request.MapLayerUpdateRequest} request
     *      request to handle
     */
    handleRequest : function(core, request) {
        var layerId = request.getLayerId();
        var forced = request.isForced();
        var params = request.getParameters();
        
        var sandbox = this.sandbox;
        var layer = sandbox.findMapLayerFromSelectedMapLayers(layerId);
        if(!layer) {
            return ;
        }

		if( params && layer.isLayerOfType("WMS") ) {
			var olLayerList = this.mapModule.getOLMapLayers(layerId);
        	var count = 0;
        	if(olLayerList) {
	        	count = olLayerList.length;
    	    	for(var i=0; i < olLayerList.length; ++i) {
        			olLayerList[i].mergeNewParams(params);
	        	}
    	    }
    	    this.sandbox.printDebug("[MapLayerUpdateRequestHandler] WMS layer / merge new params: " + layerId + ", found " + count);
    	    
		} else {             
	        var olLayerList = this.mapModule.getOLMapLayers(layerId);
        	var count = 0;
        	if(olLayerList) {
	        	count = olLayerList.length;
    	    	for(var i=0; i < olLayerList.length; ++i) {
        			olLayerList[i].redraw(forced);
	        	}
    	    }
    	    this.sandbox.printDebug("[MapLayerUpdateRequestHandler] Layer / update layer " + layerId + ", found " + count);
		}        
        
    }
}, {
    /**
     * @property {String[]} protocol array of superclasses as {String}
     * @static
     */
    protocol : ['Oskari.mapframework.core.RequestHandler']
});

define("bundles/framework/bundle/mapmodule-plugin/request/MapLayerUpdateRequestHandler", function(){});

/**
 * @class Oskari.mapframework.bundle.mapmodule.event.MapClickedEvent
 *
 * Event is sent when the map is clicked so bundles can react to it.
 */
Oskari.clazz.define('Oskari.mapframework.bundle.mapmodule.event.MapClickedEvent',
/**
 * @method create called automatically on construction
 * @static
 * @param {OpenLayers.LonLat} lonlat coordinates where the map was clicked
 * @param {Number} mouseX viewport mouse position x coordinate when click happened
 * @param {Number} mouseY viewport mouse position y coordinate when click happened
 */
function(lonlat, mouseX, mouseY) {
    this._lonlat = lonlat;
    this._mouseX = mouseX;
    this._mouseY = mouseY;
}, {
    /** @static @property __name event name */
    __name : "MapClickedEvent",
    /**
     * @method getName
     * @return {String} the name for the event
     */
    getName : function() {
        return this.__name;
    },
    /**
     * @method getLonLat
     * @return {OpenLayers.LonLat}
     */
    getLonLat : function() {
        return this._lonlat;
    },
    /**
     * @method getMouseX
     * @return {Number}
     */
    getMouseX : function() {
        return this._mouseX;
    },
    /**
     * @method getMouseY
     * @return {Number}
     */
    getMouseY : function() {
        return this._mouseY;
    }
}, {
    /**
     * @property {String[]} protocol array of superclasses as {String}
     * @static
     */
    'protocol' : ['Oskari.mapframework.event.Event']
});
define("bundles/framework/bundle/mapmodule-plugin/event/MapClickedEvent", function(){});

/**
 * @class Oskari.mapframework.bundle.mapmodule.event.EscPressedEvent
 * 
 * Event is sent when ESC key in keyboard is pressed so bundles can react to it.
 */
Oskari.clazz.define('Oskari.mapframework.bundle.mapmodule.event.EscPressedEvent', 
/**
 * @method create called automatically on construction
 * @static
 */
function() {
}, {
    /** @static @property __name event name */
    __name : "EscPressedEvent",
    /**
     * @method getName
     * @return {String} the name for the event 
     */
    getName : function() {
        return this.__name;
    }
}, {
    /**
     * @property {String[]} protocol array of superclasses as {String}
     * @static
     */
    'protocol' : ['Oskari.mapframework.event.Event']
});

define("bundles/framework/bundle/mapmodule-plugin/event/EscPressedEvent", function(){});

/**
 * @class Oskari.mapframework.bundle.mapmodule.request.ClearHistoryRequest
 * 
 * Request to clear any map navigation history data from the system.
 */
Oskari.clazz.define('Oskari.mapframework.bundle.mapmodule.request.ClearHistoryRequest', 

/**
 * @method create called automatically on construction
 * @static
 */
function() {
}, {
    /** @static @property __name request name */
    __name : "ClearHistoryRequest",
    /**
     * @method getName
     * @return {String} the name for the request 
     */
    getName : function() {
        return this.__name;
    }
}, {
    /**
     * @property {String[]} protocol array of superclasses as {String}
     * @static
     */
    'protocol' : ['Oskari.mapframework.request.Request']
});

define("bundles/framework/bundle/mapmodule-plugin/request/ClearHistoryRequest", function(){});

/**
 * @class Oskari.mapframework.bundle.mapmodule.controls.ClearHistoryHandler
 * Handles ClearHistoryRequest requests
 */
Oskari.clazz.define('Oskari.mapframework.bundle.mapmodule.controls.ClearHistoryHandler',
/**
 * @method create called automatically on construction
 * @static
 *
 * @param {Oskari.mapframework.sandbox.Sandbox}
 *            sandbox reference to sandbox
 * @param {Oskari.mapframework.ui.module.common.MapModule}
 *            mapModule reference to mapmodule
 */
function(sandbox, mapModule) {
    this.mapModule = mapModule;
    this.sandbox = sandbox;
},
{
    /**
     * @method handleRequest 
     * Handles the request
     * @param {Oskari.mapframework.core.Core} core
     *      reference to the application core (reference sandbox core.getSandbox())
     * @param {Oskari.mapframework.bundle.mapmodule.request.ClearHistoryRequest} request
     *      request to handle
     */
    handleRequest: function(core, request) {
        this.mapModule.clearNavigationHistory();
    }
},
{
    /**
     * @property {String[]} protocol array of superclasses as {String}
     * @static
     */
    protocol: ['Oskari.mapframework.core.RequestHandler']
});

define("bundles/framework/bundle/mapmodule-plugin/plugin/controls/ClearHistoryHandler", function(){});

/**
 * @class Oskari.mapframework.bundle.mapmodule.plugin.Portti2Zoombar
 * 
 * Zoombar implementation with jQuery UI and refined graphics. Location can be configured,
 * but defaults on top of the map with placement details on the css-file.
 * 
 * See http://www.oskari.org/trac/wiki/DocumentationBundleMapModulePluginPorttiZoombar
 */
Oskari.clazz.define('Oskari.mapframework.bundle.mapmodule.plugin.Portti2Zoombar',

/**
 * @method create called automatically on construction
 * @static
 */
function(config) {
    this.mapModule = null;
    this.pluginName = null;
    this._sandbox = null;
    this._map = null;
    this.__templates = {};
    this.__elements = {};
    this.__parent = null;
    this._slider = null;
    this._zoombar_messages = {};
    this._suppressEvents = false;
    this._conf = config;
}, {
    /**
     * @static
     * @property __name
     */
    __name : 'Portti2Zoombar',

    /**
     * @method getName
     * @return {String} the name for the component
     */
    getName : function() {
        return this.pluginName;
    },
    /**
     * @method getMapModule
     * Returns reference to map module
     * @return {Oskari.mapframework.ui.module.common.MapModule} 
     */
    getMapModule : function() {
        return this.mapModule;
    },
    /**
     * @method hasUI
     * This plugin has an UI so always returns true
     * @return {Boolean} true
     */
    hasUI : function() {
        return true;
    },
    /**
     * @method setMapModule
     * @param {Oskari.mapframework.ui.module.common.MapModule} reference to map
     * module
     */
    setMapModule : function(mapModule) {
        this.mapModule = mapModule;
        if(mapModule) {
            this._map = mapModule.getMap();
            this.pluginName = mapModule.getName() + this.__name;
        }
    },
    /**
     * @method init
     * implements Module protocol init method - declares popup templates
     */
    init : function() {
        var me = this;
        // templates
        this.__templates['zoombar'] = jQuery('<div class="oskariui mapplugin pzbDiv">' + 
            '<div class="pzbDiv-plus"  title="Katu"></div>' + 
            '<input type=\'hidden\' />' + 
            '<div class="slider"></div>' + 
            '<div class="pzbDiv-minus"  title="Koko Maa"></div>' + 
        '</div>');
    },
    /**
     * @method register
     * mapmodule.Plugin protocol method - does nothing atm
     */
    register : function() {

    },
    /**
     * @method unregister
     * mapmodule.Plugin protocol method - does nothing atm
     */
    unregister : function() {
    },
    /**
     * @method startPlugin
     * @param {Oskari.mapframework.sandbox.Sandbox} sandbox
     * mapmodule.Plugin protocol method.
     * Sets sandbox and registers self to sandbox
     */
    startPlugin : function(sandbox) {
        this._sandbox = sandbox;
        sandbox.register(this);

        for(p in this.eventHandlers) {
            sandbox.registerForEventByName(this, p);
        }
        this._draw();
        this._setZoombarValue(this._map.getZoom());
    },
    /**
     * @method stopPlugin
     * mapmodule.Plugin protocol method.
     * Unregisters self from sandbox and removes plugins UI.
     * @param {Oskari.mapframework.sandbox.Sandbox} sandbox
     */
    stopPlugin : function(sandbox) {

        if(this.__elements['zoombarSlider']) {
            this.__elements['zoombarSlider'].remove();
            this._slider.remove();
            delete this.__elements['zoombarSlider'];
        }
        sandbox.unregister(this);

        //this._map = null;
        this._sandbox = null;
    },
    /**
     * @method _draw
     * @private
     * 
     * Draws the zoombar on the screen.
     */
    _draw : function() {
        var me = this;
        if(!me.__parent) {
            me.__parent = this._map.div;
        }
        if(!me.__elements['zoombarSlider']) {
            me.__elements['zoombarSlider'] = me.__templates['zoombar'].clone();
        }

        var inputId = 'pzb-input-' + this.getName();
        var sliderId = 'pzb-slider-' + this.getName();
        var sliderEl = me.__elements['zoombarSlider'].find('div.slider');

        me.__elements['zoombarSlider'].find('input').attr('id', inputId);
        sliderEl.attr('id', sliderId);
        
        me.__elements['zoombarSlider'].mousedown(function(event) {
            event.stopPropagation();
        });
        
        jQuery(me.__parent).append(me.__elements['zoombarSlider']);

        var sliderEl = me.__elements['zoombarSlider'].find('div.slider');
        sliderEl.css("height",(this._map.getNumZoomLevels()*11)+"px");
        me._slider = sliderEl.slider({
            orientation: "vertical",
            range: "min",
            min: 0,
            max: this._map.getNumZoomLevels()-1,
            value: this._map.getZoom(),
            slide: function( event, ui ) {
                me.getMapModule().zoomTo( ui.value );
            }
        });
        
       
        var plus = me.__elements['zoombarSlider'].find('.pzbDiv-plus');
        plus.bind('click', function(event) {
            if(me._slider.slider('value') < me._map.getNumZoomLevels()) {
                me.getMapModule().zoomTo(me._slider.slider('value') + 1);
            }
        });
        var minus = me.__elements['zoombarSlider'].find('.pzbDiv-minus');
        minus.bind('click', function(event) {
            if(me._slider.slider('value') > 0) {
                me.getMapModule().zoomTo(me._slider.slider('value') - 1);
            }
        });
        // override default location if configured
        if(this._conf && this._conf.location) {
            me.setZoombarLocation(this._conf.location, me.__elements['zoombarSlider']);
        }

        // Change the style if in the conf
        if (me._conf && me._conf.toolStyle) {
            me.changeToolStyle(me._conf.toolStyle, me.__elements['zoombarSlider']);
        }
    },
    /**
     * @method _setZoombarValue
     * Sets the zoombar slider value
     * @private
     * @param {Number} value new Zoombar value
     */
    _setZoombarValue : function(value) {
        var me = this;
        if(me._slider) {
            // disable events in "onChange"
            this._suppressEvents = true;
            /*me._slider.setValue(value);*/
           me._slider.slider('value',value);
            this._suppressEvents = false;
        }
    },

    /**
     * Sets the location of the zoombar.
     *
     * @method setZoombarLocation
     * @param {Object} location The new location
     * @param {Object} zoombarContainer The element where the zoombar is contained in
     */
    setZoombarLocation: function(location, zoombarContainer) {
        if (!zoombarContainer) {
            zoombarContainer = this.__elements['zoombarSlider'];
        }
        // clear possible opposite position with 'auto'
        if(location.top) {
            zoombarContainer.css('bottom', 'auto');
            zoombarContainer.css('top', location.top);
        }
        if(location.left) {
            zoombarContainer.css('right', 'auto');
            zoombarContainer.css('left', location.left);
        }
        if(location.right) {
            zoombarContainer.css('left', 'auto');
            zoombarContainer.css('right', location.right);
        }
        if(location.bottom) {
            zoombarContainer.css('top', 'auto');
            zoombarContainer.css('bottom', location.bottom);
        }
    },

    /**
     * @property {Object} eventHandlers
     * @static
     */
    eventHandlers : {
        'AfterMapMoveEvent' : function(event) {
            if(this._sandbox) {
                var me = this;
                me._setZoombarValue(event.getZoom());
            }
        }
    },

    /**
     * @method onEvent
     * @param {Oskari.mapframework.event.Event} event a Oskari event object
     * Event is handled forwarded to correct #eventHandlers if found or discarded
     * if not.
     */
    onEvent : function(event) {
        return this.eventHandlers[event.getName()].apply(this, [event]);
    },
    /**
     * @method start
     * @param {Oskari.mapframework.sandbox.Sandbox} sandbox
     * Module protocol method - does nothing atm
     */
    start : function(sandbox) {
    },
    /**
     * @method stop
     * @param {Oskari.mapframework.sandbox.Sandbox} sandbox
     * Module protocol method - does nothing atm
     */
    stop : function(sandbox) {
    },

    /**
     * Changes the tool style of the plugin
     *
     * @method changeToolStyle
     * @param {Object} style
     * @param {jQuery} div
     */
    changeToolStyle: function(style, div) {
        div = div || this.__elements['zoombarSlider'];

        if (!style || !div) return;

        var resourcesPath = this.getMapModule().getImageUrl(),
            imgUrl = resourcesPath + '/framework/bundle/mapmodule-plugin/plugin/portti2zoombar/images/',
            styleName = style.val,
            zoombarImg = imgUrl + 'zoombar-' + styleName + '.png',
            zoombarCursorImg = imgUrl + 'zoombar-cursor-' + styleName + '.png',
            zoombarMinusImg = imgUrl + 'zoombar_minus-' + styleName + '.png',
            zoombarPlusImg = imgUrl + 'zoombar_plus-' + styleName + '.png',
            bar = div.find('.ui-slider-vertical'),
            cursor = div.find('.ui-slider-handle'),
            plus = div.find('.pzbDiv-plus'),
            minus = div.find('.pzbDiv-minus'),
            slider = div.find('div.slider');

        // Used to get the cursor to the right position since
        // it's off by 2 pixels with the 'rounded' style.
        var isRounded = styleName.match(/^rounded/);

        var sliderHeight = this._map.getNumZoomLevels() * style.heightCenter;

        bar.css({
            'background-image': 'url("' + zoombarImg + '")',
            'width': style.widthCenter,
            'margin-left': '0'
        });
        cursor.css({
            'background-image': 'url("' + zoombarCursorImg + '")',
            'width': style.widthCursor,
            'height': style.heightCursor,
            'margin-left': (isRounded ? '2px' : '0')
        });
        plus.css({
            'background-image': 'url("' + zoombarPlusImg + '")',
            'width': style.widthPlus,
            'height': style.heightPlus
        });
        minus.css({
            'background-image': 'url("' + zoombarMinusImg + '")',
            'width': style.widthMinus,
            'height': style.heightMinus
        });
        slider.css({
            'height': sliderHeight + 'px'
        });
    }
}, {
    /**
     * @property {String[]} protocol
     * @static
     */
    'protocol' : ["Oskari.mapframework.module.Module", "Oskari.mapframework.ui.module.common.mapmodule.Plugin"]
});

define("bundles/framework/bundle/mapmodule-plugin/plugin/zoombar/Portti2Zoombar", function(){});

requirejs.s.contexts._.nextTick = function(f){f()}; require(['css'], function(css) { css.addBuffer('resources/framework/bundle/mapmodule-plugin/plugin/portti2zoombar/css/porttizoombar.css'); }); requirejs.s.contexts._.nextTick = requirejs.nextTick;
/**
 * @class Oskari.ol3.mapmodule.plugin.PanButtons
 * Adds on-screen pan buttons on the map. In the middle of the pan buttons is a state reset button.
 * See http://www.oskari.org/trac/wiki/DocumentationBundleMapModulePluginPanButtons
 */
Oskari.clazz.define('Oskari.ol3.mapmodule.plugin.PanButtons',

/**
 * @method create called automatically on construction
 * @static
 */
function(config) {
    this.__conf.location = {
        'top' : "20px",
        "right" : "20px"
    };
}, {
    createControlAdapter : function(el) {
        var elPanBtn = el.get()[0];
        var ctl = new ol.control.Control({
            element : elPanBtn
        });
        ctl.handleMapPostrender = function() {

        };
        return ctl;
    }
}, {
    /**
     * @property {String[]} protocol
     * @static
     */
    'protocol' : ["Oskari.mapframework.module.Module", "Oskari.mapframework.ui.module.common.mapmodule.Plugin"],
    "extend" : ["Oskari.mapping.mapmodule.plugin.PanButtons"]

});

define("bundles/ol3/bundle/mapmodule-plugin/plugin/panbuttons/PanButtons", function(){});

requirejs.s.contexts._.nextTick = function(f){f()}; require(['css'], function(css) { css.addBuffer('resources/framework/bundle/mapmodule-plugin/plugin/panbuttons/css/panbuttons.css'); }); requirejs.s.contexts._.nextTick = requirejs.nextTick;
requirejs.s.contexts._.nextTick = function(f){f()}; require(['css'], function(css) { css.addBuffer('resources/framework/bundle/mapmodule-plugin/css/mapmodule.css'); }); requirejs.s.contexts._.nextTick = requirejs.nextTick;
Oskari.registerLocalization({
  "lang": "fi",
  "key": "MapModule",
  "value": {
    "status_update_map": "Päivitetään karttaa",
    "zoombar_tooltip": {
      "zoomLvl-0": "Taustakartta",
      "zoomLvl-1": "Koko maa",
      "zoomLvl-2": "Maakunta",
      "zoomLvl-3": "",
      "zoomLvl-4": "Kunta",
      "zoomLvl-5": "",
      "zoomLvl-6": "",
      "zoomLvl-7": "Kunnan osa",
      "zoomLvl-8": "",
      "zoomLvl-9": "",
      "zoomLvl-10": "Katu",
      "zoomLvl-11": "",
      "zoomLvl-12": ""
    },
    "plugin": {
      "LogoPlugin": {
        "terms": "Käyttöehdot"
      },
      "DataSourcePlugin": {
        "link": "Aineistolähde",
        "popup": {
          "title": "Tietolähteet",
          "content": " "
        },
        "button": {
          "close": "Sulje"
        }
      },
      "LayerSelectionPlugin": {
        "title": "Karttatasot",
        "chooseDefaultBaseLayer": "Valitse karttapohja"
      },
      "SearchPlugin": {
        "placeholder": "Hae paikkoja/osoitteita",
        "search": "Hae",
        "close": "Sulje hakutulokset",
        "noresults": "Haulla ei löytynyt tuloksia",
        "toomanyresults": "Löytyi yli 100 tulosta, tarkenna hakua.",
        "column_name": "Nimi",
        "column_village": "Kunta",
        "column_type": "Tyyppi"
      },
      "GetInfoPlugin": {
        "title": "Kohdetiedot",
		"layer": "Taso",
		"places": "Kohteet",
		"description": "Kuvaus",
		"link": "URL-osoite",
		"name": "Nimi"
      }
    }
  }
});
define("bundles/framework/bundle/mapmodule-plugin/locale/fi", function(){});

Oskari.registerLocalization({
  "lang": "sv",
  "key": "MapModule",
  "value": {
    "status_update_map": "Uppdaterar kartan",
    "zoombar_tooltip": {
      "zoomLvl-0": "Bakgrundskarta",
      "zoomLvl-1": "Hela landet",
      "zoomLvl-2": "Landskap",
      "zoomLvl-3": "",
      "zoomLvl-4": "Kommun",
      "zoomLvl-5": "",
      "zoomLvl-6": "",
      "zoomLvl-7": "Stadsdel",
      "zoomLvl-8": "",
      "zoomLvl-9": "",
      "zoomLvl-10": "Gata",
      "zoomLvl-11": "",
      "zoomLvl-12": ""
    },
    "plugin": {
      "LogoPlugin": {
        "terms": "Användningsvillkor"
      },
       "DataSourcePlugin": {
        "link": "Datakälla",
        "popup": {
          "title": "Datakällor",
          "content": " "
        },
        "button": {
          "close": "Stäng"
        }
      },
      "LayerSelectionPlugin": {
        "title": "Kartlager",
        "chooseDefaultBaseLayer": "Välj bottenkarta"
      },
      "SearchPlugin": {
        "placeholder": "Sök plats/adress",
        "search": "Sök",
        "close": "Stäng sökresultat",
        "noresults": "Inga träffar",
        "toomanyresults": "Över 100 träffar, avgränsa sökningen.",
        "column_name": "Namn",
        "column_village": "Kommun",
        "column_type": "Typ"
      },
      "GetInfoPlugin": {
        "title": "Objektuppgifter",
		"layer": "Lagret",
		"places": "Object",
		"description": "Beskrivning",
		"link": "URL-address",
		"name": "Namn"
      }
    }
  }
});
define("bundles/framework/bundle/mapmodule-plugin/locale/sv", function(){});

Oskari.registerLocalization({
  "lang": "en",
  "key": "MapModule",
  "value": {
    "status_update_map": "Updating map",
    "zoombar_tooltip": {
      "zoomLvl-0": "Background map",
      "zoomLvl-1": "Country",
      "zoomLvl-2": "Province",
      "zoomLvl-3": "",
      "zoomLvl-4": "Town",
      "zoomLvl-5": "",
      "zoomLvl-6": "",
      "zoomLvl-7": "Part of town",
      "zoomLvl-8": "",
      "zoomLvl-9": "",
      "zoomLvl-10": "Street",
      "zoomLvl-11": "",
      "zoomLvl-12": ""
    },
    "plugin": {
      "LogoPlugin": {
        "terms": "Terms of Use"
      },
       "DataSourcePlugin": {
        "link": "Data Source",
        "popup": {
          "title": "Data Sources",
          "content": " "
        },
        "button": {
          "close": "Close"
        }
      },
      "LayerSelectionPlugin": {
        "title": "Object data",
        "chooseDefaultBaseLayer": "Select background map layer"
      },
      "SearchPlugin": {
        "placeholder": "Find places",
        "search": "Find",
        "close": "Close search results",
        "noresults": "No results found",
        "toomanyresults": "Over 100 results found. Please refine your search.",
        "column_name": "Name",
        "column_village": "Municipality",
        "column_type": "Type"
      },
      "GetInfoPlugin": {
        "title": "Map layers",
		"layer": "Layer",
		"places": "Places",
		"description": "Description",
		"link": "URL-address",
		"name": "Name"
      }
    }
  }
});
define("bundles/framework/bundle/mapmodule-plugin/locale/en", function(){});

define('bundles/ol3/bundle/mapmodule-plugin/module',[
	"oskari",
	"jquery",
    "bundles/oskari/base/module",
	"../../../mapping/bundle/mapmodule-plugin/map-module",
	"../../../mapping/bundle/mapmodule-plugin/plugin/MapPlugin",
	"../../../mapping/bundle/mapmodule-plugin/plugin/MapLayerPlugin",
	"../../../mapping/bundle/mapmodule-plugin/plugin/panbuttons/PanButtons",
	"../../../mapping/bundle/mapmodule-plugin/plugin/layers/LayersPlugin",
	"../../../framework/bundle/mapmodule-plugin/request/MapLayerVisibilityRequest",
	"../../../mapping/bundle/mapmodule-plugin/request/MapLayerVisibilityRequestHandler",
	"../../../mapping/bundle/mapmodule-plugin/request/MapMoveRequestHandler",
	"./ui/module/map-module",
	"../../../framework/bundle/mapmodule-plugin/plugin/Plugin",
	"./plugin/controls/ControlsPlugin",
	"../../../framework/bundle/mapmodule-plugin/request/DisableMapKeyboardMovementRequest",
	"../../../framework/bundle/mapmodule-plugin/request/DisableMapMouseMovementRequest",
	"../../../framework/bundle/mapmodule-plugin/request/EnableMapKeyboardMovementRequest",
	"../../../framework/bundle/mapmodule-plugin/request/EnableMapMouseMovementRequest",
	"../../../framework/bundle/mapmodule-plugin/request/MapMovementControlsRequestHandler",
	"../../../../sources/framework/request/common/show-map-measurement-request",
	"../../../framework/bundle/mapmodule-plugin/request/MapMoveByLayerContentRequest",
	"../../../framework/bundle/mapmodule-plugin/request/MapMoveByLayerContentRequestHandler",
	"../../../framework/bundle/mapmodule-plugin/event/MapLayerVisibilityChangedEvent",
	"./plugin/wmslayer/WmsLayerPlugin",
	"./plugin/wmtslayer/WmtsLayerPlugin",
	"./plugin/wmtslayer/WmtsLayer",
	"./plugin/wmtslayer/WmtsLayerModelBuilder",
	"../../../framework/bundle/mapmodule-plugin/request/ToolSelectionRequest",
	"../../../framework/bundle/mapmodule-plugin/plugin/controls/ToolSelectionHandler",
	"../../../framework/bundle/mapmodule-plugin/request/MapLayerUpdateRequest",
	"../../../framework/bundle/mapmodule-plugin/request/MapLayerUpdateRequestHandler",
	"../../../framework/bundle/mapmodule-plugin/event/MapClickedEvent",
	"../../../framework/bundle/mapmodule-plugin/event/EscPressedEvent",
	"../../../framework/bundle/mapmodule-plugin/request/ClearHistoryRequest",
	"../../../framework/bundle/mapmodule-plugin/plugin/controls/ClearHistoryHandler",
	"../../../framework/bundle/mapmodule-plugin/plugin/zoombar/Portti2Zoombar",
	"css!resources/framework/bundle/mapmodule-plugin/plugin/portti2zoombar/css/porttizoombar.css",
	"./plugin/panbuttons/PanButtons",
	"css!resources/framework/bundle/mapmodule-plugin/plugin/panbuttons/css/panbuttons.css",
	"css!resources/framework/bundle/mapmodule-plugin/css/mapmodule.css",
	"../../../framework/bundle/mapmodule-plugin/locale/fi",
	"../../../framework/bundle/mapmodule-plugin/locale/sv",
	"../../../framework/bundle/mapmodule-plugin/locale/en"
], function(Oskari, jQuery) {
	return Oskari.bundleCls("mapmodule-plugin").category({
		create: function() {
			return this;
		},
		update: function(manager, bundle, bi, info) {},
		start: function() {

		},
		stop: function() {

		}
	})
});
/**
 * @class Oskari.userinterface.bundle.ui.UserInterfaceBundleInstance
 *
 * Default DIV Manager implementation handles menu like and detached DIVs
 * handles hiding showing DIVS.
 * Draggability is enabled in top-border element when DIV is detached
 *
 */
Oskari.clazz.define("Oskari.userinterface.bundle.ui.UserInterfaceBundleInstance",

    /**
     * @method init called on constructing this instance
     */

    function () {
        this.sandbox = null;

        /**
         * @property requestHandlers
         */
        this.requestHandlers = {};

        this.extensions = [];
        this.extensionsByName = {};

        /**
         * @property compiledTemplates
         *
         * HTML templates 'compiled' with jQuery - HTML code in static property templates
         */
        this.compiledTemplates = {};

        /**
         * @property flyoutContainer (document.body)
         */
        this.flyoutContainer = null;

        /**
         * @property tileContainer (#menubar)
         */
        this.tileContainer = null;

        /**
         * @property flyoutZIndexBase
         */
        this.flyoutZIndexBase = 1100;

        /**
         * @property menubarContainerId
         */
        this.menubarContainerId = "#menubar";

    }, {

        getName: function () {
            return "userinterface.DivManazer";
        },
        init: function (sandbox) {

        },
        getExtensionByName: function (name) {
            return this.extensionsByName[name];
        },
	    /**
	     * @method getSandbox
	     */
        getSandbox: function () {
            return this.sandbox;
        },
        /**
         * @method start
         *
         * implements BundleInstance start methdod
         *
         * creates tile and flyout compiledTemplates
         * creates and registers request handlers
         *
         */
        "start": function () {

            /*
             * setup templates
             */
            this.compileTemplates();

            /*
             * setup requests and handlers
             */
            var conf = this.conf,
                sandboxName = (conf ? conf.sandbox : null) || 'sandbox',
                sandbox = Oskari.getSandbox(sandboxName),
                //menubarContainerId,
                toFix,
                height,
                ieFixClasses,
                n,
                fix;

            this.sandbox = sandbox;

            this.flyoutContainer = jQuery(document.body);

            //menubarContainerId = (conf ? conf.menubarContainerId : null) || this.menubarContainerId;
            this.tileContainer = jQuery(this.menubarContainerId);
            this.tileContainer.addClass("oskari-tile-container");



            this.sandbox.register(this);

            this.requestHandlers.add = Oskari.clazz.create('Oskari.userinterface.bundle.ui.request.AddExtensionRequestHandler', this);
            this.requestHandlers.remove = Oskari.clazz.create('Oskari.userinterface.bundle.ui.request.RemoveExtensionRequestHandler', this);
            this.requestHandlers.update = Oskari.clazz.create('Oskari.userinterface.bundle.ui.request.UpdateExtensionRequestHandler', this);

            sandbox.addRequestHandler('userinterface.AddExtensionRequest', this.requestHandlers.add);
            sandbox.addRequestHandler('userinterface.RemoveExtensionRequest', this.requestHandlers.remove);
            sandbox.addRequestHandler('userinterface.UpdateExtensionRequest', this.requestHandlers.update);

            this.requestHandlers.modal = Oskari.clazz.create('Oskari.userinterface.bundle.ui.request.ModalDialogRequestHandler', this);
            sandbox.addRequestHandler('userinterface.ModalDialogRequest', this.requestHandlers.modal);

            /* removed for some reason or another */
            //sandbox.registerAsStateful(this.mediator.bundleId, this);

            /* IE fixes for flyout height others use CSS media query */
            if (jQuery.browser.msie && jQuery.browser.version < "9.0") {
                toFix = this.compiledTemplates['Oskari.userinterface.Flyout'].children('.oskari-flyoutcontentcontainer');
                height = this.flyoutContainer.height();
                ieFixClasses = this.ieFixClasses;
                for (n = 0; n < ieFixClasses.length; n += 1) {
                    fix = ieFixClasses[n];

                    if (height >= fix.min && height <= fix.max) {
                        toFix.addClass(fix.cls);
                        break;
                    }
                }

            }
        },
        /**
         * @method update
         *
         * implements bundle instance update method
         */
        "update": function () {

        },
        /**
         * @method stop
         *
         * implements bundle instance stop method
         *
         * removes request handlers
         */
        "stop": function () {
            sandbox.removeRequestHandler('userinterface.UpdateExtensionRequest', this.requestHandlers.update);
            sandbox.removeRequestHandler('userinterface.RemoveExtensionRequest', this.requestHandlers.remove);
            sandbox.removeRequestHandler('userinterface.AddExtensionRequest', this.requestHandlers.add);
            sandbox.removeRequestHandler('userinterface.ModalDialogRequest', this.requestHandlers.modal);

            //this.sandbox.unregisterStateful(this.mediator.bundleId);

            this.sandbox.unregister(this);
            this.started = false;

        },
        /**
         * HTML templates
         */
        "templates": {

            /* menu tile */
            "Oskari.userinterface.Tile": '<div class="oskari-tile oskari-tile-closed">' + '<div class="oskari-tile-title"></div>' + '<div class="oskari-tile-status"></div>' + '</div>',

            /* flyout */
            "Oskari.userinterface.Flyout": '<div class="oskari-flyout oskari-closed">' + '<div class="oskari-flyouttoolbar">' + '<div class="oskari-flyoutheading"></div>' + '<div class="oskari-flyout-title">' + '<p></p>' + '</div>' + '<div class="oskari-flyouttools">' + '<div class="oskari-flyouttool-help">' + '</div>' + '<div class="oskari-flyouttool-attach">' + '</div>' + '<div class="oskari-flyouttool-detach">' + '</div>' + '<div class="oskari-flyouttool-minimize">' + '</div>' + '<div class="oskari-flyouttool-restore">' + '</div>' + '<div class="oskari-flyouttool-close icon-close icon-close:hover">' + '</div>' + '</div>' + '</div>' + '<div class="oskari-flyoutcontentcontainer">' + '<div class="oskari-flyoutcontent"></div>' + '</div>' + '</div>',

            /* view */
            "Oskari.userinterface.View": '<div class="oskari-view"></div>'

        },

        /**
         * @method compileTemplates
         *
         * creates jQuery template to be cloned to any menubar Tiles
         */
        "compileTemplates": function () {
            /**
             * Templates
             */
            var me = this,
                flyout;
            me.compiledTemplates['Oskari.userinterface.Tile'] = jQuery(this.templates['Oskari.userinterface.Tile']);

            flyout = jQuery(me.templates['Oskari.userinterface.Flyout']);

		/*flyout.css('left', '-3195px');
		 flyout.css('top', '-3100px');*/
            flyout.css('left', me.defaults.attach.left);
            flyout.css('top', me.defaults.attach.top);

            me.compiledTemplates['Oskari.userinterface.Flyout'] = flyout;

            me.compiledTemplates['Oskari.userinterface.View'] = jQuery(this.templates['Oskari.userinterface.View']);
        },
        /**
         * @method addExtension
         *
         * adds extension to Oskari DIV Manager in response to a
         * AddExtensionRequest
         */
        "addExtension": function (extension) {

            var me = this,
                plugins,
                //plugin,
                extensions,
                extensionsByName,
                extensionInfo,
                count,
                name,
                flyoutPlugin,
                flyout,
                el,
                fcc,
                //fcccc,
                tilePlugin,
                tile,
                viewPlugin,
                view;
            extension.startExtension();

            plugins = extension.getPlugins();

            //plugin = null;
            extensions = me.extensions;
            extensionsByName = me.extensionsByName;

            extensionInfo = {
                state: 'close',
                extension: extension,
                draggable: null,
                draggableTarget: null,
                draggableHandle: null,
                viewState: {},
                extensionUpdatedEvent: null
            };

            extensionInfo.extensionUpdatedEvent = me.sandbox.getEventBuilder('userinterface.ExtensionUpdatedEvent')(extension, extensionInfo.state);

            count = extensions.length;
            name = extension.getName();

            flyoutPlugin = plugins['Oskari.userinterface.Flyout'];
            flyout = null;
            el = null;
            if (flyoutPlugin !== null && typeof flyoutPlugin !== 'undefined') {
                flyout = me.createFlyout(extension, flyoutPlugin, count, extensionInfo);

                me._applyDraggableToFlyout(flyout, extensionInfo, '.oskari-flyouttoolbar');

                fcc = flyout.children('.oskari-flyoutcontentcontainer');
                //fcccc = fcc.children('.oskari-flyoutcontent');

                el = fcc.children('.oskari-flyoutcontent');

                flyoutPlugin.setEl(el.get());

                me.flyoutContainer.append(flyout);

                flyoutPlugin.startPlugin();

            }

            tilePlugin = plugins['Oskari.userinterface.Tile'];
            tile = null;
            if (tilePlugin !== null && typeof tilePlugin !== 'undefined') {
                tile = me.createTile(extension, tilePlugin, count, extensionInfo);

                tilePlugin.startPlugin();

                tile.fadeIn(200);

                me.tileContainer.append(tile);
            }

            viewPlugin = plugins['Oskari.userinterface.View'];
            view = null;
            if (viewPlugin !== null && typeof viewPlugin !== 'undefined') {
                view = me.createView(extension, viewPlugin, count, extensionInfo);
                el = view;
                viewPlugin.setEl(el.get());
                viewPlugin.startPlugin();

            }


            /*
             * store these for further usage
             */
            extensionInfo.plugins = {};

            if (tilePlugin) {
                extensionInfo.plugins['Oskari.userinterface.Tile'] = {
                    plugin: tilePlugin,
                    el: tile
                };
            }
            if (flyoutPlugin) {
                extensionInfo.plugins['Oskari.userinterface.Flyout'] = {
                    plugin: flyoutPlugin,
                    el: flyout
                };
            }
            if (viewPlugin) {
                extensionInfo.plugins['Oskari.userinterface.View'] = {
                    plugin: viewPlugin,
                    el: view
                };
            }

            extensions.push(extensionInfo);
            extensionsByName[name] = extensionInfo;

            return extensionInfo;
        },
        /**
         * @method _applyDraggableToFlyout
         * applies draggable handle to flyouts title bar
         */
        _applyDraggableToFlyout: function (flyout, extensionInfo, cls) {
            var me = this,
                handle = flyout.children(cls).get()[0],
                flyoutTarget = flyout.get()[0],
                useHelper = false,
                el;

            extensionInfo.draggableHandle = handle;
            extensionInfo.draggableTarget = flyoutTarget;

            extensionInfo.draggable = $(flyout).draggable({
                handle: jQuery(handle),
                helper: useHelper ? function () {
                    el = jQuery('<div />');

                    el.css("width", flyout.css("width"));
                    el.css("height", flyout.css("height"));
                    el.css("border", "2px solid rgba(0,0,0,.5)");
                    el.css("z-index", flyout.css("z-index"));

                    return el;
                } : null,
                scroll: false,
                stack: '.oskari-flyout',
                create: function (event, ui) {
                    /* IE8 works fine BUT IE9 needs fixed width to not jump flyout width during and after dragging */
                    if (jQuery.browser.msie && jQuery.browser.version[0] === "9") {
                        flyout.css('width', flyout.width() + "px");
                    }
                },
                start: function () {
                    if (useHelper) {
                        flyout.css("display", "none");
                    } else {
                        /* Attempt to fix IE9 vs. draggable flyout width issues */
                        /* this did not work */
                        /* if(jQuery.browser.msie && jQuery.browser.version[0] === "9") {
                        flyout.css('width',flyout.width()+"px");
                       }
                       */

                    }
                },
                drag: function () {

                },
                stop: function (event, ui) {
                    var viewState;
                    if (useHelper) {
                        flyout.css("top", ui.helper.css("top"));
                        flyout.css("left", ui.helper.css("left"));
                    } else {

                    }
                    me.shuffleZIndices(flyout);
                    if (useHelper) {
                        flyout.css("display", "");
                    }
                    viewState = me.getFlyoutViewState(flyout, "detach");

                    extensionInfo.viewState = viewState;
                    me.notifyExtensionViewStateChange(extensionInfo);

                }
            });
        },
        /**
         * @method createTile
         *
         * creates menubar tile using the tile template
         */

        createTile: function (extension, plugin, count, extensionInfo) {
            var me = this,
                //container = jQuery('#menubar'),
                tile = this.compiledTemplates['Oskari.userinterface.Tile'].clone(true, true),
                title = tile.children('.oskari-tile-title');
                //status;
            title.append(plugin.getTitle());
            //status = tile.children('.oskari-tile-status');

            tile.click(function () {
                //plugin.setExtensionState();

                me.getSandbox().postRequestByName('userinterface.UpdateExtensionRequest', [extension, 'toggle']);
            });

            plugin.setEl(tile.get());

            return tile;
        },
        /**
         * @method createFlyout
         *
         * creates flyout DIV using the flyout template adds a bunch
         * of tools to the DIV toolbar
         *
         */
        createFlyout: function (extension, plugin, count, extensionInfo) {
            var me = this,
                flyout = this.compiledTemplates['Oskari.userinterface.Flyout'].clone(true, true),
                flyouttools,
                toolage;
            flyout.find('.oskari-flyout-title p').append(plugin.getTitle());

            flyouttools = flyout.children('.oskari-flyouttoolbar').children('.oskari-flyouttools');
            toolage = {
                attach: flyouttools.children('.oskari-flyouttool-attach'),
                detach: flyouttools.children('.oskari-flyouttool-detach'),
                minimize: flyouttools.children('.oskari-flyouttool-minimize'),
                restore: flyouttools.children('.oskari-flyouttool-restore'),
                close: flyouttools.children('.oskari-flyouttool-close'),
                help: flyouttools.children('.oskari-flyouttool-help')
            };

            toolage.detach.click(function () {
                me.getSandbox().postRequestByName('userinterface.UpdateExtensionRequest', [extension, 'detach']);

            });
            toolage.attach.click(function () {
                me.getSandbox().postRequestByName('userinterface.UpdateExtensionRequest', [extension, 'attach']);

            });
            toolage.minimize.click(function () {
                me.getSandbox().postRequestByName('userinterface.UpdateExtensionRequest', [extension, 'minimize']);

            });
            toolage.restore.click(function () {
                me.getSandbox().postRequestByName('userinterface.UpdateExtensionRequest', [extension, 'restore']);

            });
            toolage.close.click(function () {
                me.getSandbox().postRequestByName('userinterface.UpdateExtensionRequest', [extension, 'close']);

            });
            toolage.help.click(function () {
                me.getSandbox().postRequestByName('userguide.ShowUserGuideRequest', [{
                    placement: 'bottom',
                    el: toolage.help,
                    extension: extension.getName(),
                    toggle: true
                }]);

            });
            return flyout;

        },

        /**
         * @method createFlyout
         *
         * creates flyout DIV using the flyout template adds a bunch
         * of tools to the DIV toolbar
         *
         */
        createView: function (extension, plugin, count, extensionInfo) {
            var me = this,
                view = me.compiledTemplates['Oskari.userinterface.View'].clone(true, true);

            return view;

        },
        /**
         * @method removeExtension TBD
         */

        "removeExtension": function (extension) {

            /*
             * to-do:
             * - remove tile
             * - remove flyout
             */

            var me = this,
                extensions = me.extensions,
                extensionsByName = this.extensionsByName,
                extensionInfo = extensionsByName[extension.getName()],
                //extensionState = extensionInfo.state,
                flyoutInfo = extensionInfo.plugins['Oskari.userinterface.Flyout'],
                flyoutPlugin,
                flyout,
                ops,
                closeOp,
                tileInfo,
                //tilePlugin,
                tile,
                after,
                n,
                len;

            if (flyoutInfo) {
                flyoutPlugin = flyoutInfo.plugin;
                flyout = flyoutInfo.el;

                ops = this.flyoutOps;
                closeOp = ops.close;

                closeOp.apply(this, [flyout, flyoutPlugin, extensionInfo]);

                flyout.remove();
            }

            tileInfo = extensionInfo.plugins['Oskari.userinterface.Tile'];
            if (tileInfo) {
                //tilePlugin = tileInfo.plugin;
                tile = tileInfo.el;

                tile.remove();
            }

            extensionsByName[extension.getName()] = null;

            after = [];

            for (n = 0, len = extensions.length; n < len; n += 1) {
                if (extensions[n] === extensionInfo) {
                    continue;
                }

                after.push(extensions[n]);

            }

            me.extensions = after;

            extension.stopExtension();

        },
        /**
         * @method updateExtension updates extension state
         *
         */
        "updateExtension": function (extension, request) {
            var me = this,
                extensions = me.extensions,
                i,
                extensionsByName,
                extensionInfo,
                extensionState,
                state,
                ops,
                op,
                flyoutInfo,
                closeOp,
                n,
                otherExtensionInfo,
                otherState,
                plgnfo,
                otherFlyoutInfo,
                otherFlyoutPlugin,
                otherFlyout,
                otherTileInfo,
                //otherTilePlugin,
                otherTile,
                flyoutPlugin,
                flyout,
                tileInfo,
                //tilePlugin,
                tile,
                viewInfo,
                viewPlugin,
                view,
                len;
            if (!extension) {
                // if extension not spesified, do it for all
                for (i = 0; i < extensions.length; i += 1) {
                    this.updateExtension(extensions[i].extension, request);
                }
                return;
            }
            extensionsByName = this.extensionsByName;
            extensionInfo = extensionsByName[extension.getName()];
            extensionState = extensionInfo.state;

            state = request.getState();

            if (state === 'toggle') {

                if (extensionState === 'close') {
                    state = 'attach';
                } else if (extensionState === 'attach') {
                    state = 'close';
                } else if (extensionState === 'detach') {
                    state = 'minimize';
                } else if (extensionState === 'minimize') {
                    state = 'restore';
                } else if (extensionState === 'restore') {
                    state = 'minimize';
                }

            }

            flyoutInfo = extensionInfo.plugins['Oskari.userinterface.Flyout'];

            /* opening  flyouts 'attached' closes previously attachily opened  flyout(s) */
            if (state === 'attach' && flyoutInfo) {
                ops = me.flyoutOps;
                closeOp = ops.close;
                for (n = 0, len = extensions.length; n < len; n += 1) {
                    otherExtensionInfo = extensions[n];
                    if (otherExtensionInfo === extensionInfo) {
                        continue;
                    }

                    if (otherExtensionInfo.state !== 'attach') {
                        continue;
                    }

                    otherState = 'close';

                    plgnfo = otherExtensionInfo.plugins;
                    otherFlyoutInfo = plgnfo['Oskari.userinterface.Flyout'];
                    if (otherFlyoutInfo) {
                        otherFlyoutPlugin = otherFlyoutInfo.plugin;
                        otherFlyout = otherFlyoutInfo.el;

                        otherExtensionInfo.state = otherState;
                        closeOp.apply(this, [otherFlyout, otherFlyoutPlugin, otherExtensionInfo]);

                        me.notifyExtensionViewStateChange(otherExtensionInfo);
                    } else {
                        continue;
                    }

                    otherTileInfo = plgnfo['Oskari.userinterface.Tile'];
                    if (otherTileInfo) {
                        //otherTilePlugin = otherTileInfo.plugin;
                        otherTile = otherTileInfo.el;

                        me.applyTransition(otherTile, otherState, me.tileTransitions);

                    }
                }
            }

            /* let's transition flyout if one exists */
            if (flyoutInfo) {
                flyoutPlugin = flyoutInfo.plugin;
                flyout = flyoutInfo.el;

                /**
                 * do the op for this extension
                 */
                ops = me.flyoutOps;
                op = ops[state];
                op.apply(this, [flyout, flyoutPlugin, extensionInfo, extensions]);

            }

            /* let's transition menu tile if one exists */
            tileInfo = extensionInfo.plugins['Oskari.userinterface.Tile'];
            if (tileInfo) {
                //tilePlugin = tileInfo.plugin;
                tile = tileInfo.el;

                me.applyTransition(tile, state, me.tileTransitions);

            }

            /* let's transition menu tile if one exists */
            viewInfo = extensionInfo.plugins['Oskari.userinterface.View'];
            if (viewInfo) {
                viewPlugin = viewInfo.plugin;
                view = viewInfo.el;

                ops = me.viewOps;
                op = ops[state];
                if (op) {
                    op.apply(this, [view, viewPlugin, extensionInfo, extensions]);
                }
            }


            extensionInfo.state = state;

            me.notifyExtensionViewStateChange(extensionInfo);
        },
        /**
         * @method notifyExtensionViewStateChange
         */
        "notifyExtensionViewStateChange": function (extensionInfo) {
            var evt = extensionInfo.extensionUpdatedEvent;
            evt.setViewState(extensionInfo.state);
            evt.setViewInfo(extensionInfo.viewState);

            this.sandbox.notifyAll(evt, true);
        },
        /*
         * @static @property validStates
         */
        "validStates": {
            "attach": {
                "attach": true,
                "detach": false,
                "close": false,
                "minimize": false,
                "restore": false,
                "drawer": false,
                "sidebar": false
            },
            "detach": {
                "attach": false,
                "detach": true,
                "close": false,
                "minimize": false,
                "restore": false,
                "drawer": false,
                "sidebar": false
            },
            "minimize": {
                "attach": true,
                "detach": true,
                "close": false,
                "minimize": true,
                "restore": false,
                "drawer": false,
                "sidebar": false
            },
            "restore": {
                "attach": false,
                "detach": true,
                "close": false,
                "minimize": false,
                "restore": true,
                "drawer": false,
                "sidebar": false
            },
            "close": {
                "attach": false,
                "detach": false,
                "close": true,
                "minimize": false,
                "restore": false,
                "drawer": false,
                "sidebar": false
            },
            "drawer": {
                "attach": false,
                "detach": false,
                "close": false,
                "minimize": false,
                "restore": false,
                "drawer": true,
                "sidebar": false
            },
            "sidebar": {
                "attach": false,
                "detach": false,
                "close": false,
                "minimize": false,
                "restore": false,
                "drawer": false,
                "sidebar": true
            }
        },

        /**
         * @static @property flyout default positioning
         */
        "defaults": {
            "detach": {
                "left": "212px",
                "top": "50px"
            },
            "attach": {
                "left": "192px",
                "top": "30px"
            }
        },

        /**
         * @static
         * @property tileTransitions
         * CSS transitions for menu tiles
         */
        "tileTransitions": {
            "attach": {
                "oskari-tile-attached": true,
                "oskari-tile-detached": false,
                "oskari-tile-closed": false
            },
            "detach": {
                "oskari-tile-attached": false,
                "oskari-tile-detached": true,
                "oskari-tile-minimized": false,
                "oskari-tile-closed": false
            },
            "minimize": {
                "oskari-tile-minimized": true,
                "oskari-tile-closed": false,
                "oskari-tile-detached": false
            },
            "restore": {
                "oskari-tile-minimized": false,
                "oskari-tile-detached": true
            },
            "close": {
                "oskari-tile-closed": true,
                "oskari-tile-attached": false,
                "oskari-tile-detached": false
            }

        },

        /**
         * @static @property flyoutTransitions
         * CSS transitions for flyouts
         */
        "flyoutTransitions": {
            "attach": {
                "oskari-attached": true,
                "oskari-detached": false,
                "oskari-closed": false
            },
            "detach": {
                "oskari-attached": false,
                "oskari-detached": true,
                "oskari-closed": false
            },
            "minimize": {
                "oskari-minimized": true,
                "oskari-closed": false,
                "oskari-detached": false
            },
            "restore": {
                "oskari-minimized": false,
                "oskari-closed": false,
                "oskari-detached": true,
                "oskari-attached": false
            },
            "close": {
                "oskari-closed": true,
                "oskari-minimized": false,
                "oskari-detached": false,
                "oskari-attached": false
            }

        },

        /**
         * @method applyTransition
         * adds and removes CSS classes from element
         *
         */
        "applyTransition": function (obj, state, transitions) {
            var transition = transitions[state],
                t;
            if (!transition) {
                return;
            }
            for (t in transition) {
                if (transition.hasOwnProperty(t)) {
                    if (transition[t]) {
                        obj.addClass(t);
                    } else {
                        obj.removeClass(t);
                    }
                }
            }
        },
        /**
         * @method getFlyoutViewState
         *
         */
        "getFlyoutViewState": function (flyout, state) {
            var viewState = {
                "left": flyout.css("left"),
                "top": flyout.css("top"),
                "width": flyout.width(),
                "height": flyout.height(),
                "z-index": flyout.css("z-index"),
                "viewState": state
            };
            return viewState;
        },
        /**
         * @static
         * @property flyoutOps a set of (jQuery) operations to be
         *           performed on flyout to
         *           show/hide/minimize/restore/attach/detach
         */
        "flyoutOps": {
            /** @method detach */
            "detach": function (flyout, flyoutPlugin, extensionInfo, extensions) {
                var me = this,
                    //toState,
                    viewState;

                if ((!extensionInfo.viewState.left || !extensionInfo.viewState.top) || (extensionInfo.viewState.left === me.defaults.attach.left && extensionInfo.viewState.top === me.defaults.attach.top)) {
                    extensionInfo.viewState.left = me.defaults.detach.left;
                    extensionInfo.viewState.top = me.defaults.detach.top;
                }
                /*toState = {
                    "left": extensionInfo.viewState.left,
                    "top": extensionInfo.viewState.top
                };*/

                /*
                 * to top
                 */
                me.shuffleZIndices(flyout);

                /*
                 * with style
                 */
                me.applyTransition(flyout, "detach", me.flyoutTransitions);

                viewState = me.getFlyoutViewState(flyout, "detach");
                extensionInfo.viewState = viewState;

            },
            /** @method attach */
            "attach": function (flyout, flyoutPlugin, extensionInfo, extensions) {
                var me = this,
                    viewState;

                /*
                 * to top
                 */
                me.shuffleZIndices(flyout);

                /*
                 * with style
                 */

                me.applyTransition(flyout, "attach", me.flyoutTransitions);

                viewState = me.getFlyoutViewState(flyout, "attach");
                extensionInfo.viewState = viewState;

            },
            /** @method minimize */
            "minimize": function (flyout, flyoutPlugin, extensionInfo) {
                var me = this,
                    viewState = me.getFlyoutViewState(flyout, "minimize");

                me.applyTransition(flyout, "minimize", me.flyoutTransitions);

                extensionInfo.viewState = viewState;
            },
            /** @method restore */
            "restore": function (flyout, flyoutPlugin, extensionInfo) {
                var me = this;
                //    viewState;
                me.applyTransition(flyout, "restore", me.flyoutTransitions);
                //viewState = extensionInfo.viewState;

            },
            /** @method close */
            "close": function (flyout, flyoutPlugin, extensionInfo) {
                var me = this;

                extensionInfo.viewState = {
                    viewState: "close"
                };
                me.applyTransition(flyout, "close", me.flyoutTransitions);

            }
        },

        /**
         * @static
         * @property flyoutOps a set of (jQuery) operations to be
         *           performed on flyout to
         *           show/hide/minimize/restore/attach/detach
         */
        "viewOps": {
            /** @method detach */
            "view": function (flyout, flyoutPlugin, extensionInfo, extensions) {
            },
            /** @method close */
            "close": function (flyout, flyoutPlugin, extensionInfo) {
            }

        },

        /**
         * @method setState
         *
         * restores state from state snapshot
         *
         * @param {Object} state bundle state as JSON
         */
        setState: function (state) {
            var me = this,
                divmanazerState = state,
                e,
                extensionInfo,
                restoredState;

            if (!divmanazerState) {
                return;
            }

            for (e in me.extensionsByName) {
                if (me.extensionsByName.hasOwnProperty(e)) {
                    extensionInfo = me.extensionsByName[e];
                    restoredState = divmanazerState.extensionStatesByName[e];
                    if (!restoredState) {
                        continue;
                    }
                    extensionInfo.state = restoredState.state;
                    extensionInfo.viewState = restoredState.viewState || {};
                }
            }

            /* let's not Bundles may not have been loaded */
            /* me.restoreExtensionViewStates(); */

        },
        /**
         * @method getState
         *
         * builds a state snapshot
         *
         * @return {Object} bundle state as JSON
         */
        getState: function () {
            var me = this,
                divmanazerState,
                e,
                extensionInfo;
            me.refreshExtensionViewStates();

            divmanazerState = {
                extensionStatesByName: {}
            };

            for (e in me.extensionsByName) {
                if (me.extensionsByName.hasOwnProperty(e)) {
                    extensionInfo = me.extensionsByName[e];
                    divmanazerState.extensionStatesByName[e] = {
                        state: extensionInfo.state,
                        viewState: extensionInfo.viewState
                    };
                }
            }

            return divmanazerState;

        },
        /**
         * @method applyState
         *
         * called after all bundles go will restore view states
         *
         */
        applyState: function () {
            var me = this;
            me.restoreExtensionViewStates();
        },
        /**
         * @method refreshExtensionStates
         * moves state to cache
         */
        refreshExtensionViewStates: function () {
            var me = this,
                e,
                extensionInfo,
                flyoutInfo,
                //flyoutPlugin,
                flyout,
                viewState;
            for (e in me.extensionsByName) {
                if (me.extensionsByName.hasOwnProperty(e)) {
                    extensionInfo = me.extensionsByName[e];

                    flyoutInfo = extensionInfo.plugins['Oskari.userinterface.Flyout'];
                    if (flyoutInfo) {
                        //flyoutPlugin = flyoutInfo.plugin;
                        flyout = flyoutInfo.el;

                        viewState = me.getFlyoutViewState(flyout, extensionInfo.state);

                        extensionInfo.viewState = viewState;
                    }
                }
            }
        },
        /**
         * @method restoreExtensionViewStates
         */
        restoreExtensionViewStates: function () {
            var me = this,
                ops = me.flyoutOps,
                extensions = me.extensions,
                e,
                extensionInfo,
                //extension,
                flyoutInfo,
                flyoutPlugin,
                flyout,
                viewState,
                op,
                tileInfo,
                //tilePlugin,
                tile;

            for (e in me.extensionsByName) {
                if (me.extensionsByName.hasOwnProperty(e)) {
                    extensionInfo = me.extensionsByName[e];
                    //extension = extensionInfo.extension;

                    flyoutInfo = extensionInfo.plugins['Oskari.userinterface.Flyout'];
                    if (flyoutInfo) {
                        flyoutPlugin = flyoutInfo.plugin;
                        flyout = flyoutInfo.el;

                        viewState = extensionInfo.viewState;
                        flyout.removeAttr("style");
                        flyout.css("left", viewState.left);
                        flyout.css("top", viewState.top);
                        flyout.width(viewState.width);
                        flyout.height(viewState.height);
                        flyout.css("z-index", viewState['z-index']);

                        op = ops[extensionInfo.state];
                        /*me.getSandbox().postRequestByName('userinterface.UpdateExtensionRequest', [extension, viewState]);*/
                        op.apply(me, [flyout, flyoutPlugin, extensionInfo, extensions]);

                    }
                    tileInfo = extensionInfo.plugins['Oskari.userinterface.Tile'];
                    if (tileInfo) {
                        //tilePlugin = tileInfo.plugin;
                        tile = tileInfo.el;

                        me.applyTransition(tile, extensionInfo.state, me.tileTransitions);

                    }
                }

            }
        },

        /**
         * @method _toggleMapWindowFullScreen
         * Sends a request to toggle between the normal and the full screen view
         * of the map window.
         */
        _toggleMapWindowFullScreen: function () {
            var me = this,
                reqBuilder = me.sandbox.getRequestBuilder('MapFull.MapWindowFullScreenRequest');

            if (reqBuilder) {
                me.sandbox.request(me.getName(), reqBuilder());
            }
        },

	/**
	 *
	 * @method shuffleZIndexes
	 *
	 * called after dragStop (or updateExtension) to restore some reasonable z-indexes
	 * as well as bump the requested flyout on top of others
	 *
	 */
	shuffleZIndices : function(toTop) {
		var me = this;

		var extensions = me.extensions;

		var zarray = [];
		var zprops = {};
		var zextns = {};
		var zflyout = {};
		var min = 1100;

		for(var e in me.extensionsByName) {
			var extensionInfo = me.extensionsByName[e];
			var extension = extensionInfo.extension;

			var flyoutInfo = extensionInfo['plugins']['Oskari.userinterface.Flyout'];
			if(flyoutInfo) {
				var flyoutPlugin = flyoutInfo.plugin;
				var flyout = flyoutInfo.el;
				var zIndex = flyout.css("z-index");

				zarray.push(zIndex);
				var idx = '' + zIndex;
				zprops[idx] = zIndex;
				zflyout[idx] = flyout;
				zextns[idx] = extensionInfo;
			}
		}

		zarray.sort();

		for(var n = 0; n < zarray.length; n++) {
			var idx = zarray[n];
			zprops[idx] = min + n;
			/*if(zextns[idx].state != 'detach')
			 continue;*/

			zflyout[idx].css("z-index", zprops[zarray[n]]);
		}

		/*
		 * finally bump the requested flyout to top
		 */
		toTop.css("z-index", min + zarray.length + 2);

	},
	ieFixClasses : [{
		min : 400,
		max : 599,
		cls : "oskari-flyoutcontentcontainer_IE_400_599"
	}, {
		min : 600,
		max : 799,
		cls : "oskari-flyoutcontentcontainer_IE_600_799"
	}, {
		min : 800,
		max : 999,
		cls : "oskari-flyoutcontentcontainer_IE_800_999"
	}, {
		min : 1000,
		max : 1199,
		cls : "oskari-flyoutcontentcontainer_IE_1000_1199"
	}, {
		min : 1200,
		max : 1399,
		cls : "oskari-flyoutcontentcontainer_IE_1200_1399"
	}, {
		min : 1400,
		max : 9999,
		cls : "oskari-flyoutcontentcontainer_IE_1400"
	}]

}, {
	"protocol" : ["Oskari.bundle.BundleInstance", 'Oskari.mapframework.module.Module', 'Oskari.userinterface.Stateful']
});

define("bundles/framework/bundle/divmanazer/instance", function(){});

/**
 * @class Oskari.userinterface.request.AddExtensionRequest
 */
Oskari.clazz.define('Oskari.userinterface.request.AddExtensionRequest', function(extension) {
	this._extension = extension;
}, {
	__name : "userinterface.AddExtensionRequest",
	getName : function() {
		return this.__name;
	},
	getExtension : function() {
		return this._extension;
	}
}, {
	'protocol' : ['Oskari.mapframework.request.Request']
});

define("bundles/framework/bundle/divmanazer/request/AddExtensionRequest", function(){});

/**
 *
 * @class Oskari.userinterface.bundle.ui.request.AddExtensionRequestHandler
 */
Oskari.clazz.define('Oskari.userinterface.bundle.ui.request.AddExtensionRequestHandler', function(ui) {
	this.ui = ui;

}, {
	handleRequest : function(core, request) {

		var extension = request.getExtension();

		this.ui.addExtension(extension);
	}
}, {
	protocol : ['Oskari.mapframework.core.RequestHandler']
});

define("bundles/framework/bundle/divmanazer/request/AddExtensionRequestHandler", function(){});

/**
 * @class Oskari.userinterface.request.RemoveExtensionRequest
 */
Oskari.clazz.define('Oskari.userinterface.request.RemoveExtensionRequest', function(extension) {
	this._extension = extension;
}, {
	__name : "userinterface.RemoveExtensionRequest",
	getName : function() {
		return this.__name;
	},
	getExtension : function() {
		return this._extension;
	}
}, {
	'protocol' : ['Oskari.mapframework.request.Request']
});

define("bundles/framework/bundle/divmanazer/request/RemoveExtensionRequest", function(){});

/**
 * @class Oskari.userinterface.bundle.ui.request.RemoveExtensionRequestHandler
 */
Oskari.clazz.define('Oskari.userinterface.bundle.ui.request.RemoveExtensionRequestHandler', function(ui) {
	this.ui = ui;
}, {
	handleRequest : function(core, request) {
		var extension = request.getExtension();

		this.ui.removeExtension(extension);

	}
}, {
	protocol : ['Oskari.mapframework.core.RequestHandler']
});

define("bundles/framework/bundle/divmanazer/request/RemoveExtensionRequestHandler", function(){});

/**
 * @class Oskari.userinterface.request.UpdateExtensionRequest
 */
Oskari.clazz.define('Oskari.userinterface.request.UpdateExtensionRequest', function(extension, state,extensionName) {
	this._extension = extension;
	this._state = state;
	this._extensionName = extensionName; 
}, {
	__name : "userinterface.UpdateExtensionRequest",
	getName : function() {
		return this.__name;
	},
	getExtension : function() {
		return this._extension;
	},
	getState : function() {
		return this._state;
	},
	getExtensionName: function() {
		return this._extensionName;
	} 
	
}, {
	'protocol' : ['Oskari.mapframework.request.Request']
});

define("bundles/framework/bundle/divmanazer/request/UpdateExtensionRequest", function(){});

/*
 * @class  Oskari.userinterface.bundle.ui.request.UpdateExtensionRequestHandler
 */
Oskari.clazz.define('Oskari.userinterface.bundle.ui.request.UpdateExtensionRequestHandler', function(ui) {
	this.ui = ui;
}, {
	handleRequest : function(core, request) {
		var extension = request.getExtension();
		var extensionName = request.getExtensionName();
		if( !extension && extensionName && extensionName != '*'  ) {
			var extensionInfo = this.ui.getExtensionByName(extensionName);
			if( !extensionInfo ) {
				return;
			}
			extension = extensionInfo.extension;
		}

		this.ui.updateExtension(extension, request);

	}
}, {
	protocol : ['Oskari.mapframework.core.RequestHandler']
});

define("bundles/framework/bundle/divmanazer/request/UpdateExtensionRequestHandler", function(){});

/**
 * @class Oskari.userinterface.request.ModalDialogRequest
 */
Oskari.clazz
    .define('Oskari.userinterface.request.ModalDialogRequest', 
	    function(title, message, buttons, onshow) {
		this._title = title ? title : "Untitled";
		this._message = message ? message : "Lorem ipsum";
		this._buttons = buttons ? buttons : {};
		this._parent = parent ? parent : jQuery('#mapdiv');
		this._onshow = onshow ? onshow : null;
	    }, {
		__name : "userinterface.ModalDialogRequest",
		getName : function() {
		    return this.__name;
		},
		getTitle : function() {
		    return this._title;
		},
		getMessage : function() {
		    return this._message;
		},
		getButtons : function() {
		    return this._buttons;
		},
		getGeom : function() {
		    return this._geom;
		},
		getParent : function() {
		    return this._parent;
		},
		getOnShow : function() {
		    return this._onshow;
		}
	    }, {
		'protocol' : ['Oskari.mapframework.request.Request']
	    });

define("bundles/framework/bundle/divmanazer/request/ModalDialogRequest", function(){});

/*
 * @class  Oskari.userinterface.bundle.ui.request.ModalDialogRequestHandler
 */
Oskari
    .clazz
    .define('Oskari.userinterface.bundle.ui.request' + 
	    '.ModalDialogRequestHandler', 
	    function(ui) {
		this._ui = ui;
		this._tpl = {};
		this._tpl['modal'] = 
		    jQuery('<div id="modaldialog" class="modaldialog">' + 
			   '  <div class="modaltitle"></div>' +
			   '  <div class="modalmessage"></div>' + 
			   '  <div class="modalbuttons"></div> ' + 
			   '</div>');
		this._tpl['button'] =
		    jQuery('<div class="modalbutton">' +
			   '<input type="button" /></input>' +
			   '</div>');
		this._buttons = {};
		this._args = {
		    closeClass : 'modalclose',
		    overlayId : 'modaloverlay',
		    overlayCss : {
			'background-color' : 'lightgrey',
			'cursor' : 'wait'
		    },
		    containerId : 'modalcontainer',
		    containerCss : { 
			'background-color' : 'white'
		    },
		    onClose : function() {
			this.close();
		    },
		    zIndex : 80130
		};
	    }, {
		handleRequest : function(core, request) {
		    var tpl = this._tpl['modal'].clone();
		    tpl.find('.modaltitle').append(request.getTitle());
		    tpl.find('.modalmessage').append(request.getMessage());
		    var btns = request.getButtons();
		    var buttondiv = tpl.find('.modalbuttons');
		    for (var bidx in btns) {
			if (!btns[bidx].name) {
			    continue;
			}
			var btn = btns[bidx];
			var bcont = this._tpl['button'].clone();
			var button = bcont.find('input');
			button.attr('name', btn.name);
			button.attr('text', btn.text);
			button.attr('value', btn.text);			
			button.bind('click',  btn.onclick);
			if (btn.close !== false) {
			    button.addClass(this._args.closeClass);
			}
			buttondiv.append(bcont);
		    }
		    if (request.onshow) {
			this._args.onShow = onshow;
		    }
		    $.modal = tpl.modal(this._args);
		}
	    }, {
		protocol : ['Oskari.mapframework.core.RequestHandler']
		       }
	    );

define("bundles/framework/bundle/divmanazer/request/ModalDialogRequestHandler", function(){});

/**
 * @class Oskari.userinterface.event.ExtensionUpdatedEvent
 *
 * Sent after Extension view state has changed
 *
 */
Oskari.clazz
    .define('Oskari.userinterface.event.ExtensionUpdatedEvent', function (extension, viewstate, viewinfo) {
        this._creator = null;
        this._extension = extension;
        this.viewstate = viewstate;
        this.viewinfo = viewinfo;
    }, {
        __name: "userinterface.ExtensionUpdatedEvent",
        getName: function () {
            return this.__name;
        },

        /**
         * @method returns Extension
         */
        getExtension: function () {
            return this._extension;
        },

        /**
         * @method getViewState
         * returns 'close','attach','detach','minimize','restore','minimize'
         */
        getViewState: function () {
            return this.viewstate;
        },
        setViewState: function (viewstate) {
            this.viewstate = viewstate;
        },

        /**
         * @method getViewInfo
         * returns a property with view dimension info (currently WHEN in restored or detached state)
         */
        getViewInfo: function () {
            return this.viewinfo;
        },
        setViewInfo: function (viewinfo) {
            this.viewinfo = viewinfo;
        }
    }, {
        'protocol': ['Oskari.mapframework.event.Event']
    });

/* Inheritance */
;
define("bundles/framework/bundle/divmanazer/event/ExtensionUpdatedEvent", function(){});

/**
 * @class Oskari.userinterface.component.Accordion
 * Provides a base layout/container for adding a set of
 * Oskari.userinterface.component.AccordionPanel.
 */
Oskari.clazz.define('Oskari.userinterface.component.Accordion',

    /**
     * @method create called automatically on construction
     * @static
     */

    function () {
        this.template = jQuery('<div class="accordion"></div>');
        this.templateMsg = jQuery('<div class="accordionmsg"></div>');
        this.panels = [];
        this.ui = this.template.clone();
    }, {
        /**
         * @method addPanel
         * Adds panel to this accordion
         * @param {Oskari.userinterface.component.AccordionPanel} panel
         */
        addPanel: function (panel) {
            // clear any message before adding panel
            this.removeMessage();

            this.panels.push(panel);
            panel.insertTo(this.ui);
        },
        /**
         * @method removePanel
         * Removes panel from this accordion
         * @param {Oskari.userinterface.component.AccordionPanel} pPanel
         */
        removePanel: function (pPanel) {
            var panel = null,
                i;
            for (i = 0; i < this.panels.length; i += 1) {
                if (this.panels[i] === pPanel) {
                    panel = this.panels[i];
                    this.panels.splice(i, 1);
                    break;
                }
            }
            if (panel) {
                panel.destroy();
                // notify components of layer removal
                return true;
            }
            return false;
        },
        removeAllPanels: function () {
            this.ui.empty();
            this.panels = [];
        },
        removeMessage: function () {
            var msgContainer = this.ui.find("div.accordionmsg");
            if (msgContainer.length > 0) {
                msgContainer.remove();
            }
        },
        showMessage: function (message) {
            this.removeMessage();

            var msgContainer = this.templateMsg.clone();
            msgContainer.append(message);
            this.ui.append(msgContainer);
        },
        showPanels: function () {
            var i = 0;
            for (i = 0; i < this.panels.length; i += 1) {
                this.panels[i].setVisible(true);
            }
        },
        hidePanels: function () {
            var i = 0;
            for (i = 0; i < this.panels.length; i += 1) {
                this.panels[i].setVisible(false);
            }
        },
        /**
         * @method insertTo
         * Adds this accordion to given container.
         * @param {jQuery} container reference to DOM element
         */
        insertTo: function (container) {
            container.append(this.ui);
        },
        getContainer: function () {
            return this.ui;
        }
    });
define("bundles/framework/bundle/divmanazer/component/Accordion", function(){});

/**
 * @class Oskari.userinterface.component.AccordionPanel
 *
 * Panel that can be added to Oskari.userinterface.component.Accordion.
 */
Oskari.clazz.define('Oskari.userinterface.component.AccordionPanel',

    /**
     * @method create called automatically on construction
     * TODO: close/open methods?
     * @static
     */

    function () {
        this.template = jQuery('<div class="accordion_panel">' +
            '<div class="header">' +
            '<div class="headerIcon icon-arrow-right">' +
            '</div>' +
            '<div class="headerText">' +
            '</div>' +
            '</div>' +
            '<div class="content">' +
            '</div>' +
            '</div>');
        this.title = null;
        this.content = null;
        this.html = this.template.clone();

        var me = this,
            header = me.html.find('div.header');
        header.click(function () {
            if (me.isOpen()) {
                me.close();
            } else {
                me.open();
            }
        });
        this.html.find('div.content').hide();
    }, {
        /**
         * @method setVisible
         * Shows/hides the panel
         * @param {Boolean} bln - true to show, false to hide
         */
        setVisible: function (bln) {
            // checking since we dont assume param is boolean
            if (bln === true) {
                this.html.show();
            } else {
                this.html.hide();
            }
        },
        /**
         * @method isVisible
         * Returns true if panel is currently visible
         * @return {Boolean}
         */
        isVisible: function () {
            // checking since we dont assume param is boolean
            return this.html.is(":visible");
        },
        /**
         * @method isOpen
         * Returns true if panel is currently open
         * @return {Boolean}
         */
        isOpen: function () {
            return this.html.hasClass('open');
        },
        /**
         * @method open
         * Opens the panel programmatically
         */
        open: function () {
            this.html.addClass('open');
            var header = this.html.find('div.header div.headerIcon');
            header.removeClass('icon-arrow-right');
            header.addClass('icon-arrow-down');
            this.html.find('div.content').show();
        },
        /**
         * @method close
         * Closes the panel programmatically
         */
        close: function () {
            this.html.removeClass('open');
            var header = this.html.find('div.header div.headerIcon');
            header.removeClass('icon-arrow-down');
            header.addClass('icon-arrow-right');
            this.html.find('div.content').hide();
        },
        /**
         * @method setTitle
         * Sets the panel title
         * @param {String} pTitle title for the panel
         */
        setTitle: function (pTitle) {
            this.title = pTitle;
            var header = this.html.find('div.header div.headerText');
            header.html(this.title);
        },
        /**
         * @method getTitle
         * Gets the panel title
         * @return {String}
         */
        getTitle: function () {
            return this.title;
        },
        /**
         * @method setContent
         * Sets the panel content.
         * This can be also done with #getContainer()
         * @param {jQuery} pContent reference to DOM element
         */
        setContent: function (pContent) {
            this.content = pContent;
            var content = this.html.find('div.content');
            content.append(this.content);
        },
        /**
         * @method destroy
         * Destroys the panel/removes it from document
         */
        destroy: function () {
            this.html.remove();
        },
        /**
         * @method getContainer
         * Returns this panels content container which can be populated.
         * This can be also done with #setContent().
         * @return {jQuery} reference to this panels content DOM element
         */
        getContainer: function () {
            return this.html.find('div.content');
        },

        /**
         * @method insertTo
         * Adds this panel to given container.
         * Usually used by Oskari.userinterface.component.Accordion internally.
         * @param {jQuery} container reference to DOM element
         */
        insertTo: function (container) {
            container.append(this.html);
        }
    });
define("bundles/framework/bundle/divmanazer/component/AccordionPanel", function(){});

/**
 * @class Oskari.userinterface.component.TabContainer
 *
 * Provides a base layout/container for adding a set of
 * Oskari.userinterface.component.TabPanel.
 */
Oskari.clazz.define('Oskari.userinterface.component.TabContainer',

    /**
     * @method create called automatically on construction
     * @static
     * @param {String} pEmptyMsg message that will be displayed if there is no tabs added
     */

    function (pEmptyMsg) {
        this.panels = [];
        this.tabChangeListeners = [];
        if (pEmptyMsg) {
            this.emptyMsg = pEmptyMsg;
        } else {
            this.emptyMsg = 'No content';
        }
        this.template = jQuery('<div class="oskariTabs">' + this.emptyMsg + '</div>');

        this.templateTabs = jQuery('<div class="tabsHeader"><ul class="tabsItem"></ul></div><br clear="all"/>' +
            '<div class="tabsContent tabsContentItem"></div>');

        this.ui = this.template.clone();
    }, {
        /**
         * @method addPanel
         * Adds the given panel to the set of tabs shown.
         * The first tab is selected as active immediately on add.
         * @param {Oskari.userinterface.component.TabPanel} panel
         */
        addPanel: function (panel, first) {
            var me = this,
                content,
                headerContainer,
                header,
                link;
            if (this.panels.length === 0) {
                content = this.templateTabs.clone();
                this.ui.html(content);
            }

            // ensure order is correct
            headerContainer = this.ui.find('ul.tabsItem');
            header = panel.getHeader();
            if (first) {
                headerContainer.prepend(header);
            } else {
                headerContainer.append(header);
            }

            panel.insertTo(this.ui.find('div.tabsContentItem'));
            this.panels.push(panel);
            if (this.panels.length === 1) {
                // select first by default
                this.select(panel);
            }

            link = header.find('a');
            // bind tab changing
            link.bind('click', function () {
                me.select(panel);
                return false;
            });
        },
        /**
         * @method addTabChangeListener
         * Adds a listener function that should be called when tab selection changes
         * (tab is selected).
         * The function will receive two parameters:
         * - first the previously selected panel
         * - second the newly selected panel
         * function(previousTab, newTab)
         * If previousTab is undefined, this was the first tab added.
         * If newTab is undefined, all tabs have been removed.
         * @param {Function} pCallback function to call when tabs are changed
         */
        addTabChangeListener: function (pCallback) {
            this.tabChangeListeners.push(pCallback);
        },

        /**
         * @method select
         * Selects the given panel programmatically and notifies tabChangeListeners if any.
         * @param {Oskari.userinterface.component.TabPanel} panel
         */
        select: function (panel) {
            var previousPanel = null,
                i,
                headerContainer,
                tabs;
            // get previous panel for listeners if any
            for (i = 0; i < this.panels.length; i += 1) {
                if (this.isSelected(this.panels[i])) {
                    previousPanel = this.panels[i];
                    previousPanel.handleSelection(false);
                    break;
                }
            }
            headerContainer = this.ui.find('ul');
            headerContainer.find('li').removeClass('active');
            // only direct children since we can have another tabcontainer inside
            tabs = this.ui.children().children('div.tab-content');
            tabs.hide();
            panel.getHeader().addClass('active');
            panel.getContainer().show();
            panel.handleSelection(true);
            // notify listeners
            for (i = 0; i < this.tabChangeListeners.length; i += 1) {
                this.tabChangeListeners[i](previousPanel, panel);
            }
        },

        /**
         * @method isSelected
         * Tests if given panel is currently selected/active
         * @param {Oskari.userinterface.component.TabPanel} pPanel
         * @return {Boolean} true if given panel is currently selected
         */
        isSelected: function (panel) {
            return panel.getHeader().hasClass('active');
        },
        /**
         * @method addPanel
         * Removes the given panel from the set of tabs shown.
         * The first tab is selected as active if currently selected tab is removed.
         * If the tab was the last one, tabchangelisteners will receive the second parameter as undefined.
         * @param {Oskari.userinterface.component.TabPanel} pPanel
         */
        removePanel: function (pPanel) {
            var panel = null,
                i;
            for (i = 0; i < this.panels.length; i += 1) {
                if (this.panels[i] === pPanel) {
                    panel = this.panels[i];
                    this.panels.splice(i, 1);
                    break;
                }
            }
            if (this.panels.length === 0) {
                this.ui.html(this.emptyMsg);
                for (i = 0; i < this.tabChangeListeners.length; i += 1) {
                    // notify tabs have changed
                    // giving only removed panel & new panel as undefined -> should be considered all tabs were removed
                    this.tabChangeListeners[i](pPanel);
                }
            } else {
                this.select(this.panels[0]);
            }
            if (panel) {
                panel.destroy();
                // TODO: remove header
                // notify components of layer removal
                return true;
            }
            return false;
        },
        /**
         * @method insertTo
         * Adds this set of tabs to given container.
         * @param {jQuery} container reference to DOM element
         */
        insertTo: function (container) {
            container.append(this.ui);
        }
    });

define("bundles/framework/bundle/divmanazer/component/TabContainer", function(){});

/**
 * @class Oskari.userinterface.component.TabDropdownContainer
 *
 * Provides a base layout/container for adding a set of
 * Oskari.userinterface.component.TabPanel.
 */
Oskari.clazz.define('Oskari.userinterface.component.TabDropdownContainer',

/**
 * @method create called automatically on construction
 * @static
 * @param {String} pEmptyMsg message that will be displayed if there is no tabs added
 */
function(pEmptyMsg) {
    
    this.panels = [];
    this.tabChangeListeners = [];
    if(pEmptyMsg) {
        this.emptyMsg = pEmptyMsg;
    }
    else {
        this.emptyMsg = 'No content';
    }
    this.template = jQuery('<div class="oskariTabs">' + this.emptyMsg + '</div>');
    this.templateTabOption = jQuery('<option></option>');
            
    this.templateTabs = jQuery('<div class="tabsHeader"><ul><li><select name="tabs"></select></li></ul></div><br clear="all"/>' +
            '<div class="tabsContent"></div>');
            
    this.ui = this.template.clone();
}, {
    /**
     * @method addPanel
     * Adds the given panel to the set of tabs shown.
     * The first tab is selected as active immediately on add.
     * @param {Oskari.userinterface.component.TabPanel} panel
     */
    addPanel : function(panel) {
        var me = this;
        if(this.panels.length == 0) {
            var content = this.templateTabs.clone();
            this.ui.html(content);
        }
        var headerContainer = this.ui.find('ul li select');
        
        var header = this.templateTabOption.clone();
        header.attr('id', 'layer-id-'+panel.getId());
        header.append(panel.getTitle());
        headerContainer.append(header);
        panel.setHeader(header);
        
        panel.insertTo(this.ui.find('div.tabsContent'));
        this.panels.push(panel);
        if(this.panels.length == 1) {
            // select first by default
            this.select(panel);
            headerContainer.bind("change", function() {
                me.select(me.panels[this.selectedIndex]); 
            });
        }        
    },

    /**
     * @method updatePanel
     * Updates the header of the given panel.
     * @param {Oskari.userinterface.component.TabPanel} panel
     */
    updatePanel: function(panel) {
        var me = this;

        var headerContainer = this.ui.find('ul li select');

        for (var i = 0; i < headerContainer.find('option').length; i++) {
            var header = jQuery(headerContainer.find('option')[i]);
            if (header.attr('id') == 'layer-id-' + panel.getId()) {
                header.html(panel.getTitle());
            }
        };
    },

    /**
     * @method addTabChangeListener
     * Adds a listener function that should be called when tab selection changes
     * (tab is selected).
     * The function will receive two parameters:
     * - first the previously selected panel
     * - second the newly selected panel
     * function(previousTab, newTab)
     * If previousTab is undefined, this was the first tab added.
     * If newTab is undefined, all tabs have been removed.
     * @param {Function} pCallback function to call when tabs are changed
     */
    addTabChangeListener : function(pCallback) {
        this.tabChangeListeners.push(pCallback);
    },
    
    /**
     * @method select
     * Selects the given panel programmatically and notifies tabChangeListeners if any.
     * @param {Oskari.userinterface.component.TabPanel} panel
     */
    select : function(panel) {
        var previousPanel = null;
        if(this.tabChangeListeners.length > 0) {
            // get previous panel for listeners if any
            for(var i = 0; i < this.panels.length; i++) {
                if(this.isSelected(this.panels[i])) {
                    previousPanel = this.panels[i];
                    break;
                }
            }
        }
        //var tabs = this.ui.find('> div.tab-content');
        var tabs = this.ui.children().children('div.tab-content');
        tabs.hide();
        
        var headerContainer = this.ui.find('ul li select');
        var options = headerContainer.find('option');
        options.removeAttr('selected');
        var panelIndex = this._getPanelIndex(panel);
        jQuery(options[panelIndex]).attr('selected', 'selected');
        panel.getContainer().show();
        // notify listeners
        for(var i = 0; i < this.tabChangeListeners.length; i++) {
            this.tabChangeListeners[i](previousPanel, panel);
        }
    },
    
    /**
     * @method isSelected
     * Tests if given panel is currently selected/active
     * @param {Oskari.userinterface.component.TabPanel} pPanel
     * @return {Boolean} true if given panel is currently selected
     */
    isSelected : function(panel) {
        var headerContainer = this.ui.find('ul li select :selected');
        return headerContainer.index() == this._getPanelIndex(panel);
    },
    /**
     * @method _getPanelIndex
     * Returns the index location for the panel
     * @private
     * @param {Oskari.userinterface.component.TabPanel} pPanel
     * @return {Number} panels index or -1 if not found
     */
    _getPanelIndex : function(panel) {
        for(var i = 0; i < this.panels.length; i++) {
            if(this.panels[i] == panel) {
                return i;
            }
        }
        return -1;
    },
    /**
     * @method addPanel
     * Removes the given panel from the set of tabs shown.
     * The first tab is selected as active if currently selected tab is removed.
     * If the tab was the last one, tabchangelisteners will receive the second parameter as undefined.
     * @param {Oskari.userinterface.component.TabPanel} pPanel
     */
    removePanel : function(pPanel) {
        var panel = null;
        for(var i = 0; i < this.panels.length; i++) {
            if(this.panels[i] === pPanel) {
                panel = this.panels[i];
                this.panels.splice(i, 1);
                break;
            }
        }
        //remove header
        var headerContainer = this.ui.find('ul li select :selected');
        for (var i = 0; i < headerContainer.length; i++) {
            var header = jQuery(headerContainer[i]);
            if (header.attr('id') == 'layer-id-' + panel.getId()) {
                header.remove();
            }
        };

        if(this.panels.length == 0) {
            this.ui.html(this.emptyMsg);
            for(var i = 0; i < this.tabChangeListeners.length; i++) {
                // notify tabs have changed
                // giving only removed panel & new panel as undefined -> should be considered all tabs were removed
                this.tabChangeListeners[i](pPanel);
            }
        }
        else {
            this.select(this.panels[0]);
        }
        if(panel) {
            panel.destroy();
            // TODO: remove header
            // notify components of layer removal
            return true;
        }
        return false;
    },
    /**
     * @method insertTo
     * Adds this set of tabs to given container.
     * @param {jQuery} container reference to DOM element
     */
    insertTo : function(container) {
        container.append(this.ui);
    }
});

define("bundles/framework/bundle/divmanazer/component/TabDropdownContainer", function(){});

/**
 * @class Oskari.userinterface.component.TabPanel
 *
 * Panel that can be added to Oskari.userinterface.component.TabContainer.
 * Represents a single tab in tabcontainer.
 */
Oskari.clazz.define('Oskari.userinterface.component.TabPanel',

/**
 * @method create called automatically on construction
 * @static
 */
function() {
    this.template = jQuery('<div class="tab-content"></div>');
    this.templateTabHeader = jQuery('<li><a href="JavaScript:void(0);"></a></li>');
    this.id = null;
    this.title = null;
    this.content = null;
    this.header = null;
    this.selectionHandler = null;
    this.html=this.template.clone();
    this.html.hide();
}, {

    /**
     * @method setId
     * Sets the panel id
     * @param {String} pId id for the panel
     */
    setId : function(pId) {
        this.id = pId;
    },
    /**
     * @method getId
     * Returns the panel id
     * @return {String} id for the panel
     */
    getId : function() {
        return this.id;
    },

    /**
     * @method setTitle
     * Sets the panel title
     * @param {String} pTitle title for the panel
     */
    setTitle: function (pTitle) {
        var header,
            link;
        this.title = pTitle;
        header = this.templateTabHeader.clone();
        this.header = header;
        link = header.find('a');
        link.html(this.getTitle());
    },
    /**
     * @method getTitle
     * Returns the panel title
     * @return {String} title for the panel
     */
    getTitle: function () {
        return this.title;
    },
    /**
     * @method setHeader
     * @return {jQuery} reference to header DOM element
     * Sets the tabs header DOM element
     */
    setHeader: function (reference) {
        this.header = reference;
    },
    /**
     * @method getHeader
     * @return {jQuery} reference to DOM element
     * Returns the tabs header DOM element
     */
    getHeader: function () {
        return this.header;
    },
    /**
     * @method setContent
     * Sets the panel content.
     * This can be also done with #getContainer()
     * @param {jQuery} pContent reference to DOM element
     */
    setContent: function (pContent) {
        this.content = pContent;
        this.html.html(this.content);
    },
    /**
     * @method destroy
     * Destroys the panel/removes it from document
     */
    destroy: function () {
        this.header.remove();
        this.html.remove();
    },
    /**
     * @method getContainer
     * Returns this panels content container which can be populated.
     * This can be also done with #setContent().
     * @return {jQuery} reference to this panels content DOM element
     */
    getContainer: function () {
        return this.html;
    },

    /**
     * @method setSelectionHandler
     * Sets a handler function that is called when the panel is selected or unselected.
     * The function receives a boolean parameter indicating if the panel was selected (true) or unselected(false)
     * @param {Function} pHandler handler function
     */
    setSelectionHandler: function (pHandler) {
        this.selectionHandler = pHandler;
    },
    /**
     * @method handleSelection
     * @param {Boolean} true if panel was selected, false if unselected
     */
    handleSelection: function (isSelected) {
        if (this.selectionHandler) {
            this.selectionHandler(isSelected === true);
        }
    },
    /**
     * @method insertTo
     * Adds this panel to given container.
     * Usually used by Oskari.userinterface.component.TabContainer internally.
     * @param {jQuery} container reference to DOM element
     */
    insertTo: function (container) {
        container.append(this.html);
    }
});

define("bundles/framework/bundle/divmanazer/component/TabPanel", function(){});

/**
 * @class Oskari.userinterface.component.Badge
 */
Oskari.clazz
    .define('Oskari.userinterface.component.Badge',

        /**
         * @method create called automatically on construction
         * @static
         *
         */

        function () {
            this.compiledTemplates = {};
            this.compileTemplates();
            this.ui = null;
            this.container = null;
        }, {
            templates: {
                "default": '<span class="oskari-badge"></span>',
                "success": '<span class="oskari-badge oskari-badge-success"></span>',
                "warning": '<span class="oskari-badge oskari-badge-warning"></span>',
                "important": '<span class="oskari-badge oskari-badge-important"></span>',
                "info": '<span class="oskari-badge oskari-badge-info"></span>',
                "inverse": '<span class="oskari-badge oskari-badge-inverse"></span>'
            },
            compileTemplates: function () {
                var p;
                for (p in this.templates) {
                    if (this.templates.hasOwnProperty(p)) {
                        this.compiledTemplates[p] = jQuery(this.templates[p]);
                    }
                }
            },
            insertTo: function (container) {
                this.container = container;
            },
            setContent: function (pContent, status) {
                if (this.ui) {
                    this.ui.remove();
                    this.ui = null;
                }

                var txtspan = this.compiledTemplates[status || 'default'].clone();
                txtspan.append(pContent);
                this.container.append(txtspan);
                this.ui = txtspan;
            },
            hide: function () {
                if (this.ui) {
                    this.ui.remove();
                    this.ui = null;
                }
            }
        });

define("bundles/framework/bundle/divmanazer/component/Badge", function(){});

/**
 * @class Oskari.userinterface.component.Bubble
 *
 * Closable erikseen
 *
 */
Oskari.clazz.define('Oskari.userinterface.component.Alert',

    /**
     * @method create called automatically on construction
     * @static
     *
     */

    function () {
        this.compiledTemplates = {};
        this.compileTemplates();
        this.ui = null;
        this.container = null;
    }, {
        templates: {
            "default": '<div class="oskari-alert"><div class="oskari-alert-icon-close"><div class="icon-close"></div></div></div>',
            "success": '<div class="oskari-alert oskari-alert-success"><div class="oskari-alert-icon-close"><div class="icon-close"></div></div></div>',
            "error": '<div class="oskari-alert oskari-alert-error"><div class="oskari-alert-icon-close"><div class="icon-close"></div></div></div>',
            "info": '<div class="oskari-alert oskari-alert-info"><div class="oskari-alert-icon-close"><div class="icon-close"></div></div></div>'
        },
        compileTemplates: function () {
            var p;
            for (p in this.templates) {
                if (this.templates.hasOwnProperty(p)) {
                    this.compiledTemplates[p] = jQuery(this.templates[p]);
                }
            }
        },
        insertTo: function (container) {
            this.container = container;
        },
        setContent: function (pContent, status, excludeCloseButton) {
            if (this.ui) {
                this.ui.remove();
                this.ui = null;
            }
            var me = this,
                txtdiv = me.compiledTemplates[status || 'default'].clone(),
                includeCloseButton = !excludeCloseButton;
            txtdiv.append(pContent);
            me.container.prepend(txtdiv);
            me.ui = txtdiv;

            if (includeCloseButton) {
                txtdiv.children('.oskari-alert-icon-close').click(function () {
                    me.hide();
                });
            } else {
                txtdiv.children('.oskari-alert-icon-close').remove();
            }
        },
        hide: function () {
            if (this.ui) {
                this.ui.remove();
                this.ui = null;
            }

        }
    });
define("bundles/framework/bundle/divmanazer/component/Alert", function(){});

/**
 * @class Oskari.userinterface.component.Popup
 * Provides a popup window to replace alert
 */
Oskari.clazz.define('Oskari.userinterface.component.Popup',

    /**
     * @method create called automatically on construction
     * @static
     */

    function () {
        this.template = jQuery('<div class="divmanazerpopup"><h3 class="popupHeader"></h3><div class="content"></div><div class="actions"></div></div>');
        this.templateButton = jQuery('<div class="button"><a href="JavaScript:void(0);"></a></div>');
        this.dialog = this.template.clone();
        this.overlay = null;
    }, {
        /**
         * @method show
         * Shows an info popup
         * @param {String} title
         * @param {String} message
         * @param {Oskari.userinterface.component.Button[]} buttons buttons to show on dialog
         */
        show: function (title, message, buttons) {
            var me = this,
                contentDiv = this.dialog.find('div.content'),
                actionDiv,
                i,
                contentHeight,
                reasonableHeight;
            this.dialog.find('h3').html(title);
            contentDiv.html(message);

            if (buttons && buttons.length > 0) {
                actionDiv = this.dialog.find('div.actions');
                // TODO: save button references and clean up previous buttons
                actionDiv.empty();
                for (i = 0; i < buttons.length; i += 1) {
                    buttons[i].insertTo(actionDiv);
                }
            } else {
                // if no actions, the user can click on popup to close it
                this.dialog.bind('click', function () {
                    me.close(true);
                });
            }
            jQuery('body').append(this.dialog);

            contentHeight = contentDiv.height();
            reasonableHeight = jQuery(document).height() * 0.6;
            if (contentHeight > reasonableHeight) {
                contentDiv.height(reasonableHeight);
                contentDiv.css('overflow-y', 'auto');
            }
            // center on screen
            this.dialog.css('margin-left', -(this.dialog.width() / 2) + 'px');
            this.dialog.css('margin-top', -(this.dialog.height() / 2) + 'px');
        },
        /**
         * @method fadeout
         * Removes the popup after given time has passed
         * @param {Number} timeout milliseconds
         */
        fadeout: function (timeout) {
            var me = this,
                timer = 3000;
            if (timeout) {
                timer = timeout;
            }
            setTimeout(function () {
                me.close();
            }, timer);
        },
        /**
         * @method addClass
         * Adds a class for formatting the popup
         * @param {String} pClass css class name
         */
        addClass: function (pClass) {
            this.dialog.addClass(pClass);
        },
        /**
         * @method createCloseButton
         * Convenience method that creates a close button with
         * given label that can be given to show() method
         * @param {String} label button label
         * @return {Oskari.userinterface.component.Button} button that closes the dialog
         */
        createCloseButton: function (label) {
            var me = this,
                okBtn = Oskari.clazz.create('Oskari.userinterface.component.Button');
            okBtn.setTitle(label);
            okBtn.setHandler(function () {
                me.close(true);
            });
            return okBtn;
        },
        /**
         * @method close
         * Removes the popup after given time has passed
         * @param {Boolean} noAnimation true to close immediately (optional, defaults to fade out animation)
         */
        close: function (noAnimation) {
            var me = this;
            if (this.overlay) {
                this.overlay.close();
            }
            if (noAnimation) {
                me.dialog.remove();
            } else {
                me.dialog.animate({
                    opacity: 0
                }, 500);
                setTimeout(function () {
                    me.dialog.remove();
                }, 500);
            }
        },
        /**
         * @property alignment
         * Options for #moveTo() alignment parameter
         * @static
         */
        alignment: ['left', 'right', 'top', 'bottom'],
        /**
         * @method moveTo
         * Removes the popup after given time has passed
         * @param {jQuery} target - target element which the popup should point
         * @param {String} alignment - one of #alignment (optional, defaults to right)
         */
        moveTo: function (target, alignment) {
            var me = this,
                align = 'right',
                //get the position of the target element
                tar = jQuery(target),
                pos = tar.offset(),
                targetWidth = tar.outerWidth(),
                targetHeight = tar.outerHeight(),
                dialogWidth = me.dialog.outerWidth(),
                dialogHeight = me.dialog.outerHeight(),
                left = pos.left,
                top = pos.top;
            if (alignment && jQuery.inArray(alignment, this.alignment) !== -1) {
                align = alignment;
            }

            if (align === 'right') {
                left = (left + targetWidth) + 5;
                top = top + (targetHeight / 2) - (dialogHeight / 2);
            } else if (align === 'left') {
                left = (left - dialogWidth) - 5;
                top = top + (targetHeight / 2) - (dialogHeight / 2);
            } else if (align === 'top') {
                top = (top - dialogHeight) - 5;
                left = left + (targetWidth / 2) - (dialogWidth / 2);
            } else if (align === 'bottom') {
                top = (top + targetHeight) + 5;
                left = left + (targetWidth / 2) - (dialogWidth / 2);
            }
            if (left < 0) {
                left = 0;
            }
            if (top < 0) {
                top = 0;
            }
            // TODO: check for right and bottom as well
            me.dialog.addClass('arrow');
            me.dialog.addClass(alignment);
            //move dialog to correct location
            me.dialog.css({
                'left': left + "px",
                'top': top + "px",
                'margin-left': 0,
                'margin-top': 0
            });
        },
        /**
         * @method resetPosition
         * Resets any previous locations and centers the popup on screen
         */
        resetPosition: function () {
            var i;
            this.dialog.removeClass('arrow');
            for (i = 0; i < this.alignment.length; i += 1) {
                this.dialog.removeClass(this.alignment[i]);
            }
            this.dialog.removeAttr('style');
        },
        /**
         * @method makeModal
         * Creates an Oskari.userinterface.component.Overlay under
         * the popup to block user input outside the popup
         */
        makeModal: function () {
            var overlay = Oskari.clazz.create('Oskari.userinterface.component.Overlay');
            overlay.overlay('body');
            this.overlay = overlay;
            overlay.followResizing(true);
        },

        /** 
         * @method setContent
         * Sets dialog content element
         * @param {HTML/DOM/jQueryObject}
         */
        setContent: function (content) {
            var contentEl = this.dialog.find('div.content');
            contentEl.empty();
            contentEl.append(content);
        },

        /**
         * @method getContent
         * Gets dialog content element
         * @return {String} dialog content
         */
        getContent: function () {
            return this.dialog.find('div.content')[0].textContent;
        },

        getJqueryContent: function () {
            return this.dialog.find('div.content');
        },

        /**
         * @method makeDraggable
         * Makes dialog draggable with jQuery Event Drag plugin
         */
        makeDraggable: function () {
            var me = this;
            me.dialog.css("position", "absolute");
            me.dialog.draggable({
                scroll: false
            });
        }
    });

define("bundles/framework/bundle/divmanazer/component/Popup", function(){});

/**
 * @class Oskari.userinterface.component.Popup
 * Provides a popup window to replace alert
 */
Oskari.clazz.define('Oskari.userinterface.component.Overlay',

    /**
     * @method create called automatically on construction
     * @static
     */

    function () {
        this.template = jQuery('<div class="oskarioverlay transparent"></div>');
        this._overlay = null;
        this._targetSelector = null;
        this._resizingWorkaround = null;
    }, {
        /**
         * @method overlay
         * Overlays an element
         * @param {String} elementSelector, selector for element to overlay
         */
        overlay: function (elementSelector) {
            var me = this,
                target;
            me._overlay = this.template.clone();
            me._targetSelector = elementSelector;
            if (!this._targetSelector) {
                this._targetSelector = 'body';
            }
            target = jQuery(this._targetSelector);
            target.append(this._overlay);
            me._setupSizeAndLocation();
            me._overlay.bind('click', function (event) {
                event.preventDefault();
            });
        },
        _setupSizeAndLocation: function () {
            var me = this,
                target = jQuery(this._targetSelector);
            me._overlay.css({
                'left': "0px",
                'top': "0px",
                'width': target.width() + 'px',
                'height': target.height() + 'px'
            });
        },
        resize: function () {
            var tmp = jQuery(this._targetSelector);
            this._overlay.height(tmp.height());
            this._overlay.width(tmp.width());
        },
        followResizing: function (useWindow) {
            var me = this;
            if (useWindow) {
                jQuery(window).resize(function () {
                    me.resize();
                });
            } else {
                this._resizingWorkaround = setTimeout(function () {
                    me.resize();
                    me.followResizing();
                }, 500);
            }
        },
        close: function () {
            this._overlay.remove();
            if (this._resizingWorkaround) {
                clearTimeout(this._resizingWorkaround);
            }
        },
        bindClickToClose: function () {
            var me = this;
            me._overlay.bind('click', function () {
                me.close();
            });
        }
    });

define("bundles/framework/bundle/divmanazer/component/Overlay", function(){});

/**
 * @class Oskari.userinterface.component.Button
 *
 * Generic button component to make each button look the same in Oskari
 */
Oskari.clazz.define('Oskari.userinterface.component.Button',

    /**
     * @method create called automatically on construction
     * @static
     */

    function () {
        //this.template = jQuery('<div class="oskaributton"><input type="button"/></div>');
        this.template = jQuery('<input type="button"/>');
        this.title = null;
        this.ui = this.template.clone();
        this.handler = null;
    }, {
        /**
         * @method setTitle
         * Sets the button title
         * @param {String} pTitle title for the button
         */
        setTitle: function (pTitle) {
            this.title = pTitle;
            if (this.ui) {
                this.ui.attr('value', pTitle);
            }
        },
        /**
         * @method addClass
         * Adds a css class to the button
         * @param {String} pClass class to be added
         */
        addClass: function (pClass) {
            this.ui.addClass(pClass);
        },
        /**
         * @method setEnabled
         * Enables/Disables the button
         * @param {Boolean} blnEnabled true to enable, false to disable
         */
        setEnabled: function (blnEnabled) {
            if (blnEnabled === true) {
                this.ui.removeAttr('disabled');
            } else {
                this.ui.attr('disabled', 'disabled');
            }
        },
        /**
         * @method getTitle
         * Returns the panel title
         * @return {String} title for the panel
         */
        getTitle: function () {
            return this.title;
        },
        /**
         * @method setHandler
         * Sets click handler for button
         * @param {Function} pHandler click handler
         */
        setHandler: function (pHandler) {
            if (this.handler) {
                this.ui.unbind('click', this.handler);
            }
            this.handler = pHandler;
            this.ui.bind('click', this.handler);
        },
        /**
         * @method destroy
         * Destroys the button/removes it from document
         */
        destroy: function () {
            this.ui.remove();
        },

        /**
         * @method insertTo
         * Adds this button to given container.
         * @param {jQuery} container reference to DOM element
         */
        insertTo: function (container) {
            container.append(this.ui);
        },
        /**
         * @method getButton
         * Returns this buttons DOM element.
         * @return {jQuery} reference to DOM element
         */
        getButton: function () {
            return this.ui;
        }
    });

define("bundles/framework/bundle/divmanazer/component/Button", function(){});

/**
 * @class Oskari.userinterface.component.Form
 * Generic form component
 */
Oskari.clazz.define('Oskari.userinterface.component.Form',

    /**
     * @method create called automatically on construction
     * @static
     */

    function () {
        this.template = jQuery('<div class="oskariform"></div>');
        this._form = this.template.clone();
        this.fields = [];
    }, {
        addField: function (field) {
            this.fields.push(field);
        },
        /**
         * @method getForm
         * Returns reference to the form DOM
         * @return {jQuery
         */
        getForm: function (elementSelector) {
            var i;
            this._form = this.template.clone();
            for (i = 0; i < this.fields.length; i += 1) {
                this._form.append(this.fields[i].getField());
            }
            return this._form;
        },
        /**
         * @method getForm
         * Returns reference to the form DOM
         * @return {jQuery
         */
        validate: function (elementSelector) {
            var errors = [],
                i;
            for (i = 0; i < this.fields.length; i += 1) {
                errors = errors.concat(this.fields[i].validate());
            }
            return errors;
        },
        showErrors: function () {
            var i,
                errors;
            // TODO : maybe not validate again
            for (i = 0; i < this.fields.length; i += 1) {
                errors = this.fields[i].validate();
                this.fields[i].showErrors(errors);
            }
        },
        clearErrors: function () {
            var i;
            for (i = 0; i < this.fields.length; i += 1) {
                this.fields[i].clearErrors();
            }
        }
    });
define("bundles/framework/bundle/divmanazer/component/Form", function(){});

/**
 * @class Oskari.userinterface.component.UIHelper
 * Generic UI helper methods
 */
Oskari.clazz.define('Oskari.userinterface.component.UIHelper',

    /**
     * @method create called automatically on construction
     * @static
     */

    function (sandbox) {
        this.sandbox = sandbox;
    }, {
        /**
         * @method processHelpLinks
         * Processes given element and binds any element with
         * "helptags" attribute with a popup showing the help article
         * @param {String} title - help popup title
         * @param {jQuery} content - element to scan
         * @param {String} errorMsg - popup title if help article is not found
         * @param {String} errorMsg - message if help article is not found
         */
        processHelpLinks: function (title, content, errorTitle, errorMsg) {
            if (!content) {
                return;
            }
            var me = this,
                getCallback;

            // construct the callback for the button so we can position the popup accordingly
            getCallback = function (btn) {
                return function (isSuccess, pContent) {
                    var dialog = Oskari.clazz.create('Oskari.userinterface.component.Popup'),
                        okBtn = dialog.createCloseButton("OK");
                    okBtn.addClass('primary');
                    if (isSuccess) {
                        // help articles have only 'static' content
                        // FIXME static is a reserved word
                        dialog.show(title, pContent.static, [okBtn]);
                        dialog.moveTo(btn, 'bottom');
                    } else {
                        dialog.show(errorTitle, errorMsg, [okBtn]);
                    }
                };
            };
            // Help popups (PORTTISK-812)
            content.find('[helptags]').each(function (i, e) {
                var btn = jQuery(e),
                    taglist = btn.attr("helptags");
                btn.bind('click', function () {
                    me.getHelpArticle(taglist, getCallback(btn));
                });
            });
        },
        /**
         * @method getHelpArticle
         * Fetches an article from the server
         * "helptags" attribute with a popup showing the help article
         * @param {String} taglist - comma-separated list of article tags identifying the article
         * @param {Function} callback - function that is called on completion. Functions first param is
         *   boolean that indicates success, second parameter is the loaded content if it was successfully loaded
         */
        getHelpArticle: function (taglist, callback) {
            var me = this;
            jQuery.ajax({
                url: me.sandbox.getAjaxUrl() + 'action_route=GetArticlesByTag',
                data: {
                    tags: taglist
                },
                type: 'GET',
                dataType: 'json',
                beforeSend: function (x) {
                    if (x && x.overrideMimeType) {
                        x.overrideMimeType("application/j-son;charset=UTF-8");
                    }
                },
                success: function (resp) {
                    if (resp && resp.articles[0] && resp.articles[0].content) {
                        callback(true, resp.articles[0].content);
                    } else {
                        callback(false);
                    }
                },
                error: function () {
                    callback(false);
                }
            });
        }
    });

define("bundles/framework/bundle/divmanazer/component/UIHelper", function(){});

/**
 * @class Oskari.userinterface.component.FormInput
 * Form field to be used with Oskari.userinterface.component.Form
 */
Oskari.clazz.define('Oskari.userinterface.component.FormInput',

    /**
     * @method create called automatically on construction
     * @static
     */

    function (name, psandbox) {
        var sandbox = psandbox || Oskari.getSandbox(),
            label,
            input;
        this.sandbox = sandbox;
        this.template = jQuery('<div class="oskarifield"><label></label><input type="text" autofocus/></div>');
        this.templateErrors = jQuery('<div class="error"></div>');
        this.templateTooltip = jQuery('<div class="icon-info"></div>');
        this.templateClearButton = jQuery('<div class="icon-close"></div>');
        this._field = this.template.clone();

        label = this._field.find('label');
        label.attr('for', name);

        input = this._field.find('input').focus();

        input.attr('name', name);
        this._name = name;
        this._validator = null;
        this._required = false;
        this._requiredMsg = 'required';
        this._contentCheck = false;
        this._contentCheckMsg = 'illegal characters';

        this._bindFocusAndBlur();
        // word characters, digits, whitespace and chars '-,.?!' allowed
        this._regExp = /[\s\w\d\.\,\?\!\-äöåÄÖÅ]*/;
        this._colorRegExp = /^([A-Fa-f0-9]{6})$/;
    }, {
        /**
         * @method setLabel
         * Sets the fields label
         * @param {String} pLabel
         */
        setLabel: function (pLabel) {
            var label = this._field.find('label');
            label.html(pLabel);
        },
        /**
         * @method setTooltip
         * Sets the fields tooltip and possible help tags
         * @param {String} pTooltip tooltip text
         * @param {String} pDataTags comma separated list of article tags identifying the help article for this field
         */
        setTooltip: function (pTooltip, pDataTags) {
            // TODO: check existing tooltip
            var tooltip = this.templateTooltip.clone(),
                label;
            tooltip.attr('title', pTooltip);
            if (pDataTags) {
                tooltip.addClass('help');
                tooltip.attr('helptags', pDataTags);
            }
            label = this._field.find('label');
            label.before(tooltip);
        },
        /**
         * @method setPlaceholder
         * Sets the fields placeholder text
         * @param {String} pLabel
         */
        setPlaceholder: function (pLabel) {
            var input = this._field.find('input');
            input.attr('placeholder', pLabel);
        },
        /**
         * @method setRequired
         * Adds a validator to the field requiring content on the field
         * @param {Boolean} blnParam true to require content on the field
         * @param {String} reqMsg error message to show when validation fails (field is empty)
         */
        setRequired: function (blnParam, reqMsg) {
            this._required = (blnParam === true);
            if (reqMsg) {
                this._requiredMsg = reqMsg;
            }
        },
        /**
         * @method setCharacterCheck
         * Adds a validator to the field requiring content to match certain rules.
         * @param {Boolean} blnParam true to require content validation on the field
         * @param {String} errorMsg error message to show when validation fails
         * @param {Pattern} regexp pattern to check content with (optional)
         */
        setContentCheck: function (blnParam, errorMsg, regexp) {
            this._contentCheck = (blnParam === true);
            if (regexp) {
                this._regExp = regexp;
            }
            if (errorMsg) {
                this._contentCheckMsg = errorMsg;
            }
        },

        showErrors: function (errors) {
            this.clearErrors();
            var errorDiv = this.templateErrors.clone(),
                i;
            // TODO: check spacing for multiple errors
            for (i = 0; i < errors.length; i += 1) {
                errorDiv.append(errors[i].error + '<br/>');
            }
            this._field.append(errorDiv);
        },
        clearErrors: function () {
            var errors = this._field.find('div.error');
            errors.remove();
        },
        /**
         * @method getField
         * Returns reference to the field DOM
         * @return {jQuery}
         */
        getField: function () {
            return this._field;
        },
        /**
         * @method getValue
         * Returns fields value.
         * @param {Boolean} blnFilteredValue true to filter contents to include only safe characters (optional)
         * @return {String}
         */
        getValue: function (blnFilteredValue) {
            var value = this._field.find('input').val();
            if (blnFilteredValue) {
                value = value.match(this._regExp);
            }
            return String(value);
        },
        /**
         * @method setValue
         * Sets the fields value
         * @param {String} value
         */
        setValue: function (value) {
            this._field.find('input').attr('value', value);
        },
        /**
         * @method getName
         * Returns fields name
         * @return {String}
         */
        getName: function () {
            return this._name;
        },
        /**
         * @method setEnabled
         * Enables/Disables the button
         * @param {Boolean} blnEnabled true to enable, false to disable
         */
        setEnabled: function (blnEnabled) {
            if (blnEnabled === true) {
                this._field.find('input').removeAttr('disabled');
            } else {
                this._field.find('input').attr('disabled', 'disabled');
            }
        },

        /**
         * @method setRegExp
         * Sets the regular expression to be used in validation.
         * @param {RegExp} regex
         */
        setRegExp: function (regex) {
            this._regExp = regex;
        },

        /**
         * @method setValidator
         * The given validator function should returns an errors array or empty array if no errors.
         * The array consists of objects like this:
         * {
         *   "field": this.getName(),
         *   "error" : 'error message'
         * }
         * @param {Function} pValidator validator function
         */
        setValidator: function (pValidator) {
            this._validator = pValidator;
        },
        /**
         * @method validate
         * Returns errors array or empty array if no errors. Each error object in the array
         * has properties "field" with the field name as value and error with the error message as value:
         * {
         *     field : <field name>,
         *     error : <error message>
         * }
         * @return {Object[]}
         */
        validate: function () {
            var errors = [],
                value;
            if (this._validator) {
                errors = this._validator(this);
            }
            value = this.getValue();
            if (this._required) {
                if (!this.checkLength(value, 1)) {
                    errors.push({
                        "field": this.getName(),
                        "error": this._requiredMsg
                    });
                }
            }
            if (this._contentCheck) {
                if (!this.checkValue()) {
                    errors.push({
                        "field": this.getName(),
                        "error": this._contentCheckMsg
                    });
                }
            }
            return errors;
        },

        /**
         * @method checkLength
         * @param {String} pStr string to validate
         * @param {Number} min min length (optional)
         * @param {Number} max max length (optional)
         * Validates string length
         * @return true if in range
         */
        checkLength: function (pStr, min, max) {
            if (pStr) {
                var str = jQuery.trim(pStr.toString());
                if (min && str.length < min) {
                    return false;
                }
                if (max && str.length > max) {
                    return false;
                }
                return true;
            }
            return false;
        },
        /**
         * @method checkValue
         * Checks the field contents against a regexp pattern and returns true if contents match
         * @return {Boolean}
         */
        checkValue: function () {
            var value = this.getValue(),
                filtered = this.getValue(true);
            // if values match, everything ok
            return (value === filtered);
        },
        /**
         * @method validateNumberRange
         * @param {Object} value number to validate
         * @param {Number} min min value
         * @param {Number} max max value
         * Validates number range
         */
        validateNumberRange: function (value, min, max) {
            if (isNaN(parseInt(value, 10))) {
                return false;
            }
            if (!isFinite(value)) {
                return false;
            }
            if (value < min || value > max) {
                return false;
            }
            return true;
        },
        /**
         * @method validateHexColor
         * Validates a color hex-string with out the starting #-character
         * @param {String} value hex-string to validate
         */
        validateHexColor: function (value) {
            return this._colorRegExp.test(value);
        },

        /**
         * @method bindEnterKey
         * Binds <enter> keypress to trigger given function
         * @param {Function} callback method that is called if enter is pressed on the input
         */
        bindEnterKey: function (callback) {
            var me = this,
                input = this._field.find('input');
            input.keypress(function (event) {
                if (me._isEnterPress(event)) {
                    callback(event);
                }
            });
        },
        /**
         * @method bindUpKey
         * Binds <up> keypress to trigger given function
         * @param {Function} callback method that is called if up is pressed on the input
         */
        bindUpKey: function (callback) {
            
            var me = this,
                input = this._field.find('input');

            input.keydown(function (event) {
                if (me._isUpPress(event)) {
                    event.preventDefault();
                    callback(event);
                }
            });
        },
        /**
         * @method bindDownKey
         * Binds <down> keypress to trigger given function
         * @param {Function} callback method that is called if down is pressed on the input
         */
        bindDownKey: function (callback) {
            
            var me = this,
                input = this._field.find('input');

            input.keydown(function (event) {
                if (me._isDownPress(event)) {
                    event.preventDefault();
                    callback(event);
                }
            });
        },
        /**
         * @method bindOnBlur
         * Binds <blur> effect to trigger given function
         * @param {Function} callback method that is called if blur has happened for the input
         */
        bindOnBlur: function (callback) {
            
            // all set, ready to bind requests
            var input = this._field.find('input');
            input.blur(function () {
                callback();
            });

        },
        /**
         * @method bindChange
         * Bind function to fields change event
         * @param {Function} callback method that is called if enter is pressed on the input
         * @param {Boolean} blnImmediate true to bind to keyup event, false to bind to change event
         */
        bindChange: function (callback, blnImmediate) {
            var input = this._field.find('input');

            if (!blnImmediate) {
                input.on('change', callback);
            } else {
                input.keyup(callback);
            }
        },

        /**
         * @method addClearButton
         * Adds a clear button to the field
         */
        addClearButton: function () {
            var clearButton = this.templateClearButton.clone(),
                input = this._field.find('input');
            clearButton.bind('click', function () {
                input.val('');
                input.trigger('change');
                input.trigger('keyup');
            });
            input.after(clearButton);
        },
        /**
         * @method _bindFocusAndBlur
         * Enables/Disables map movement with keyboard to fields focus/blur
         * @private
         */
        _bindFocusAndBlur: function () {
            var sandbox = this.sandbox,
                enabler,
                disabler,
                input;

            if (!sandbox) {
                return;
            }


            enabler = sandbox.getRequestBuilder('EnableMapKeyboardMovementRequest');
            disabler = sandbox.getRequestBuilder('DisableMapKeyboardMovementRequest');
            if (!enabler || !disabler) {
                return;
            }
            // all set, ready to bind requests
            input = this._field.find('input');
            input.focus(function () {
                sandbox.postRequestByName('DisableMapKeyboardMovementRequest');
            });
            input.blur(function () {
                sandbox.postRequestByName('EnableMapKeyboardMovementRequest');
            });
        },
        /**
         * @method _isEnterPress
         * Detects if <enter> key was pressed and calls #_doSearch if it was
         * @private
         * @param {Object} event
         *      keypress event object from browser
         */
        _isEnterPress: function (event) {
            var keycode = event.which;
            // true if <enter>
            return (keycode === 13);
        },
        /**
         * @method _isDownPress
         * Detects if <down> key was pressed and calls #_doSearch if it was
         * @private
         * @param {Object} event
         *      keypress event object from browser
         */
        _isDownPress: function (event) {
            var keycode = event.which;
            // true if <up>
            return (keycode === 40);
        },
        /**
         * @method _isUpPress
         * Detects if <up> key was pressed and calls #_doSearch if it was
         * @private
         * @param {Object} event
         *      keypress event object from browser
         */
        _isUpPress: function (event) {
            var keycode = event.which;
            // true if <up>
            return (keycode === 38);
        }
    });


define("bundles/framework/bundle/divmanazer/component/FormInput", function(){});

/* ===========================================================
 * bootstrap-tooltip.js v2.0.3 (with popover)
 * http://twitter.github.com/bootstrap/javascript.html#tooltips
 * Inspired by the original jQuery.tipsy by Jason Frame
 * ===========================================================
 * Copyright 2012 Twitter, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * ========================================================== */
! function ($) {

    /* TOOLTIP PUBLIC CLASS DEFINITION
     * =============================== */

    var Tooltip = function (element, options) {
        this.init('oskariTooltip', element, options);
    },
        Popover = function (element, options) {
            this.init('oskariPopover', element, options);
        };

    Tooltip.prototype = {

        constructor: Tooltip,
        init: function (type, element, options) {
            var eventIn, eventOut;

            this.type = type;
            this.$element = $(element);
            this.options = this.getOptions(options);
            this.enabled = true;

            if (this.options.trigger !== 'manual') {
                eventIn = this.options.trigger === 'hover' ? 'mouseenter' : 'focus';
                eventOut = this.options.trigger === 'hover' ? 'mouseleave' : 'blur';
                this.$element.on(eventIn, this.options.selector, $.proxy(this.enter, this));
                this.$element.on(eventOut, this.options.selector, $.proxy(this.leave, this));
            }
            if (this.options.selector) {
                this._options = $.extend(
                    {},
                    this.options,
                    {
                        trigger: 'manual',
                        selector: ''
                    }
                );
            } else {
                this.fixTitle();
            }
        },
        getOptions: function (options) {
            options = $.extend({}, $.fn[this.type].defaults, options, this.$element.data());

            if (options.delay && typeof options.delay === 'number') {
                options.delay = {
                    show: options.delay,
                    hide: options.delay
                };
            }

            return options;
        },
        enter: function (e) {
            var self = $(e.currentTarget)[this.type](this._options).data(this.type);

            if (!self.options.delay || !self.options.delay.show) {
                return self.show();
            }
            clearTimeout(this.timeout);
            self.hoverState = 'in';
            this.timeout = setTimeout(function () {
                if (self.hoverState === 'in') {
                    self.show();
                }
            }, self.options.delay.show);
        },
        leave: function (e) {
            var self = $(e.currentTarget)[this.type](this._options).data(this.type);

            if (!self.options.delay || !self.options.delay.hide) {
                return self.hide();
            }
            clearTimeout(this.timeout);
            self.hoverState = 'out';
            this.timeout = setTimeout(function () {
                if (self.hoverState === 'out') {
                    self.hide();
                }
            }, self.options.delay.hide);
        },
        show: function () {
            var $tip, inside, pos, actualWidth, actualHeight, placement, tp;

            if (this.hasContent() && this.enabled) {
                $tip = this.tip();
                this.setContent();

                if (this.options.animation) {
                    $tip.addClass('fade');
                }
                placement = /*typeof this.options.placement == 'function' ? this.options.placement.call(this, $tip[0], this.$element[0]) : this.options.placement*/
                    this.options.placement.apply(this.options.scope);
                inside = /in/.test(placement);

                $tip.remove().css({
                    top: 0,
                    left: 0,
                    display: 'block'
                }).appendTo(inside ? this.$element : document.body);
                pos = this.getPosition(inside);
                actualWidth = $tip[0].offsetWidth;
                actualHeight = $tip[0].offsetHeight;

                switch (inside ? placement.split(' ')[1] : placement) {
                case 'bottom':
                    tp = {
                        top: pos.top + pos.height,
                        left: pos.left + pos.width / 2 - actualWidth / 2
                    };
                    break;
                case 'top':
                    tp = {
                        top: pos.top - actualHeight,
                        left: pos.left + pos.width / 2 - actualWidth / 2
                    };
                    break;
                case 'left':
                    tp = {
                        top: pos.top + pos.height / 2 - actualHeight / 2,
                        left: pos.left - actualWidth
                    };
                    break;
                case 'right':
                    tp = {
                        top: pos.top + pos.height / 2 - actualHeight / 2,
                        left: pos.left + pos.width
                    };
                    break;
                }

                $tip.css(tp).addClass(placement).addClass('in');

            }
        },
        isHTML: function (text) {
            // html string detection logic adapted from jQuery
            return typeof text !== 'string' || (text.charAt(0) === "<" && text.charAt(text.length - 1) === ">" && text.length >= 3) || /^(?:[^<]*<[\w\W]+>[^>]*$)/.exec(text);
        },
        setContent: function () {
            var $tip = this.tip(),
                title = this.getTitle();
            $tip.find('.oskari-tooltip-inner')[this.isHTML(title) ? 'html' : 'text'](title);
            $tip.removeClass('fade in top bottom left right');
        },
        hide: function () {
            var $tip = this.tip();

            $tip.removeClass('in');

            function removeWithAnimation() {
                var timeout = setTimeout(function () {
                    $tip.off($.support.transition.end).remove();
                }, 500);

                $tip.one($.support.transition.end, function () {
                    clearTimeout(timeout);
                    $tip.remove();
                });
            }
            $.support.transition && this.$tip.hasClass('fade') ? removeWithAnimation() : $tip.remove();
        },
        fixTitle: function () {
            var $e = this.$element;
            if ($e.attr('title') || typeof ($e.attr('data-original-title')) !== 'string') {
                $e.attr('data-original-title', $e.attr('title') || '').removeAttr('title');
            }
        },
        hasContent: function () {
            return this.getTitle();
        },
        getPosition: function (inside) {
            return $.extend({}, (inside ? {
                top: 0,
                left: 0
            } : this.$element.offset()), {
                width: this.$element[0].offsetWidth,
                height: this.$element[0].offsetHeight
            });
        },
        getTitle: function () {
            return this.options.title.apply(this.options.scope);
        },
        tip: function () {
            return this.$tip = this.$tip || $(this.options.template);
        },
        validate: function () {
            if (!this.$element[0].parentNode) {
                this.hide();
                this.$element = null;
                this.options = null;
            }
        },
        enable: function () {
            this.enabled = true;
        },
        disable: function () {
            this.enabled = false;
        },
        toggleEnabled: function () {
            this.enabled = !this.enabled;
        },
        toggle: function () {
            this[this.tip().hasClass('in') ? 'hide' : 'show']();
        },
        attach: function ($el) {
            this.$element = $el;
        }
    };

    /* TOOLTIP PLUGIN DEFINITION
     * ========================= */

    $.fn.oskariTooltip = function (option) {
        return this.each(function () {
            var $this = $(this),
                data = $this.data('oskariTooltip'),
                options = typeof option === 'object' && option;
            if (!data) {
                $this.data('oskariTooltip', (data = new Tooltip(this, options)));
            }
            if (typeof option === 'string') {
                data[option]();
            }
        });
    };

    $.fn.oskariTooltip.Constructor = Tooltip;

    $.fn.oskariTooltip.defaults = {
        animation: true,
        placement: 'top',
        selector: false,
        template: '<div class="oskari-tooltip"><div class="oskari-tooltip-arrow"></div><div class="oskari-tooltip-inner"></div></div>',
        trigger: 'hover',
        title: '',
        delay: 0
    };

    /* POPOVER PUBLIC CLASS DEFINITION
     * =============================== */

    /* NOTE: POPOVER EXTENDS BOOTSTRAP-TOOLTIP.js
     * ========================================== */

    Popover.prototype = $.extend({}, $.fn.oskariTooltip.Constructor.prototype, {

        constructor: Popover,
        setContent: function () {
            var $tip = this.tip(),
                title = this.getTitle(),
                content = this.getContent();

            $tip.find('.oskari-popover-title')[this.isHTML(title) ? 'html' : 'text'](title);
            $tip.find('.oskari-popover-content > *')[this.isHTML(content) ? 'html' : 'text'](content);

            $tip.removeClass('fade top bottom left right in');
        },
        hasContent: function () {
            return this.getTitle() || this.getContent();
        },
        getContent: function () {
            return this.options.content.apply(this.options.scope);
        },
        tip: function () {
            if (!this.$tip) {
                this.$tip = $(this.options.template);
            }
            return this.$tip;
        }
    });

    /* POPOVER PLUGIN DEFINITION
     * ======================= */

    $.fn.oskariPopover = function (option) {
        return this.each(function () {
            var $this = $(this),
                data = $this.data('oskariPopover'),
                options = typeof option === 'object' && option;
            if (!data) {
                $this.data('oskariPopover', (data = new Popover(this, options)));
            }
            if (typeof option === 'string') {
                data[option]();
            }
        });
    };

    $.fn.oskariPopover.Constructor = Popover;

    $.fn.oskariPopover.defaults = $.extend({}, $.fn.oskariTooltip.defaults, {
        placement: 'right',
        content: '',
        template: '<div class="oskari-popover"><div class="oskari-arrow"></div><div class="oskari-popover-inner"><h3 class="oskari-popover-title"></h3><div class="oskari-popover-content"><p></p></div></div></div>'
    });

    /**
     * @class Oskari.userinterface.component.Popover
     */
    Oskari.clazz.define('Oskari.userinterface.component.Popover',

        /**
         * @method create called automatically on construction
         * @static
         *
         */

        function (title, content) {
            this.title = title;
            this.content = content;
            this.$container = null;
            this.data = null;
            this.shown = false;
            this.placement = 'bottom';

        }, {
            templates: {
                "container": '<div class="oskari-popover-container"/>'
            },
            hide: function () {
                if (!this.shown) {
                    return;
                }
                this.shown = false;
                if (!this.data) {
                    return;
                }
                this.data.hide();
            },
            show: function () {
                if (this.shown) {
                    return;
                }
                if (!this.data) {
                    return;
                }
                this.data.show();
                this.shown = true;
            },
            attachTo: function (element) {
                var me = this;
                me.$container = $(element);
                if (!me.data) {
                    me.data = new Popover(element, {
                        'scope': me,
                        'title': me.getTitle,
                        'content': me.getContent,
                        'trigger': 'manual',
                        'placement': me.getPlacement
                    });

                } else {
                    me.data.attach(me.$container);
                }
                me.$container.data('oskariPopover', me.data);
            },
            getTitle: function () {
                return this.title;
            },
            getContent: function () {
                return this.content;
            },
            setContent: function (content, title) {
                var me = this;
                me.hide();
                me.content = content;
                if (title) {
                    me.title = title;
                }
                me.show();
            },
            setTitle: function (title, content) {
                var me = this;
                me.hide();
                me.title = title;
                if (content) {
                    me.content = content;
                }
                me.show();
            },
            setPlacement: function (p) {
                this.placement = p;
            },
            getPlacement: function () {
                return this.placement;
            }
        });

}(window.jQuery);

define("bundles/framework/bundle/divmanazer/component/Popover", function(){});

/**
 * @class Oskari.userinterface.component.Grid
 *
 * Renders given data model as a grid/table. Provides sorting funtionality.
 * If table data is structured to have "inner tables" -> #setAdditionalDataHandler
 * method can be used to set a callback which will show the additional data externally
 * to keep the table clean.
 */
Oskari.clazz.define('Oskari.userinterface.component.Grid',

    /**
     * @method create called automatically on construction
     * @static
     */

    function (columnSelectorTooltip) {
        this.model = null;
        var columnSelectorButtonTitle = "";
        if (typeof columnSelectorTooltip !== "undefined") {
            columnSelectorButtonTitle = columnSelectorTooltip;
        }
        this.template = jQuery('<table class="oskari-grid"><thead><tr></tr></thead><tbody></tbody></table>');
        this.templateTableHeader = jQuery('<th><a href="JavaScript:void(0);"></a></th>');
        this.templateDiv = jQuery('<div></div>');
        this.templateRow = jQuery('<tr></tr>');
        this.templateCell = jQuery('<td></td>');
        this.templatePopupLink = jQuery('<a href="JavaScript: void(0);"></a>');
        this.templateColumnSelectorButtonWrapper = jQuery('<div/>', {});
        this.templateColumnSelectorButton = jQuery('<div/>', {
            title: columnSelectorButtonTitle
        });
        this.templateColumnSelector = jQuery('<div/>', {});
        this.templateColumnSelectorList = jQuery('<ul/>', {});
        this.templateColumnSelectorListItem = jQuery('<li>' +
                '<div>' +
                '<input type="checkbox"/>' +
                '<label></label>' +
                '</div>' +
                '</li>'
            );
        this.templateColumnSelectorClose = jQuery('<div class="icon-close close-selector-button"></div>');
        this.table = null;
        this.fieldNames = [];
        this.selectionListeners = [];
        this.additionalDataHandler = null;
        this.visibleColumnSelector = null;
        this.showColumnSelector = false;
        this.resizableColumns = false;

        this.uiNames = {};
        this.valueRenderer = {};

        // last sort parameters are saved so we can change sort direction if the same column is sorted again
        this.lastSort = null;
    }, {
        /**
         * @method setDataModel
         * Sets the data model the grid uses for rendering
         * @param {Oskari.userinterface.component.GridModel} pData
         */
        setDataModel: function (pData) {
            this.model = pData;
        },
        /**
         * @method getDataModel
         * Returns the data model the grid uses for rendering
         * @return {Oskari.userinterface.component.GridModel}
         */
        getDataModel: function () {
            return this.model;
        },

        /**
         * @method setColumnSelector
         * Sets the column selector visible or invisible
         * @param {Boolean} newShowColumnSelector truth value for showing a column selector
         */
        setColumnSelector: function (newShowColumnSelector) {
            this.showColumnSelector = newShowColumnSelector;
        },
        /**
         * @method setResizableColumns
         * Sets the columns resizable or static
         * @param {Boolean} newResizableColumns truth value for column resizability
         */
        setResizableColumns: function (newResizableColumns) {
            this.resizableColumns = newResizableColumns;
        },
        /**
         * @method setColumnUIName
         * Sets an UI text for a given field.
         * The grid shows the UI name instead of the datas field name
         * @param {String} fieldName field name we want to replace in UI
         * @param {String} uiName field name we want to use instead in UI
         */
        setColumnUIName: function (fieldName, uiName) {
            this.uiNames[fieldName] = uiName;
        },
        /**
         * @method setColumnValueRenderer
         * When rendering the field value the given renderer function is called if given.
         * The function takes the value as parameter and should return the processed value:
         * function({String} value, {Object} rowData) {
         *     return value;
         * }
         * RowData parameter includes the object being rendered including
         * the value so renderer has access to id and such
         * @param {String} fieldName field name we want to process before showing in ui
         * @param {String} renderer function that will process the value
         */
        setColumnValueRenderer: function (fieldName, renderer) {
            this.valueRenderer[fieldName] = renderer;
        },
        /**
         * @method setVisibleFields
         * If not given renders all data fields
         * @param {String[]} pFieldNames fieldnames that should be rendered from data
         */
        setVisibleFields: function (pFieldNames) {
            this.fieldNames = pFieldNames;
        },
        /**
         * @method addSelectionListener
         * The callback function will receive reference to the grid in question as first parameter
         * and the id for the selected data as second parameter:
         * function({Oskari.userinterface.component.Grid} grid, {String} dataId)
         * @param {function} pCallback callback to call when a row has been selected
         */
        addSelectionListener: function (pCallback) {
            this.selectionListeners.push(pCallback);
        },
        /**
         * @method setAdditionalDataHandler
         * If grid data has internal table structures, it can be hidden behind a link
         * by using this method. This way the grid stays more clear.
         * @param {String} title text for the link
         * @param {function} handler callback to call when the link is clicked
         */
        setAdditionalDataHandler: function (title, handler) {
            this.additionalDataHandler = {
                title: title,
                handler: handler
            };
        },

        /**
         * @method _createAdditionalDataField
         * Renders the given data using #_renderAdditionalData() and wraps it with a linked callback if
         * #setAdditionalDataHandler() has been used.
         * @private
         * @param {Object[]} data data to be rendered
         * @return (jQuery) reference to rendered content
         */
        _createAdditionalDataField: function (data) {
            var me = this,
                content = this._renderAdditionalData(data),
                link;
            // if handler set -> show link instead
            // exception if data is an array (=has size method)
            if (!data.size && this.additionalDataHandler) {
                link = this.templatePopupLink.clone();
                link.append(this.additionalDataHandler.title);
                link.bind('click', function () {
                    // show userguide popup with data
                    me.additionalDataHandler.handler(link, content);
                    return false;
                });
                return link;
            }
            return content;

        },
        /**
         * @method _renderAdditionalData
         * Renders the given data to a table or comma separated list depending on type
         * @private
         * @param {Object[]} data data to be rendered
         * @return (jQuery) reference to rendered content
         */
        _renderAdditionalData: function (data) {
            var table = this.template.clone(),
                body = table.find('tbody'),
                value,
                row,
                fieldCell,
                valueCell,
                type,
                innerTable,
                i,
                field;
            if (data.size) {
                // array data
                value = '';
                for (i = 0; i < data.size(); i += 1) {
                    if (i !== 0) {
                        value = value + ', ';
                    }
                    value = value + data[i];
                }
                return value;
            }

            // format array
            if(jQuery.isArray(data)) {
                var valueDiv = this.templateDiv.clone();
                for(var i=0; i < data.length;++i) {
                    var innerTable = this._renderAdditionalData(data[i]);
                    valueDiv.append(innerTable);
                }
                return valueDiv;
            }

            // else format as table
            for (field in data) {
                if (data.hasOwnProperty(field)) {
                    row = this.templateRow.clone();
                    fieldCell = this.templateCell.clone();
                    valueCell = this.templateCell.clone();
                    value = data[field];
                    fieldCell.append(field);
                    row.append(fieldCell);

                    //row.append('<td>' + field + '</td>');
                    try {
                        type = typeof value;
                        if (type === 'object') {
                            innerTable = this._renderAdditionalData(value);
                            valueCell.append(innerTable);
                        } else if (type !== 'function') {
                            valueCell.append(value);
                        }/* else {
                            // we have a problem, debug
                            //alert(type + ':\r\n' +JSON.stringify(data));
                        }*/
                        row.append(valueCell);
                    } catch (ignore) {}

                    body.append(row);
                }
            }
            return table;
        },
        /**
         * @method _renderHeader
         * Renders the header part for data in #getDataModel() to the given table.
         * @private
         * @param {jQuery} table reference to the table DOM element whose header should be populated
         * @param {String[]} fieldNames names of the fields to render in render order
         */
        _renderHeader: function (table, fieldNames) {
            var me = this,
            // print header
                headerContainer = table.find('thead tr'),
                bodyContainer = table.find('tbody'),
                i,
                header,
                link,
                fieldName,
                uiName,
                headerClosureMagic;

            // header reference needs some closure magic to work here
            headerClosureMagic = function (scopedValue) {
                return function () {
                    // reference to sort link element
                    var linky = jQuery(this),
                        // get previous selection
                        selection = me.getSelection(),
                        // default to descending sort
                        descending = false,
                        idField,
                        j;
                    // clear table for sorted results
                    bodyContainer.empty();
                    // if last sort was made on the same column -> change direction
                    if (me.lastSort && me.lastSort.attr === scopedValue) {
                        descending = !me.lastSort.descending;
                    }

                    // sort the results
                    me._sortBy(scopedValue, descending);
                    // populate table content
                    me._renderBody(table, fieldNames);
                    // apply visual changes
                    headerContainer.find('th').removeClass('asc');
                    headerContainer.find('th').removeClass('desc');
                    if (descending) {
                        linky.parent().addClass('desc');
                    } else {
                        linky.parent().addClass('asc');
                    }
                    // reselect selection
                    idField = me.model.getIdField();
                    for (j = 0; j < selection.length; j += 1) {
                        me.select(selection[j][idField], true);
                    }
                    return false;
                };
            };
            for (i = 0; i < fieldNames.length; i += 1) {
                header = this.templateTableHeader.clone();
                link = header.find('a');
                fieldName = fieldNames[i];
                uiName = this.uiNames[fieldName];
                if (!uiName) {
                    uiName = fieldName;
                }
                link.append(uiName);
                if (me.lastSort && fieldName === me.lastSort.attr) {
                    if (me.lastSort.descending) {
                        header.addClass('desc');
                    } else {
                        header.addClass('asc');
                    }
                }
                link.bind('click', headerClosureMagic(fieldNames[i]));
                headerContainer.append(header);
            }
        },
        /**
         * @method _renderBody
         * Renders the data in #getDataModel() to the given table.
         * @private
         * @param {jQuery} table reference to the table DOM element whose body should be populated
         * @param {String[]} fieldNames names of the fields to render in render order
         */
        _renderBody: function (table, fieldNames) {
            var me = this,
            // print data
                body = table.find('tbody'),
                dataArray = this.model.getData(),
                i,
                row,
                data,
                f,
                key,
                value,
                cell,
                renderer,
                rows,
                rowClicked;
            for (i = 0; i < dataArray.length; i += 1) {
                row = this.templateRow.clone();
                data = dataArray[i];

                row.attr('data-id', data[this.model.getIdField()]);
                for (f = 0; f < fieldNames.length; f += 1) {
                    key = fieldNames[f];
                    value = data[key];

                    cell = this.templateCell.clone();
                    if (typeof value === 'object') {
                        cell.append(this._createAdditionalDataField(value));
                    } else {
                        renderer = this.valueRenderer[key];
                        if (renderer) {
                            value = renderer(value, data);
                        }
                        cell.append(value);
                    }
                    row.append(cell);
                }
                body.append(row);
            }
            // innertable might mix this up
            rows = table.find('tbody tr');
            rowClicked = function () {
                me._dataSelected(jQuery(this).attr('data-id'));
            };
            rows.bind('click', rowClicked);
            // enable links to work normally (unbind row click on hover and rebind when mouse exits)
            rows.find('a').hover(function () {
                jQuery(this).parents('tr').unbind('click');
            }, function () {
                jQuery(this).parents('tr').bind('click', rowClicked);
            });
        },

        /**
         * @method _renderColumnSelector
         * Renders the column selector for the given table.
         * @private
         * @param {jQuery} table reference to the table DOM element
         * @param {String[]} fieldNames names of the fields to select visible
         */
        _renderColumnSelector: function (table, fieldNames) {
            // Utilize the templates
            this.visibleColumnSelector = this.templateColumnSelectorButtonWrapper.clone();
            var me = this,
                columnSelectorButton = this.templateColumnSelectorButton.clone(),
                columnSelector = this.templateColumnSelector.clone(),
                columnSelectorList = this.templateColumnSelectorList.clone(),
                columnSelectorClose = this.templateColumnSelectorClose.clone(),
                fields,
                visibleField,
                i,
                j,
                newColumn,
                checkboxInput;

            this.visibleColumnSelector.addClass('column-selector-placeholder');
            columnSelectorButton.addClass('icon-menu');
            columnSelector.addClass('column-selector');

            this.visibleColumnSelector.append(columnSelectorButton);
            this.visibleColumnSelector.append(columnSelector);

            jQuery('input.column-selector-list-item').remove();
            // Open or close the checkbox dropdown list
            columnSelectorButton.click(function () {
                if (columnSelector.css('visibility') !== 'hidden') {
                    columnSelector.css('visibility', 'hidden');
                } else {
                    columnSelector.css('visibility', 'visible');
                }
            });
            columnSelectorClose.click(function (e) {
                e.stopPropagation();
                columnSelector.css('visibility', 'hidden');
            });
            fields = this.model.getFields();
            // Add field names to the list
            for (i = 0; i < fields.length; i += 1) {
                visibleField = false;
                // Set current checkbox value for the field
                for (j = 0; j < fieldNames.length; j += 1) {
                    if (fields[i] === fieldNames[j]) {
                        visibleField = true;
                        break;
                    }
                }
                newColumn = this.templateColumnSelectorListItem.clone();
                newColumn.addClass('column-selector-list-item');
                checkboxInput = newColumn.find('input');
                checkboxInput.attr('checked', visibleField);
                checkboxInput.addClass('column-selector-list-item');
                checkboxInput.attr('id', fields[i]);
                newColumn.find('label')
                    .attr({
                        'for': fields[i],
                        'class': 'column-label'
                    })
                    .html(fields[i]);
                newColumn.css({
                    'margin': '5px'
                });

                // Update visible fields after checkbox change
                checkboxInput.change(function () {
                    var fieldSelectors = jQuery('input.column-selector-list-item'),
                        oldFields = me.model.getFields(),
                        newFields = [],
                        k,
                        l;
                    for (k = 0; k < oldFields.length; k += 1) {
                        for (l = 0; l < fieldSelectors.length; l += 1) {
                            if (oldFields[k] === fieldSelectors[l].id) {
                                if (fieldSelectors[l].checked) {
                                    newFields.push(oldFields[k]);
                                }
                                break;
                            }
                        }
                    }
                    if (newFields.length > 0) {
                        me.setVisibleFields(newFields);
                    }
                    me.renderTo(me.visibleColumnSelector.parent(), {
                        columnSelector: 'open'
                    });
                });
                columnSelectorList.append(newColumn);
            }
            columnSelectorList.attr('class', 'column-selector-list');
            columnSelector.append(columnSelectorList, columnSelectorClose);
            columnSelectorClose.click(function (e) {
                e.stopPropagation();
                columnSelector.css('visibility', 'hidden');
            });
        },

        /**
         * @method _enableColumnResizer
         * Enables column resizing functionality
         */
        _enableColumnResizer: function () {
            var pressed = false,
                start,
                startX,
                startWidth,
                featureTable = jQuery('table.oskari-grid th');
            featureTable.css('cursor', 'e-resize');

            // Start resizing
            featureTable.mousedown(function (e) {
                start = jQuery(this);
                pressed = true;
                startX = e.pageX;
                startWidth = jQuery(this).width();
                jQuery(start).addClass("resizing");
                // Disable mouse selecting
                jQuery(document).attr('unselectable', 'on')
                    .css('user-select', 'none')
                    .on('selectstart', false);
            });

            // Resize when mouse moves
            jQuery(document).mousemove(function (e) {
                if (pressed) {
                    jQuery(start).width(startWidth + (e.pageX - startX));
                }
            });

            // Stop resizing
            jQuery(document).mouseup(function () {
                if (pressed) {
                    jQuery(start).removeClass("resizing");
                    pressed = false;
                }
            });
        },

        /**
         * @method renderTo
         * Renders the data in #getDataModel() to the given DOM element.
         * @param {jQuery} container reference to DOM element where the grid should be inserted.
         * @param {Object} state tells into what state we are going to render this grid
         * (e.g. columnSelector: open tells that we want to show columnselector)
         */
        renderTo: function (container, state) {
            container.empty();
            var fieldNames = this.fieldNames,
                table = this.template.clone();
            // if visible fields not given, show all
            if (fieldNames.length === 0) {
                fieldNames = this.model.getFields();
            }

            this.table = table;
            this._renderHeader(table, fieldNames);

            if (this.lastSort) {
                // sort with last know sort when updating data
                this._sortBy(this.lastSort.attr, this.lastSort.descending);
            }
            this._renderBody(table, fieldNames);

            if (this.showColumnSelector) {
                this._renderColumnSelector(table, fieldNames);
                container.append(this.visibleColumnSelector);
                if (state !== null && typeof state !== 'undefined' && state.columnSelector === 'open') {
                    this.visibleColumnSelector.find('.column-selector').css('visibility', 'visible');
                }
            }

            container.append(table);

            if (this.resizableColumns) {
                this._enableColumnResizer();
            }
        },
        /**
         * @method _dataSelected
         * Notifies all selection listeners about selected data.
         * @private
         * @param {String} dataId id for the selected data
         */
        _dataSelected: function (dataId) {
            var i;
            for (i = 0; i < this.selectionListeners.length; i += 1) {
                this.selectionListeners[i](this, dataId);
            }
        },

        /**
         * @method select
         * Tries to find an object from #getDataModel() using the the id given as parameter "value".
         * Oskari.mapframework.bundle.featuredata.domain.GridModel.getIdField() is used to determine
         * the field which value is compared against.
         * If found, selects the corresponding row in the grid.
         * @param {String} value id for the data to be selected
         * @param {Boolean} keepPrevious true to keep previous selection, false to clear before selecting
         */
        select: function (value, keepPrevious) {
            var key = this.model.getIdField(),
                dataArray = this.model.getData(),
                index,
                rows,
                data;
            for (index = 0; index < dataArray.length; index += 1) {
                data = dataArray[index];
                if (data[key] === value) {
                    // found
                    break;
                }
            }
            rows = this.table.find('tbody tr');
            if (keepPrevious !== true) {
                rows.removeClass('selected');
            }
            jQuery(rows[index]).addClass('selected');
        },

        /**
         * @method removeSelections
         */
        removeSelections: function () {
            var rows = this.table.find('tbody tr');
            rows.removeClass('selected');
        },

        /**
         * @method getSelection
         * Returns current selection visible on grid.
         * @return {Object[]} subset of #getDataModel() that is currently selected in grid
         */
        getSelection: function () {
            var dataArray = this.model.getData(),
                selection = [],
                rows = this.table.find('tbody tr'),
                i,
                row;
            for (i = 0; i < rows.length; i += 1) {
                row = jQuery(rows[i]);
                if (row.hasClass('selected')) {
                    selection.push(dataArray[i]);
                }
            }
            return selection;
        },

        /**
         * @method getTable
         * Returns the grid table.
         * @return {Object} table for the grid data
         */
        getTable: function () {
            return this.table;
        },

        /**
         * @method _sortBy
         * Sorts the last search result by comparing given attribute on the search objects
         * @private
         * @param {String} pAttribute attributename to sort by (e.g. result[pAttribute])
         * @param {Boolean} pDescending true if sort direction is descending
         */
        _sortBy: function (pAttribute, pDescending) {
            var me = this,
                dataArray = me.model.getData();
            if (dataArray.length === 0) {
                return;
            }
            this.lastSort = {
                attr: pAttribute,
                descending: pDescending
            };
            dataArray.sort(function (a, b) {
                return me._sortComparator(a, b, pAttribute, pDescending);
            });

        },

        /**
         * @method _sortComparator
         * Compares the given attribute on given objects for sorting search result objects.
         * @private
         * @param {Object} a search result 1
         * @param {Object} b search result 2
         * @param {String} pAttribute attributename to sort by (e.g. a[pAttribute])
         * @param {Boolean} pDescending true if sort direction is descending
         */
        _sortComparator: function (a, b, pAttribute, pDescending) {
            var nameA,
                nameB,
                value;
            if (typeof a[pAttribute] === 'object' ||
                    typeof b[pAttribute] === 'object') {
                // not sorting objects
                return 0;
            }
            // to string so number will work also
            nameA = a[pAttribute];
            if (!nameA) {
                nameA = '';
            } else if (nameA.toLowerCase) {
                nameA = nameA.toLowerCase();
            }
            nameB = b[pAttribute];
            if (!nameB) {
                nameB = '';
            } else if (nameB.toLowerCase) {
                nameB = nameB.toLowerCase();
            }

            value = 0;

            if (nameA < nameB) {
                value = -1;
            } else if (nameA > nameB) {
                value = 1;
            }
            if (pDescending) {
                value = value * -1;
            }
            return value;
        }
    });

define("bundles/framework/bundle/divmanazer/component/Grid", function(){});

/**
 * @class Oskari.userinterface.component.GridModel
 *
 * Model object for Oskari.userinterface.component.Grid.
 */
Oskari.clazz.define('Oskari.userinterface.component.GridModel',

    /**
     * @method create called automatically on construction
     * @static
     */

    function () {
        this.fields = [];
        this.data = [];
        this.idField = null;
    }, {
        /**
         * @method addField
         * Adds a field name matching data for more convenient access
         * @private
         * @param {String} field name for a field in data objects
         */
        _addField: function (field) {
            if (!this.idField) {
                // default to first field
                this.idField = field;
            }
            this.fields.push(field);
        },
        /**
         * @method getFields
         * Returns field names that are available in data
         * @return {String[]}
         */
        getFields: function () {
            return this.fields;
        },
        /**
         * @method setIdField
         * If not given, first field in data will be used
         * @param {String} pField name of the field that will be used as an id field
         */
        setIdField: function (pField) {
            this.idField = pField;
        },
        /**
         * @method getIdField
         * Returns the name of the field that is used as an id field
         * @return {String}
         */
        getIdField: function () {
            return this.idField;
        },
        /**
         * @method addData
         * Used to accumulate the data array for the model
         * @param {Object} pData
         */
        addData: function (pData) {
            var key;
            // populate fields array if first data
            if (this.fields.length === 0) {
                for (key in pData) {
                    if (pData.hasOwnProperty(key)) {
                        this._addField(key);
                    }
                }
            }
            this.data.push(pData);
        },
        /**
         * @method getData
         * Returns the model data as array
         * @return {Object[]}
         */
        getData: function () {
            return this.data;
        }
    });

define("bundles/framework/bundle/divmanazer/component/GridModel", function(){});

/**
 * @class Oskari.userinterface.component.ProgressSpinner
 *
 * Adaptation of MIT licensed Spinner
 *
 *  http://fgnass.github.com/spin.js/
 *
 */
Oskari.clazz.define('Oskari.userinterface.component.ProgressSpinner',

    /**
     * @method create called automatically on construction
     * @static
     */

    function () {
        this.container = undefined;
        this.opts = undefined;
    }, {
        /**
         * @static
         * @property __opts default opts for spinner
         */
        __opts: {
            lines: 15, // The number of lines to draw
            length: 0, // The length of each line
            width: 5, // The line thickness
            radius: 16, // The radius of the inner circle
            corners: 0, // Corner roundness (0..1)
            rotate: 0, // The rotation offset
            color: '#000', // #rgb or #rrggbb
            speed: 0.6, // Rounds per second
            trail: 59, // Afterglow percentage
            shadow: false, // Whether to render a shadow
            hwaccel: false, // Whether to use hardware acceleration
            className: 'spinner', // The CSS class to assign to the spinner
            zIndex: 2e9, // The z-index (defaults to 2000000000)
            top: 'auto', // Top position relative to parent in px
            left: 'auto' // Left position relative to parent in px
        },
        /**
         * @method insertTo
         * @param el jQuery element to append the spinner to
         * @param opts spinner options
         * @see  http://fgnass.github.com/spin.js/
         */
        insertTo: function (el, opts) {
            this.container = el;
            this.opts = opts || this.__opts;
        },
        /**
         * @method start
         * starts spinner spin
         */
        start: function () {
            var el = this.container,
                $el = $(el),
                data = $el.data(),
                Spinner = this._Spinner,
                opts = this.opts;

            if (data.spinner) {
                data.spinner.stop();
                delete data.spinner;
            }
            if (opts !== false) {
                data.spinner = new Spinner($.extend({
                    color: $el.css('color')
                }, opts)).spin($el.get()[0]);
            }
        },
        /**
         * @method stop
         * stops spinner spin
         */
        stop: function () {
            var el = this.container,
                $el,
                data;
            if (!el) {
                return;
            }
            $el = $(el);
            data = $el.data();
            if (data.spinner) {
                data.spinner.stop();
                delete data.spinner;
            }
        },
        _Spinner: (function (window, document) {
            //fgnass.github.com/spin.js#v1.2.8

            /**
             * Copyright (c) 2011 Felix Gnass [fgnass at neteye dot de]
             * Licensed under the MIT license
             */

            /* Vendor prefixes */
            var prefixes = ['webkit', 'Moz', 'ms', 'O'],
                /* Animation rules keyed by their name */
                animations = {},
                useCssAnimations,
                sheet,
                defaults = {
                    lines: 12, // The number of lines to draw
                    length: 7, // The length of each line
                    width: 5, // The line thickness
                    radius: 10, // The radius of the inner circle
                    rotate: 0, // Rotation offset
                    corners: 1, // Roundness (0..1)
                    color: '#000', // #rgb or #rrggbb
                    speed: 1, // Rounds per second
                    trail: 100, // Afterglow percentage
                    opacity: 1 / 4, // Opacity of the lines
                    fps: 20, // Frames per second when using setTimeout()
                    zIndex: 2e9, // Use a high z-index by default
                    className: 'spinner', // CSS class to assign to the element
                    top: 'auto', // center vertically
                    left: 'auto', // center horizontally
                    position: 'relative' // element position
                };

            /**
             * Utility function to create elements. If no tag name is given,
             * a DIV is created. Optionally properties can be passed.
             */

            function createEl(tag, prop) {
                var el = document.createElement(tag || 'div'),
                    n;

                for (n in prop) {
                    if (prop.hasOwnProperty(n)) {
                        el[n] = prop[n];
                    }
                }
                return el;
            }

            /**
             * Appends children and returns the parent.
             */

            function ins(parent) {
                var i, n;
                for (i = 1, n = arguments.length; i < n; i += 1) {
                    parent.appendChild(arguments[i]);
                }

                return parent;
            }

            /**
             * Insert a new stylesheet to hold the @keyframe or VML rules.
             */
            sheet = function () {
                var el = createEl('style', {
                    type: 'text/css'
                });
                ins(document.getElementsByTagName('head')[0], el);
                return el.sheet || el.styleSheet;
            }();

            /**
             * Creates an opacity keyframe animation rule and returns its name.
             * Since most mobile Webkits have timing issues with animation-delay,
             * we create separate rules for each line/segment.
             */

            function addAnimation(alpha, trail, i, lines) {
                var name = ['opacity', trail, ~~ (alpha * 100), i, lines].join('-'),
                    start = 0.01 + i / lines * 100,
                    z = Math.max(1 - (1 - alpha) / trail * (100 - start), alpha),
                    prefix = useCssAnimations.substring(0, useCssAnimations.indexOf('Animation')).toLowerCase(),
                    pre = prefix && '-' + prefix + '-' || '';

                if (!animations[name]) {
                    sheet.insertRule('@' + pre + 'keyframes ' + name + '{' + '0%{opacity:' + z + '}' + start + '%{opacity:' + alpha + '}' + (start + 0.01) + '%{opacity:1}' + (start + trail) % 100 + '%{opacity:' + alpha + '}' + '100%{opacity:' + z + '}' + '}', sheet.cssRules.length);

                    animations[name] = 1;
                }
                return name;
            }

            /**
             * Tries various vendor prefixes and returns the first supported property.
             **/

            function vendor(el, prop) {
                var s = el.style,
                    pp,
                    i;

                if (s[prop] !== undefined) {
                    return prop;
                }
                prop = prop.charAt(0).toUpperCase() + prop.slice(1);
                for (i = 0; i < prefixes.length; i += 1) {
                    pp = prefixes[i] + prop;
                    if (s[pp] !== undefined) {
                        return pp;
                    }
                }
            }

            /**
             * Sets multiple style properties at once.
             */

            function css(el, prop) {
                var n;
                for (n in prop) {
                    if (prop.hasOwnProperty(n)) {
                        el.style[vendor(el, n) || n] = prop[n];
                    }
                }

                return el;
            }

            /**
             * Fills in default values.
             */

            function merge(obj) {
                var def,
                    n,
                    i;
                for (i = 1; i < arguments.length; i += 1) {
                    def = arguments[i];
                    for (n in def) {
                        if (def.hasOwnProperty(n)) {
                            if (obj[n] === undefined) {
                                obj[n] = def[n];
                            }
                        }
                    }
                }
                return obj;
            }

            /**
             * Returns the absolute page-offset of the given element.
             */

            function pos(el) {
                var o = {
                    x: el.offsetLeft,
                    y: el.offsetTop
                };
                while ((el = el.offsetParent)) {
                    o.x += el.offsetLeft;
                    o.y += el.offsetTop;
                }

                return o;
            }

            /** The constructor */

            function Spinner(o) {
                if (!this.spin) {
                    return new Spinner(o);
                }
                this.opts = merge(o || {}, Spinner.defaults, defaults);
            }


            Spinner.defaults = {};

            merge(Spinner.prototype, {
                spin: function (target) {
                    this.stop();
                    var self = this,
                        o = self.opts,
                        el = self.el = css(createEl(0, {
                            className: o.className
                        }), {
                            position: o.position,
                            width: 0,
                            zIndex: o.zIndex
                        }),
                        mid = o.radius + o.length + o.width,
                        ep, // element position
                        tp, // target position
                        i,
                        fps,
                        f,
                        ostep,
                        astep;

                    if (target) {
                        target.insertBefore(el, target.firstChild || null);
                        tp = pos(target);
                        ep = pos(el);
                        css(el, {
                            left: (o.left === 'auto' ? tp.x - ep.x + (target.offsetWidth >> 1) : parseInt(o.left, 10) + mid) + 'px',
                            top: (o.top === 'auto' ? tp.y - ep.y + (target.offsetHeight >> 1) : parseInt(o.top, 10) + mid) + 'px'
                        });
                    }

                    el.setAttribute('aria-role', 'progressbar');
                    self.lines(el, self.opts);

                    if (!useCssAnimations) {
                        // No CSS animation support, use setTimeout() instead
                        i = 0;
                        fps = o.fps;
                        f = fps / o.speed;
                        ostep = (1 - o.opacity) / (f * o.trail / 100);
                        astep = f / o.lines;
                        (function anim() {
                            var s,
                                alpha;
                            i += 1;
                            for (s = o.lines; s; s -= 1) {
                                alpha = Math.max(1 - (i + s * astep) % f * ostep, o.opacity);
                                self.opacity(el, o.lines - s, alpha, o);
                            }
                            self.timeout = self.el && setTimeout(anim, ~~ (1000 / fps));
                        })();
                    }
                    return self;
                },
                stop: function () {
                    var el = this.el;
                    if (el) {
                        clearTimeout(this.timeout);
                        if (el.parentNode) {
                            el.parentNode.removeChild(el);
                        }
                        this.el = undefined;
                    }
                    return this;
                },
                lines: function (el, o) {
                    var i,
                        seg;

                    function fill(color, shadow) {
                        return css(createEl(), {
                            position: 'absolute',
                            width: (o.length + o.width) + 'px',
                            height: o.width + 'px',
                            background: color,
                            boxShadow: shadow,
                            transformOrigin: 'left',
                            transform: 'rotate(' + ~~(360 / o.lines * i + o.rotate) + 'deg) translate(' + o.radius + 'px' + ',0)',
                            borderRadius: (o.corners * o.width >> 1) + 'px'
                        });
                    }

                    for (i = 0; i < o.lines; i += 1) {
                        seg = css(createEl(), {
                            position: 'absolute',
                            top: 1 + ~(o.width / 2) + 'px',
                            transform: o.hwaccel ? 'translate3d(0,0,0)' : '',
                            opacity: o.opacity,
                            animation: useCssAnimations && addAnimation(o.opacity, o.trail, i, o.lines) + ' ' + 1 / o.speed + 's linear infinite'
                        });

                        if (o.shadow) {
                            ins(seg, css(fill('#000', '0 0 4px ' + '#000'), {
                                top: 2 + 'px'
                            }));
                        }
                        ins(el, ins(seg, fill(o.color, '0 0 1px rgba(0,0,0,.1)')));
                    }
                    return el;
                },
                opacity: function (el, i, val) {
                    if (i < el.childNodes.length) {
                        el.childNodes[i].style.opacity = val;
                    }
                }
            });

            /////////////////////////////////////////////////////////////////////////
            // VML rendering for IE
            /////////////////////////////////////////////////////////////////////////

            /**
             * Check and init VML support
             */
            (function () {

                function vml(tag, attr) {
                    return createEl('<' + tag + ' xmlns="urn:schemas-microsoft.com:vml" class="spin-vml">', attr);
                }

                var ss = css(createEl('group'), {
                    behavior: 'url(#default#VML)'
                });

                if (!vendor(ss, 'transform') && ss.adj) {

                    // VML support detected. Insert CSS rule ...
                    sheet.addRule('.spin-vml', 'behavior:url(#default#VML)');

                    Spinner.prototype.lines = function (el, o) {
                        var r = o.length + o.width,
                            s = 2 * r,
                            margin,
                            g,
                            i;

                        function grp() {
                            return css(vml('group', {
                                coordsize: s + ' ' + s,
                                coordorigin: -r + ' ' + -r
                            }), {
                                width: s,
                                height: s
                            });
                        }

                        margin = -(o.width + o.length) * 2 + 'px';
                        g = css(grp(), {
                            position: 'absolute',
                            top: margin,
                            left: margin
                        });

                        function seg(i, dx, filter) {
                            ins(g, ins(css(grp(), {
                                rotation: 360 / o.lines * i + 'deg',
                                left: ~~dx
                            }), ins(css(vml('roundrect', {
                                arcsize: o.corners
                            }), {
                                width: r,
                                height: o.width,
                                left: o.radius,
                                top: -o.width >> 1,
                                filter: filter
                            }), vml('fill', {
                                color: o.color,
                                opacity: o.opacity
                            }), vml('stroke', {
                                opacity: 0
                            }) // transparent stroke to fix color bleeding upon opacity change
                                )));
                        }

                        if (o.shadow) {
                            for (i = 1; i <= o.lines; i += 1) {
                                seg(i, -2, 'progid:DXImageTransform.Microsoft.Blur(pixelradius=2,makeshadow=1,shadowopacity=.3)');
                            }
                        }
                        for (i = 1; i <= o.lines; i += 1) {
                            seg(i);
                        }
                        return ins(el, g);
                    };

                    Spinner.prototype.opacity = function (el, i, val, o) {
                        var c = el.firstChild;
                        o = (o.shadow && o.lines) || 0;
                        if (c && i + o < c.childNodes.length) {
                            c = c.childNodes[i + o];
                            c = c && c.firstChild;
                            c = c && c.firstChild;
                            if (c) {
                                c.opacity = val;
                            }
                        }
                    };
                } else {
                    useCssAnimations = vendor(ss, 'animation');
                }
            })();

            return Spinner;
        })(window, document)
    });

define("bundles/framework/bundle/divmanazer/component/ProgressSpinner", function(){});

/**
 * @class Oskari.userinterface.extension.DefaultTile
 *
 * Default Menu Tile implementation which assumes a locale
 * of kind
 * {
 *     "title" : "<title shown to user>",
 *     "description" : "<a longer localised description>"
 * }
 *
 */
Oskari.clazz.define('Oskari.userinterface.extension.DefaultTile',

    /**
     * @method create called automatically on construction
     * @static
     *
     * Always extend this class, never use as is.
     */

    function (instance, locale) {
        /**
         * @property locale localisation for this tile
         */
        this.locale = locale;

        /**
         * @property extension bundle instance
         */
        this.instance = instance;

        this.container = null;
        this.template = null;
    }, {
        /**
         * @method getName
         * @return {String} tile implementation name
         */
        getName: function () {
            return 'Oskari.userinterface.extension.DefaultTile';
        },

        /**
         * @method setEl
         * called by host implementation to add DOM element where the
         * tile is to be rendered
         */
        setEl: function (el, width, height) {
            this.container = $(el);
        },

        /**
         * @method startPlugin
         * called by host implementation when the tile is to be started
         * f.ex to provide some kind of active visualisations.
         */
        startPlugin: function () {
        },

        /**
         * @method stopPlugin
         * called by host when the tile is to be removed
         */
        stopPlugin: function () {
        },

        /**
         * @method getTitle
         * @return {String} called by host to get a localised title to be shown
         *
         */
        getTitle: function () {
            return this.locale.title;
        },

        /**
         * @method getDescription
         * @return {String} called by host to get a longer description for display
         */
        getDescription: function () {
            return this.locale.description;
        },

        /**
         * @method getOptions
         * @return {JSON} a placeholder for future implementations
         */
        getOptions: function () {
        },

        /**
         * @method setState
         * placeholder for future implementations
         */
        setState: function (state) {
            this.state = state;
        },

        /**
         * @method getState
         * @return {JSON} placeholder for future implementations
         */
        getState: function (state) {
            return this.state;
        }

    }, {
        'protocol': ['Oskari.userinterface.Tile']
    });

define("bundles/framework/bundle/divmanazer/extension/DefaultTile", function(){});

/**
 * @class Oskari.userinterface.extension.DefaultFlyout
 *
 * Default Flyout implementation which shall be used as a super class
 * to actual implementations.
 *
 */
Oskari.clazz.define('Oskari.userinterface.extension.DefaultFlyout',

    /**
     * @method create called automatically on construction
     * @static
     *
     * Always extend this class, never use as is.
     */

    function (instance, locale) {

        /* @property extension instance */
        this.instance = instance;

        /* @property locale locale for this */
        this.locale = locale;

        /* @property container the DIV element */
        this.container = null;

    }, {
        /**
         * @method getName
         * @return {String} implementation name
         */
        getName: function () {
            return 'Oskari.userinterface.extension.DefaultFlyout';
        },

        /**
         * @method setEl
         * called by host to set DOM element for this Flyouts content
         */
        setEl: function (el) {
            this.container = jQuery(el);
        },

        /**
         * @method  getEl
         * @return {jQuery Object} wrapped DOM element for this Flyout's contents
         */
        getEl: function () {
            return this.container;
        },

        /**
         * @method startPlugin
         * called by host to start flyout operations
         */
        startPlugin: function () {
        },

        /**
         * @method stopPlugin
         * called by host to stop flyout operations
         */
        stopPlugin: function () {
        },

        /**
         * @method getTile
         * @return {String} called by host to get a localised flyout title
         */
        getTitle: function () {
            return this.locale.title;
        },
        /**
         * @method getDescriptions
         * @return {String} called by host to get a localised flyout description
         */
        getDescription: function () {
            return this.locale.description;
        },

        /**
         * @method setState
         * @param {JSON} sets state
         */
        setState: function (state) {
            this.state = state;
        },

        /**
         * @method getState
         * @return {JSON} returns state
         */
        getState: function () {
            return this.state;
        },

        /**
         * @method getLocalization
         * @return JSON localisation subset 'flyout'
         */
        getLocalization: function () {
            return this.locale;
        }


    }, {
        'protocol': ['Oskari.userinterface.Flyout']
    });

define("bundles/framework/bundle/divmanazer/extension/DefaultFlyout", function(){});

/**
 * @class Oskari.userinterface.extension.EnhancedFlyout
 *
 * Default Flyout implementation which shall be used as a super class
 * to actual implementations.
 *
 */
Oskari.clazz.define('Oskari.userinterface.extension.EnhancedFlyout',

/**
 * @method create called automatically on construction
 * @static
 *
 * Always extend this class, never use as is.
 */
function(instance, locale) {

    /* @property extension instance */
    this.instance = instance;

    /* @property locale locale for this */
    this.locale = locale;

    /* @property container the DIV element */
    this.container = null;

}, {
    /**
     * @method getName
     * @return {String} implementation name
     */
    getName : function() {
        return 'Oskari.userinterface.extension.DefaultFlyout';
    },

    /**
     * @method setEl
     * called by host to set DOM element for this Flyouts content
     */
    setEl : function(el) {
        this.container = jQuery(el);
    },

    /**
     * @method  getEl
     * @return {jQuery Object} wrapped DOM element for this Flyout's contents
     */
    getEl : function() {
        return this.container;
    },

    /**
     * @method startPlugin
     * called by host to start flyout operations
     */
    startPlugin : function() {
    },

    /**
     * @method stopPlugin
     * called by host to stop flyout operations
     */
    stopPlugin : function() {
    },

    /**
     * @method getTile
     * @return {String} called by host to get a localised flyout title
     */
    getTitle : function() {
        return this.locale.title;
    },
    /**
     * @method getDescriptions
     * @return {String} called by host to get a localised flyout description
     */
    getDescription : function() {
        return this.locale.description;
    },

    /**
     * @method setState
     * @param {JSON} sets state
     */
    setState : function(state) {
        this.state = state;
    },

    /**
     * @method getState
     * @return {JSON} returns state
     */
    getState : function() {
        return this.state;
    },

    /**
     * @method getLocalization
     * @return JSON localisation subset 'flyout'
     */
    getLocalization : function() {
        return this.locale ? this.locale : (this.instance ? this.instance.getLocalization()['flyout'] : undefined );
    },

    getSandbox : function() {
        return this.instance.getSandbox();
    },

    getExtension : function() {
        return this.instance;
    },

    /* o2 helpers for notifications and requetss */
    slicer : Array.prototype.slice,

	issue : function() {
    	var requestName = arguments[0];
    	var args = this.slicer.apply(arguments,[1]);
    	var builder = this.getSandbox().getRequestBuilder(requestName);
    	var request = builder.apply(builder,args);
        return this.getSandbox().request(this.getExtension(), request);
    },

    notify : function() {
        var eventName = arguments[0];
    	var args = this.slicer.apply(arguments,[1]);
    	var builder = this.getSandbox().getEventBuilder(eventName);
    	var evt = builder.apply(builder,args);
        return this.getSandbox().notifyAll(evt);
    }
    
    
   
}, {
    'protocol' : ['Oskari.userinterface.Flyout']
});

define("bundles/framework/bundle/divmanazer/extension/EnhancedFlyout", function(){});

/**
 * @class Oskari.userinterface.extension.DefaultExtension
 *
 *
 */
Oskari.clazz.define("Oskari.userinterface.extension.DefaultExtension",

    /**
     * @method create called automatically on construction
     * @static
     * @param name {String} bundle name to be used for communication with sandbox
     * @param tileClazz {String} an optional class name for
     *
     */

    function (name, flyoutClazz, tileClazz, viewClazz) {
        this.sandbox = null;
        this.plugins = {};
        this._localization = null;
        this.conf = {
            "name": name,
            "tileClazz": tileClazz || 'Oskari.userinterface.extension.DefaultTile',
            "flyoutClazz": flyoutClazz || 'Oskari.userinterface.extension.DefaultFlyout',
            "viewClazz": viewClazz
        };
    }, {
        /**
         * @method getTitle
         * Extension protocol method
         * @return {String} localized text for the title of the component
         */
        getTitle: function () {
            return this.getLocalization('title');
        },
        /**
         * @method getDescription
         * Extension protocol method
         * @return {String} localized text for the description of the component
         */
        getDescription: function () {
            return this.getLocalization('desc');
        },
        /**
         * @method getSandbox
         * Convenience method to call from Tile and Flyout
         * @return {Oskari.mapframework.sandbox.Sandbox}
         */
        getSandbox: function () {
            return this.sandbox;
        },
        /**
         * @method update
         * BundleInstance protocol method
         */
        update: function () {
        },
        /**
         * @method getLocalization
         * Convenience method to call from Tile and Flyout
         * Returns JSON presentation of bundles localization data for current language.
         * If key-parameter is not given, returns the whole localization data.
         *
         * @param {String} key (optional) if given, returns the value for key
         * @return {String/Object} returns single localization string or
         *      JSON object for complete data depending on localization
         *      structure and if parameter key is given
         */
        getLocalization: function (key) {
            if (!this._localization) {
                this._localization = Oskari.getLocalization(this.getName());
            }
            if (key) {
                return this._localization[key];
            }
            return this._localization;
        },
        /**
         * @method start
         * BundleInstance protocol method
         */
        start: function () {
            var me = this,
                conf = this.conf,
                sandboxName = (conf ? conf.sandbox : null) || 'sandbox',
                sandbox = Oskari.getSandbox(sandboxName),
                request;


            me.sandbox = sandbox;
            sandbox.register(this);

            /* stateful */
            if (conf && conf.stateful === true) {
                sandbox.registerAsStateful(this.mediator.bundleId, this);
            }

            request = sandbox.getRequestBuilder('userinterface.AddExtensionRequest')(this);

            sandbox.request(this, request);

        },
        /**
         * @method stop
         * BundleInstance protocol method
         */
        stop: function () {
            var sandbox = this.sandbox,
                /* sandbox cleanup */
                request = sandbox.getRequestBuilder('userinterface.RemoveExtensionRequest')(this);
            sandbox.request(this, request);

            sandbox.unregisterStateful(this.mediator.bundleId);
            sandbox.unregister(this);
            this.sandbox = null;
            this.started = false;
        },
        /**
         * @method startExtension
         * Extension protocol method
         */
        startExtension: function () {
            var me = this,
                sandbox = me.sandbox,
                p,
                locFlyout,
                locTile,
                locView;

            for (p in me.eventHandlers) {
                if (me.eventHandlers.hasOwnProperty(p)) {
                    sandbox.registerForEventByName(me, p);
                }
            }

            locFlyout = me.getLocalization('flyout');
            if (locFlyout && me.conf.flyoutClazz) {
                me.plugins['Oskari.userinterface.Flyout'] =
                    Oskari.clazz.create(me.conf.flyoutClazz, me, locFlyout);
            }

            locTile = me.getLocalization('tile');
            if (locTile && me.conf.tileClazz) {
                me.plugins['Oskari.userinterface.Tile'] =
                    Oskari.clazz.create(me.conf.tileClazz, me, locTile);
            }

            locView = me.getLocalization('view');
            if (locView && me.conf.viewClazz) {
                me.plugins['Oskari.userinterface.View'] =
                    Oskari.clazz.create(me.conf.viewClazz, me, locView);
            }
        },
        /**
         * @method stopExtension
         * Extension protocol method
         */
        stopExtension: function () {
            var me = this,
                sandbox = me.sandbox,
                p,
                pluginType;
            for (p in me.eventHandlers) {
                if (me.eventHandlers.hasOwnProperty(p)) {
                    sandbox.unregisterFromEventByName(me, p);
                }
            }
            for (pluginType in me.plugins) {
                if (me.plugins.hasOwnProperty(pluginType)) {
                    if (pluginType) {
                        me.plugins[pluginType] = null;
                    }
                }
            }
        },
        /**
         * @method getPlugins
         * Extension protocol method
         */
        getPlugins: function () {
            return this.plugins;
        },
        "init": function () {
            return null;
        },
        /**
         * @method getName
         * Module protocol method
         */
        getName: function () {
            return this.conf.name;
        },
        /**
         * @method getConfiguration
         */
        getConfiguration: function () {
            return this.conf;
        },

        /**
         * @property eventHandlers
         * may be overridden in derived classes to get some events
         */
        "eventHandlers": {

        },

        /**
         * @method onEvent
         * @param {Oskari.mapframework.event.Event} event a Oskari event object
         * Event is handled forwarded to correct #eventHandlers if found or discarded if not.
         */
        onEvent: function (event) {
            var me = this,
                handler = me.eventHandlers[event.getName()];
            if (!handler) {
                return;
            }

            return handler.apply(this, [event]);
        },
        /**
         * @method getLang
         * helper to get current language from Oskari
         *
         */
        "getLang": function () {
            return Oskari.getLang();
        }
    }, {
        protocol: ['Oskari.bundle.BundleInstance', 'Oskari.mapframework.module.Module', 'Oskari.userinterface.Extension']
    });

define("bundles/framework/bundle/divmanazer/extension/DefaultExtension", function(){});

	/**
 * @class Oskari.userinterface.extension.EnhancedExtension
 *
 *
 */
Oskari.clazz.define("Oskari.userinterface.extension.EnhancedExtension",

/**
 * @method create called automatically on construction
 * @static
 * @param name {String} bundle name to be used for communication with sandbox
 * @param tileClazz {String} an optional class name for
 *
 */
function(name,locale) {
    this.sandbox = null;
    this.plugins = {};
    this._localization = locale;
    this.conf = {
        "name" : name
    };
}, {
    /**
     * @method getTitle
     * Extension protocol method
     * @return {String} localized text for the title of the component
     */
    getTitle : function() {
        return this.getLocalization('title');
    },
    /**
     * @method getDescription
     * Extension protocol method
     * @return {String} localized text for the description of the component
     */
    getDescription : function() {
        return this.getLocalization('desc');
    },
    /**
     * @method getSandbox
     * Convenience method to call from Tile and Flyout
     * @return {Oskari.mapframework.sandbox.Sandbox}
     */
    getSandbox : function() {
        return this.sandbox;
    },
    /**
     * @method update
     * BundleInstance protocol method
     */
    update : function() {
    },
    
    
    /**
     *@method setLocalization
     * 
     * 
     * localisation may be set or loaded from Oskari loc registry
     *  
     */
    setLocalization : function(loc) {
    	this._localization = loc;
    },
    
    /**
     * @method getLocalization
     * Convenience method to call from Tile and Flyout
     * Returns JSON presentation of bundles localization data for current language.
     * If key-parameter is not given, returns the whole localization data.
     *
     * @param {String} key (optional) if given, returns the value for key
     * @return {String/Object} returns single localization string or
     *      JSON object for complete data depending on localization
     *      structure and if parameter key is given
     */
    getLocalization : function(key) {
    	
        if (!this._localization) {
            this._localization = Oskari.getLocalization(this.getName());
        }
        
        if (key) {
            return this._localization[key];
        }
        return this._localization;
    },
    /**
     * @method start
     * BundleInstance protocol method
     */
    start : function() {
        var me = this;
        var conf = this.conf;
        var sandboxName = ( conf ? conf.sandbox : null ) || 'sandbox';
        var sandbox = Oskari.getSandbox(sandboxName);

        me.sandbox = sandbox;
        sandbox.register(this);

        /* stateful */
        if (conf && conf.stateful === true) {
            sandbox.registerAsStateful(this.mediator.bundleId, this);
        }

        var request = sandbox.getRequestBuilder('userinterface.AddExtensionRequest')(this);

        sandbox.request(this, request);

    },
    /**
     * @method stop
     * BundleInstance protocol method
     */
    stop : function() {
        var sandbox = this.sandbox;

        /* sandbox cleanup */

        var request = sandbox.getRequestBuilder('userinterface.RemoveExtensionRequest')(this);
        sandbox.request(this, request);

        sandbox.unregisterStateful(this.mediator.bundleId);
        sandbox.unregister(this);
        this.sandbox = null;
        this.started = false;
    },
    /**
     * @method startExtension
     * Extension protocol method
     */
    startExtension : function() {
        var me = this;
        var sandbox = me.sandbox;

        me.startPlugin();

        for (p in me.requestHandlers ) {
            sandbox.addRequestHandler(p, this);
        }
        for (p in me.eventHandlers) {
            sandbox.registerForEventByName(me, p);
        }

    },

    /* hook */
    startPlugin : function() {
        console.log("BASECLASS startPlugin called ", this);
    },

    /* hook */
    stopPlugin : function() {
        console.log("BASECLASS stopPlugin called ", this);
    },

    /**
     * @method stopExtension
     * Extension protocol method
     */
    stopExtension : function() {

        var me = this;
        var sandbox = me.sandbox;
        for (p in me.eventHandlers) {
            sandbox.unregisterFromEventByName(me, p);
        }
        for (p in me.requestHandlers ) {
            sandbox.removeRequestHandler(p, this);
        }

        this.stopPlugin();
    },
    /**
     * @method getPlugins
     * Extension protocol method
     */
    getPlugins : function() {
        return this.plugins;
    },
    "init" : function() {
        return null;
    },
    /**
     * @method getName
     * Module protocol method
     */
    getName : function() {
        return this.conf.name;
    },
    /**
     * @method getConfiguration
     */
    getConfiguration : function() {
        return this.conf;
    },

    /**
     * @property eventHandlers
     * may be overridden in derived classes to get some events
     */
    "eventHandlers" : {

    },

    "requestHandlers" : {

    },

    /**
     * @method onEvent
     * @param {Oskari.mapframework.event.Event} event a Oskari event object
     * Event is handled forwarded to correct #eventHandlers if found or discarded if not.
     */
    onEvent : function(event) {
        var me = this;
        var handler = me.eventHandlers[event.getName()];
        if (!handler) {
            return;
        }

        return handler.apply(this, [event]);
    },

    /* o2 support for handling requests with less code... */
    handleRequest : function(core, request) {
        return this.onRequest(request);
    },

    onRequest : function(request) {
        var me = this;
        var handler = me.requestHandlers[request.getName()];
        if (!handler) {
            return;
        }

        return handler.apply(this, [request]);
    },

    /**
     * @method getLang
     * helper to get current language from Oskari
     *
     */
    getLang : function() {
        return Oskari.getLang();
    },

    /* O2 helpers */

    getTile : function() {
        return this.plugins['Oskari.userinterface.Tile'];
    },
    setTile : function(t) {
        this.plugins['Oskari.userinterface.Tile'] = t;
    },
    setDefaultTile : function(txt) {
    	var tileCls = Oskari.cls().extend('Oskari.userinterface.extension.DefaultTile');
    	var tile = tileCls.create(this, { title: txt || ''} );
        this.plugins['Oskari.userinterface.Tile'] = tile;
        return tile;
    },
    getFlyout : function() {
        return this.plugins['Oskari.userinterface.Flyout'];
    },
    setFlyout : function(f) {
        this.plugins['Oskari.userinterface.Flyout'] = f;
    },

	/* o2 helpers for notifications and requetss */
    slicer : Array.prototype.slice,
    
    notify : function(evt, retainEvent) {
        return this.getSandbox().notifyAll(evt, retainEvent);
    },

    request : function(request) {
        return this.getSandbox().request(this, request);
    },
    
    /**
     * @method issue issues a request to sandbox and returns value from *the* registered requesthandler if any
     *  
     */
    issue : function() {
    	var requestName = arguments[0];
    	var args = this.slicer.apply(arguments,[1]);
    	var builder = this.getSandbox().getRequestBuilder(requestName);
    	var request = builder.apply(builder,args);
        return this.getSandbox().request(this.getExtension(), request);
    },

	/**
	 *@method notify sends notification to any registered listeners  
	 */
    notify : function() {
        var eventName = arguments[0];
    	var args = this.slicer.apply(arguments,[1]);
    	var builder = this.getSandbox().getEventBuilder(eventName);
    	var evt = builder.apply(builder,args);
        return this.getSandbox().notifyAll(evt);
    }
    
}, {
	
    protocol : ['Oskari.bundle.BundleInstance', 'Oskari.mapframework.module.Module', 'Oskari.userinterface.Extension', 'Oskari.mapframework.core.RequestHandler']
});

define("bundles/framework/bundle/divmanazer/extension/EnhancedExtension", function(){});

/**
 * @class Oskari.userinterface.extension.DefaultView
 *
 * Default View implementation which shall be used as a super class
 * to actual implementations.
 *
 */
Oskari.clazz.define('Oskari.userinterface.extension.DefaultView',

    /**
     * @method create called automatically on construction
     * @static
     *
     * Always extend this class, never use as is.
     */

    function (instance, locale) {

        /* @property extension instance */
        this.instance = instance;

        /* @property locale locale for this */
        this.locale = locale;

        /* @property container the DIV element */
        this.container = null;

    }, {
        /**
         * @method getName
         * @return {String} implementation name
         */
        getName: function () {
            return 'Oskari.userinterface.extension.DefaultView';
        },

        /**
         * @method setEl
         * called by host to set DOM element for this Views content
         */
        setEl: function (el) {
            this.container = jQuery(el);
        },

        /**
         * @method  getEl
         * @return {jQuery Object} wrapped DOM element for this View's contents
         */
        getEl: function () {
            return this.container;
        },

        /**
         * @method startPlugin
         * called by host to start view operations
         */
        startPlugin: function () {
        },

        /**
         * @method stopPlugin
         * called by host to stop view operations
         */
        stopPlugin: function () {
        },

        /**
         * @method getTile
         * @return {String} called by host to get a localised view title
         */
        getTitle: function () {
            return this.locale.title;
        },
        /**
         * @method getDescriptions
         * @return {String} called by host to get a localised view description
         */
        getDescription: function () {
            return this.locale.description;
        },

        /**
         * @method setState
         * @param {JSON} sets state
         */
        setState: function (state) {
            this.state = state;
        },

        /**
         * @method getState
         * @return {JSON} returns state
         */
        getState: function () {
            return this.state;
        },

        /**
         * @method getLocalization
         * @return JSON localisation subset 'view'
         */
        getLocalization: function () {
            return this.locale;
        }

    }, {
        'protocol': ['Oskari.userinterface.View']
    });

define("bundles/framework/bundle/divmanazer/extension/DefaultView", function(){});

/**
 * @class Oskari.userinterface.extension.DefaultLayout
 *
 * Default Layout implementation which shall be used as a super class
 * to actual implementations.
 *
 */
Oskari.clazz.define('Oskari.userinterface.extension.DefaultLayout',

    /**
     * @method create called automatically on construction
     * @static
     *
     * Always extend this class, never use as is.
     */

    function (instance, locale) {

        /* @property extension instance */
        this.instance = instance;

        /* @property locale locale for this */
        this.locale = locale;

        /* @property container the DIV element */
        this.container = null;

    }, {
        /**
         * @method getName
         * @return {String} implementation name
         */
        getName: function () {
            return 'Oskari.userinterface.extension.DefaultLayout';
        },

        /**
         * @method setEl
         * called by host to set DOM element for this Layouts content
         */
        setEl: function (el) {
            this.container = jQuery(el);
        },

        /**
         * @method  getEl
         * @return {jQuery Object} wrapped DOM element for this Layout's contents
         */
        getEl: function () {
            return this.container;
        },

        /**
         * @method startPlugin
         * called by host to start layout operations
         */
        startPlugin: function () {
        },

        /**
         * @method stopPlugin
         * called by host to stop layout operations
         */
        stopPlugin: function () {
        },

        /**
         * @method getTile
         * @return {String} called by host to get a localised layout title
         */
        getTitle: function () {
            return this.locale.title;
        },
        /**
         * @method getDescriptions
         * @return {String} called by host to get a localised layout description
         */
        getDescription: function () {
            return this.locale.description;
        },

        /**
         * @method setState
         * @param {JSON} sets state
         */
        setState: function (state) {
            this.state = state;
        },

        /**
         * @method getState
         * @return {JSON} returns state
         */
        getState: function () {
            return this.state;
        },

        /**
         * @method getLocalization
         * @return JSON localisation subset 'layout'
         */
        getLocalization: function () {
            return this.locale;
        }


    }, {
        'protocol': ['Oskari.userinterface.Layout']
    });

define("bundles/framework/bundle/divmanazer/extension/DefaultLayout", function(){});

/**
 * @class Oskari.userinterface.extension.EnhancedTile
 * 
 * Enhanced Menu Tile implementation which assumes a locale
 * of kind
 * {
 *     "title" : "<title shown to user>",
 *     "description" : "<a longer localised description>"
 * } 
 * 
 */
Oskari.clazz.define('Oskari.userinterface.extension.EnhancedTile',

/**
 * @method create called automatically on construction
 * @static
 *
 * Always extend this class, never use as is.
 */
function() {
  
}, {
    /**
     * @method getName
     * @return {String} tile implementation name
     */
    getName : function() {
        return 'Oskari.userinterface.extension.EnhancedTile';
    }   
    
}, {
    'protocol' : ['Oskari.userinterface.Tile'],
    "extend" : ["Oskari.userinterface.extension.DefaultTile"]
});

define("bundles/framework/bundle/divmanazer/extension/EnhancedTile", function(){});

/**
 * @class Oskari.userinterface.extension.EnhancedTile
 *
 * Enhanced Menu Tile implementation which assumes a locale
 * of kind
 * {
 *     "title" : "<title shown to user>",
 *     "description" : "<a longer localised description>"
 * }
 *
 */
Oskari.clazz.define('Oskari.userinterface.extension.EnhancedView',

/**
 * @method create called automatically on construction
 * @static
 *
 * Always extend this class, never use as is.
 */
function() {

}, {
    /**
     * @method getName
     * @return {String} tile implementation name
     */
    getName : function() {
        return 'Oskari.userinterface.extension.EnhancedView';
    }
}, {
    'protocol' : ['Oskari.userinterface.View'],
    "extend" : ["Oskari.userinterface.extension.DefaultView"]
});

define("bundles/framework/bundle/divmanazer/extension/EnhancedView", function(){});

requirejs.s.contexts._.nextTick = function(f){f()}; require(['css'], function(css) { css.addBuffer('resources/framework/bundle/divmanazer/css/divman.css'); }); requirejs.s.contexts._.nextTick = requirejs.nextTick;
requirejs.s.contexts._.nextTick = function(f){f()}; require(['css'], function(css) { css.addBuffer('resources/framework/bundle/divmanazer/css/accordion.css'); }); requirejs.s.contexts._.nextTick = requirejs.nextTick;
requirejs.s.contexts._.nextTick = function(f){f()}; require(['css'], function(css) { css.addBuffer('resources/framework/bundle/divmanazer/css/tab.css'); }); requirejs.s.contexts._.nextTick = requirejs.nextTick;
requirejs.s.contexts._.nextTick = function(f){f()}; require(['css'], function(css) { css.addBuffer('resources/framework/bundle/divmanazer/css/modal.css'); }); requirejs.s.contexts._.nextTick = requirejs.nextTick;
requirejs.s.contexts._.nextTick = function(f){f()}; require(['css'], function(css) { css.addBuffer('resources/framework/bundle/divmanazer/css/badge.css'); }); requirejs.s.contexts._.nextTick = requirejs.nextTick;
requirejs.s.contexts._.nextTick = function(f){f()}; require(['css'], function(css) { css.addBuffer('resources/framework/bundle/divmanazer/css/alert.css'); }); requirejs.s.contexts._.nextTick = requirejs.nextTick;
requirejs.s.contexts._.nextTick = function(f){f()}; require(['css'], function(css) { css.addBuffer('resources/framework/bundle/divmanazer/css/forminput.css'); }); requirejs.s.contexts._.nextTick = requirejs.nextTick;
requirejs.s.contexts._.nextTick = function(f){f()}; require(['css'], function(css) { css.addBuffer('resources/framework/bundle/divmanazer/css/grid.css'); }); requirejs.s.contexts._.nextTick = requirejs.nextTick;
requirejs.s.contexts._.nextTick = function(f){f()}; require(['css'], function(css) { css.addBuffer('resources/framework/bundle/divmanazer/css/popup.css'); }); requirejs.s.contexts._.nextTick = requirejs.nextTick;
requirejs.s.contexts._.nextTick = function(f){f()}; require(['css'], function(css) { css.addBuffer('resources/framework/bundle/divmanazer/css/button.css'); }); requirejs.s.contexts._.nextTick = requirejs.nextTick;
requirejs.s.contexts._.nextTick = function(f){f()}; require(['css'], function(css) { css.addBuffer('resources/framework/bundle/divmanazer/css/overlay.css'); }); requirejs.s.contexts._.nextTick = requirejs.nextTick;
requirejs.s.contexts._.nextTick = function(f){f()}; require(['css'], function(css) { css.addBuffer('resources/framework/bundle/divmanazer/css/popover.css'); }); requirejs.s.contexts._.nextTick = requirejs.nextTick;
define('bundles/framework/bundle/divmanazer/module',["oskari","jquery","./instance","./request/AddExtensionRequest","./request/AddExtensionRequestHandler","./request/RemoveExtensionRequest","./request/RemoveExtensionRequestHandler","./request/UpdateExtensionRequest","./request/UpdateExtensionRequestHandler","./request/ModalDialogRequest","./request/ModalDialogRequestHandler","./event/ExtensionUpdatedEvent","./component/Accordion","./component/AccordionPanel","./component/TabContainer","./component/TabDropdownContainer","./component/TabPanel","./component/Badge","./component/Alert","./component/Popup","./component/Overlay","./component/Button","./component/Form","./component/UIHelper","./component/FormInput","./component/Popover","./component/Grid","./component/GridModel","./component/ProgressSpinner","./extension/DefaultTile","./extension/DefaultFlyout","./extension/EnhancedFlyout","./extension/DefaultExtension","./extension/EnhancedExtension","./extension/DefaultView","./extension/DefaultLayout","./extension/EnhancedTile","./extension/EnhancedFlyout","./extension/EnhancedExtension","./extension/EnhancedView","css!resources/framework/bundle/divmanazer/css/divman.css","css!resources/framework/bundle/divmanazer/css/accordion.css","css!resources/framework/bundle/divmanazer/css/tab.css","css!resources/framework/bundle/divmanazer/css/modal.css","css!resources/framework/bundle/divmanazer/css/badge.css","css!resources/framework/bundle/divmanazer/css/alert.css","css!resources/framework/bundle/divmanazer/css/forminput.css","css!resources/framework/bundle/divmanazer/css/grid.css","css!resources/framework/bundle/divmanazer/css/popup.css","css!resources/framework/bundle/divmanazer/css/button.css","css!resources/framework/bundle/divmanazer/css/overlay.css","css!resources/framework/bundle/divmanazer/css/popover.css"], function(Oskari,jQuery) {
    return Oskari.bundleCls("divmanazer").category({create: function () {

        return Oskari.clazz.create("Oskari.userinterface.bundle.ui.UserInterfaceBundleInstance");
    },update: function (manager, bundle, bi, info) {

    }})
});
require(["mainConfig"], function() {

    /* loading base requirements */
    require(["jquery", "oskari","domReady"],
    /**
     * ... now we have jQuery and Oskari
     */
    function($, Oskari) {

        function getURLParameter(name) {
            var re = name + '=' + '([^&]*)(&|$)';
            var value = RegExp(re).exec(location.search);
            if (value && value.length && value.length > 1) {
                value = value[1];
            }
            if (value) {
                return decodeURI(value);
            }
            return null;
        }

        function gfiParamHandler(sandbox) {
            if (getURLParameter('showGetFeatureInfo') != 'true') {
                return;
            }
            var lon = sandbox.getMap().getX();
            var lat = sandbox.getMap().getY();
            var mapModule = sandbox.findRegisteredModuleInstance('MainMapModule');
            var px = mapModule.getMap().getViewPortPxFromLonLat({
                lon: lon,
                lat: lat
            });
            sandbox.postRequestByName('MapModulePlugin.GetFeatureInfoRequest', [lon, lat, px.x, px.y]);
        }

        var config = "json!applications/oskari2/ol3/minifierAppSetup.json";
        if (window.ajaxUrl) {
            // populate url with possible control parameters
            var getAppSetupParams = "";
            if(typeof window.controlParams == 'object') {
                for(var key in controlParams) {
                    getAppSetupParams += "&" + key + "=" + controlParams[key];
                }
            }

            //config = "json!/web/fi/kartta?p_p_id=Portti2Map_WAR_portti2mapportlet&p_p_lifecycle=2&&action_route=GetAppSetup" + getAppSetupParams;
        }

        /* loading configuration */
        require([config, 
            "bundles/oskari/bundle/map-ol3/module"], function(appSetup) {
            Oskari.setLang(language);
            var appConfig = appSetup.configuration;
            appConfig.promote = {
                    "conf": {
                        "__name": "Promote",
                        "title": {
                            "fi": "Otsikko tileen",
                            "en": "Title for Tile"
                        },
                        "desc": {
                            "fi": "Voit käyttää julkaisutoimintoa kirjauduttuasi palveluun.",
                            "en": "You need to log in before using the embedding function."
                        },
                        "signup": {
                            "fi": "Kirjaudu sisään",
                            "en": "Log in"
                        },
                        "signupUrl": {
                            "fi": "/web/fi/login",
                            "en": "/web/en/login"
                        },
                        "register": {
                            "fi": "Rekisteröidy",
                            "en": "Register"
                        },
                        "registerUrl": {
                            "fi": "/web/fi/login?p_p_id=58&p_p_lifecycle=1&p_p_state=maximized&p_p_mode=view&p_p_col_id=column-1&p_p_col_count=1&saveLastPath=0&_58_struts_action=%2Flogin%2Fcreate_account",
                            "en": "/web/en/login?p_p_id=58&p_p_lifecycle=1&p_p_state=maximized&p_p_mode=view&p_p_col_id=column-1&p_p_col_count=1&saveLastPath=0&_58_struts_action=%2Flogin%2Fcreate_account"
                        },
                        "test_toolbarButtons": {
                            "buttonGrp": {
                                "buttonId": {
                                    "iconCls": "tool-reset",
                                    "tooltip": {
                                        "fi": "jee",
                                        "en": "jee en"
                                    }
                                }
                            }
                        }
                    }
                };

            Oskari.setConfiguration(appConfig);
            /* loading main map and divmanazer */
            require(["bundles/ol3/bundle/mapfull/module",
                "bundles/ol3/bundle/mapmodule-plugin/module",
                "bundles/framework/bundle/divmanazer/module"
                ], function(mapfull, mapmodule, divmanazer) {

                /* starting to show user that something or another is happening */
                mapfull.start();
                console.log('starting divmanazer');
                divmanazer.start();
                console.log('divmanazer started');

                var bundles = [];

                for (bundle in appConfig) {
                    if ((bundle === "mapfull") || (bundle === "divmanazer") || (bundle === "openlayers-default-theme")) {
                        // already loaded
                    } else if (bundle === "statsgrid") {
                        bundles.push("bundles/statistics/bundle/" + bundle + "/module");
                    } else if (bundle === "metadataflyout") {
                        bundles.push("bundles/catalogue/bundle/" + bundle + "/module");
                    } else if (bundle === "infobox") {
                        bundles.push("bundles/ol3/bundle/" + bundle + "/module");
                    } else {
                        bundles.push("bundles/framework/bundle/" + bundle + "/module");
                    }
                }

//                console.log('bundles', bundles);

                require(bundles, function () {

/*                require([
                    "bundles/framework/bundle/backendstatus/module",
                    "bundles/framework/bundle/guidedtour/module",
                    "bundles/framework/bundle/toolbar/module",
                    "bundles/framework/bundle/layerselection2/module",
                    "bundles/framework/bundle/userguide/module",
                    "bundles/framework/bundle/layerselector2/module",
                    "bundles/framework/bundle/personaldata/module",
                    "bundles/framework/bundle/publisher/module",
                    "bundles/framework/bundle/printout/module",
                    "bundles/framework/bundle/search/module",
                    "bundles/framework/bundle/maplegend/module",
                    "bundles/framework/bundle/featuredata/module",
                    "bundles/framework/bundle/divmanazer/module",
                    "bundles/framework/bundle/statehandler/module",
                    "bundles/framework/bundle/infobox/module",
                    "bundles/framework/bundle/coordinatedisplay/module",
                    "bundles/framework/bundle/promote/module"], function () {*/
                        for(var i = 0, ilen = arguments.length; i < ilen; i++) {
                            arguments[i].start();
                        }
                        console.log('Calling GFI Param Handler');
                        var sb = Oskari.getSandbox();
                        gfiParamHandler(sb);
                    }
                );
            });
        });
    });
});
define("applications/oskari2/ol3/main-dev", function(){});

requirejs.s.contexts._.nextTick = function(f){f()}; require(['css'], function(css) { css.setBuffer('.ol-attribution{position:absolute;text-align:right;color:#eee;bottom:0;right:0;background:rgba(0,60,136,0.3);font-family:\'Lucida Grande\',Verdana,Geneva,Lucida,Arial,Helvetica,sans-serif;padding:6px}.ol-attribution a{color:white;text-decoration:none}.ol-attribution ul{margin:0;padding:0;font-size:10px;line-height:12px}.ol-attribution li{display:inline;list-style:none;line-height:inherit}.ol-attribution li:not(:last-child):after{content:\"\\2003\"}.ol-dragbox{position:absolute;border:2px solid red}.ol-full-screen{background:rgba(255,255,255,0.4);border-radius:4px;padding:2px;position:absolute;right:8px;top:8px}@media print{.ol-full-screen{display:none}}.ol-full-screen a{background:rgba(0,60,136,0.5);color:white;display:block;font-family:\'Lucida Grande\',Verdana,Geneva,Lucida,Arial,Helvetica,sans-serif;font-size:18px;font-weight:bold;height:22px;line-height:19px;margin:1px;padding:0;text-align:center;text-decoration:none;width:22px}a.ol-full-screen-false:after{content:\"\\2194\"}a.ol-full-screen-true:after{content:\"\\00d7\"}.ol-full-screen div{border-radius:2px}.ol-full-screen div a{border-radius:2px}.ol-full-screen a:hover{background:rgba(0,60,136,0.7)}.ol-logo{bottom:0;left:0;padding:2px;position:absolute}.ol-logo ul{margin:0}.ol-logo ul li{display:inline;list-style:none}.ol-mouse-position{top:8px;right:8px;position:absolute}.ol-scale-line{background:rgba(0,60,136,0.3);border-radius:4px;bottom:8px;left:8px;padding:2px;position:absolute}.ol-scale-line-inner{border:1px solid #eee;border-top:none;color:#eee;font-size:10px;font-family:\'Lucida Grande\',Verdana,Geneva,Lucida,Arial,Helvetica,sans-serif;text-align:center;margin:1px;padding:0 2px}.ol-unsupported{display:none}.ol-viewport .ol-unselectable{-webkit-touch-callout:none;-webkit-user-select:none;-khtml-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;-webkit-tap-highlight-color:rgba(0,0,0,0)}.ol-zoom{position:absolute;top:8px;left:8px;background:rgba(255,255,255,0.4);border-radius:4px;padding:2px}@media print{.ol-zoom{display:none}}.ol-zoom a{display:block;margin:1px;padding:0;color:white;font-size:18px;font-family:\'Lucida Grande\',Verdana,Geneva,Lucida,Arial,Helvetica,sans-serif;font-weight:bold;text-decoration:none;text-align:center;height:22px;width:22px;line-height:19px;background:rgba(0,60,136,0.5)}.ol-touch .ol-zoom a{font-size:20px;height:30px;width:30px;line-height:26px}.ol-zoom a:hover{background:rgba(0,60,136,0.7)}.ol-zoom-in{border-radius:2px 2px 0 0}.ol-zoom-in:before{content:\"+\"}.ol-zoom-out{border-radius:0 0 2px 2px}.ol-zoom-out:before{content:\"\\2212\"}.ol-zoomslider{position:absolute;top:67px;left:8px;background:rgba(255,255,255,0.4);border-radius:4px;width:28px;height:200px;outline:none;overflow:hidden;padding:0;margin:0}.ol-zoomslider-thumb{position:absolute;display:block;padding:0;margin:2px;background:rgba(0,60,136,0.5);border-radius:2px;outline:none;overflow:hidden;height:20px;width:24px}/*! jQuery UI - v1.9.1 - 2012-11-09\r\n* http://jqueryui.com\r\n* Includes: jquery.ui.core.css, jquery.ui.resizable.css, jquery.ui.selectable.css, jquery.ui.slider.css, jquery.ui.tooltip.css\r\n* To view and modify this theme, visit http://jqueryui.com/themeroller/?ffDefault=Segoe%20UI%2CArial%2Csans-serif&fwDefault=bold&fsDefault=1.1em&cornerRadius=6px&bgColorHeader=333333&bgTextureHeader=12_gloss_wave.png&bgImgOpacityHeader=25&borderColorHeader=333333&fcHeader=ffffff&iconColorHeader=ffffff&bgColorContent=000000&bgTextureContent=05_inset_soft.png&bgImgOpacityContent=25&borderColorContent=666666&fcContent=ffffff&iconColorContent=cccccc&bgColorDefault=555555&bgTextureDefault=02_glass.png&bgImgOpacityDefault=20&borderColorDefault=666666&fcDefault=eeeeee&iconColorDefault=cccccc&bgColorHover=0078a3&bgTextureHover=02_glass.png&bgImgOpacityHover=40&borderColorHover=59b4d4&fcHover=ffffff&iconColorHover=ffffff&bgColorActive=f58400&bgTextureActive=05_inset_soft.png&bgImgOpacityActive=30&borderColorActive=ffaf0f&fcActive=ffffff&iconColorActive=222222&bgColorHighlight=eeeeee&bgTextureHighlight=03_highlight_soft.png&bgImgOpacityHighlight=80&borderColorHighlight=cccccc&fcHighlight=2e7db2&iconColorHighlight=4b8e0b&bgColorError=ffc73d&bgTextureError=02_glass.png&bgImgOpacityError=40&borderColorError=ffb73d&fcError=111111&iconColorError=a83300&bgColorOverlay=5c5c5c&bgTextureOverlay=01_flat.png&bgImgOpacityOverlay=50&opacityOverlay=80&bgColorShadow=cccccc&bgTextureShadow=01_flat.png&bgImgOpacityShadow=30&opacityShadow=60&thicknessShadow=7px&offsetTopShadow=-7px&offsetLeftShadow=-7px&cornerRadiusShadow=8px\r\n* Copyright (c) 2012 jQuery Foundation and other contributors Licensed MIT */\r\n\r\n/* Layout helpers\r\n----------------------------------*/\r\n.oskariui .ui-helper-hidden { display: none; }\r\n.oskariui .ui-helper-hidden-accessible { position: absolute !important; clip: rect(1px,1px,1px,1px); clip: rect(1px,1px,1px,1px); }\r\n.oskariui .ui-helper-reset { margin: 0; padding: 0; border: 0; outline: 0; line-height: 1.3; text-decoration: none; font-size: 100%; list-style: none; }\r\n.oskariui .ui-helper-clearfix:before, .ui-helper-clearfix:after { content: \"\"; display: table; }\r\n.oskariui .ui-helper-clearfix:after { clear: both; }\r\n.oskariui .ui-helper-clearfix { zoom: 1; }\r\n.oskariui .ui-helper-zfix { width: 100%; height: 100%; top: 0; left: 0; position: absolute; opacity: 0; filter:Alpha(Opacity=0); }\r\n\r\n\r\n/* Interaction Cues\r\n----------------------------------*/\r\n.oskariui .ui-state-disabled { cursor: default !important; }\r\n\r\n\r\n/* Icons\r\n----------------------------------*/\r\n\r\n/* states and images */\r\n.oskariui .ui-icon { display: block; text-indent: -99999px; overflow: hidden; background-repeat: no-repeat; }\r\n\r\n\r\n/* Misc visuals\r\n----------------------------------*/\r\n\r\n/* Overlays */\r\n.oskariui .ui-widget-overlay { position: absolute; top: 0; left: 0; width: 100%; height: 100%; }\r\n.oskariui .ui-resizable { position: relative;}\r\n.oskariui .ui-resizable-handle { position: absolute;font-size: 0.1px; display: block; }\r\n.oskariui .ui-resizable-disabled .ui-resizable-handle, .ui-resizable-autohide .ui-resizable-handle { display: none; }\r\n.oskariui .ui-resizable-n { cursor: n-resize; height: 7px; width: 100%; top: -5px; left: 0; }\r\n.oskariui .ui-resizable-s { cursor: s-resize; height: 7px; width: 100%; bottom: -5px; left: 0; }\r\n.oskariui .ui-resizable-e { cursor: e-resize; width: 7px; right: -5px; top: 0; height: 100%; }\r\n.oskariui .ui-resizable-w { cursor: w-resize; width: 7px; left: -5px; top: 0; height: 100%; }\r\n.oskariui .ui-resizable-se { cursor: se-resize; width: 12px; height: 12px; right: 1px; bottom: 1px; }\r\n.oskariui .ui-resizable-sw { cursor: sw-resize; width: 9px; height: 9px; left: -5px; bottom: -5px; }\r\n.oskariui .ui-resizable-nw { cursor: nw-resize; width: 9px; height: 9px; left: -5px; top: -5px; }\r\n.oskariui .ui-resizable-ne { cursor: ne-resize; width: 9px; height: 9px; right: -5px; top: -5px;}.ui-selectable-helper { position: absolute; border:1px dotted black; }\r\n\r\n.oskariui .ui-slider { position: relative; text-align: left; }\r\n.oskariui .ui-slider .ui-slider-handle { position: absolute; width: 16px; height: 17px; cursor: default; }\r\n.oskariui .ui-slider .ui-slider-range { position: absolute; font-size: .7em; display: block; border: 0; background-position: 0 0; }\r\n\r\n.oskariui .ui-slider-horizontal { height: 14px; }\r\n.oskariui .ui-slider-horizontal .ui-slider-handle { background-image: url(\'/Oskari/resources/framework/bundle/oskariui/images/horizontal_handle.png\'); background-repeat: no-repeat;}\r\n\r\n.oskariui .ui-slider-horizontal .ui-slider-range { top: 0; height: 100%; }\r\n.oskariui .ui-slider-horizontal .ui-slider-range-min { left: 0; }\r\n.oskariui .ui-slider-horizontal .ui-slider-range-max { right: 0; }\r\n\r\n.oskariui .ui-slider-vertical { margin-left: 2px; width: 24px; background-image: url(\'/Oskari/resources/framework/bundle/oskariui/images/zoombar_part.png\'); background-repeat: repeat-y; }\r\n.oskariui .ui-slider-vertical .ui-slider-handle { margin-left: 0; background-image: url(\'/Oskari/resources/framework/bundle/oskariui/images/zoombar_cursor.png\'); background-repeat: no-repeat;}\r\n.oskariui .ui-slider-vertical .ui-slider-range { left: 0; width: 100%; }\r\n.oskariui .ui-slider-vertical .ui-slider-range-min { bottom: 0; }\r\n.oskariui .ui-slider-vertical .ui-slider-range-max { top: 0; }.ui-tooltip {\r\n\tpadding: 8px;\r\n\tposition: absolute;\r\n\tz-index: 9999;\r\n\tmax-width: 300px;\r\n\t-webkit-box-shadow: 0 0 5px #aaa;\r\n\tbox-shadow: 0 0 5px #aaa;\r\n}\r\n/* Fades and background-images don\'t work well together in IE6, drop the image */\r\n* html .ui-tooltip {\r\n\tbackground-image: none;\r\n}\r\nbody .oskariui .ui-tooltip { border-width: 2px; }\r\n\r\n/* Component containers\r\n----------------------------------*/\r\n.oskariui .ui-widget { font-family: Segoe UI,Arial,sans-serif; font-size: 1.1em; }\r\n.oskariui .ui-widget .ui-widget { font-size: 1em; }\r\n.oskariui .ui-widget input, .oskariui .ui-widget select, .oskariui .ui-widget textarea, .oskariui .ui-widget button { font-family: Segoe UI,Arial,sans-serif; font-size: 1em; }\r\n.oskariui .ui-widget-content {  }\r\n.oskariui .ui-widget-content a {  }\r\n.oskariui .ui-widget-header {  }\r\n.oskariui .ui-widget-header a {  }\r\n\r\n/* Interaction states\r\n----------------------------------*/\r\n.oskariui .ui-state-default, .oskariui .ui-widget-content .ui-state-default, .oskariui .ui-widget-header .ui-state-default {  }\r\n.oskariui .ui-state-default a, .oskariui .ui-state-default a:link, .oskariui .ui-state-default a:visited {  }\r\n.oskariui .ui-state-hover, .oskariui .ui-widget-content .ui-state-hover, .oskariui .ui-widget-header .ui-state-hover, .oskariui .ui-state-focus, .oskariui .ui-widget-content .ui-state-focus, .oskariui .ui-widget-header .ui-state-focus {  }\r\n.oskariui .ui-state-hover a, .oskariui .ui-state-hover a:hover, .oskariui .ui-state-hover a:link, .oskariui .ui-state-hover a:visited { }\r\n.oskariui .ui-state-active, .oskariui .ui-widget-content .ui-state-active, .oskariui .ui-widget-header .ui-state-active {  }\r\n.oskariui .ui-state-active a, .oskariui .ui-state-active a:link, .oskariui .ui-state-active a:visited {  }\r\n\r\n/* Interaction Cues\r\n----------------------------------*/\r\n.oskariui .ui-state-highlight, .oskariui .ui-widget-content .ui-state-highlight, .oskariui .ui-widget-header .ui-state-highlight  { }\r\n.oskariui .ui-state-highlight a, .oskariui .ui-widget-content .ui-state-highlight a,.oskariui .ui-widget-header .ui-state-highlight a { }\r\n.oskariui .ui-state-error, .oskariui .ui-widget-content .ui-state-error, .oskariui .ui-widget-header .ui-state-error { }\r\n.oskariui .ui-state-error a, .oskariui .ui-widget-content .ui-state-error a, .oskariui .ui-widget-header .ui-state-error a { }\r\n.oskariui .ui-state-error-text, .oskariui .ui-widget-content .ui-state-error-text, .oskariui .ui-widget-header .ui-state-error-text {  }\r\n.oskariui .ui-priority-primary, .oskariui .ui-widget-content .ui-priority-primary, .oskariui .ui-widget-header .ui-priority-primary {  }\r\n.oskariui .ui-priority-secondary, .oskariui .ui-widget-content .ui-priority-secondary,  .oskariui .ui-widget-header .ui-priority-secondary { }\r\n.oskariui .ui-state-disabled, .oskariui .ui-widget-content .ui-state-disabled, .oskariui .ui-widget-header .ui-state-disabled {  }\r\n.oskariui .ui-state-disabled .ui-icon { filter:Alpha(Opacity=35); } /* For IE8 - See #6059 */\r\n\r\n/* Icons\r\n----------------------------------*/\r\n\r\n/* states and images */\r\n.oskariui .ui-icon { width: 16px; height: 16px; }\r\n.oskariui .ui-widget-content .ui-icon { }\r\n.oskariui .ui-widget-header .ui-icon { }\r\n.oskariui .ui-state-default .ui-icon {  }\r\n.oskariui .ui-state-hover .ui-icon, .oskariui .ui-state-focus .ui-icon {}\r\n.oskariui .ui-state-active .ui-icon { }\r\n.oskariui .ui-state-highlight .ui-icon { }\r\n.oskariui .ui-state-error .ui-icon, .oskariui .ui-state-error-text .ui-icon { }\r\n\r\n\r\n/* Misc visuals\r\n----------------------------------*/\r\n\r\n/* Corner radius */\r\n.oskariui .ui-corner-all, .oskariui .ui-corner-top, .oskariui .ui-corner-left, .oskariui .ui-corner-tl { -moz-border-radius-topleft: 6px; -webkit-border-top-left-radius: 6px; -khtml-border-top-left-radius: 6px; border-top-left-radius: 6px; }\r\n.oskariui .ui-corner-all, .oskariui .ui-corner-top, .oskariui .ui-corner-right, .oskariui .ui-corner-tr { -moz-border-radius-topright: 6px; -webkit-border-top-right-radius: 6px; -khtml-border-top-right-radius: 6px; border-top-right-radius: 6px; }\r\n.oskariui .ui-corner-all, .oskariui .ui-corner-bottom, .oskariui .ui-corner-left, .oskariui .ui-corner-bl { -moz-border-radius-bottomleft: 6px; -webkit-border-bottom-left-radius: 6px; -khtml-border-bottom-left-radius: 6px; border-bottom-left-radius: 6px; }\r\n.oskariui .ui-corner-all, .oskariui .ui-corner-bottom, .oskariui .ui-corner-right, .oskariui .ui-corner-br { -moz-border-radius-bottomright: 6px; -webkit-border-bottom-right-radius: 6px; -khtml-border-bottom-right-radius: 6px; border-bottom-right-radius: 6px; }\r\n\r\n/* Overlays */\r\n.oskariui .ui-widget-overlay { background: #5c5c5c url(resources/framework/bundle/oskariui/css/images/ui-bg_flat_50_5c5c5c_40x100.png) 50% 50% repeat-x; opacity: .8;filter:Alpha(Opacity=80); }\r\n.oskariui .ui-widget-shadow { margin: -7px 0 0 -7px; padding: 7px; background: #cccccc url(resources/framework/bundle/oskariui/css/images/ui-bg_flat_30_cccccc_40x100.png) 50% 50% repeat-x; opacity: .6;filter:Alpha(Opacity=60); -moz-border-radius: 8px; -khtml-border-radius: 8px; -webkit-border-radius: 8px; border-radius: 8px; }\r\n/*!\r\n * Bootstrap v2.3.1\r\n *\r\n * Copyright 2012 Twitter, Inc\r\n * Licensed under the Apache License v2.0\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Designed and built with all the love in the world @twitter by @mdo and @fat.\r\n */\r\n.oskariui .clearfix {\r\n  *zoom: 1;\r\n}\r\n.oskariui .clearfix:before,\r\n.oskariui .clearfix:after {\r\n  display: table;\r\n  content: \"\";\r\n  line-height: 0;\r\n}\r\n.oskariui .clearfix:after {\r\n  clear: both;\r\n}\r\n.oskariui .hide-text {\r\n  font: 0/0 a;\r\n  color: transparent;\r\n  text-shadow: none;\r\n  background-color: transparent;\r\n  border: 0;\r\n}\r\n.oskariui .input-block-level {\r\n  display: block;\r\n  width: 100%;\r\n  min-height: 30px;\r\n  -webkit-box-sizing: border-box;\r\n  -moz-box-sizing: border-box;\r\n  box-sizing: border-box;\r\n}\r\n.oskariui .row {\r\n  margin-left: -20px;\r\n  *zoom: 1;\r\n}\r\n.oskariui .row:before,\r\n.oskariui .row:after {\r\n  display: table;\r\n  content: \"\";\r\n  line-height: 0;\r\n}\r\n.oskariui .row:after {\r\n  clear: both;\r\n}\r\n[class*=\"span\"] {\r\n  float: left;\r\n  min-height: 1px;\r\n  margin-left: 20px;\r\n}\r\n.oskariui .container,\r\n.oskariui .navbar-static-top .container,\r\n.oskariui .navbar-fixed-top .container,\r\n.oskariui .navbar-fixed-bottom .container {\r\n  width: 940px;\r\n}\r\n.oskariui .span12 {\r\n  width: 940px;\r\n}\r\n.oskariui .span11 {\r\n  width: 860px;\r\n}\r\n.oskariui .span10 {\r\n  width: 780px;\r\n}\r\n.oskariui .span9 {\r\n  width: 700px;\r\n}\r\n.oskariui .span8 {\r\n  width: 620px;\r\n}\r\n.oskariui .span7 {\r\n  width: 540px;\r\n}\r\n.oskariui .span6 {\r\n  width: 460px;\r\n}\r\n.oskariui .span5 {\r\n  width: 380px;\r\n}\r\n.oskariui .span4 {\r\n  width: 300px;\r\n}\r\n.oskariui .span3 {\r\n  width: 220px;\r\n}\r\n.oskariui .span2 {\r\n  width: 140px;\r\n}\r\n.oskariui .span1 {\r\n  width: 60px;\r\n}\r\n.oskariui .offset12 {\r\n  margin-left: 980px;\r\n}\r\n.oskariui .offset11 {\r\n  margin-left: 900px;\r\n}\r\n.oskariui .offset10 {\r\n  margin-left: 820px;\r\n}\r\n.oskariui .offset9 {\r\n  margin-left: 740px;\r\n}\r\n.oskariui .offset8 {\r\n  margin-left: 660px;\r\n}\r\n.oskariui .offset7 {\r\n  margin-left: 580px;\r\n}\r\n.oskariui .offset6 {\r\n  margin-left: 500px;\r\n}\r\n.oskariui .offset5 {\r\n  margin-left: 420px;\r\n}\r\n.oskariui .offset4 {\r\n  margin-left: 340px;\r\n}\r\n.oskariui .offset3 {\r\n  margin-left: 260px;\r\n}\r\n.oskariui .offset2 {\r\n  margin-left: 180px;\r\n}\r\n.oskariui .offset1 {\r\n  margin-left: 100px;\r\n}\r\n.oskariui .row-fluid {\r\n  width: 100%;\r\n  *zoom: 1;\r\n}\r\n.oskariui .row-fluid:before,\r\n.oskariui .row-fluid:after {\r\n  display: table;\r\n  content: \"\";\r\n  line-height: 0;\r\n}\r\n.oskariui .row-fluid:after {\r\n  clear: both;\r\n}\r\n.oskariui .row-fluid [class*=\"span\"] {\r\n  display: block;\r\n  width: 100%;\r\n  min-height: 30px;\r\n  -webkit-box-sizing: border-box;\r\n  -moz-box-sizing: border-box;\r\n  box-sizing: border-box;\r\n  float: left;\r\n  margin-left: 2.127659574468085%;\r\n  *margin-left: 2.074468085106383%;\r\n}\r\n.oskariui .row-fluid [class*=\"span\"]:first-child {\r\n  margin-left: 0;\r\n}\r\n.oskariui .row-fluid .controls-row [class*=\"span\"] + [class*=\"span\"] {\r\n  margin-left: 2.127659574468085%;\r\n}\r\n.oskariui .row-fluid .span12 {\r\n  width: 100%;\r\n  *width: 99.94680851063829%;\r\n}\r\n.oskariui .row-fluid .span11 {\r\n  width: 91.48936170212765%;\r\n  *width: 91.43617021276594%;\r\n}\r\n.oskariui .row-fluid .span10 {\r\n  width: 82.97872340425532%;\r\n  *width: 82.92553191489361%;\r\n}\r\n.oskariui .row-fluid .span9 {\r\n  width: 74.46808510638297%;\r\n  *width: 74.41489361702126%;\r\n}\r\n.oskariui .row-fluid .span8 {\r\n  width: 65.95744680851064%;\r\n  *width: 65.90425531914893%;\r\n}\r\n.oskariui .row-fluid .span7 {\r\n  width: 57.44680851063829%;\r\n  *width: 57.39361702127659%;\r\n}\r\n.oskariui .row-fluid .span6 {\r\n  width: 48.93617021276595%;\r\n  *width: 48.88297872340425%;\r\n}\r\n.oskariui .row-fluid .span5 {\r\n  width: 40.42553191489362%;\r\n  *width: 40.37234042553192%;\r\n}\r\n.oskariui .row-fluid .span4 {\r\n  width: 31.914893617021278%;\r\n  *width: 31.861702127659576%;\r\n}\r\n.oskariui .row-fluid .span3 {\r\n  width: 23.404255319148934%;\r\n  *width: 23.351063829787233%;\r\n}\r\n.oskariui .row-fluid .span2 {\r\n  width: 14.893617021276595%;\r\n  *width: 14.840425531914894%;\r\n}\r\n.oskariui .row-fluid .span1 {\r\n  width: 6.382978723404255%;\r\n  *width: 6.329787234042553%;\r\n}\r\n.oskariui .row-fluid .offset12 {\r\n  margin-left: 104.25531914893617%;\r\n  *margin-left: 104.14893617021275%;\r\n}\r\n.oskariui .row-fluid .offset12:first-child {\r\n  margin-left: 102.12765957446808%;\r\n  *margin-left: 102.02127659574467%;\r\n}\r\n.oskariui .row-fluid .offset11 {\r\n  margin-left: 95.74468085106382%;\r\n  *margin-left: 95.6382978723404%;\r\n}\r\n.oskariui .row-fluid .offset11:first-child {\r\n  margin-left: 93.61702127659574%;\r\n  *margin-left: 93.51063829787232%;\r\n}\r\n.oskariui .row-fluid .offset10 {\r\n  margin-left: 87.23404255319149%;\r\n  *margin-left: 87.12765957446807%;\r\n}\r\n.oskariui .row-fluid .offset10:first-child {\r\n  margin-left: 85.1063829787234%;\r\n  *margin-left: 84.99999999999999%;\r\n}\r\n.oskariui .row-fluid .offset9 {\r\n  margin-left: 78.72340425531914%;\r\n  *margin-left: 78.61702127659572%;\r\n}\r\n.oskariui .row-fluid .offset9:first-child {\r\n  margin-left: 76.59574468085106%;\r\n  *margin-left: 76.48936170212764%;\r\n}\r\n.oskariui .row-fluid .offset8 {\r\n  margin-left: 70.2127659574468%;\r\n  *margin-left: 70.10638297872339%;\r\n}\r\n.oskariui .row-fluid .offset8:first-child {\r\n  margin-left: 68.08510638297872%;\r\n  *margin-left: 67.9787234042553%;\r\n}\r\n.oskariui .row-fluid .offset7 {\r\n  margin-left: 61.70212765957446%;\r\n  *margin-left: 61.59574468085106%;\r\n}\r\n.oskariui .row-fluid .offset7:first-child {\r\n  margin-left: 59.574468085106375%;\r\n  *margin-left: 59.46808510638297%;\r\n}\r\n.oskariui .row-fluid .offset6 {\r\n  margin-left: 53.191489361702125%;\r\n  *margin-left: 53.085106382978715%;\r\n}\r\n.oskariui .row-fluid .offset6:first-child {\r\n  margin-left: 51.063829787234035%;\r\n  *margin-left: 50.95744680851063%;\r\n}\r\n.oskariui .row-fluid .offset5 {\r\n  margin-left: 44.68085106382979%;\r\n  *margin-left: 44.57446808510638%;\r\n}\r\n.oskariui .row-fluid .offset5:first-child {\r\n  margin-left: 42.5531914893617%;\r\n  *margin-left: 42.4468085106383%;\r\n}\r\n.oskariui .row-fluid .offset4 {\r\n  margin-left: 36.170212765957444%;\r\n  *margin-left: 36.06382978723405%;\r\n}\r\n.oskariui .row-fluid .offset4:first-child {\r\n  margin-left: 34.04255319148936%;\r\n  *margin-left: 33.93617021276596%;\r\n}\r\n.oskariui .row-fluid .offset3 {\r\n  margin-left: 27.659574468085104%;\r\n  *margin-left: 27.5531914893617%;\r\n}\r\n.oskariui .row-fluid .offset3:first-child {\r\n  margin-left: 25.53191489361702%;\r\n  *margin-left: 25.425531914893618%;\r\n}\r\n.oskariui .row-fluid .offset2 {\r\n  margin-left: 19.148936170212764%;\r\n  *margin-left: 19.04255319148936%;\r\n}\r\n.oskariui .row-fluid .offset2:first-child {\r\n  margin-left: 17.02127659574468%;\r\n  *margin-left: 16.914893617021278%;\r\n}\r\n.oskariui .row-fluid .offset1 {\r\n  margin-left: 10.638297872340425%;\r\n  *margin-left: 10.53191489361702%;\r\n}\r\n.oskariui .row-fluid .offset1:first-child {\r\n  margin-left: 8.51063829787234%;\r\n  *margin-left: 8.404255319148938%;\r\n}\r\n[class*=\"span\"].hide,\r\n.oskariui .row-fluid [class*=\"span\"].hide {\r\n  display: none;\r\n}\r\n[class*=\"span\"].pull-right,\r\n.oskariui .row-fluid [class*=\"span\"].pull-right {\r\n  float: right;\r\n}\r\n.oskariui .container {\r\n  margin-right: auto;\r\n  margin-left: auto;\r\n  *zoom: 1;\r\n}\r\n.oskariui .container:before,\r\n.oskariui .container:after {\r\n  display: table;\r\n  content: \"\";\r\n  line-height: 0;\r\n}\r\n.oskariui .container:after {\r\n  clear: both;\r\n}\r\n.oskariui .container-fluid {\r\n  padding-right: 20px;\r\n  padding-left: 20px;\r\n  *zoom: 1;\r\n}\r\n.oskariui .container-fluid:before,\r\n.oskariui .container-fluid:after {\r\n  display: table;\r\n  content: \"\";\r\n  line-height: 0;\r\n}\r\n.oskariui .container-fluid:after {\r\n  clear: both;\r\n}\r\n#contentMap.oskari-map-window-fullscreen {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  z-index: 10000;\n  margin: 0 !important; }\ndiv.pzbDiv.mapplugin {\r\n    top : 140px;\r\n    right : 64px;\r\n    background : transparent;\r\n    z-index: 15000;\r\n}\r\ndiv.pzbDiv div.pzbDiv-plus {\r\n    width : 18px;\r\n    height : 46px;\r\n    background-image : url(\'/Oskari/resources/framework/bundle/mapmodule-plugin/plugin/portti2zoombar/images/zoombar_plus_patched.png\');\r\n}\r\n\r\ndiv.pzbDiv div.pzbDiv-minus {\r\n    width : 18px;\r\n    height : 18px;\r\n    background-image : url(\'/Oskari/resources/framework/bundle/mapmodule-plugin/plugin/portti2zoombar/images/zoombar_minus.png\');\r\n}\r\ndiv.pzbDiv div.rui-slider-vertical {\r\n    background-color : transparent;\r\n    background-image : url(\'/Oskari/resources/framework/bundle/mapmodule-plugin/plugin/portti2zoombar/images/zoombar.png\');\r\n    height : 148px;\r\n    width : 18px;\r\n    border : 0;\r\n    margin : 0;\r\n}\r\n\r\n\r\n\r\n\r\n.panbuttonDiv.mapplugin {\n  top: 10px;\n  right: 36px;\n  display: block;\n  color: black;\n  background: transparent;\n  font-size: 12px;\n  z-index: 15000;\n  /*64738;*/\n  font-weight: bold;\n  /*background-image: url(\'/Oskari/resources/framework/bundle/mapmodule-plugin/plugin/panbuttons/images/default.png\');*/\n  height: 90px;\n  width: 90px; }\n\n.panbuttonDivImg {\n  background-image: url(\'/Oskari/resources/framework/bundle/mapmodule-plugin/plugin/panbuttons/images/sprite.png\'); }\n\n.panbuttonDivImg.root {\n  background-position: 0px -90px; }\n\n.panbuttonDivImg.left {\n  background-position: 0px -180px; }\n\n.panbuttonDivImg.right {\n  background-position: 0px -270px; }\n\n.panbuttonDivImg.up {\n  background-position: 0px -360px; }\n\n.panbuttonDivImg.down {\n  background-position: 0px -450px; }\n\n.panbutton_left {\n  float: left; }\n\n.panbutton_right {\n  float: right; }\n.olMap {\n  position: relative; }\n\ndiv.mapplugin {\n  position: absolute;\n  z-index: 15000; }\n\ndiv.mapplugins.left {\n  position: absolute;\n  z-index: 15000;\n  top: 20px;\n  right: 20px;\n  text-align: right;\n  max-width: 85%; }\n\ndiv.mapplugins.left > div {\n  display: inline-block;\n  margin: 5px;\n  vertical-align: top; }\n\n.oskari-publisher-font-arial {\n  font-family: Arial, sans-serif !important; }\n\n.oskari-publisher-font-georgia {\n  font-family: Georgia, serif !important; }\n/* setup document body so flyouts will not make scrollbars to browser window */\nbody {\n  position: fixed;\n  width: 100%;\n  height: 100%; }\n\n/* flyout toolbar */\n.oskari-flyoutheading {\n  background-color: #ffd400;\n  border-top: 1px solid #ffdf00;\n  border-bottom: 1px solid #ebb819;\n  height: 14px;\n  width: 100%; }\n\n.oskari-flyouttoolbar {\n  height: 57px;\n  width: 100%;\n  background-color: #fdf8d9;\n  border-top: #fdfdfd;\n  border-bottom: #fef2ba; }\n\n.oskari-flyout-title {\n  float: left;\n  margin-left: 20px;\n  margin-top: 12px;\n  height: 20px;\n  display: inline-block; }\n\n.oskari-flyout-title p {\n  margin: 0;\n  padding: 0;\n  font: 16px/20px \"Open Sans\", \"Helvetica Neue\", \"HelveticaNeue\", Helvetica, Arial, sans-serif; }\n\n/** flyout toolbar tools and tool states  */\n.oskari-flyouttools {\n  float: right;\n  margin-right: 25px;\n  height: 16px;\n  display: inline-block;\n  margin-top: 15px; }\n\n.oskari-flyouttool-detach {\n  display: none;\n  /* visualise here if this tool required */ }\n\n.oskari-detached .oskari-flyouttool-detach {\n  display: none; }\n\n.oskari-minimized .oskari-flyouttool-detach {\n  display: none; }\n\n.oskari-flyouttool-attach {\n  /* visualise here if this tool required */\n  display: none; }\n\n.oskari-attached .oskari-flyouttool-attach {\n  display: none; }\n\n.oskari-flyouttool-minimize {\n  /* visualise here if this tool required */\n  display: none; }\n\n.oskari-attached .oskari-flyouttool-minimize {\n  display: none; }\n\n.oskari-minimized .oskari-flyouttool-minimize {\n  display: none; }\n\n.oskari-flyouttool-restore {\n  /* visualise here if this tool required */\n  display: none; }\n\n.oskari-flyouttool-help {\n  /* visualise here if this tool required */\n  display: none; }\n\n.oskari-minimized .oskari-flyouttool-restore {\n  display: inline-block; }\n\n.oskari-minimized .oskari-flyouttool-attach {\n  display: none; }\n\n.oskari-minimized .oskari-flyouttool-detach {\n  display: none; }\n\n.oskari-flyouttool-close {\n  display: inline-block;\n  width: 16px;\n  height: 16px;\n  margin-right: 2px;\n  margin-left: auto; }\n\n/* flyout */\n.oskari-flyout {\n  background-color: #fafafa;\n  position: absolute;\n  z-index: 1100;\n  margin: 0px;\n  padding: 0px;\n  border: 1px solid rgba(0, 0, 0, 0.2); }\n\n/* flyout states */\n/*.oskari-minimized {\r\n width: 640px;\r\n height: 64px;\r\n overflow: hidden;\r\n\r\n min-height: 64px;\r\n max-height: 64px;\r\n }*/\n.oskari-closed {\n  display: none; }\n\n.oskari-minimized {\n  display: none; }\n\n.oskari-flyoutcontent {\n  margin: 0;\n  padding: 20px 20px 20px 25px;\n  border: 0;\n  /*overflow: auto;*/ }\n\n/** tile */\n/* tile states */\n.oskari-tile-attached {\n  border-bottom: 1px solid white;\n  background-color: white; }\n\n.oskari-tile-detached {\n  border-top: 1px solid #484846;\n  border-bottom: 1px solid #212121;\n  background-color: white; }\n\n.oskari-tile-minimized {\n  border-top: 1px solid #484846;\n  border-bottom: 1px solid #212121;\n  background-color: #2d2d2d; }\n\n.oskari-tile-closed {\n  border-top: 1px solid #484846;\n  border-bottom: 1px solid #212121;\n  background-color: #2d2d2d; }\n\n.oskari-tile-container {\n  margin: 0; }\n\n.oskari-tile {\n  margin: 0;\n  padding: 0;\n  cursor: pointer;\n  height: 31px;\n  width: 153px;\n  border-top: 1px solid #484846;\n  border-bottom: 1px solid #212121;\n  line-height: 24px; }\n\n.oskari-tile-title {\n  display: inline-block;\n  margin: 0;\n  margin-top: 2px;\n  margin-left: 16px;\n  padding: 0;\n  float: left;\n  height: 28px;\n  width: 112px;\n  font-family: Arial, Helvetica;\n  font-weight: bold;\n  font-size: 11px;\n  text-align: left;\n  text-transform: uppercase;\n  /*color: white;*/ }\n\n.oskari-tile-attached .oskari-tile-title {\n  color: #333438; }\n\n.oskari-tile-detached .oskari-tile-title {\n  color: #333438; }\n\n.oskari-tile-minimized .oskari-tile-title {\n  color: white; }\n\n.oskari-tile-closed .oskari-tile-title {\n  color: white; }\n\n.oskari-tile-status {\n  float: right;\n  text-align: center;\n  display: inline-block;\n  font-size: 11px;\n  font-weight: bold;\n  height: 19px !important;\n  width: 20px !important;\n  margin: 1px;\n  padding: 1px; }\n\n.oskari-tile-close {\n  display: none; }\n\n.oskariform .oskarifield {\n  padding: 10px; }\n\n/** media queries */\n@media screen {\n  .oskari-attached {\n    min-width: 520px;\n    max-width: 640px; }\n\n  .oskari-detached {\n    min-width: 520px;\n    max-width: 640px; }\n\n  .oskari-flyoutcontentcontainer {\n    width: 100%;\n    height: 100%;\n    padding: 0;\n    border: 0;\n    overflow: auto;\n    max-height: 500px;\n    /* overflow: auto; */ } }\n@media screen {\n  .oskari-attached {\n    min-width: 520px;\n    max-width: 640px; }\n\n  .oskari-detached {\n    min-width: 520px;\n    max-width: 640px; }\n\n  .oskari-flyoutcontentcontainer {\n    width: 100%;\n    height: 100%;\n    padding: 0;\n    border: 0;\n    overflow: auto;\n    max-height: 500px;\n    /* overflow: auto; */ } }\n@media only screen and (min-width: 400px) and (max-width: 599px) {\n  .oskari-attached {\n    min-width: 520px;\n    max-width: 500px; }\n\n  .oskari-detached {\n    min-width: 520px;\n    max-width: 500px; } }\n@media only screen and (min-width: 600px) and (max-width: 799px) {\n  .oskari-attached {\n    min-width: 520px;\n    max-width: 600px; }\n\n  .oskari-detached {\n    min-width: 520px;\n    max-width: 600px; } }\n@media only screen and (min-width: 800px) and (max-width: 1199px) {\n  .oskari-attached {\n    min-width: 520px;\n    max-width: 1000px; }\n\n  .oskari-detached {\n    min-width: 520px;\n    max-width: 600px; } }\n@media only screen and (min-width: 1200px) and (max-width: 1599px) {\n  .oskari-attached {\n    min-width: 520px;\n    max-width: 600px; }\n\n  .oskari-detached {\n    min-width: 520px;\n    max-width: 600px; } }\n@media only screen and (min-height: 400px) and (max-height: 599px) {\n  .oskari-flyoutcontentcontainer {\n    width: 100%;\n    height: 100%;\n    padding: 0;\n    border: 0;\n    overflow: auto;\n    max-height: 300px;\n    /* overflow: auto; */ } }\n@media only screen and (min-height: 600px) and (max-height: 799px) {\n  .oskari-flyoutcontentcontainer {\n    width: 100%;\n    height: 100%;\n    padding: 0;\n    border: 0;\n    overflow: auto;\n    max-height: 500px;\n    /* overflow: auto; */ } }\n@media only screen and (min-height: 800px) and (max-height: 999px) {\n  .oskari-flyoutcontentcontainer {\n    width: 100%;\n    height: 100%;\n    padding: 0;\n    border: 0;\n    overflow: auto;\n    max-height: 700px;\n    /* overflow: auto; */ } }\n@media only screen and (min-height: 1000px) and (max-height: 1199px) {\n  .oskari-flyoutcontentcontainer {\n    width: 100%;\n    height: 100%;\n    padding: 0;\n    border: 0;\n    overflow: auto;\n    max-height: 900px;\n    /* overflow: auto; */ } }\n@media only screen and (min-height: 1200px) and (max-height: 1399px) {\n  .oskari-flyoutcontentcontainer {\n    width: 100%;\n    height: 100%;\n    padding: 0;\n    border: 0;\n    overflow: auto;\n    max-height: 1100px;\n    /* overflow: auto; */ } }\n@media only screen and (min-height: 1400px) {\n  .oskari-flyoutcontentcontainer {\n    width: 100%;\n    height: 100%;\n    padding: 0;\n    border: 0;\n    overflow: auto;\n    max-height: 1300px;\n    /* overflow: auto; */ } }\n/* IE8 TEMP fixes */\n.oskari-flyoutcontentcontainer_IE_400_599 {\n  width: 100%;\n  height: 100%;\n  padding: 0;\n  border: 0;\n  overflow: auto;\n  max-height: 300px;\n  /* overflow: auto; */ }\n\n.oskari-flyoutcontentcontainer_IE_600_799 {\n  width: 100%;\n  height: 100%;\n  padding: 0;\n  border: 0;\n  overflow: auto;\n  max-height: 500px;\n  /* overflow: auto; */ }\n\n.oskari-flyoutcontentcontainer_IE_800_999 {\n  width: 100%;\n  height: 100%;\n  padding: 0;\n  border: 0;\n  overflow: auto;\n  max-height: 700px;\n  /* overflow: auto; */ }\n\n.oskari-flyoutcontentcontainer_IE_1000_1199 {\n  width: 100%;\n  height: 100%;\n  padding: 0;\n  border: 0;\n  overflow: auto;\n  max-height: 900px;\n  /* overflow: auto; */ }\n\n.oskari-flyoutcontentcontainer_IE_1200_1399 {\n  width: 100%;\n  height: 100%;\n  padding: 0;\n  border: 0;\n  overflow: auto;\n  max-height: 1100px;\n  /* overflow: auto; */ }\n\n.oskari-flyoutcontentcontainer_IE_1400 {\n  width: 100%;\n  height: 100%;\n  padding: 0;\n  border: 0;\n  overflow: auto;\n  max-height: 1300px;\n  /* overflow: auto; */ }\n/* Accordion */\ndiv.accordion div.accordion_panel {\n  background-color: #f3f3f3;\n  border: 1pt solid #c0d0d0;\n  margin: 0;\n  padding: 0; }\n\ndiv.accordion_panel div.header div.headerIcon {\n  display: inline-block;\n  margin-left: 12px;\n  vertical-align: middle; }\n\ndiv.accordion_panel div.header div.headerText {\n  display: inline-block;\n  font-weight: bold;\n  padding: 8px 10px 8px 12px;\n  font: 14pt Arial, sans-serif; }\n\ndiv.accordion div.accordion_panel.open {\n  background-color: #FFFFFF; }\n\ndiv.accordion div.accordion_panel div.content {\n  padding: 5px; }\n\ndiv.accordion div.accordionmsg {\n  padding: 10px; }\n/* \"tab\" content */\ndiv.oskariTabs div.tabsContent {\n  border-left: 1px solid #999999;\n  border-right: 1px solid #999999;\n  border-top: 0px solid #999999;\n  border-bottom: 1px solid #999999;\n  color: #000000;\n  height: 90%; }\n\ndiv.oskariTabs div.tab-content {\n  padding: 10px; }\n\n/* tab headers */\ndiv.oskariTabs div.tabsHeader {\n  background: url(\'/Oskari/resources/framework/bundle/divmanazer/images/tab_bg.png\') repeat-x scroll center bottom;\n  /* #FFFFFF*/\n  clear: left;\n  float: left;\n  font: 12pt Arial, sans-serif;\n  font-weight: bold;\n  overflow: hidden;\n  padding: 0;\n  width: 100%; }\n\ndiv.oskariTabs div.tabsHeader ul {\n  float: left;\n  list-style: none outside none;\n  margin: 0;\n  padding: 0;\n  text-align: center; }\n\ndiv.oskariTabs div.tabsHeader ul li {\n  display: block;\n  float: left;\n  list-style: none outside none;\n  margin: 10px 0 0;\n  padding: 0;\n  right: 50%; }\n\ndiv.oskariTabs div.tabsHeader ul li a {\n  background: none repeat scroll 0 0 #FFFFFF;\n  border-bottom: 1px solid #999999;\n  color: #3333FF;\n  display: block;\n  float: left;\n  padding: 10px 20px;\n  position: relative;\n  text-decoration: none; }\n\ndiv.oskariTabs div.tabsHeader ul li.active a {\n  border-left: 1px solid #999999;\n  border-right: 1px solid #999999;\n  border-top: 1px solid #999999;\n  border-bottom: 0px solid #999999;\n  color: #000000; }\n\ndiv.oskariTabs div.tabsHeader ul li.fill a {\n  width: 100%; }\n.modaldialog {\n  border: 1px solid #3C3C3C;\n  margin: 0px; }\n\n.modaltitle {\n  margin: 0px;\n  border-bottom: 1px solid #3C3C3C;\n  color: #3C3C3C;\n  padding: 8px 16px 4px 16px; }\n\n.modalmessage {\n  width: 100%;\n  color: #3C3C3C;\n  padding: 8px 16px 8px 16px; }\n\n.modalbuttons {\n  width: 100%;\n  display: inline-block;\n  padding: 0px 16px 4px 16px; }\n\n.modalbutton {\n  margin: 2px;\n  display: inline-block; }\n/*!\r\n * Bootstrap v2.0.3\r\n *\r\n * Copyright 2012 Twitter, Inc\r\n * Licensed under the Apache License v2.0\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Designed and built with all the love in the world @twitter by @mdo and @fat.\r\n */\n.oskari-badge {\n  font-size: 10.998px;\n  font-weight: bold;\n  line-height: 14px;\n  color: #ffffff;\n  vertical-align: baseline;\n  white-space: nowrap;\n  text-shadow: 0 -1px 0 rgba(0, 0, 0, 0.25);\n  background-color: #999999; }\n\n.oskari-badge {\n  padding: 1px 9px 2px;\n  -webkit-border-radius: 9px;\n  -moz-border-radius: 9px;\n  border-radius: 9px; }\n\na.oskari-badge:hover {\n  color: #ffffff;\n  text-decoration: none;\n  cursor: pointer; }\n\n.oskari-badge-important {\n  background-color: #b94a48; }\n\n.oskari-badge-important[href] {\n  background-color: #953b39; }\n\n.oskari-badge-warning {\n  background-color: #f89406; }\n\n.oskari-badge-warning[href] {\n  background-color: #c67605; }\n\n.oskari-badge-success {\n  background-color: #468847; }\n\n.oskari-badge-success[href] {\n  background-color: #356635; }\n\n.oskari-badge-info {\n  background-color: #3a87ad; }\n\n.oskari-badge-info[href] {\n  background-color: #2d6987; }\n\n.oskari-badge-inverse {\n  background-color: #333333; }\n\n.oskari-badge-inverse[href] {\n  background-color: #1a1a1a; }\n/*!\r\n * Bootstrap v2.0.3\r\n *\r\n * Copyright 2012 Twitter, Inc\r\n * Licensed under the Apache License v2.0\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Designed and built with all the love in the world @twitter by @mdo and @fat.\r\n */\n.oskari-alert {\n  padding-left: 8px;\n  padding-top: 4px;\n  margin: 4px;\n  text-shadow: 0 1px 0 rgba(255, 255, 255, 0.5);\n  background-color: #fcf8e3;\n  border: 1px solid #fbeed5;\n  -webkit-border-radius: 4px;\n  -moz-border-radius: 4px;\n  border-radius: 4px;\n  color: #c09853;\n  position: relative;\n  height: 24px; }\n\n.oskari-alert-heading {\n  color: inherit; }\n\n.oskari-alert-icon-close {\n  position: absolute;\n  top: 4px;\n  right: 0px;\n  width: 24px;\n  height: 24px; }\n\n.oskari-alert-success {\n  background-color: #dff0d8;\n  border-color: #d6e9c6;\n  color: #468847; }\n\n.oskari-alert-danger, .oskari-alert-error {\n  background-color: #f2dede;\n  border-color: #eed3d7;\n  color: #b94a48; }\n\n.oskari-alert-info {\n  background-color: #d9edf7;\n  border-color: #bce8f1;\n  color: #3a87ad; }\ndiv.oskarifield div.icon-close {\n  display: inline-block;\n  left: -20px;\n  margin-left: 0px;\n  position: relative;\n  top: 3px; }\nth.asc {\n  background-image: url(\'/Oskari/resources/framework/bundle/divmanazer/images/asc_arrow.png\');\n  background-repeat: no-repeat;\n  background-position: center center; }\n\nth.desc {\n  background-image: url(\'/Oskari/resources/framework/bundle/divmanazer/images/desc_arrow.png\');\n  background-repeat: no-repeat;\n  background-position: center center; }\n\ndiv.column-selector-placeholder {\n  border-style: none;\n  float: left;\n  opacity: 1.0;\n  margin: 0;\n  padding: 0;\n  right: 0;\n  width: 25px;\n  height: 7px;\n  max-width: 25px;\n  max-height: 7px; }\n\ndiv.icon-menu {\n  position: absolute;\n  opacity: 1.0;\n  margin: 0;\n  cursor: pointer;\n  padding: 0;\n  width: 25px;\n  height: 8px;\n  max-width: 25px;\n  max-height: 7px; }\n\ndiv.column-selector {\n  position: absolute;\n  visibility: hidden;\n  background-color: white;\n  margin-top: 7px;\n  margin-right: 50px;\n  padding: 0;\n  border: 1px solid;\n  z-index: 10001; }\n\ndiv.column-selector div.close-selector-button {\n  width: 16px;\n  height: 16px;\n  position: absolute;\n  top: 5px;\n  right: 5px; }\n\ndiv.column-selector ul.column-selector-list {\n  list-style-type: none;\n  padding-right: 30px; }\n\ndiv.column-selector label.column-label {\n  padding-left: 5px; }\ndiv.divmanazerpopup {\n  max-width: 700px;\n  min-width: 200px;\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  background-color: white;\n  -moz-background-clip: border;\n  /* Firefox 3.6 */\n  -webkit-background-clip: border;\n  /* Safari 4? Chrome 6? */\n  background-clip: border-box;\n  /* Firefox 4, Safari 5, Opera 10, IE 9 */\n  -moz-background-clip: padding;\n  /* Firefox 3.6 */\n  -webkit-background-clip: padding;\n  /* Safari 4? Chrome 6? */\n  background-clip: padding-box;\n  /* Firefox 4, Safari 5, Opera 10, IE 9 */\n  -moz-background-clip: content;\n  /* Firefox 3.6 */\n  -webkit-background-clip: content;\n  /* Safari 4? Chrome 6? */\n  background-clip: content-box;\n  /* Firefox 4, Safari 5, Opera 10, IE 9 */\n  border: 5px solid rgba(0, 0, 0, 0.2);\n  border-radius: 7px;\n  /*\r\n    box-shadow: 0px 3px 3px rgba(0, 0, 0, 0.80);\r\n    -moz-box-shadow: 0px 3px 3px black;\r\n    -webkit-box-shadow: 0px 3px 8px rgba(0, 0, 0, 0.80);\r\n    */\n  z-index: 9000; }\n\ndiv.divmanazerpopup h3.popupHeader {\n  background-color: #FDF8D9;\n  border-radius: 5px 5px 0 0;\n  font-size: 18px;\n  line-height: 28px;\n  padding: 5px 10px; }\n\ndiv.divmanazerpopup div.content {\n  margin: 10px; }\n\ndiv.divmanazerpopup div.content textarea {\n  resize: none; }\n\ndiv.divmanazerpopup div.content ul {\n  margin: 10px; }\n\ndiv.divmanazerpopup.no_resize div.content textarea {\n  resize: none; }\n\ndiv.divmanazerpopup div.actions {\n  margin: 10px;\n  text-align: center; }\n\ndiv.divmanazerpopup div.actions input {\n  margin: 10px; }\n\n.divmanazerpopup.arrow:after, .divmanazerpopup.arrow:before {\n  border: solid transparent;\n  content: \" \";\n  height: 0;\n  width: 0;\n  position: absolute;\n  /*pointer-events: none; */ }\n\n/* Bottom alignment */\n.divmanazerpopup.bottom:after, .divmanazerpopup.bottom:before {\n  bottom: 100%; }\n\n.divmanazerpopup.bottom:after {\n  border-bottom-color: #FDF8D9;\n  border-width: 5px;\n  margin-left: -5px;\n  left: 50%; }\n\n.divmanazerpopup.bottom:before {\n  border-bottom-color: #000000;\n  border-width: 6px;\n  margin-left: -6px;\n  left: 50%; }\n\n/* top alignment */\n.divmanazerpopup.top:after, .divmanazerpopup.top:before {\n  top: 100%; }\n\n.divmanazerpopup.top:after {\n  border-top-color: #FFFFFF;\n  border-width: 5px;\n  margin-left: -5px;\n  left: 50%; }\n\n.divmanazerpopup.top:before {\n  border-top-color: #000000;\n  border-width: 6px;\n  margin-left: -6px;\n  left: 50%; }\n\n/* left alignment */\n.divmanazerpopup.left:after, .divmanazerpopup.left:before {\n  left: 100%; }\n\n.divmanazerpopup.left:after {\n  border-left-color: #FDF8D9;\n  border-width: 5px;\n  margin-top: -5px;\n  top: 50%; }\n\n.divmanazerpopup.left:before {\n  border-left-color: #000000;\n  border-width: 6px;\n  margin-top: -6px;\n  top: 50%; }\n\n/* right alignment */\n.divmanazerpopup.right:after, .divmanazerpopup.right:before {\n  right: 100%; }\n\n.divmanazerpopup.right:after {\n  border-right-color: #FDF8D9;\n  border-width: 5px;\n  margin-top: -5px;\n  top: 50%; }\n\n.divmanazerpopup.right:before {\n  border-right-color: #000000;\n  border-width: 6px;\n  margin-top: -6px;\n  top: 50%; }\ndiv.oskaributton {\n  display: inline-block;\n  margin: 5px; }\n\ndiv.oskaributton.primary input {\n  color: #3CA9FC; }\ndiv.oskarioverlay {\n  position: absolute;\n  background-color: black;\n  z-index: 8000; }\n\n.transparent {\n  zoom: 1;\n  filter: alpha(opacity=50);\n  /* unquote for libsass bug */\n  opacity: 0.5; }\n/*!\r\n * Bootstrap v2.0.3\r\n *\r\n * Copyright 2012 Twitter, Inc\r\n * Licensed under the Apache License v2.0\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Designed and built with all the love in the world @twitter by @mdo and @fat.\r\n */\n.oskari-tooltip {\n  position: absolute;\n  z-index: 1200;\n  display: block;\n  visibility: visible;\n  padding: 5px;\n  font-size: 11px;\n  opacity: 0;\n  filter: alpha(opacity=0);\n  /* unquote for libsass bug */ }\n\n.oskari-tooltip.in {\n  opacity: 0.8;\n  filter: alpha(opacity=80);\n  /* unquote for libsass bug */ }\n\n.oskari-tooltip.top {\n  margin-top: -2px; }\n\n.oskari-tooltip.right {\n  margin-left: 2px; }\n\n.oskari-tooltip.bottom {\n  margin-top: 2px; }\n\n.oskari-tooltip.left {\n  margin-left: -2px; }\n\n.oskari-tooltip.top .oskari-tooltip-arrow {\n  bottom: 0;\n  left: 50%;\n  margin-left: -5px;\n  border-left: 5px solid transparent;\n  border-right: 5px solid transparent;\n  border-top: 5px solid #000000; }\n\n.oskari-tooltip.left .oskari-tooltip-arrow {\n  top: 50%;\n  right: 0;\n  margin-top: -5px;\n  border-top: 5px solid transparent;\n  border-bottom: 5px solid transparent;\n  border-left: 5px solid #000000; }\n\n.oskari-tooltip.bottom .oskari-tooltip-arrow {\n  top: 0;\n  left: 50%;\n  margin-left: -5px;\n  border-left: 5px solid transparent;\n  border-right: 5px solid transparent;\n  border-bottom: 5px solid #000000; }\n\n.oskari-tooltip.right .oskari-tooltip-arrow {\n  top: 50%;\n  left: 0;\n  margin-top: -5px;\n  border-top: 5px solid transparent;\n  border-bottom: 5px solid transparent;\n  border-right: 5px solid #000000; }\n\n.oskari-tooltip-inner {\n  max-width: 640px;\n  padding: 3px 8px;\n  color: #ffffff;\n  text-align: center;\n  text-decoration: none;\n  background-color: #000000;\n  -webkit-border-radius: 4px;\n  -moz-border-radius: 4px;\n  border-radius: 4px; }\n\n.oskari-tooltip-arrow {\n  position: absolute;\n  width: 0;\n  height: 0; }\n\n.oskari-popover {\n  position: absolute;\n  top: 0;\n  left: 0;\n  z-index: 1210;\n  display: none;\n  padding: 5px; }\n\n.oskari-popover.top {\n  margin-top: -5px; }\n\n.oskari-popover.right {\n  margin-left: 5px; }\n\n.oskari-popover.bottom {\n  margin-top: 5px; }\n\n.oskari-popover.left {\n  margin-left: -5px; }\n\n.oskari-popover.top .oskari-arrow {\n  bottom: 0;\n  left: 50%;\n  margin-left: -5px;\n  border-left: 5px solid transparent;\n  border-right: 5px solid transparent;\n  border-top: 5px solid #000000; }\n\n.oskari-popover.right .oskari-arrow {\n  top: 50%;\n  left: 0;\n  margin-top: -5px;\n  border-top: 5px solid transparent;\n  border-bottom: 5px solid transparent;\n  border-right: 5px solid #000000; }\n\n.oskari-popover.bottom .oskari-arrow {\n  top: 0;\n  left: 50%;\n  margin-left: -5px;\n  border-left: 5px solid transparent;\n  border-right: 5px solid transparent;\n  border-bottom: 5px solid #000000; }\n\n.oskari-popover.left .oskari-arrow {\n  top: 50%;\n  right: 0;\n  margin-top: -5px;\n  border-top: 5px solid transparent;\n  border-bottom: 5px solid transparent;\n  border-left: 5px solid #000000; }\n\n.oskari-popover .oskari-arrow {\n  position: absolute;\n  width: 0;\n  height: 0; }\n\n.oskari-popover-inner {\n  padding: 3px;\n  /*width: 280px;*/\n  overflow: hidden;\n  background: #000000;\n  background: rgba(0, 0, 0, 0.8);\n  -webkit-border-radius: 6px;\n  -moz-border-radius: 6px;\n  border-radius: 6px;\n  -webkit-box-shadow: 0 3px 7px rgba(0, 0, 0, 0.3);\n  -moz-box-shadow: 0 3px 7px rgba(0, 0, 0, 0.3);\n  box-shadow: 0 3px 7px rgba(0, 0, 0, 0.3); }\n\n.oskari-popover-title {\n  padding: 9px 15px;\n  line-height: 1;\n  background-color: #f5f5f5;\n  border-bottom: 1px solid #eee;\n  -webkit-border-radius: 3px 3px 0 0;\n  -moz-border-radius: 3px 3px 0 0;\n  border-radius: 3px 3px 0 0; }\n\n.oskari-popover-content {\n  padding: 14px;\n  background-color: #ffffff;\n  -webkit-border-radius: 0 0 3px 3px;\n  -moz-border-radius: 0 0 3px 3px;\n  border-radius: 0 0 3px 3px;\n  -webkit-background-clip: padding-box;\n  -moz-background-clip: padding-box;\n  background-clip: padding-box; }\n\n.oskari-popover-content p, .oskari-popover-content ul, .oskari-popover-content ol {\n  margin-bottom: 0; }\n'); }); requirejs.s.contexts._.nextTick = requirejs.nextTick; 